# This is configuration file example for content certificate generation
# [CNT-CFG]             Mandatory header.
# cert-keypair =        File holding the RSA keypair for signing this certificate, in pem format.
# cert-keypair-pwd =    Passphrase for the keypair file, in txt format.
#                       For enhanced security, this parameter can be omitted, and then the utility will prompt for direct TTY input.
# aes-enc-key =         Text file containing the encryption key for the authenticated SW images. Comma-separated hex bytes ("0x12,0x34").
#                       Optional - leave empty or undefined if no encryption is desired
# images-table =        Text file containing the list of authenticated SW image files. Each line refers to a single image, with the following data:
#                       <image file name> <mem load addr> <flash store addr><code encode flag>
# nvcounter-val =       Value of the NV counter: 0..63 for HBK0 Trusted FW; 0..95 for HBK1 Trusted FW; 0..159 for full HBK Trusted FW.
# load-verify-scheme =  Image verification scheme supports: 0 = load&verify from flash to mem; 1 = verify only in flash; 2 = verify only in mem; 3 = loading only.
#						Ambiq mandates to use the option "2" (verify only in mem). Please contact Ambiq for the other options.
# aes-ce-id = 		SW image encryption type: 0 = none; 1 = Kceicv; 2 = Kce.
# crypto-type = 	Cryptographic verification and decryption mode: 0 = do Hash on plain image; 1 = do Hash on cipher image.
# cert-pkg =        	Content cdertificate output file. Binary format.
[CNT-CFG]
cert-keypair =  ../../am_oem_key_gen_util/oemRSAKeys/oemContentCertKeyPair.pem
cert-keypair-pwd = ../../am_oem_key_gen_util/oemRSAKeys/pwdOemContentCertKey_Rsa.txt
images-table = ./inputData/images_table.tbl
nvcounter-val = 0
load-verify-scheme = 2
aes-ce-id = 0
crypto-type = 0
cert-pkg = content_cert.bin
