
bin/hello_world_uart.axf:     file format elf32-littlearm


Disassembly of section .text:

00018000 <g_am_pfnVectors>:
   18000:	00 10 00 10 01 c8 01 00 69 c8 01 00 65 b9 01 00     ........i...e...
   18010:	6d c8 01 00 6d c8 01 00 6d c8 01 00 00 00 00 00     m...m...m.......
	...
   1802c:	71 c8 01 00 71 c8 01 00 00 00 00 00 71 c8 01 00     q...q.......q...
   1803c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1804c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1805c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1806c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1807c:	dd b5 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     ....q...q...q...
   1808c:	71 c8 01 00 71 c8 01 00 ed ad 01 00 71 c8 01 00     q...q.......q...
   1809c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   180ac:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   180bc:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   180cc:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   180dc:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   180ec:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   180fc:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1810c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1811c:	71 c8 01 00 71 c8 01 00 29 ae 01 00 71 c8 01 00     q...q...)...q...
   1812c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1813c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1814c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1815c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1816c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1817c:	71 c8 01 00 71 c8 01 00 71 c8 01 00 71 c8 01 00     q...q...q...q...
   1818c:	71 c8 01 00                                         q...

00018190 <__Patchable>:
	...

00018200 <memchr>:
   18200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
   18204:	2a10      	cmp	r2, #16
   18206:	db2b      	blt.n	18260 <memchr+0x60>
   18208:	f010 0f07 	tst.w	r0, #7
   1820c:	d008      	beq.n	18220 <memchr+0x20>
   1820e:	f810 3b01 	ldrb.w	r3, [r0], #1
   18212:	3a01      	subs	r2, #1
   18214:	428b      	cmp	r3, r1
   18216:	d02d      	beq.n	18274 <memchr+0x74>
   18218:	f010 0f07 	tst.w	r0, #7
   1821c:	b342      	cbz	r2, 18270 <memchr+0x70>
   1821e:	d1f6      	bne.n	1820e <memchr+0xe>
   18220:	b4f0      	push	{r4, r5, r6, r7}
   18222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
   18226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   1822a:	f022 0407 	bic.w	r4, r2, #7
   1822e:	f07f 0700 	mvns.w	r7, #0
   18232:	2300      	movs	r3, #0
   18234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
   18238:	3c08      	subs	r4, #8
   1823a:	ea85 0501 	eor.w	r5, r5, r1
   1823e:	ea86 0601 	eor.w	r6, r6, r1
   18242:	fa85 f547 	uadd8	r5, r5, r7
   18246:	faa3 f587 	sel	r5, r3, r7
   1824a:	fa86 f647 	uadd8	r6, r6, r7
   1824e:	faa5 f687 	sel	r6, r5, r7
   18252:	b98e      	cbnz	r6, 18278 <memchr+0x78>
   18254:	d1ee      	bne.n	18234 <memchr+0x34>
   18256:	bcf0      	pop	{r4, r5, r6, r7}
   18258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
   1825c:	f002 0207 	and.w	r2, r2, #7
   18260:	b132      	cbz	r2, 18270 <memchr+0x70>
   18262:	f810 3b01 	ldrb.w	r3, [r0], #1
   18266:	3a01      	subs	r2, #1
   18268:	ea83 0301 	eor.w	r3, r3, r1
   1826c:	b113      	cbz	r3, 18274 <memchr+0x74>
   1826e:	d1f8      	bne.n	18262 <memchr+0x62>
   18270:	2000      	movs	r0, #0
   18272:	4770      	bx	lr
   18274:	3801      	subs	r0, #1
   18276:	4770      	bx	lr
   18278:	2d00      	cmp	r5, #0
   1827a:	bf06      	itte	eq
   1827c:	4635      	moveq	r5, r6
   1827e:	3803      	subeq	r0, #3
   18280:	3807      	subne	r0, #7
   18282:	f015 0f01 	tst.w	r5, #1
   18286:	d107      	bne.n	18298 <memchr+0x98>
   18288:	3001      	adds	r0, #1
   1828a:	f415 7f80 	tst.w	r5, #256	@ 0x100
   1828e:	bf02      	ittt	eq
   18290:	3001      	addeq	r0, #1
   18292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
   18296:	3001      	addeq	r0, #1
   18298:	bcf0      	pop	{r4, r5, r6, r7}
   1829a:	3801      	subs	r0, #1
   1829c:	4770      	bx	lr
   1829e:	bf00      	nop
	...

000182c0 <strlen>:
   182c0:	b430      	push	{r4, r5}
   182c2:	f890 f000 	pld	[r0]
   182c6:	f020 0107 	bic.w	r1, r0, #7
   182ca:	f06f 0c00 	mvn.w	ip, #0
   182ce:	f010 0407 	ands.w	r4, r0, #7
   182d2:	f891 f020 	pld	[r1, #32]
   182d6:	f040 8048 	bne.w	1836a <strlen+0xaa>
   182da:	f04f 0400 	mov.w	r4, #0
   182de:	f06f 0007 	mvn.w	r0, #7
   182e2:	e9d1 2300 	ldrd	r2, r3, [r1]
   182e6:	f891 f040 	pld	[r1, #64]	@ 0x40
   182ea:	f100 0008 	add.w	r0, r0, #8
   182ee:	fa82 f24c 	uadd8	r2, r2, ip
   182f2:	faa4 f28c 	sel	r2, r4, ip
   182f6:	fa83 f34c 	uadd8	r3, r3, ip
   182fa:	faa2 f38c 	sel	r3, r2, ip
   182fe:	bb4b      	cbnz	r3, 18354 <strlen+0x94>
   18300:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
   18304:	fa82 f24c 	uadd8	r2, r2, ip
   18308:	f100 0008 	add.w	r0, r0, #8
   1830c:	faa4 f28c 	sel	r2, r4, ip
   18310:	fa83 f34c 	uadd8	r3, r3, ip
   18314:	faa2 f38c 	sel	r3, r2, ip
   18318:	b9e3      	cbnz	r3, 18354 <strlen+0x94>
   1831a:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
   1831e:	fa82 f24c 	uadd8	r2, r2, ip
   18322:	f100 0008 	add.w	r0, r0, #8
   18326:	faa4 f28c 	sel	r2, r4, ip
   1832a:	fa83 f34c 	uadd8	r3, r3, ip
   1832e:	faa2 f38c 	sel	r3, r2, ip
   18332:	b97b      	cbnz	r3, 18354 <strlen+0x94>
   18334:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
   18338:	f101 0120 	add.w	r1, r1, #32
   1833c:	fa82 f24c 	uadd8	r2, r2, ip
   18340:	f100 0008 	add.w	r0, r0, #8
   18344:	faa4 f28c 	sel	r2, r4, ip
   18348:	fa83 f34c 	uadd8	r3, r3, ip
   1834c:	faa2 f38c 	sel	r3, r2, ip
   18350:	2b00      	cmp	r3, #0
   18352:	d0c6      	beq.n	182e2 <strlen+0x22>
   18354:	2a00      	cmp	r2, #0
   18356:	bf04      	itt	eq
   18358:	3004      	addeq	r0, #4
   1835a:	461a      	moveq	r2, r3
   1835c:	ba12      	rev	r2, r2
   1835e:	fab2 f282 	clz	r2, r2
   18362:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   18366:	bc30      	pop	{r4, r5}
   18368:	4770      	bx	lr
   1836a:	e9d1 2300 	ldrd	r2, r3, [r1]
   1836e:	f004 0503 	and.w	r5, r4, #3
   18372:	f1c4 0000 	rsb	r0, r4, #0
   18376:	ea4f 05c5 	mov.w	r5, r5, lsl #3
   1837a:	f014 0f04 	tst.w	r4, #4
   1837e:	f891 f040 	pld	[r1, #64]	@ 0x40
   18382:	fa0c f505 	lsl.w	r5, ip, r5
   18386:	ea62 0205 	orn	r2, r2, r5
   1838a:	bf1c      	itt	ne
   1838c:	ea63 0305 	ornne	r3, r3, r5
   18390:	4662      	movne	r2, ip
   18392:	f04f 0400 	mov.w	r4, #0
   18396:	e7aa      	b.n	182ee <strlen+0x2e>

00018398 <memcpy>:
   18398:	4684      	mov	ip, r0
   1839a:	ea41 0300 	orr.w	r3, r1, r0
   1839e:	f013 0303 	ands.w	r3, r3, #3
   183a2:	d16d      	bne.n	18480 <memcpy+0xe8>
   183a4:	3a40      	subs	r2, #64	@ 0x40
   183a6:	d341      	bcc.n	1842c <memcpy+0x94>
   183a8:	f851 3b04 	ldr.w	r3, [r1], #4
   183ac:	f840 3b04 	str.w	r3, [r0], #4
   183b0:	f851 3b04 	ldr.w	r3, [r1], #4
   183b4:	f840 3b04 	str.w	r3, [r0], #4
   183b8:	f851 3b04 	ldr.w	r3, [r1], #4
   183bc:	f840 3b04 	str.w	r3, [r0], #4
   183c0:	f851 3b04 	ldr.w	r3, [r1], #4
   183c4:	f840 3b04 	str.w	r3, [r0], #4
   183c8:	f851 3b04 	ldr.w	r3, [r1], #4
   183cc:	f840 3b04 	str.w	r3, [r0], #4
   183d0:	f851 3b04 	ldr.w	r3, [r1], #4
   183d4:	f840 3b04 	str.w	r3, [r0], #4
   183d8:	f851 3b04 	ldr.w	r3, [r1], #4
   183dc:	f840 3b04 	str.w	r3, [r0], #4
   183e0:	f851 3b04 	ldr.w	r3, [r1], #4
   183e4:	f840 3b04 	str.w	r3, [r0], #4
   183e8:	f851 3b04 	ldr.w	r3, [r1], #4
   183ec:	f840 3b04 	str.w	r3, [r0], #4
   183f0:	f851 3b04 	ldr.w	r3, [r1], #4
   183f4:	f840 3b04 	str.w	r3, [r0], #4
   183f8:	f851 3b04 	ldr.w	r3, [r1], #4
   183fc:	f840 3b04 	str.w	r3, [r0], #4
   18400:	f851 3b04 	ldr.w	r3, [r1], #4
   18404:	f840 3b04 	str.w	r3, [r0], #4
   18408:	f851 3b04 	ldr.w	r3, [r1], #4
   1840c:	f840 3b04 	str.w	r3, [r0], #4
   18410:	f851 3b04 	ldr.w	r3, [r1], #4
   18414:	f840 3b04 	str.w	r3, [r0], #4
   18418:	f851 3b04 	ldr.w	r3, [r1], #4
   1841c:	f840 3b04 	str.w	r3, [r0], #4
   18420:	f851 3b04 	ldr.w	r3, [r1], #4
   18424:	f840 3b04 	str.w	r3, [r0], #4
   18428:	3a40      	subs	r2, #64	@ 0x40
   1842a:	d2bd      	bcs.n	183a8 <memcpy+0x10>
   1842c:	3230      	adds	r2, #48	@ 0x30
   1842e:	d311      	bcc.n	18454 <memcpy+0xbc>
   18430:	f851 3b04 	ldr.w	r3, [r1], #4
   18434:	f840 3b04 	str.w	r3, [r0], #4
   18438:	f851 3b04 	ldr.w	r3, [r1], #4
   1843c:	f840 3b04 	str.w	r3, [r0], #4
   18440:	f851 3b04 	ldr.w	r3, [r1], #4
   18444:	f840 3b04 	str.w	r3, [r0], #4
   18448:	f851 3b04 	ldr.w	r3, [r1], #4
   1844c:	f840 3b04 	str.w	r3, [r0], #4
   18450:	3a10      	subs	r2, #16
   18452:	d2ed      	bcs.n	18430 <memcpy+0x98>
   18454:	320c      	adds	r2, #12
   18456:	d305      	bcc.n	18464 <memcpy+0xcc>
   18458:	f851 3b04 	ldr.w	r3, [r1], #4
   1845c:	f840 3b04 	str.w	r3, [r0], #4
   18460:	3a04      	subs	r2, #4
   18462:	d2f9      	bcs.n	18458 <memcpy+0xc0>
   18464:	3204      	adds	r2, #4
   18466:	d008      	beq.n	1847a <memcpy+0xe2>
   18468:	07d2      	lsls	r2, r2, #31
   1846a:	bf1c      	itt	ne
   1846c:	f811 3b01 	ldrbne.w	r3, [r1], #1
   18470:	f800 3b01 	strbne.w	r3, [r0], #1
   18474:	d301      	bcc.n	1847a <memcpy+0xe2>
   18476:	880b      	ldrh	r3, [r1, #0]
   18478:	8003      	strh	r3, [r0, #0]
   1847a:	4660      	mov	r0, ip
   1847c:	4770      	bx	lr
   1847e:	bf00      	nop
   18480:	2a08      	cmp	r2, #8
   18482:	d313      	bcc.n	184ac <memcpy+0x114>
   18484:	078b      	lsls	r3, r1, #30
   18486:	d08d      	beq.n	183a4 <memcpy+0xc>
   18488:	f010 0303 	ands.w	r3, r0, #3
   1848c:	d08a      	beq.n	183a4 <memcpy+0xc>
   1848e:	f1c3 0304 	rsb	r3, r3, #4
   18492:	1ad2      	subs	r2, r2, r3
   18494:	07db      	lsls	r3, r3, #31
   18496:	bf1c      	itt	ne
   18498:	f811 3b01 	ldrbne.w	r3, [r1], #1
   1849c:	f800 3b01 	strbne.w	r3, [r0], #1
   184a0:	d380      	bcc.n	183a4 <memcpy+0xc>
   184a2:	f831 3b02 	ldrh.w	r3, [r1], #2
   184a6:	f820 3b02 	strh.w	r3, [r0], #2
   184aa:	e77b      	b.n	183a4 <memcpy+0xc>
   184ac:	3a04      	subs	r2, #4
   184ae:	d3d9      	bcc.n	18464 <memcpy+0xcc>
   184b0:	3a01      	subs	r2, #1
   184b2:	f811 3b01 	ldrb.w	r3, [r1], #1
   184b6:	f800 3b01 	strb.w	r3, [r0], #1
   184ba:	d2f9      	bcs.n	184b0 <memcpy+0x118>
   184bc:	780b      	ldrb	r3, [r1, #0]
   184be:	7003      	strb	r3, [r0, #0]
   184c0:	784b      	ldrb	r3, [r1, #1]
   184c2:	7043      	strb	r3, [r0, #1]
   184c4:	788b      	ldrb	r3, [r1, #2]
   184c6:	7083      	strb	r3, [r0, #2]
   184c8:	4660      	mov	r0, ip
   184ca:	4770      	bx	lr

000184cc <__aeabi_drsub>:
   184cc:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
   184d0:	e002      	b.n	184d8 <__adddf3>
   184d2:	bf00      	nop

000184d4 <__aeabi_dsub>:
   184d4:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

000184d8 <__adddf3>:
   184d8:	b530      	push	{r4, r5, lr}
   184da:	ea4f 0441 	mov.w	r4, r1, lsl #1
   184de:	ea4f 0543 	mov.w	r5, r3, lsl #1
   184e2:	ea94 0f05 	teq	r4, r5
   184e6:	bf08      	it	eq
   184e8:	ea90 0f02 	teqeq	r0, r2
   184ec:	bf1f      	itttt	ne
   184ee:	ea54 0c00 	orrsne.w	ip, r4, r0
   184f2:	ea55 0c02 	orrsne.w	ip, r5, r2
   184f6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   184fa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   184fe:	f000 80e2 	beq.w	186c6 <__adddf3+0x1ee>
   18502:	ea4f 5454 	mov.w	r4, r4, lsr #21
   18506:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   1850a:	bfb8      	it	lt
   1850c:	426d      	neglt	r5, r5
   1850e:	dd0c      	ble.n	1852a <__adddf3+0x52>
   18510:	442c      	add	r4, r5
   18512:	ea80 0202 	eor.w	r2, r0, r2
   18516:	ea81 0303 	eor.w	r3, r1, r3
   1851a:	ea82 0000 	eor.w	r0, r2, r0
   1851e:	ea83 0101 	eor.w	r1, r3, r1
   18522:	ea80 0202 	eor.w	r2, r0, r2
   18526:	ea81 0303 	eor.w	r3, r1, r3
   1852a:	2d36      	cmp	r5, #54	@ 0x36
   1852c:	bf88      	it	hi
   1852e:	bd30      	pophi	{r4, r5, pc}
   18530:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
   18534:	ea4f 3101 	mov.w	r1, r1, lsl #12
   18538:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
   1853c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   18540:	d002      	beq.n	18548 <__adddf3+0x70>
   18542:	4240      	negs	r0, r0
   18544:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   18548:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
   1854c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   18550:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   18554:	d002      	beq.n	1855c <__adddf3+0x84>
   18556:	4252      	negs	r2, r2
   18558:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1855c:	ea94 0f05 	teq	r4, r5
   18560:	f000 80a7 	beq.w	186b2 <__adddf3+0x1da>
   18564:	f1a4 0401 	sub.w	r4, r4, #1
   18568:	f1d5 0e20 	rsbs	lr, r5, #32
   1856c:	db0d      	blt.n	1858a <__adddf3+0xb2>
   1856e:	fa02 fc0e 	lsl.w	ip, r2, lr
   18572:	fa22 f205 	lsr.w	r2, r2, r5
   18576:	1880      	adds	r0, r0, r2
   18578:	f141 0100 	adc.w	r1, r1, #0
   1857c:	fa03 f20e 	lsl.w	r2, r3, lr
   18580:	1880      	adds	r0, r0, r2
   18582:	fa43 f305 	asr.w	r3, r3, r5
   18586:	4159      	adcs	r1, r3
   18588:	e00e      	b.n	185a8 <__adddf3+0xd0>
   1858a:	f1a5 0520 	sub.w	r5, r5, #32
   1858e:	f10e 0e20 	add.w	lr, lr, #32
   18592:	2a01      	cmp	r2, #1
   18594:	fa03 fc0e 	lsl.w	ip, r3, lr
   18598:	bf28      	it	cs
   1859a:	f04c 0c02 	orrcs.w	ip, ip, #2
   1859e:	fa43 f305 	asr.w	r3, r3, r5
   185a2:	18c0      	adds	r0, r0, r3
   185a4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   185a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
   185ac:	d507      	bpl.n	185be <__adddf3+0xe6>
   185ae:	f04f 0e00 	mov.w	lr, #0
   185b2:	f1dc 0c00 	rsbs	ip, ip, #0
   185b6:	eb7e 0000 	sbcs.w	r0, lr, r0
   185ba:	eb6e 0101 	sbc.w	r1, lr, r1
   185be:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
   185c2:	d31b      	bcc.n	185fc <__adddf3+0x124>
   185c4:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
   185c8:	d30c      	bcc.n	185e4 <__adddf3+0x10c>
   185ca:	0849      	lsrs	r1, r1, #1
   185cc:	ea5f 0030 	movs.w	r0, r0, rrx
   185d0:	ea4f 0c3c 	mov.w	ip, ip, rrx
   185d4:	f104 0401 	add.w	r4, r4, #1
   185d8:	ea4f 5244 	mov.w	r2, r4, lsl #21
   185dc:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
   185e0:	f080 809a 	bcs.w	18718 <__adddf3+0x240>
   185e4:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
   185e8:	bf08      	it	eq
   185ea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   185ee:	f150 0000 	adcs.w	r0, r0, #0
   185f2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   185f6:	ea41 0105 	orr.w	r1, r1, r5
   185fa:	bd30      	pop	{r4, r5, pc}
   185fc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   18600:	4140      	adcs	r0, r0
   18602:	eb41 0101 	adc.w	r1, r1, r1
   18606:	3c01      	subs	r4, #1
   18608:	bf28      	it	cs
   1860a:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
   1860e:	d2e9      	bcs.n	185e4 <__adddf3+0x10c>
   18610:	f091 0f00 	teq	r1, #0
   18614:	bf04      	itt	eq
   18616:	4601      	moveq	r1, r0
   18618:	2000      	moveq	r0, #0
   1861a:	fab1 f381 	clz	r3, r1
   1861e:	bf08      	it	eq
   18620:	3320      	addeq	r3, #32
   18622:	f1a3 030b 	sub.w	r3, r3, #11
   18626:	f1b3 0220 	subs.w	r2, r3, #32
   1862a:	da0c      	bge.n	18646 <__adddf3+0x16e>
   1862c:	320c      	adds	r2, #12
   1862e:	dd08      	ble.n	18642 <__adddf3+0x16a>
   18630:	f102 0c14 	add.w	ip, r2, #20
   18634:	f1c2 020c 	rsb	r2, r2, #12
   18638:	fa01 f00c 	lsl.w	r0, r1, ip
   1863c:	fa21 f102 	lsr.w	r1, r1, r2
   18640:	e00c      	b.n	1865c <__adddf3+0x184>
   18642:	f102 0214 	add.w	r2, r2, #20
   18646:	bfd8      	it	le
   18648:	f1c2 0c20 	rsble	ip, r2, #32
   1864c:	fa01 f102 	lsl.w	r1, r1, r2
   18650:	fa20 fc0c 	lsr.w	ip, r0, ip
   18654:	bfdc      	itt	le
   18656:	ea41 010c 	orrle.w	r1, r1, ip
   1865a:	4090      	lslle	r0, r2
   1865c:	1ae4      	subs	r4, r4, r3
   1865e:	bfa2      	ittt	ge
   18660:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   18664:	4329      	orrge	r1, r5
   18666:	bd30      	popge	{r4, r5, pc}
   18668:	ea6f 0404 	mvn.w	r4, r4
   1866c:	3c1f      	subs	r4, #31
   1866e:	da1c      	bge.n	186aa <__adddf3+0x1d2>
   18670:	340c      	adds	r4, #12
   18672:	dc0e      	bgt.n	18692 <__adddf3+0x1ba>
   18674:	f104 0414 	add.w	r4, r4, #20
   18678:	f1c4 0220 	rsb	r2, r4, #32
   1867c:	fa20 f004 	lsr.w	r0, r0, r4
   18680:	fa01 f302 	lsl.w	r3, r1, r2
   18684:	ea40 0003 	orr.w	r0, r0, r3
   18688:	fa21 f304 	lsr.w	r3, r1, r4
   1868c:	ea45 0103 	orr.w	r1, r5, r3
   18690:	bd30      	pop	{r4, r5, pc}
   18692:	f1c4 040c 	rsb	r4, r4, #12
   18696:	f1c4 0220 	rsb	r2, r4, #32
   1869a:	fa20 f002 	lsr.w	r0, r0, r2
   1869e:	fa01 f304 	lsl.w	r3, r1, r4
   186a2:	ea40 0003 	orr.w	r0, r0, r3
   186a6:	4629      	mov	r1, r5
   186a8:	bd30      	pop	{r4, r5, pc}
   186aa:	fa21 f004 	lsr.w	r0, r1, r4
   186ae:	4629      	mov	r1, r5
   186b0:	bd30      	pop	{r4, r5, pc}
   186b2:	f094 0f00 	teq	r4, #0
   186b6:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
   186ba:	bf06      	itte	eq
   186bc:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
   186c0:	3401      	addeq	r4, #1
   186c2:	3d01      	subne	r5, #1
   186c4:	e74e      	b.n	18564 <__adddf3+0x8c>
   186c6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   186ca:	bf18      	it	ne
   186cc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   186d0:	d029      	beq.n	18726 <__adddf3+0x24e>
   186d2:	ea94 0f05 	teq	r4, r5
   186d6:	bf08      	it	eq
   186d8:	ea90 0f02 	teqeq	r0, r2
   186dc:	d005      	beq.n	186ea <__adddf3+0x212>
   186de:	ea54 0c00 	orrs.w	ip, r4, r0
   186e2:	bf04      	itt	eq
   186e4:	4619      	moveq	r1, r3
   186e6:	4610      	moveq	r0, r2
   186e8:	bd30      	pop	{r4, r5, pc}
   186ea:	ea91 0f03 	teq	r1, r3
   186ee:	bf1e      	ittt	ne
   186f0:	2100      	movne	r1, #0
   186f2:	2000      	movne	r0, #0
   186f4:	bd30      	popne	{r4, r5, pc}
   186f6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   186fa:	d105      	bne.n	18708 <__adddf3+0x230>
   186fc:	0040      	lsls	r0, r0, #1
   186fe:	4149      	adcs	r1, r1
   18700:	bf28      	it	cs
   18702:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
   18706:	bd30      	pop	{r4, r5, pc}
   18708:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
   1870c:	bf3c      	itt	cc
   1870e:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
   18712:	bd30      	popcc	{r4, r5, pc}
   18714:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
   18718:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
   1871c:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
   18720:	f04f 0000 	mov.w	r0, #0
   18724:	bd30      	pop	{r4, r5, pc}
   18726:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1872a:	bf1a      	itte	ne
   1872c:	4619      	movne	r1, r3
   1872e:	4610      	movne	r0, r2
   18730:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   18734:	bf1c      	itt	ne
   18736:	460b      	movne	r3, r1
   18738:	4602      	movne	r2, r0
   1873a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1873e:	bf06      	itte	eq
   18740:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   18744:	ea91 0f03 	teqeq	r1, r3
   18748:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
   1874c:	bd30      	pop	{r4, r5, pc}
   1874e:	bf00      	nop

00018750 <__aeabi_ui2d>:
   18750:	f090 0f00 	teq	r0, #0
   18754:	bf04      	itt	eq
   18756:	2100      	moveq	r1, #0
   18758:	4770      	bxeq	lr
   1875a:	b530      	push	{r4, r5, lr}
   1875c:	f44f 6480 	mov.w	r4, #1024	@ 0x400
   18760:	f104 0432 	add.w	r4, r4, #50	@ 0x32
   18764:	f04f 0500 	mov.w	r5, #0
   18768:	f04f 0100 	mov.w	r1, #0
   1876c:	e750      	b.n	18610 <__adddf3+0x138>
   1876e:	bf00      	nop

00018770 <__aeabi_i2d>:
   18770:	f090 0f00 	teq	r0, #0
   18774:	bf04      	itt	eq
   18776:	2100      	moveq	r1, #0
   18778:	4770      	bxeq	lr
   1877a:	b530      	push	{r4, r5, lr}
   1877c:	f44f 6480 	mov.w	r4, #1024	@ 0x400
   18780:	f104 0432 	add.w	r4, r4, #50	@ 0x32
   18784:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
   18788:	bf48      	it	mi
   1878a:	4240      	negmi	r0, r0
   1878c:	f04f 0100 	mov.w	r1, #0
   18790:	e73e      	b.n	18610 <__adddf3+0x138>
   18792:	bf00      	nop

00018794 <__aeabi_f2d>:
   18794:	0042      	lsls	r2, r0, #1
   18796:	ea4f 01e2 	mov.w	r1, r2, asr #3
   1879a:	ea4f 0131 	mov.w	r1, r1, rrx
   1879e:	ea4f 7002 	mov.w	r0, r2, lsl #28
   187a2:	bf1f      	itttt	ne
   187a4:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
   187a8:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
   187ac:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
   187b0:	4770      	bxne	lr
   187b2:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
   187b6:	bf08      	it	eq
   187b8:	4770      	bxeq	lr
   187ba:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
   187be:	bf04      	itt	eq
   187c0:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
   187c4:	4770      	bxeq	lr
   187c6:	b530      	push	{r4, r5, lr}
   187c8:	f44f 7460 	mov.w	r4, #896	@ 0x380
   187cc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
   187d0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
   187d4:	e71c      	b.n	18610 <__adddf3+0x138>
   187d6:	bf00      	nop

000187d8 <__aeabi_ul2d>:
   187d8:	ea50 0201 	orrs.w	r2, r0, r1
   187dc:	bf08      	it	eq
   187de:	4770      	bxeq	lr
   187e0:	b530      	push	{r4, r5, lr}
   187e2:	f04f 0500 	mov.w	r5, #0
   187e6:	e00a      	b.n	187fe <__aeabi_l2d+0x16>

000187e8 <__aeabi_l2d>:
   187e8:	ea50 0201 	orrs.w	r2, r0, r1
   187ec:	bf08      	it	eq
   187ee:	4770      	bxeq	lr
   187f0:	b530      	push	{r4, r5, lr}
   187f2:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
   187f6:	d502      	bpl.n	187fe <__aeabi_l2d+0x16>
   187f8:	4240      	negs	r0, r0
   187fa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   187fe:	f44f 6480 	mov.w	r4, #1024	@ 0x400
   18802:	f104 0432 	add.w	r4, r4, #50	@ 0x32
   18806:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   1880a:	f43f aed8 	beq.w	185be <__adddf3+0xe6>
   1880e:	f04f 0203 	mov.w	r2, #3
   18812:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   18816:	bf18      	it	ne
   18818:	3203      	addne	r2, #3
   1881a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1881e:	bf18      	it	ne
   18820:	3203      	addne	r2, #3
   18822:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   18826:	f1c2 0320 	rsb	r3, r2, #32
   1882a:	fa00 fc03 	lsl.w	ip, r0, r3
   1882e:	fa20 f002 	lsr.w	r0, r0, r2
   18832:	fa01 fe03 	lsl.w	lr, r1, r3
   18836:	ea40 000e 	orr.w	r0, r0, lr
   1883a:	fa21 f102 	lsr.w	r1, r1, r2
   1883e:	4414      	add	r4, r2
   18840:	e6bd      	b.n	185be <__adddf3+0xe6>
   18842:	bf00      	nop

00018844 <__aeabi_dmul>:
   18844:	b570      	push	{r4, r5, r6, lr}
   18846:	f04f 0cff 	mov.w	ip, #255	@ 0xff
   1884a:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
   1884e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   18852:	bf1d      	ittte	ne
   18854:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   18858:	ea94 0f0c 	teqne	r4, ip
   1885c:	ea95 0f0c 	teqne	r5, ip
   18860:	f000 f8de 	bleq	18a20 <__aeabi_dmul+0x1dc>
   18864:	442c      	add	r4, r5
   18866:	ea81 0603 	eor.w	r6, r1, r3
   1886a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   1886e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   18872:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   18876:	bf18      	it	ne
   18878:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   1887c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
   18880:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
   18884:	d038      	beq.n	188f8 <__aeabi_dmul+0xb4>
   18886:	fba0 ce02 	umull	ip, lr, r0, r2
   1888a:	f04f 0500 	mov.w	r5, #0
   1888e:	fbe1 e502 	umlal	lr, r5, r1, r2
   18892:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
   18896:	fbe0 e503 	umlal	lr, r5, r0, r3
   1889a:	f04f 0600 	mov.w	r6, #0
   1889e:	fbe1 5603 	umlal	r5, r6, r1, r3
   188a2:	f09c 0f00 	teq	ip, #0
   188a6:	bf18      	it	ne
   188a8:	f04e 0e01 	orrne.w	lr, lr, #1
   188ac:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
   188b0:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
   188b4:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
   188b8:	d204      	bcs.n	188c4 <__aeabi_dmul+0x80>
   188ba:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   188be:	416d      	adcs	r5, r5
   188c0:	eb46 0606 	adc.w	r6, r6, r6
   188c4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   188c8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   188cc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   188d0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   188d4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   188d8:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
   188dc:	bf88      	it	hi
   188de:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
   188e2:	d81e      	bhi.n	18922 <__aeabi_dmul+0xde>
   188e4:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
   188e8:	bf08      	it	eq
   188ea:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   188ee:	f150 0000 	adcs.w	r0, r0, #0
   188f2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   188f6:	bd70      	pop	{r4, r5, r6, pc}
   188f8:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
   188fc:	ea46 0101 	orr.w	r1, r6, r1
   18900:	ea40 0002 	orr.w	r0, r0, r2
   18904:	ea81 0103 	eor.w	r1, r1, r3
   18908:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   1890c:	bfc2      	ittt	gt
   1890e:	ebd4 050c 	rsbsgt	r5, r4, ip
   18912:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   18916:	bd70      	popgt	{r4, r5, r6, pc}
   18918:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
   1891c:	f04f 0e00 	mov.w	lr, #0
   18920:	3c01      	subs	r4, #1
   18922:	f300 80ab 	bgt.w	18a7c <__aeabi_dmul+0x238>
   18926:	f114 0f36 	cmn.w	r4, #54	@ 0x36
   1892a:	bfde      	ittt	le
   1892c:	2000      	movle	r0, #0
   1892e:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
   18932:	bd70      	pople	{r4, r5, r6, pc}
   18934:	f1c4 0400 	rsb	r4, r4, #0
   18938:	3c20      	subs	r4, #32
   1893a:	da35      	bge.n	189a8 <__aeabi_dmul+0x164>
   1893c:	340c      	adds	r4, #12
   1893e:	dc1b      	bgt.n	18978 <__aeabi_dmul+0x134>
   18940:	f104 0414 	add.w	r4, r4, #20
   18944:	f1c4 0520 	rsb	r5, r4, #32
   18948:	fa00 f305 	lsl.w	r3, r0, r5
   1894c:	fa20 f004 	lsr.w	r0, r0, r4
   18950:	fa01 f205 	lsl.w	r2, r1, r5
   18954:	ea40 0002 	orr.w	r0, r0, r2
   18958:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
   1895c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
   18960:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   18964:	fa21 f604 	lsr.w	r6, r1, r4
   18968:	eb42 0106 	adc.w	r1, r2, r6
   1896c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   18970:	bf08      	it	eq
   18972:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   18976:	bd70      	pop	{r4, r5, r6, pc}
   18978:	f1c4 040c 	rsb	r4, r4, #12
   1897c:	f1c4 0520 	rsb	r5, r4, #32
   18980:	fa00 f304 	lsl.w	r3, r0, r4
   18984:	fa20 f005 	lsr.w	r0, r0, r5
   18988:	fa01 f204 	lsl.w	r2, r1, r4
   1898c:	ea40 0002 	orr.w	r0, r0, r2
   18990:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
   18994:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   18998:	f141 0100 	adc.w	r1, r1, #0
   1899c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   189a0:	bf08      	it	eq
   189a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   189a6:	bd70      	pop	{r4, r5, r6, pc}
   189a8:	f1c4 0520 	rsb	r5, r4, #32
   189ac:	fa00 f205 	lsl.w	r2, r0, r5
   189b0:	ea4e 0e02 	orr.w	lr, lr, r2
   189b4:	fa20 f304 	lsr.w	r3, r0, r4
   189b8:	fa01 f205 	lsl.w	r2, r1, r5
   189bc:	ea43 0302 	orr.w	r3, r3, r2
   189c0:	fa21 f004 	lsr.w	r0, r1, r4
   189c4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
   189c8:	fa21 f204 	lsr.w	r2, r1, r4
   189cc:	ea20 0002 	bic.w	r0, r0, r2
   189d0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   189d4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   189d8:	bf08      	it	eq
   189da:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   189de:	bd70      	pop	{r4, r5, r6, pc}
   189e0:	f094 0f00 	teq	r4, #0
   189e4:	d10f      	bne.n	18a06 <__aeabi_dmul+0x1c2>
   189e6:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
   189ea:	0040      	lsls	r0, r0, #1
   189ec:	eb41 0101 	adc.w	r1, r1, r1
   189f0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
   189f4:	bf08      	it	eq
   189f6:	3c01      	subeq	r4, #1
   189f8:	d0f7      	beq.n	189ea <__aeabi_dmul+0x1a6>
   189fa:	ea41 0106 	orr.w	r1, r1, r6
   189fe:	f095 0f00 	teq	r5, #0
   18a02:	bf18      	it	ne
   18a04:	4770      	bxne	lr
   18a06:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
   18a0a:	0052      	lsls	r2, r2, #1
   18a0c:	eb43 0303 	adc.w	r3, r3, r3
   18a10:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
   18a14:	bf08      	it	eq
   18a16:	3d01      	subeq	r5, #1
   18a18:	d0f7      	beq.n	18a0a <__aeabi_dmul+0x1c6>
   18a1a:	ea43 0306 	orr.w	r3, r3, r6
   18a1e:	4770      	bx	lr
   18a20:	ea94 0f0c 	teq	r4, ip
   18a24:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   18a28:	bf18      	it	ne
   18a2a:	ea95 0f0c 	teqne	r5, ip
   18a2e:	d00c      	beq.n	18a4a <__aeabi_dmul+0x206>
   18a30:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   18a34:	bf18      	it	ne
   18a36:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   18a3a:	d1d1      	bne.n	189e0 <__aeabi_dmul+0x19c>
   18a3c:	ea81 0103 	eor.w	r1, r1, r3
   18a40:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
   18a44:	f04f 0000 	mov.w	r0, #0
   18a48:	bd70      	pop	{r4, r5, r6, pc}
   18a4a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   18a4e:	bf06      	itte	eq
   18a50:	4610      	moveq	r0, r2
   18a52:	4619      	moveq	r1, r3
   18a54:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   18a58:	d019      	beq.n	18a8e <__aeabi_dmul+0x24a>
   18a5a:	ea94 0f0c 	teq	r4, ip
   18a5e:	d102      	bne.n	18a66 <__aeabi_dmul+0x222>
   18a60:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   18a64:	d113      	bne.n	18a8e <__aeabi_dmul+0x24a>
   18a66:	ea95 0f0c 	teq	r5, ip
   18a6a:	d105      	bne.n	18a78 <__aeabi_dmul+0x234>
   18a6c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   18a70:	bf1c      	itt	ne
   18a72:	4610      	movne	r0, r2
   18a74:	4619      	movne	r1, r3
   18a76:	d10a      	bne.n	18a8e <__aeabi_dmul+0x24a>
   18a78:	ea81 0103 	eor.w	r1, r1, r3
   18a7c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
   18a80:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
   18a84:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
   18a88:	f04f 0000 	mov.w	r0, #0
   18a8c:	bd70      	pop	{r4, r5, r6, pc}
   18a8e:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
   18a92:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
   18a96:	bd70      	pop	{r4, r5, r6, pc}

00018a98 <__aeabi_ddiv>:
   18a98:	b570      	push	{r4, r5, r6, lr}
   18a9a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
   18a9e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
   18aa2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   18aa6:	bf1d      	ittte	ne
   18aa8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   18aac:	ea94 0f0c 	teqne	r4, ip
   18ab0:	ea95 0f0c 	teqne	r5, ip
   18ab4:	f000 f8a7 	bleq	18c06 <__aeabi_ddiv+0x16e>
   18ab8:	eba4 0405 	sub.w	r4, r4, r5
   18abc:	ea81 0e03 	eor.w	lr, r1, r3
   18ac0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   18ac4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   18ac8:	f000 8088 	beq.w	18bdc <__aeabi_ddiv+0x144>
   18acc:	ea4f 3303 	mov.w	r3, r3, lsl #12
   18ad0:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
   18ad4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   18ad8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   18adc:	ea4f 2202 	mov.w	r2, r2, lsl #8
   18ae0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   18ae4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   18ae8:	ea4f 2600 	mov.w	r6, r0, lsl #8
   18aec:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
   18af0:	429d      	cmp	r5, r3
   18af2:	bf08      	it	eq
   18af4:	4296      	cmpeq	r6, r2
   18af6:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
   18afa:	f504 7440 	add.w	r4, r4, #768	@ 0x300
   18afe:	d202      	bcs.n	18b06 <__aeabi_ddiv+0x6e>
   18b00:	085b      	lsrs	r3, r3, #1
   18b02:	ea4f 0232 	mov.w	r2, r2, rrx
   18b06:	1ab6      	subs	r6, r6, r2
   18b08:	eb65 0503 	sbc.w	r5, r5, r3
   18b0c:	085b      	lsrs	r3, r3, #1
   18b0e:	ea4f 0232 	mov.w	r2, r2, rrx
   18b12:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
   18b16:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
   18b1a:	ebb6 0e02 	subs.w	lr, r6, r2
   18b1e:	eb75 0e03 	sbcs.w	lr, r5, r3
   18b22:	bf22      	ittt	cs
   18b24:	1ab6      	subcs	r6, r6, r2
   18b26:	4675      	movcs	r5, lr
   18b28:	ea40 000c 	orrcs.w	r0, r0, ip
   18b2c:	085b      	lsrs	r3, r3, #1
   18b2e:	ea4f 0232 	mov.w	r2, r2, rrx
   18b32:	ebb6 0e02 	subs.w	lr, r6, r2
   18b36:	eb75 0e03 	sbcs.w	lr, r5, r3
   18b3a:	bf22      	ittt	cs
   18b3c:	1ab6      	subcs	r6, r6, r2
   18b3e:	4675      	movcs	r5, lr
   18b40:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   18b44:	085b      	lsrs	r3, r3, #1
   18b46:	ea4f 0232 	mov.w	r2, r2, rrx
   18b4a:	ebb6 0e02 	subs.w	lr, r6, r2
   18b4e:	eb75 0e03 	sbcs.w	lr, r5, r3
   18b52:	bf22      	ittt	cs
   18b54:	1ab6      	subcs	r6, r6, r2
   18b56:	4675      	movcs	r5, lr
   18b58:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   18b5c:	085b      	lsrs	r3, r3, #1
   18b5e:	ea4f 0232 	mov.w	r2, r2, rrx
   18b62:	ebb6 0e02 	subs.w	lr, r6, r2
   18b66:	eb75 0e03 	sbcs.w	lr, r5, r3
   18b6a:	bf22      	ittt	cs
   18b6c:	1ab6      	subcs	r6, r6, r2
   18b6e:	4675      	movcs	r5, lr
   18b70:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   18b74:	ea55 0e06 	orrs.w	lr, r5, r6
   18b78:	d018      	beq.n	18bac <__aeabi_ddiv+0x114>
   18b7a:	ea4f 1505 	mov.w	r5, r5, lsl #4
   18b7e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   18b82:	ea4f 1606 	mov.w	r6, r6, lsl #4
   18b86:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   18b8a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   18b8e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   18b92:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   18b96:	d1c0      	bne.n	18b1a <__aeabi_ddiv+0x82>
   18b98:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
   18b9c:	d10b      	bne.n	18bb6 <__aeabi_ddiv+0x11e>
   18b9e:	ea41 0100 	orr.w	r1, r1, r0
   18ba2:	f04f 0000 	mov.w	r0, #0
   18ba6:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
   18baa:	e7b6      	b.n	18b1a <__aeabi_ddiv+0x82>
   18bac:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
   18bb0:	bf04      	itt	eq
   18bb2:	4301      	orreq	r1, r0
   18bb4:	2000      	moveq	r0, #0
   18bb6:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
   18bba:	bf88      	it	hi
   18bbc:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
   18bc0:	f63f aeaf 	bhi.w	18922 <__aeabi_dmul+0xde>
   18bc4:	ebb5 0c03 	subs.w	ip, r5, r3
   18bc8:	bf04      	itt	eq
   18bca:	ebb6 0c02 	subseq.w	ip, r6, r2
   18bce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   18bd2:	f150 0000 	adcs.w	r0, r0, #0
   18bd6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   18bda:	bd70      	pop	{r4, r5, r6, pc}
   18bdc:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
   18be0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   18be4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   18be8:	bfc2      	ittt	gt
   18bea:	ebd4 050c 	rsbsgt	r5, r4, ip
   18bee:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   18bf2:	bd70      	popgt	{r4, r5, r6, pc}
   18bf4:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
   18bf8:	f04f 0e00 	mov.w	lr, #0
   18bfc:	3c01      	subs	r4, #1
   18bfe:	e690      	b.n	18922 <__aeabi_dmul+0xde>
   18c00:	ea45 0e06 	orr.w	lr, r5, r6
   18c04:	e68d      	b.n	18922 <__aeabi_dmul+0xde>
   18c06:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   18c0a:	ea94 0f0c 	teq	r4, ip
   18c0e:	bf08      	it	eq
   18c10:	ea95 0f0c 	teqeq	r5, ip
   18c14:	f43f af3b 	beq.w	18a8e <__aeabi_dmul+0x24a>
   18c18:	ea94 0f0c 	teq	r4, ip
   18c1c:	d10a      	bne.n	18c34 <__aeabi_ddiv+0x19c>
   18c1e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   18c22:	f47f af34 	bne.w	18a8e <__aeabi_dmul+0x24a>
   18c26:	ea95 0f0c 	teq	r5, ip
   18c2a:	f47f af25 	bne.w	18a78 <__aeabi_dmul+0x234>
   18c2e:	4610      	mov	r0, r2
   18c30:	4619      	mov	r1, r3
   18c32:	e72c      	b.n	18a8e <__aeabi_dmul+0x24a>
   18c34:	ea95 0f0c 	teq	r5, ip
   18c38:	d106      	bne.n	18c48 <__aeabi_ddiv+0x1b0>
   18c3a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   18c3e:	f43f aefd 	beq.w	18a3c <__aeabi_dmul+0x1f8>
   18c42:	4610      	mov	r0, r2
   18c44:	4619      	mov	r1, r3
   18c46:	e722      	b.n	18a8e <__aeabi_dmul+0x24a>
   18c48:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   18c4c:	bf18      	it	ne
   18c4e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   18c52:	f47f aec5 	bne.w	189e0 <__aeabi_dmul+0x19c>
   18c56:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   18c5a:	f47f af0d 	bne.w	18a78 <__aeabi_dmul+0x234>
   18c5e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   18c62:	f47f aeeb 	bne.w	18a3c <__aeabi_dmul+0x1f8>
   18c66:	e712      	b.n	18a8e <__aeabi_dmul+0x24a>

00018c68 <__gedf2>:
   18c68:	f04f 3cff 	mov.w	ip, #4294967295
   18c6c:	e006      	b.n	18c7c <__cmpdf2+0x4>
   18c6e:	bf00      	nop

00018c70 <__ledf2>:
   18c70:	f04f 0c01 	mov.w	ip, #1
   18c74:	e002      	b.n	18c7c <__cmpdf2+0x4>
   18c76:	bf00      	nop

00018c78 <__cmpdf2>:
   18c78:	f04f 0c01 	mov.w	ip, #1
   18c7c:	f84d cd04 	str.w	ip, [sp, #-4]!
   18c80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   18c84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   18c88:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   18c8c:	bf18      	it	ne
   18c8e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   18c92:	d01b      	beq.n	18ccc <__cmpdf2+0x54>
   18c94:	b001      	add	sp, #4
   18c96:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   18c9a:	bf0c      	ite	eq
   18c9c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   18ca0:	ea91 0f03 	teqne	r1, r3
   18ca4:	bf02      	ittt	eq
   18ca6:	ea90 0f02 	teqeq	r0, r2
   18caa:	2000      	moveq	r0, #0
   18cac:	4770      	bxeq	lr
   18cae:	f110 0f00 	cmn.w	r0, #0
   18cb2:	ea91 0f03 	teq	r1, r3
   18cb6:	bf58      	it	pl
   18cb8:	4299      	cmppl	r1, r3
   18cba:	bf08      	it	eq
   18cbc:	4290      	cmpeq	r0, r2
   18cbe:	bf2c      	ite	cs
   18cc0:	17d8      	asrcs	r0, r3, #31
   18cc2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   18cc6:	f040 0001 	orr.w	r0, r0, #1
   18cca:	4770      	bx	lr
   18ccc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   18cd0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   18cd4:	d102      	bne.n	18cdc <__cmpdf2+0x64>
   18cd6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   18cda:	d107      	bne.n	18cec <__cmpdf2+0x74>
   18cdc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   18ce0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   18ce4:	d1d6      	bne.n	18c94 <__cmpdf2+0x1c>
   18ce6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   18cea:	d0d3      	beq.n	18c94 <__cmpdf2+0x1c>
   18cec:	f85d 0b04 	ldr.w	r0, [sp], #4
   18cf0:	4770      	bx	lr
   18cf2:	bf00      	nop

00018cf4 <__aeabi_cdrcmple>:
   18cf4:	4684      	mov	ip, r0
   18cf6:	4610      	mov	r0, r2
   18cf8:	4662      	mov	r2, ip
   18cfa:	468c      	mov	ip, r1
   18cfc:	4619      	mov	r1, r3
   18cfe:	4663      	mov	r3, ip
   18d00:	e000      	b.n	18d04 <__aeabi_cdcmpeq>
   18d02:	bf00      	nop

00018d04 <__aeabi_cdcmpeq>:
   18d04:	b501      	push	{r0, lr}
   18d06:	f7ff ffb7 	bl	18c78 <__cmpdf2>
   18d0a:	2800      	cmp	r0, #0
   18d0c:	bf48      	it	mi
   18d0e:	f110 0f00 	cmnmi.w	r0, #0
   18d12:	bd01      	pop	{r0, pc}

00018d14 <__aeabi_dcmpeq>:
   18d14:	f84d ed08 	str.w	lr, [sp, #-8]!
   18d18:	f7ff fff4 	bl	18d04 <__aeabi_cdcmpeq>
   18d1c:	bf0c      	ite	eq
   18d1e:	2001      	moveq	r0, #1
   18d20:	2000      	movne	r0, #0
   18d22:	f85d fb08 	ldr.w	pc, [sp], #8
   18d26:	bf00      	nop

00018d28 <__aeabi_dcmplt>:
   18d28:	f84d ed08 	str.w	lr, [sp, #-8]!
   18d2c:	f7ff ffea 	bl	18d04 <__aeabi_cdcmpeq>
   18d30:	bf34      	ite	cc
   18d32:	2001      	movcc	r0, #1
   18d34:	2000      	movcs	r0, #0
   18d36:	f85d fb08 	ldr.w	pc, [sp], #8
   18d3a:	bf00      	nop

00018d3c <__aeabi_dcmple>:
   18d3c:	f84d ed08 	str.w	lr, [sp, #-8]!
   18d40:	f7ff ffe0 	bl	18d04 <__aeabi_cdcmpeq>
   18d44:	bf94      	ite	ls
   18d46:	2001      	movls	r0, #1
   18d48:	2000      	movhi	r0, #0
   18d4a:	f85d fb08 	ldr.w	pc, [sp], #8
   18d4e:	bf00      	nop

00018d50 <__aeabi_dcmpge>:
   18d50:	f84d ed08 	str.w	lr, [sp, #-8]!
   18d54:	f7ff ffce 	bl	18cf4 <__aeabi_cdrcmple>
   18d58:	bf94      	ite	ls
   18d5a:	2001      	movls	r0, #1
   18d5c:	2000      	movhi	r0, #0
   18d5e:	f85d fb08 	ldr.w	pc, [sp], #8
   18d62:	bf00      	nop

00018d64 <__aeabi_dcmpgt>:
   18d64:	f84d ed08 	str.w	lr, [sp, #-8]!
   18d68:	f7ff ffc4 	bl	18cf4 <__aeabi_cdrcmple>
   18d6c:	bf34      	ite	cc
   18d6e:	2001      	movcc	r0, #1
   18d70:	2000      	movcs	r0, #0
   18d72:	f85d fb08 	ldr.w	pc, [sp], #8
   18d76:	bf00      	nop

00018d78 <__aeabi_dcmpun>:
   18d78:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   18d7c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   18d80:	d102      	bne.n	18d88 <__aeabi_dcmpun+0x10>
   18d82:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   18d86:	d10a      	bne.n	18d9e <__aeabi_dcmpun+0x26>
   18d88:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   18d8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   18d90:	d102      	bne.n	18d98 <__aeabi_dcmpun+0x20>
   18d92:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   18d96:	d102      	bne.n	18d9e <__aeabi_dcmpun+0x26>
   18d98:	f04f 0000 	mov.w	r0, #0
   18d9c:	4770      	bx	lr
   18d9e:	f04f 0001 	mov.w	r0, #1
   18da2:	4770      	bx	lr

00018da4 <__aeabi_d2iz>:
   18da4:	ea4f 0241 	mov.w	r2, r1, lsl #1
   18da8:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
   18dac:	d215      	bcs.n	18dda <__aeabi_d2iz+0x36>
   18dae:	d511      	bpl.n	18dd4 <__aeabi_d2iz+0x30>
   18db0:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
   18db4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   18db8:	d912      	bls.n	18de0 <__aeabi_d2iz+0x3c>
   18dba:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   18dbe:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
   18dc2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   18dc6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
   18dca:	fa23 f002 	lsr.w	r0, r3, r2
   18dce:	bf18      	it	ne
   18dd0:	4240      	negne	r0, r0
   18dd2:	4770      	bx	lr
   18dd4:	f04f 0000 	mov.w	r0, #0
   18dd8:	4770      	bx	lr
   18dda:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   18dde:	d105      	bne.n	18dec <__aeabi_d2iz+0x48>
   18de0:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
   18de4:	bf08      	it	eq
   18de6:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
   18dea:	4770      	bx	lr
   18dec:	f04f 0000 	mov.w	r0, #0
   18df0:	4770      	bx	lr
   18df2:	bf00      	nop

00018df4 <__aeabi_d2f>:
   18df4:	ea4f 0241 	mov.w	r2, r1, lsl #1
   18df8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
   18dfc:	bf24      	itt	cs
   18dfe:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
   18e02:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
   18e06:	d90d      	bls.n	18e24 <__aeabi_d2f+0x30>
   18e08:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
   18e0c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   18e10:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   18e14:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
   18e18:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   18e1c:	bf08      	it	eq
   18e1e:	f020 0001 	biceq.w	r0, r0, #1
   18e22:	4770      	bx	lr
   18e24:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
   18e28:	d121      	bne.n	18e6e <__aeabi_d2f+0x7a>
   18e2a:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
   18e2e:	bfbc      	itt	lt
   18e30:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
   18e34:	4770      	bxlt	lr
   18e36:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
   18e3a:	ea4f 5252 	mov.w	r2, r2, lsr #21
   18e3e:	f1c2 0218 	rsb	r2, r2, #24
   18e42:	f1c2 0c20 	rsb	ip, r2, #32
   18e46:	fa10 f30c 	lsls.w	r3, r0, ip
   18e4a:	fa20 f002 	lsr.w	r0, r0, r2
   18e4e:	bf18      	it	ne
   18e50:	f040 0001 	orrne.w	r0, r0, #1
   18e54:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   18e58:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   18e5c:	fa03 fc0c 	lsl.w	ip, r3, ip
   18e60:	ea40 000c 	orr.w	r0, r0, ip
   18e64:	fa23 f302 	lsr.w	r3, r3, r2
   18e68:	ea4f 0343 	mov.w	r3, r3, lsl #1
   18e6c:	e7cc      	b.n	18e08 <__aeabi_d2f+0x14>
   18e6e:	ea7f 5362 	mvns.w	r3, r2, asr #21
   18e72:	d107      	bne.n	18e84 <__aeabi_d2f+0x90>
   18e74:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   18e78:	bf1e      	ittt	ne
   18e7a:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
   18e7e:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
   18e82:	4770      	bxne	lr
   18e84:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
   18e88:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
   18e8c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
   18e90:	4770      	bx	lr
   18e92:	bf00      	nop

00018e94 <pinMode>:
const am_hal_gpio_pincfg_t am_hal_gpio_pincfg_output22 = AM_HAL_GPIO_PINCFG_OUTPUT22;

const am_hal_gpio_pincfg_t am_hal_gpio_pincfg_output33 = {.GP.cfg = 0x103};

void pinMode(uint32_t pin, uint32_t mode)
{
   18e94:	b500      	push	{lr}
   18e96:	b083      	sub	sp, #12
   18e98:	9001      	str	r0, [sp, #4]
   18e9a:	9100      	str	r1, [sp, #0]
    switch (mode)
   18e9c:	9b00      	ldr	r3, [sp, #0]
   18e9e:	2b02      	cmp	r3, #2
   18ea0:	d015      	beq.n	18ece <pinMode+0x3a>
   18ea2:	9b00      	ldr	r3, [sp, #0]
   18ea4:	2b02      	cmp	r3, #2
   18ea6:	d818      	bhi.n	18eda <pinMode+0x46>
   18ea8:	9b00      	ldr	r3, [sp, #0]
   18eaa:	2b00      	cmp	r3, #0
   18eac:	d003      	beq.n	18eb6 <pinMode+0x22>
   18eae:	9b00      	ldr	r3, [sp, #0]
   18eb0:	2b01      	cmp	r3, #1
   18eb2:	d006      	beq.n	18ec2 <pinMode+0x2e>
        break;
    case 2:
        am_hal_gpio_pinconfig(pin, am_hal_gpio_pincfg_output33);
        break;
    }
}
   18eb4:	e011      	b.n	18eda <pinMode+0x46>
        am_hal_gpio_pinconfig(pin, am_hal_gpio_pincfg_input);
   18eb6:	4b0b      	ldr	r3, [pc, #44]	@ (18ee4 <pinMode+0x50>)
   18eb8:	6819      	ldr	r1, [r3, #0]
   18eba:	9801      	ldr	r0, [sp, #4]
   18ebc:	f00d f996 	bl	261ec <am_hal_gpio_pinconfig>
        break;
   18ec0:	e00b      	b.n	18eda <pinMode+0x46>
        am_hal_gpio_pinconfig(pin, am_hal_gpio_pincfg_output);
   18ec2:	4b09      	ldr	r3, [pc, #36]	@ (18ee8 <pinMode+0x54>)
   18ec4:	6819      	ldr	r1, [r3, #0]
   18ec6:	9801      	ldr	r0, [sp, #4]
   18ec8:	f00d f990 	bl	261ec <am_hal_gpio_pinconfig>
        break;
   18ecc:	e005      	b.n	18eda <pinMode+0x46>
        am_hal_gpio_pinconfig(pin, am_hal_gpio_pincfg_output33);
   18ece:	4b07      	ldr	r3, [pc, #28]	@ (18eec <pinMode+0x58>)
   18ed0:	6819      	ldr	r1, [r3, #0]
   18ed2:	9801      	ldr	r0, [sp, #4]
   18ed4:	f00d f98a 	bl	261ec <am_hal_gpio_pinconfig>
        break;
   18ed8:	bf00      	nop
}
   18eda:	bf00      	nop
   18edc:	b003      	add	sp, #12
   18ede:	f85d fb04 	ldr.w	pc, [sp], #4
   18ee2:	bf00      	nop
   18ee4:	00028584 	.word	0x00028584
   18ee8:	00028588 	.word	0x00028588
   18eec:	00027c70 	.word	0x00027c70

00018ef0 <digitalWrite>:

void digitalWrite(uint32_t pin, bool state)
{
   18ef0:	b500      	push	{lr}
   18ef2:	b083      	sub	sp, #12
   18ef4:	9001      	str	r0, [sp, #4]
   18ef6:	460b      	mov	r3, r1
   18ef8:	f88d 3003 	strb.w	r3, [sp, #3]
    if (state)
   18efc:	f89d 3003 	ldrb.w	r3, [sp, #3]
   18f00:	2b00      	cmp	r3, #0
   18f02:	d004      	beq.n	18f0e <digitalWrite+0x1e>
        am_hal_gpio_state_write(pin, AM_HAL_GPIO_OUTPUT_SET);
   18f04:	2101      	movs	r1, #1
   18f06:	9801      	ldr	r0, [sp, #4]
   18f08:	f00d f9da 	bl	262c0 <am_hal_gpio_state_write>
    else
        am_hal_gpio_state_write(pin, AM_HAL_GPIO_OUTPUT_CLEAR);
}
   18f0c:	e003      	b.n	18f16 <digitalWrite+0x26>
        am_hal_gpio_state_write(pin, AM_HAL_GPIO_OUTPUT_CLEAR);
   18f0e:	2100      	movs	r1, #0
   18f10:	9801      	ldr	r0, [sp, #4]
   18f12:	f00d f9d5 	bl	262c0 <am_hal_gpio_state_write>
}
   18f16:	bf00      	nop
   18f18:	b003      	add	sp, #12
   18f1a:	f85d fb04 	ldr.w	pc, [sp], #4

00018f1e <digitalRead>:

bool digitalRead(uint32_t pin)
{
   18f1e:	b500      	push	{lr}
   18f20:	b085      	sub	sp, #20
   18f22:	9001      	str	r0, [sp, #4]
    uint32_t pin_state = 0;
   18f24:	2300      	movs	r3, #0
   18f26:	9303      	str	r3, [sp, #12]
    am_hal_gpio_state_read(pin, AM_HAL_GPIO_INPUT_READ, &pin_state);
   18f28:	ab03      	add	r3, sp, #12
   18f2a:	461a      	mov	r2, r3
   18f2c:	2100      	movs	r1, #0
   18f2e:	9801      	ldr	r0, [sp, #4]
   18f30:	f00d f99e 	bl	26270 <am_hal_gpio_state_read>
    return pin_state & 1;
   18f34:	9b03      	ldr	r3, [sp, #12]
   18f36:	f003 0301 	and.w	r3, r3, #1
   18f3a:	2b00      	cmp	r3, #0
   18f3c:	bf14      	ite	ne
   18f3e:	2301      	movne	r3, #1
   18f40:	2300      	moveq	r3, #0
   18f42:	b2db      	uxtb	r3, r3
   18f44:	4618      	mov	r0, r3
   18f46:	b005      	add	sp, #20
   18f48:	f85d fb04 	ldr.w	pc, [sp], #4

00018f4c <am_devices_mspi_rm69330_command_write>:

uint32_t am_devices_mspi_rm69330_command_write(void *pHandle,
                                      uint32_t ui32Instr,
                                      uint8_t *pData,
                                      uint32_t ui32NumBytes)
{
   18f4c:	b500      	push	{lr}
   18f4e:	b08f      	sub	sp, #60	@ 0x3c
   18f50:	9003      	str	r0, [sp, #12]
   18f52:	9102      	str	r1, [sp, #8]
   18f54:	9201      	str	r2, [sp, #4]
   18f56:	9300      	str	r3, [sp, #0]
    am_hal_mspi_pio_transfer_t      Transaction;
    am_devices_mspi_rm69330_t       *pDisplay = (am_devices_mspi_rm69330_t *)pHandle;
   18f58:	9b03      	ldr	r3, [sp, #12]
   18f5a:	930b      	str	r3, [sp, #44]	@ 0x2c
    uint32_t ui32DeviceConfig = (pDisplay->mspiDevCfg.eDeviceConfig % 2) ? AM_HAL_MSPI_FLASH_SERIAL_CE1 : AM_HAL_MSPI_FLASH_SERIAL_CE0;
   18f5c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   18f5e:	7c1b      	ldrb	r3, [r3, #16]
   18f60:	f003 0301 	and.w	r3, r3, #1
   18f64:	9304      	str	r3, [sp, #16]
    bool bNeedSwitch = false;
   18f66:	2300      	movs	r3, #0
   18f68:	f88d 3037 	strb.w	r3, [sp, #55]	@ 0x37
    uint32_t        ui32Status = AM_DEVICES_MSPI_RM69330_STATUS_SUCCESS;
   18f6c:	2300      	movs	r3, #0
   18f6e:	930c      	str	r3, [sp, #48]	@ 0x30

#if defined(AM_PART_APOLLO4L)
    //
    // Disable reverse high-byte with low-byte.
    //
    am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_HALF_WORD_REVERSE_DIS, NULL);
   18f70:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   18f72:	685b      	ldr	r3, [r3, #4]
   18f74:	2200      	movs	r2, #0
   18f76:	2121      	movs	r1, #33	@ 0x21
   18f78:	4618      	mov	r0, r3
   18f7a:	f00b f919 	bl	241b0 <am_hal_mspi_control>
#endif

    if ( pDisplay->mspiDevCfg.eDeviceConfig > AM_HAL_MSPI_FLASH_SERIAL_CE1 )
   18f7e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   18f80:	7c1b      	ldrb	r3, [r3, #16]
   18f82:	2b01      	cmp	r3, #1
   18f84:	d902      	bls.n	18f8c <am_devices_mspi_rm69330_command_write+0x40>
    {
        bNeedSwitch = true;
   18f86:	2301      	movs	r3, #1
   18f88:	f88d 3037 	strb.w	r3, [sp, #55]	@ 0x37
    }

    if ( (!pDisplay->bOccupied) || (ui32NumBytes > 4) )
   18f8c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   18f8e:	7f9b      	ldrb	r3, [r3, #30]
   18f90:	f083 0301 	eor.w	r3, r3, #1
   18f94:	b2db      	uxtb	r3, r3
   18f96:	2b00      	cmp	r3, #0
   18f98:	d102      	bne.n	18fa0 <am_devices_mspi_rm69330_command_write+0x54>
   18f9a:	9b00      	ldr	r3, [sp, #0]
   18f9c:	2b04      	cmp	r3, #4
   18f9e:	d901      	bls.n	18fa4 <am_devices_mspi_rm69330_command_write+0x58>
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR; // display has not been initialized. // too many bytes
   18fa0:	2301      	movs	r3, #1
   18fa2:	e048      	b.n	19036 <am_devices_mspi_rm69330_command_write+0xea>
    }

    //
    // Switch to Cmd configuration.
    //
    if ( bNeedSwitch )
   18fa4:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   18fa8:	2b00      	cmp	r3, #0
   18faa:	d006      	beq.n	18fba <am_devices_mspi_rm69330_command_write+0x6e>
    {
        am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_REQ_DEVICE_CONFIG, &ui32DeviceConfig);
   18fac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   18fae:	685b      	ldr	r3, [r3, #4]
   18fb0:	aa04      	add	r2, sp, #16
   18fb2:	2115      	movs	r1, #21
   18fb4:	4618      	mov	r0, r3
   18fb6:	f00b f8fb 	bl	241b0 <am_hal_mspi_control>
    }

    //
    // Create the individual write transaction.
    //
    Transaction.ui32NumBytes       = ui32NumBytes;
   18fba:	9b00      	ldr	r3, [sp, #0]
   18fbc:	9305      	str	r3, [sp, #20]
    Transaction.bScrambling        = false;
   18fbe:	2300      	movs	r3, #0
   18fc0:	f88d 3018 	strb.w	r3, [sp, #24]
    Transaction.eDirection         = AM_HAL_MSPI_TX;
   18fc4:	2301      	movs	r3, #1
   18fc6:	f88d 301a 	strb.w	r3, [sp, #26]
    Transaction.bSendAddr          = true;
   18fca:	2301      	movs	r3, #1
   18fcc:	f88d 301b 	strb.w	r3, [sp, #27]
    Transaction.ui32DeviceAddr     = ui32Instr << 8;
   18fd0:	9b02      	ldr	r3, [sp, #8]
   18fd2:	021b      	lsls	r3, r3, #8
   18fd4:	9307      	str	r3, [sp, #28]
    Transaction.bSendInstr         = true;
   18fd6:	2301      	movs	r3, #1
   18fd8:	f88d 3020 	strb.w	r3, [sp, #32]
    Transaction.ui16DeviceInstr    = AM_DEVICES_MSPI_RM69330_CMD_WRITE;
   18fdc:	2302      	movs	r3, #2
   18fde:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
    Transaction.bTurnaround        = false;
   18fe2:	2300      	movs	r3, #0
   18fe4:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
    Transaction.bDCX                    = false;
    Transaction.bEnWRLatency            = false;
    Transaction.bContinue               = false;    // MSPI CONT is deprecated for Apollo3
#endif
#else
    Transaction.bDCX                    = false;
   18fe8:	2300      	movs	r3, #0
   18fea:	f88d 3019 	strb.w	r3, [sp, #25]
    Transaction.bEnWRLatency            = false;
   18fee:	2300      	movs	r3, #0
   18ff0:	f88d 3025 	strb.w	r3, [sp, #37]	@ 0x25
    Transaction.bContinue               = false;  // MSPI CONT is deprecated for Apollo4
   18ff4:	2300      	movs	r3, #0
   18ff6:	f88d 3026 	strb.w	r3, [sp, #38]	@ 0x26
#if defined(AM_PART_APOLLO4)
    Transaction.eDeviceNum              = AM_HAL_MSPI_DEVICE0;
#endif
#endif

    Transaction.pui32Buffer        = (uint32_t*)pData;
   18ffa:	9b01      	ldr	r3, [sp, #4]
   18ffc:	930a      	str	r3, [sp, #40]	@ 0x28
    //
    // Execute the transaction over MSPI.
    //
    if (AM_HAL_STATUS_SUCCESS != am_hal_mspi_blocking_transfer(pDisplay->pMspiHandle, &Transaction,
   18ffe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19000:	685b      	ldr	r3, [r3, #4]
   19002:	a905      	add	r1, sp, #20
   19004:	4a0e      	ldr	r2, [pc, #56]	@ (19040 <am_devices_mspi_rm69330_command_write+0xf4>)
   19006:	4618      	mov	r0, r3
   19008:	f00b ffa2 	bl	24f50 <am_hal_mspi_blocking_transfer>
   1900c:	4603      	mov	r3, r0
   1900e:	2b00      	cmp	r3, #0
   19010:	d004      	beq.n	1901c <am_devices_mspi_rm69330_command_write+0xd0>
                                         AM_DEVICES_MSPI_RM69330_TIMEOUT))
    {
        am_util_stdio_printf("Error - Failed to send command.\n");
   19012:	480c      	ldr	r0, [pc, #48]	@ (19044 <am_devices_mspi_rm69330_command_write+0xf8>)
   19014:	f003 fbd4 	bl	1c7c0 <am_util_stdio_printf>
        ui32Status = AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   19018:	2301      	movs	r3, #1
   1901a:	930c      	str	r3, [sp, #48]	@ 0x30
    }
    //am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_REQ_BIG_ENDIAN, NULL);
    //
    // Switch to Device configuration.
    //
    if ( bNeedSwitch )
   1901c:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   19020:	2b00      	cmp	r3, #0
   19022:	d007      	beq.n	19034 <am_devices_mspi_rm69330_command_write+0xe8>
    {
        //
        // Re-Configure the MSPI for the requested operation mode.
        //
        am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_REQ_DEVICE_CONFIG, &pDisplay->mspiDevCfg.eDeviceConfig);
   19024:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19026:	6858      	ldr	r0, [r3, #4]
   19028:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1902a:	3310      	adds	r3, #16
   1902c:	461a      	mov	r2, r3
   1902e:	2115      	movs	r1, #21
   19030:	f00b f8be 	bl	241b0 <am_hal_mspi_control>
    }

    return ui32Status;
   19034:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
}
   19036:	4618      	mov	r0, r3
   19038:	b00f      	add	sp, #60	@ 0x3c
   1903a:	f85d fb04 	ldr.w	pc, [sp], #4
   1903e:	bf00      	nop
   19040:	000186a0 	.word	0x000186a0
   19044:	00027678 	.word	0x00027678

00019048 <am_devices_mspi_rm69330_command_read>:

uint32_t am_devices_mspi_rm69330_command_read(void *pHandle,
                                     uint32_t ui32Instr,
                                     uint32_t *pData,
                                     uint32_t ui32NumBytes)
{
   19048:	b500      	push	{lr}
   1904a:	b08f      	sub	sp, #60	@ 0x3c
   1904c:	9003      	str	r0, [sp, #12]
   1904e:	9102      	str	r1, [sp, #8]
   19050:	9201      	str	r2, [sp, #4]
   19052:	9300      	str	r3, [sp, #0]
    am_hal_mspi_pio_transfer_t      Transaction;
    am_devices_mspi_rm69330_t       *pDisplay = (am_devices_mspi_rm69330_t *)pHandle;
   19054:	9b03      	ldr	r3, [sp, #12]
   19056:	930b      	str	r3, [sp, #44]	@ 0x2c
    // Note: the read operation can work in both 4 and 3 wires mode, it depends on the hardware connection,
    // here is the example for 4 wires connection, for people who use 3 wires connection, the micros below need
    // to be changed to AM_HAL_MSPI_FLASH_SERIAL_CE1_3WIRE and AM_HAL_MSPI_FLASH_SERIAL_CE0_3WIRE, and the
    // bNeedSwitch condition need to be modified accordingly.
    uint32_t ui32DeviceConfig = (pDisplay->mspiDevCfg.eDeviceConfig % 2) ? AM_HAL_MSPI_FLASH_SERIAL_CE1 : AM_HAL_MSPI_FLASH_SERIAL_CE0;
   19058:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1905a:	7c1b      	ldrb	r3, [r3, #16]
   1905c:	f003 0301 	and.w	r3, r3, #1
   19060:	9304      	str	r3, [sp, #16]
    bool bNeedSwitch = false;
   19062:	2300      	movs	r3, #0
   19064:	f88d 3037 	strb.w	r3, [sp, #55]	@ 0x37
    uint32_t        ui32Status = AM_DEVICES_MSPI_RM69330_STATUS_SUCCESS;
   19068:	2300      	movs	r3, #0
   1906a:	930c      	str	r3, [sp, #48]	@ 0x30

#if defined(AM_PART_APOLLO4L)
    //
    // Disable reverse high-byte with low-byte.
    //
    am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_HALF_WORD_REVERSE_DIS, NULL);
   1906c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1906e:	685b      	ldr	r3, [r3, #4]
   19070:	2200      	movs	r2, #0
   19072:	2121      	movs	r1, #33	@ 0x21
   19074:	4618      	mov	r0, r3
   19076:	f00b f89b 	bl	241b0 <am_hal_mspi_control>
#endif

    if ( pDisplay->mspiDevCfg.eDeviceConfig > AM_HAL_MSPI_FLASH_SERIAL_CE1_3WIRE )
   1907a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1907c:	7c1b      	ldrb	r3, [r3, #16]
   1907e:	2b15      	cmp	r3, #21
   19080:	d902      	bls.n	19088 <am_devices_mspi_rm69330_command_read+0x40>
    {
        bNeedSwitch = true;
   19082:	2301      	movs	r3, #1
   19084:	f88d 3037 	strb.w	r3, [sp, #55]	@ 0x37
    }

    if (!pDisplay->bOccupied)
   19088:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1908a:	7f9b      	ldrb	r3, [r3, #30]
   1908c:	f083 0301 	eor.w	r3, r3, #1
   19090:	b2db      	uxtb	r3, r3
   19092:	2b00      	cmp	r3, #0
   19094:	d001      	beq.n	1909a <am_devices_mspi_rm69330_command_read+0x52>
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR; // display has not been initialized.
   19096:	2301      	movs	r3, #1
   19098:	e057      	b.n	1914a <am_devices_mspi_rm69330_command_read+0x102>
    }
    //am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_REQ_LITTLE_ENDIAN, NULL);
    //
    // Switch to Cmd configuration.
    //
    if ( bNeedSwitch )
   1909a:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   1909e:	2b00      	cmp	r3, #0
   190a0:	d006      	beq.n	190b0 <am_devices_mspi_rm69330_command_read+0x68>
    {
        am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_REQ_DEVICE_CONFIG, &ui32DeviceConfig);
   190a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   190a4:	685b      	ldr	r3, [r3, #4]
   190a6:	aa04      	add	r2, sp, #16
   190a8:	2115      	movs	r1, #21
   190aa:	4618      	mov	r0, r3
   190ac:	f00b f880 	bl	241b0 <am_hal_mspi_control>
    }
    //
    // Only support up to 10Mhz read
    //
    am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_REQ_CLOCK_CONFIG, &g_MaxReadFreq);
   190b0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   190b2:	685b      	ldr	r3, [r3, #4]
   190b4:	4a27      	ldr	r2, [pc, #156]	@ (19154 <am_devices_mspi_rm69330_command_read+0x10c>)
   190b6:	2116      	movs	r1, #22
   190b8:	4618      	mov	r0, r3
   190ba:	f00b f879 	bl	241b0 <am_hal_mspi_control>
    //
    // Create the individual write transaction.
    //
    Transaction.ui32NumBytes       = ui32NumBytes;
   190be:	9b00      	ldr	r3, [sp, #0]
   190c0:	9305      	str	r3, [sp, #20]
    Transaction.bScrambling        = false;
   190c2:	2300      	movs	r3, #0
   190c4:	f88d 3018 	strb.w	r3, [sp, #24]
    Transaction.eDirection         = AM_HAL_MSPI_RX;
   190c8:	2300      	movs	r3, #0
   190ca:	f88d 301a 	strb.w	r3, [sp, #26]
    Transaction.bSendAddr          = true;
   190ce:	2301      	movs	r3, #1
   190d0:	f88d 301b 	strb.w	r3, [sp, #27]
    Transaction.ui32DeviceAddr     = ui32Instr << 8;
   190d4:	9b02      	ldr	r3, [sp, #8]
   190d6:	021b      	lsls	r3, r3, #8
   190d8:	9307      	str	r3, [sp, #28]
    Transaction.bSendInstr         = true;
   190da:	2301      	movs	r3, #1
   190dc:	f88d 3020 	strb.w	r3, [sp, #32]
    Transaction.ui16DeviceInstr    = AM_DEVICES_MSPI_RM69330_CMD_READ;
   190e0:	2303      	movs	r3, #3
   190e2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
    Transaction.bTurnaround        = false;
   190e6:	2300      	movs	r3, #0
   190e8:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
    Transaction.bDCX                    = false;
    Transaction.bEnWRLatency            = false;
    Transaction.bContinue               = false;    // MSPI CONT is deprecated for Apollo3
#endif
#else
    Transaction.bDCX                    = false;
   190ec:	2300      	movs	r3, #0
   190ee:	f88d 3019 	strb.w	r3, [sp, #25]
    Transaction.bEnWRLatency            = false;
   190f2:	2300      	movs	r3, #0
   190f4:	f88d 3025 	strb.w	r3, [sp, #37]	@ 0x25
    Transaction.bContinue               = false;    // MSPI CONT is deprecated for Apollo4
   190f8:	2300      	movs	r3, #0
   190fa:	f88d 3026 	strb.w	r3, [sp, #38]	@ 0x26
#if defined(AM_PART_APOLLO4)
    Transaction.eDeviceNum              = AM_HAL_MSPI_DEVICE0;
#endif
#endif
    Transaction.pui32Buffer           = pData;
   190fe:	9b01      	ldr	r3, [sp, #4]
   19100:	930a      	str	r3, [sp, #40]	@ 0x28
    //
    // Execute the transaction over MSPI.
    //
    if (AM_HAL_STATUS_SUCCESS != am_hal_mspi_blocking_transfer(pDisplay->pMspiHandle, &Transaction,
   19102:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19104:	685b      	ldr	r3, [r3, #4]
   19106:	a905      	add	r1, sp, #20
   19108:	4a13      	ldr	r2, [pc, #76]	@ (19158 <am_devices_mspi_rm69330_command_read+0x110>)
   1910a:	4618      	mov	r0, r3
   1910c:	f00b ff20 	bl	24f50 <am_hal_mspi_blocking_transfer>
   19110:	4603      	mov	r3, r0
   19112:	2b00      	cmp	r3, #0
   19114:	d004      	beq.n	19120 <am_devices_mspi_rm69330_command_read+0xd8>
                                       AM_DEVICES_MSPI_RM69330_TIMEOUT))
    {
        am_util_stdio_printf("Error - Failed to send command.\n");
   19116:	4811      	ldr	r0, [pc, #68]	@ (1915c <am_devices_mspi_rm69330_command_read+0x114>)
   19118:	f003 fb52 	bl	1c7c0 <am_util_stdio_printf>
        ui32Status = AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   1911c:	2301      	movs	r3, #1
   1911e:	930c      	str	r3, [sp, #48]	@ 0x30
    }
    //am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_REQ_BIG_ENDIAN, NULL);
    //
    // Switch to Device configuration.
    //
    am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_REQ_CLOCK_CONFIG, &pDisplay->mspiDevCfg.eClockFreq);
   19120:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19122:	6858      	ldr	r0, [r3, #4]
   19124:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19126:	3313      	adds	r3, #19
   19128:	461a      	mov	r2, r3
   1912a:	2116      	movs	r1, #22
   1912c:	f00b f840 	bl	241b0 <am_hal_mspi_control>
    if ( bNeedSwitch )
   19130:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   19134:	2b00      	cmp	r3, #0
   19136:	d007      	beq.n	19148 <am_devices_mspi_rm69330_command_read+0x100>
    {
        //
        // Re-Configure the MSPI for the requested operation mode.
        //
        am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_REQ_DEVICE_CONFIG, &pDisplay->mspiDevCfg.eDeviceConfig);
   19138:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1913a:	6858      	ldr	r0, [r3, #4]
   1913c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1913e:	3310      	adds	r3, #16
   19140:	461a      	mov	r2, r3
   19142:	2115      	movs	r1, #21
   19144:	f00b f834 	bl	241b0 <am_hal_mspi_control>
    }

    return ui32Status;
   19148:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
}
   1914a:	4618      	mov	r0, r3
   1914c:	b00f      	add	sp, #60	@ 0x3c
   1914e:	f85d fb04 	ldr.w	pc, [sp], #4
   19152:	bf00      	nop
   19154:	1000106a 	.word	0x1000106a
   19158:	000186a0 	.word	0x000186a0
   1915c:	00027678 	.word	0x00027678

00019160 <am_devices_mspi_rm69330_set_scanline>:
// set refresh scanline.
//
//****************************************************************************
uint32_t
am_devices_mspi_rm69330_set_scanline(void *pHandle, uint16_t ui16ScanLine)
{
   19160:	b500      	push	{lr}
   19162:	b085      	sub	sp, #20
   19164:	9001      	str	r0, [sp, #4]
   19166:	460b      	mov	r3, r1
   19168:	f8ad 3002 	strh.w	r3, [sp, #2]
    uint8_t ui8CMDBuf[4];

    if ( ui16ScanLine > 490 )
   1916c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
   19170:	f5b3 7ff5 	cmp.w	r3, #490	@ 0x1ea
   19174:	d901      	bls.n	1917a <am_devices_mspi_rm69330_set_scanline+0x1a>
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   19176:	2301      	movs	r3, #1
   19178:	e017      	b.n	191aa <am_devices_mspi_rm69330_set_scanline+0x4a>
    }

    ui8CMDBuf[0] = ui16ScanLine >> 8;
   1917a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
   1917e:	0a1b      	lsrs	r3, r3, #8
   19180:	b29b      	uxth	r3, r3
   19182:	b2db      	uxtb	r3, r3
   19184:	f88d 300c 	strb.w	r3, [sp, #12]
    ui8CMDBuf[1] = ui16ScanLine & 0xFF;
   19188:	f8bd 3002 	ldrh.w	r3, [sp, #2]
   1918c:	b2db      	uxtb	r3, r3
   1918e:	f88d 300d 	strb.w	r3, [sp, #13]
    if ( am_devices_mspi_rm69330_command_write(pHandle, AM_DEVICES_MSPI_RM69330_SET_TEAR_SCANLINE, ui8CMDBuf, 2) )
   19192:	aa03      	add	r2, sp, #12
   19194:	2302      	movs	r3, #2
   19196:	2144      	movs	r1, #68	@ 0x44
   19198:	9801      	ldr	r0, [sp, #4]
   1919a:	f7ff fed7 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1919e:	4603      	mov	r3, r0
   191a0:	2b00      	cmp	r3, #0
   191a2:	d001      	beq.n	191a8 <am_devices_mspi_rm69330_set_scanline+0x48>
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   191a4:	2301      	movs	r3, #1
   191a6:	e000      	b.n	191aa <am_devices_mspi_rm69330_set_scanline+0x4a>
    }

    return AM_DEVICES_MSPI_RM69330_STATUS_SUCCESS;
   191a8:	2300      	movs	r3, #0
}
   191aa:	4618      	mov	r0, r3
   191ac:	b005      	add	sp, #20
   191ae:	f85d fb04 	ldr.w	pc, [sp], #4
	...

000191b4 <am_devices_mspi_rm69330_set_scanline_recommended_parameter>:
//
//****************************************************************************
uint32_t
am_devices_mspi_rm69330_set_scanline_recommended_parameter(void *pHandle,
                                                           uint8_t TETimesPerFrame)
{
   191b4:	b500      	push	{lr}
   191b6:	b085      	sub	sp, #20
   191b8:	9001      	str	r0, [sp, #4]
   191ba:	460b      	mov	r3, r1
   191bc:	f88d 3003 	strb.w	r3, [sp, #3]
    uint16_t ui16ScanLine = 0;
   191c0:	2300      	movs	r3, #0
   191c2:	f8ad 300e 	strh.w	r3, [sp, #14]

    if ( TETimesPerFrame == 2 )
   191c6:	f89d 3003 	ldrb.w	r3, [sp, #3]
   191ca:	2b02      	cmp	r3, #2
   191cc:	d111      	bne.n	191f2 <am_devices_mspi_rm69330_set_scanline_recommended_parameter+0x3e>
    {
        //
        // setting scanline equal to start line add 10 lines when data transfer time longer than TE signals interval time.
        //
        ui16ScanLine = (g_sGraphic_conf.ui16RowOffset + 10) % 490;
   191ce:	4b1b      	ldr	r3, [pc, #108]	@ (1923c <am_devices_mspi_rm69330_set_scanline_recommended_parameter+0x88>)
   191d0:	891b      	ldrh	r3, [r3, #8]
   191d2:	330a      	adds	r3, #10
   191d4:	4a1a      	ldr	r2, [pc, #104]	@ (19240 <am_devices_mspi_rm69330_set_scanline_recommended_parameter+0x8c>)
   191d6:	fb82 1203 	smull	r1, r2, r2, r3
   191da:	11d1      	asrs	r1, r2, #7
   191dc:	17da      	asrs	r2, r3, #31
   191de:	1a8a      	subs	r2, r1, r2
   191e0:	f44f 71f5 	mov.w	r1, #490	@ 0x1ea
   191e4:	fb01 f202 	mul.w	r2, r1, r2
   191e8:	1a9a      	subs	r2, r3, r2
   191ea:	4613      	mov	r3, r2
   191ec:	f8ad 300e 	strh.w	r3, [sp, #14]
   191f0:	e018      	b.n	19224 <am_devices_mspi_rm69330_set_scanline_recommended_parameter+0x70>
    }
    else if (TETimesPerFrame == 1 )
   191f2:	f89d 3003 	ldrb.w	r3, [sp, #3]
   191f6:	2b01      	cmp	r3, #1
   191f8:	d112      	bne.n	19220 <am_devices_mspi_rm69330_set_scanline_recommended_parameter+0x6c>
    {
        //
        // setting scanline equal to end line minus 10 lines when data transfer time less than TE signals interval time.
        //
        ui16ScanLine = (g_sGraphic_conf.ui16RowOffset + 490 - 10) % 490;
   191fa:	4b10      	ldr	r3, [pc, #64]	@ (1923c <am_devices_mspi_rm69330_set_scanline_recommended_parameter+0x88>)
   191fc:	891b      	ldrh	r3, [r3, #8]
   191fe:	f503 73f0 	add.w	r3, r3, #480	@ 0x1e0
   19202:	4a0f      	ldr	r2, [pc, #60]	@ (19240 <am_devices_mspi_rm69330_set_scanline_recommended_parameter+0x8c>)
   19204:	fb82 1203 	smull	r1, r2, r2, r3
   19208:	11d1      	asrs	r1, r2, #7
   1920a:	17da      	asrs	r2, r3, #31
   1920c:	1a8a      	subs	r2, r1, r2
   1920e:	f44f 71f5 	mov.w	r1, #490	@ 0x1ea
   19212:	fb01 f202 	mul.w	r2, r1, r2
   19216:	1a9a      	subs	r2, r3, r2
   19218:	4613      	mov	r3, r2
   1921a:	f8ad 300e 	strh.w	r3, [sp, #14]
   1921e:	e001      	b.n	19224 <am_devices_mspi_rm69330_set_scanline_recommended_parameter+0x70>
    }
    else
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   19220:	2301      	movs	r3, #1
   19222:	e006      	b.n	19232 <am_devices_mspi_rm69330_set_scanline_recommended_parameter+0x7e>
    }

    return am_devices_mspi_rm69330_set_scanline(pHandle, ui16ScanLine);
   19224:	f8bd 300e 	ldrh.w	r3, [sp, #14]
   19228:	4619      	mov	r1, r3
   1922a:	9801      	ldr	r0, [sp, #4]
   1922c:	f7ff ff98 	bl	19160 <am_devices_mspi_rm69330_set_scanline>
   19230:	4603      	mov	r3, r0
}
   19232:	4618      	mov	r0, r3
   19234:	b005      	add	sp, #20
   19236:	f85d fb04 	ldr.w	pc, [sp], #4
   1923a:	bf00      	nop
   1923c:	10001000 	.word	0x10001000
   19240:	42df9bb1 	.word	0x42df9bb1

00019244 <am_devices_mspi_rm69330_init>:
uint32_t
am_devices_mspi_rm69330_init(uint32_t ui32Module,
                             am_devices_mspi_rm69330_config_t *pDevCfg,
                             void **ppHandle,
                             void **ppMspiHandle)
{
   19244:	b530      	push	{r4, r5, lr}
   19246:	b089      	sub	sp, #36	@ 0x24
   19248:	9003      	str	r0, [sp, #12]
   1924a:	9102      	str	r1, [sp, #8]
   1924c:	9201      	str	r2, [sp, #4]
   1924e:	9300      	str	r3, [sp, #0]
    uint32_t        ui32Status;
    uint32_t        ui32DeviceID;
    uint32_t        ui32Index;
    void            *pMspiHandle;

    if ((ui32Module > AM_REG_MSPI_NUM_MODULES) || (pDevCfg == NULL))
   19250:	9b03      	ldr	r3, [sp, #12]
   19252:	2b03      	cmp	r3, #3
   19254:	d802      	bhi.n	1925c <am_devices_mspi_rm69330_init+0x18>
   19256:	9b02      	ldr	r3, [sp, #8]
   19258:	2b00      	cmp	r3, #0
   1925a:	d104      	bne.n	19266 <am_devices_mspi_rm69330_init+0x22>
    {
        am_util_stdio_printf("Error - AM_REG_MSPI_NUM_MODULES null \n");
   1925c:	48a1      	ldr	r0, [pc, #644]	@ (194e4 <am_devices_mspi_rm69330_init+0x2a0>)
   1925e:	f003 faaf 	bl	1c7c0 <am_util_stdio_printf>
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   19262:	2301      	movs	r3, #1
   19264:	e13a      	b.n	194dc <am_devices_mspi_rm69330_init+0x298>
    }

    // Allocate a vacant device handle
    for ( ui32Index = 0; ui32Index < AM_DEVICES_MSPI_RM69330_MAX_DEVICE_NUM; ui32Index++ )
   19266:	2300      	movs	r3, #0
   19268:	9307      	str	r3, [sp, #28]
   1926a:	e00d      	b.n	19288 <am_devices_mspi_rm69330_init+0x44>
    {
        if ( gAmDisplay[ui32Index].bOccupied == false )
   1926c:	4a9e      	ldr	r2, [pc, #632]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   1926e:	9b07      	ldr	r3, [sp, #28]
   19270:	015b      	lsls	r3, r3, #5
   19272:	4413      	add	r3, r2
   19274:	331e      	adds	r3, #30
   19276:	781b      	ldrb	r3, [r3, #0]
   19278:	f083 0301 	eor.w	r3, r3, #1
   1927c:	b2db      	uxtb	r3, r3
   1927e:	2b00      	cmp	r3, #0
   19280:	d106      	bne.n	19290 <am_devices_mspi_rm69330_init+0x4c>
    for ( ui32Index = 0; ui32Index < AM_DEVICES_MSPI_RM69330_MAX_DEVICE_NUM; ui32Index++ )
   19282:	9b07      	ldr	r3, [sp, #28]
   19284:	3301      	adds	r3, #1
   19286:	9307      	str	r3, [sp, #28]
   19288:	9b07      	ldr	r3, [sp, #28]
   1928a:	2b00      	cmp	r3, #0
   1928c:	d0ee      	beq.n	1926c <am_devices_mspi_rm69330_init+0x28>
   1928e:	e000      	b.n	19292 <am_devices_mspi_rm69330_init+0x4e>
        {
            break;
   19290:	bf00      	nop
        }
    }
    if ( ui32Index == AM_DEVICES_MSPI_RM69330_MAX_DEVICE_NUM )
   19292:	9b07      	ldr	r3, [sp, #28]
   19294:	2b01      	cmp	r3, #1
   19296:	d104      	bne.n	192a2 <am_devices_mspi_rm69330_init+0x5e>
    {
        am_util_stdio_printf("Error - AM_DEVICES_MSPI_RM69330_MAX_DEVICE_NUM\n");
   19298:	4894      	ldr	r0, [pc, #592]	@ (194ec <am_devices_mspi_rm69330_init+0x2a8>)
   1929a:	f003 fa91 	bl	1c7c0 <am_util_stdio_printf>
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   1929e:	2301      	movs	r3, #1
   192a0:	e11c      	b.n	194dc <am_devices_mspi_rm69330_init+0x298>

    //
    // Enable fault detection.
    //
#if defined(AM_PART_APOLLO4_API)
    am_hal_fault_capture_enable();
   192a2:	f009 fd2d 	bl	22d00 <am_hal_fault_capture_enable>
    am_hal_mcuctrl_control(AM_HAL_MCUCTRL_CONTROL_FAULT_CAPTURE_ENABLE, 0);
#else
    am_hal_mcuctrl_fault_capture_enable();
#endif

    switch (pDevCfg->eDeviceConfig)
   192a6:	9b02      	ldr	r3, [sp, #8]
   192a8:	781b      	ldrb	r3, [r3, #0]
   192aa:	2b13      	cmp	r3, #19
   192ac:	d86a      	bhi.n	19384 <am_devices_mspi_rm69330_init+0x140>
   192ae:	a201      	add	r2, pc, #4	@ (adr r2, 192b4 <am_devices_mspi_rm69330_init+0x70>)
   192b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   192b4:	00019305 	.word	0x00019305
   192b8:	00019345 	.word	0x00019345
   192bc:	00019385 	.word	0x00019385
   192c0:	00019385 	.word	0x00019385
   192c4:	00019385 	.word	0x00019385
   192c8:	00019385 	.word	0x00019385
   192cc:	00019385 	.word	0x00019385
   192d0:	00019385 	.word	0x00019385
   192d4:	00019385 	.word	0x00019385
   192d8:	00019385 	.word	0x00019385
   192dc:	00019385 	.word	0x00019385
   192e0:	00019385 	.word	0x00019385
   192e4:	00019385 	.word	0x00019385
   192e8:	00019385 	.word	0x00019385
   192ec:	00019385 	.word	0x00019385
   192f0:	00019385 	.word	0x00019385
   192f4:	00019325 	.word	0x00019325
   192f8:	00019365 	.word	0x00019365
   192fc:	00019325 	.word	0x00019325
   19300:	00019365 	.word	0x00019365
    {
        case AM_HAL_MSPI_FLASH_SERIAL_CE0:
            gAmDisplay[ui32Index].mspiDevCfg = SerialCE0DisplayMSPICfg;
   19304:	4a78      	ldr	r2, [pc, #480]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   19306:	9b07      	ldr	r3, [sp, #28]
   19308:	015b      	lsls	r3, r3, #5
   1930a:	4413      	add	r3, r2
   1930c:	3308      	adds	r3, #8
   1930e:	4a78      	ldr	r2, [pc, #480]	@ (194f0 <am_devices_mspi_rm69330_init+0x2ac>)
   19310:	461c      	mov	r4, r3
   19312:	4615      	mov	r5, r2
   19314:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   19316:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   19318:	e895 0003 	ldmia.w	r5, {r0, r1}
   1931c:	6020      	str	r0, [r4, #0]
   1931e:	3404      	adds	r4, #4
   19320:	8021      	strh	r1, [r4, #0]
            break;
   19322:	e034      	b.n	1938e <am_devices_mspi_rm69330_init+0x14a>
        case AM_HAL_MSPI_FLASH_QUAD_CE0_1_1_4:
        case AM_HAL_MSPI_FLASH_QUAD_CE0_1_4_4:
            gAmDisplay[ui32Index].mspiDevCfg = QuadCE0DisplayMSPICfg;
   19324:	4a70      	ldr	r2, [pc, #448]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   19326:	9b07      	ldr	r3, [sp, #28]
   19328:	015b      	lsls	r3, r3, #5
   1932a:	4413      	add	r3, r2
   1932c:	3308      	adds	r3, #8
   1932e:	4a71      	ldr	r2, [pc, #452]	@ (194f4 <am_devices_mspi_rm69330_init+0x2b0>)
   19330:	461c      	mov	r4, r3
   19332:	4615      	mov	r5, r2
   19334:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   19336:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   19338:	e895 0003 	ldmia.w	r5, {r0, r1}
   1933c:	6020      	str	r0, [r4, #0]
   1933e:	3404      	adds	r4, #4
   19340:	8021      	strh	r1, [r4, #0]
            break;
   19342:	e024      	b.n	1938e <am_devices_mspi_rm69330_init+0x14a>
        case AM_HAL_MSPI_FLASH_SERIAL_CE1:
            gAmDisplay[ui32Index].mspiDevCfg = SerialCE1DisplayMSPICfg;
   19344:	4a68      	ldr	r2, [pc, #416]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   19346:	9b07      	ldr	r3, [sp, #28]
   19348:	015b      	lsls	r3, r3, #5
   1934a:	4413      	add	r3, r2
   1934c:	3308      	adds	r3, #8
   1934e:	4a6a      	ldr	r2, [pc, #424]	@ (194f8 <am_devices_mspi_rm69330_init+0x2b4>)
   19350:	461c      	mov	r4, r3
   19352:	4615      	mov	r5, r2
   19354:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   19356:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   19358:	e895 0003 	ldmia.w	r5, {r0, r1}
   1935c:	6020      	str	r0, [r4, #0]
   1935e:	3404      	adds	r4, #4
   19360:	8021      	strh	r1, [r4, #0]
            break;
   19362:	e014      	b.n	1938e <am_devices_mspi_rm69330_init+0x14a>
        case AM_HAL_MSPI_FLASH_QUAD_CE1_1_1_4:
        case AM_HAL_MSPI_FLASH_QUAD_CE1_1_4_4:
            gAmDisplay[ui32Index].mspiDevCfg = QuadCE1DisplayMSPICfg;
   19364:	4a60      	ldr	r2, [pc, #384]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   19366:	9b07      	ldr	r3, [sp, #28]
   19368:	015b      	lsls	r3, r3, #5
   1936a:	4413      	add	r3, r2
   1936c:	3308      	adds	r3, #8
   1936e:	4a63      	ldr	r2, [pc, #396]	@ (194fc <am_devices_mspi_rm69330_init+0x2b8>)
   19370:	461c      	mov	r4, r3
   19372:	4615      	mov	r5, r2
   19374:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   19376:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   19378:	e895 0003 	ldmia.w	r5, {r0, r1}
   1937c:	6020      	str	r0, [r4, #0]
   1937e:	3404      	adds	r4, #4
   19380:	8021      	strh	r1, [r4, #0]
            break;
   19382:	e004      	b.n	1938e <am_devices_mspi_rm69330_init+0x14a>
        default:
            am_util_stdio_printf("Error - Switch\n");
   19384:	485e      	ldr	r0, [pc, #376]	@ (19500 <am_devices_mspi_rm69330_init+0x2bc>)
   19386:	f003 fa1b 	bl	1c7c0 <am_util_stdio_printf>
            return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   1938a:	2301      	movs	r3, #1
   1938c:	e0a6      	b.n	194dc <am_devices_mspi_rm69330_init+0x298>
    }
    gAmDisplay[ui32Index].mspiDevCfg.eClockFreq = pDevCfg->eClockFreq;
   1938e:	9b02      	ldr	r3, [sp, #8]
   19390:	7859      	ldrb	r1, [r3, #1]
   19392:	4a55      	ldr	r2, [pc, #340]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   19394:	9b07      	ldr	r3, [sp, #28]
   19396:	015b      	lsls	r3, r3, #5
   19398:	4413      	add	r3, r2
   1939a:	3313      	adds	r3, #19
   1939c:	460a      	mov	r2, r1
   1939e:	701a      	strb	r2, [r3, #0]
    //
    // Configure the MSPI for Serial operation during initialization.
    //
    if (AM_HAL_STATUS_SUCCESS != am_hal_mspi_initialize(ui32Module, &pMspiHandle))
   193a0:	ab04      	add	r3, sp, #16
   193a2:	4619      	mov	r1, r3
   193a4:	9803      	ldr	r0, [sp, #12]
   193a6:	f00a fcef 	bl	23d88 <am_hal_mspi_initialize>
   193aa:	4603      	mov	r3, r0
   193ac:	2b00      	cmp	r3, #0
   193ae:	d004      	beq.n	193ba <am_devices_mspi_rm69330_init+0x176>
    {
        am_util_stdio_printf("Error - Failed to initialize MSPI.\n");
   193b0:	4854      	ldr	r0, [pc, #336]	@ (19504 <am_devices_mspi_rm69330_init+0x2c0>)
   193b2:	f003 fa05 	bl	1c7c0 <am_util_stdio_printf>
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   193b6:	2301      	movs	r3, #1
   193b8:	e090      	b.n	194dc <am_devices_mspi_rm69330_init+0x298>
    }

    if (AM_HAL_STATUS_SUCCESS != am_hal_mspi_power_control(pMspiHandle, AM_HAL_SYSCTRL_WAKE, false))
   193ba:	9b04      	ldr	r3, [sp, #16]
   193bc:	2200      	movs	r2, #0
   193be:	2100      	movs	r1, #0
   193c0:	4618      	mov	r0, r3
   193c2:	f00c f933 	bl	2562c <am_hal_mspi_power_control>
   193c6:	4603      	mov	r3, r0
   193c8:	2b00      	cmp	r3, #0
   193ca:	d004      	beq.n	193d6 <am_devices_mspi_rm69330_init+0x192>
    {
        am_util_stdio_printf("Error - Failed to power on MSPI.\n");
   193cc:	484e      	ldr	r0, [pc, #312]	@ (19508 <am_devices_mspi_rm69330_init+0x2c4>)
   193ce:	f003 f9f7 	bl	1c7c0 <am_util_stdio_printf>
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   193d2:	2301      	movs	r3, #1
   193d4:	e082      	b.n	194dc <am_devices_mspi_rm69330_init+0x298>

#if defined (AM_PART_APOLLO3) || defined (AM_PART_APOLLO3P)
    gAmDisplay[ui32Index].mspiDevCfg.ui32TCBSize = pDevCfg->ui32NBTxnBufLength;
    gAmDisplay[ui32Index].mspiDevCfg.pTCB = pDevCfg->pNBTxnBuf;
#else
    gGDMspiCfg.ui32TCBSize = pDevCfg->ui32NBTxnBufLength;
   193d6:	9b02      	ldr	r3, [sp, #8]
   193d8:	689b      	ldr	r3, [r3, #8]
   193da:	4a4c      	ldr	r2, [pc, #304]	@ (1950c <am_devices_mspi_rm69330_init+0x2c8>)
   193dc:	6013      	str	r3, [r2, #0]
    gGDMspiCfg.pTCB = pDevCfg->pNBTxnBuf;
   193de:	9b02      	ldr	r3, [sp, #8]
   193e0:	685b      	ldr	r3, [r3, #4]
   193e2:	4a4a      	ldr	r2, [pc, #296]	@ (1950c <am_devices_mspi_rm69330_init+0x2c8>)
   193e4:	6053      	str	r3, [r2, #4]
#if defined (AM_BSP_MSPI_CLKOND4)
    gGDMspiCfg.bClkonD4 = AM_BSP_MSPI_CLKOND4(ui32Module);
#else
    gGDMspiCfg.bClkonD4 = false;
   193e6:	4b49      	ldr	r3, [pc, #292]	@ (1950c <am_devices_mspi_rm69330_init+0x2c8>)
   193e8:	2200      	movs	r2, #0
   193ea:	721a      	strb	r2, [r3, #8]
#endif // AM_BSP_MSPI_CLKOND4

    if (AM_HAL_STATUS_SUCCESS != am_hal_mspi_configure(pMspiHandle, &gGDMspiCfg))
   193ec:	9b04      	ldr	r3, [sp, #16]
   193ee:	4947      	ldr	r1, [pc, #284]	@ (1950c <am_devices_mspi_rm69330_init+0x2c8>)
   193f0:	4618      	mov	r0, r3
   193f2:	f00a fcf1 	bl	23dd8 <am_hal_mspi_configure>
   193f6:	4603      	mov	r3, r0
   193f8:	2b00      	cmp	r3, #0
   193fa:	d004      	beq.n	19406 <am_devices_mspi_rm69330_init+0x1c2>
    {
        am_util_stdio_printf("Error - Failed to configure MSPI device.\n");
   193fc:	4844      	ldr	r0, [pc, #272]	@ (19510 <am_devices_mspi_rm69330_init+0x2cc>)
   193fe:	f003 f9df 	bl	1c7c0 <am_util_stdio_printf>
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   19402:	2301      	movs	r3, #1
   19404:	e06a      	b.n	194dc <am_devices_mspi_rm69330_init+0x298>
    }
#endif // AM_PART_APOLLO3

    if (AM_HAL_STATUS_SUCCESS != am_hal_mspi_device_configure(pMspiHandle, &gAmDisplay[ui32Index].mspiDevCfg))
   19406:	9a04      	ldr	r2, [sp, #16]
   19408:	9b07      	ldr	r3, [sp, #28]
   1940a:	015b      	lsls	r3, r3, #5
   1940c:	3308      	adds	r3, #8
   1940e:	4936      	ldr	r1, [pc, #216]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   19410:	440b      	add	r3, r1
   19412:	4619      	mov	r1, r3
   19414:	4610      	mov	r0, r2
   19416:	f00a fd4f 	bl	23eb8 <am_hal_mspi_device_configure>
   1941a:	4603      	mov	r3, r0
   1941c:	2b00      	cmp	r3, #0
   1941e:	d004      	beq.n	1942a <am_devices_mspi_rm69330_init+0x1e6>
    {
        am_util_stdio_printf("Error - Failed to configure MSPI.\n");
   19420:	483c      	ldr	r0, [pc, #240]	@ (19514 <am_devices_mspi_rm69330_init+0x2d0>)
   19422:	f003 f9cd 	bl	1c7c0 <am_util_stdio_printf>
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   19426:	2301      	movs	r3, #1
   19428:	e058      	b.n	194dc <am_devices_mspi_rm69330_init+0x298>
    }
    if (AM_HAL_STATUS_SUCCESS != am_hal_mspi_enable(pMspiHandle))
   1942a:	9b04      	ldr	r3, [sp, #16]
   1942c:	4618      	mov	r0, r3
   1942e:	f00a fe6b 	bl	24108 <am_hal_mspi_enable>
   19432:	4603      	mov	r3, r0
   19434:	2b00      	cmp	r3, #0
   19436:	d004      	beq.n	19442 <am_devices_mspi_rm69330_init+0x1fe>
    {
        am_util_stdio_printf("Error - Failed to enable MSPI.\n");
   19438:	4837      	ldr	r0, [pc, #220]	@ (19518 <am_devices_mspi_rm69330_init+0x2d4>)
   1943a:	f003 f9c1 	bl	1c7c0 <am_util_stdio_printf>
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   1943e:	2301      	movs	r3, #1
   19440:	e04c      	b.n	194dc <am_devices_mspi_rm69330_init+0x298>
    }

    gAmDisplay[ui32Index].pMspiHandle = pMspiHandle;
   19442:	9a04      	ldr	r2, [sp, #16]
   19444:	4928      	ldr	r1, [pc, #160]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   19446:	9b07      	ldr	r3, [sp, #28]
   19448:	015b      	lsls	r3, r3, #5
   1944a:	440b      	add	r3, r1
   1944c:	3304      	adds	r3, #4
   1944e:	601a      	str	r2, [r3, #0]
    gAmDisplay[ui32Index].ui32Module = ui32Module;
   19450:	4a25      	ldr	r2, [pc, #148]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   19452:	9b07      	ldr	r3, [sp, #28]
   19454:	015b      	lsls	r3, r3, #5
   19456:	4413      	add	r3, r2
   19458:	9a03      	ldr	r2, [sp, #12]
   1945a:	601a      	str	r2, [r3, #0]
    gAmDisplay[ui32Index].bOccupied = true;
   1945c:	4a22      	ldr	r2, [pc, #136]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   1945e:	9b07      	ldr	r3, [sp, #28]
   19460:	015b      	lsls	r3, r3, #5
   19462:	4413      	add	r3, r2
   19464:	331e      	adds	r3, #30
   19466:	2201      	movs	r2, #1
   19468:	701a      	strb	r2, [r3, #0]

    //am_devices_lcm_init((void*)&gAmDisplay[ui32Index], &g_sGraphic_conf);
    //
    // Read the Device ID.
    //
    ui32Status = am_devices_mspi_rm69330_read_id((void*)&gAmDisplay[ui32Index], &ui32DeviceID);
   1946a:	9b07      	ldr	r3, [sp, #28]
   1946c:	015b      	lsls	r3, r3, #5
   1946e:	4a1e      	ldr	r2, [pc, #120]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   19470:	4413      	add	r3, r2
   19472:	aa05      	add	r2, sp, #20
   19474:	4611      	mov	r1, r2
   19476:	4618      	mov	r0, r3
   19478:	f000 f90d 	bl	19696 <am_devices_mspi_rm69330_read_id>
   1947c:	9006      	str	r0, [sp, #24]
    am_util_stdio_printf("RM69330 Device ID = %6X\n", (ui32DeviceID & 0x00FFFFFF));
   1947e:	9b05      	ldr	r3, [sp, #20]
   19480:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
   19484:	4619      	mov	r1, r3
   19486:	4825      	ldr	r0, [pc, #148]	@ (1951c <am_devices_mspi_rm69330_init+0x2d8>)
   19488:	f003 f99a 	bl	1c7c0 <am_util_stdio_printf>
    //
    // Enable MSPI interrupts.
    //
    ui32Status = am_hal_mspi_interrupt_clear(pMspiHandle, AM_HAL_MSPI_INT_CQUPD | AM_HAL_MSPI_INT_ERR );
   1948c:	9b04      	ldr	r3, [sp, #16]
   1948e:	f44f 51d4 	mov.w	r1, #6784	@ 0x1a80
   19492:	4618      	mov	r0, r3
   19494:	f00b ff38 	bl	25308 <am_hal_mspi_interrupt_clear>
   19498:	9006      	str	r0, [sp, #24]
    if (AM_HAL_STATUS_SUCCESS != ui32Status)
   1949a:	9b06      	ldr	r3, [sp, #24]
   1949c:	2b00      	cmp	r3, #0
   1949e:	d004      	beq.n	194aa <am_devices_mspi_rm69330_init+0x266>
    {
        am_util_stdio_printf("Error - am_hal_mspi_interrupt_clear\n");
   194a0:	481f      	ldr	r0, [pc, #124]	@ (19520 <am_devices_mspi_rm69330_init+0x2dc>)
   194a2:	f003 f98d 	bl	1c7c0 <am_util_stdio_printf>
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   194a6:	2301      	movs	r3, #1
   194a8:	e018      	b.n	194dc <am_devices_mspi_rm69330_init+0x298>
    }

    ui32Status = am_hal_mspi_interrupt_enable(pMspiHandle, AM_HAL_MSPI_INT_CQUPD | AM_HAL_MSPI_INT_ERR );
   194aa:	9b04      	ldr	r3, [sp, #16]
   194ac:	f44f 51d4 	mov.w	r1, #6784	@ 0x1a80
   194b0:	4618      	mov	r0, r3
   194b2:	f00b fee9 	bl	25288 <am_hal_mspi_interrupt_enable>
   194b6:	9006      	str	r0, [sp, #24]
    if (AM_HAL_STATUS_SUCCESS != ui32Status)
   194b8:	9b06      	ldr	r3, [sp, #24]
   194ba:	2b00      	cmp	r3, #0
   194bc:	d004      	beq.n	194c8 <am_devices_mspi_rm69330_init+0x284>
    {
        am_util_stdio_printf("Error - am_hal_mspi_interrupt_enable\n");
   194be:	4819      	ldr	r0, [pc, #100]	@ (19524 <am_devices_mspi_rm69330_init+0x2e0>)
   194c0:	f003 f97e 	bl	1c7c0 <am_util_stdio_printf>
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   194c4:	2301      	movs	r3, #1
   194c6:	e009      	b.n	194dc <am_devices_mspi_rm69330_init+0x298>
    }

    //
    // Return the handle.
    //
    *ppHandle = (void *)&gAmDisplay[ui32Index];
   194c8:	9b07      	ldr	r3, [sp, #28]
   194ca:	015b      	lsls	r3, r3, #5
   194cc:	4a06      	ldr	r2, [pc, #24]	@ (194e8 <am_devices_mspi_rm69330_init+0x2a4>)
   194ce:	441a      	add	r2, r3
   194d0:	9b01      	ldr	r3, [sp, #4]
   194d2:	601a      	str	r2, [r3, #0]
    *ppMspiHandle = pMspiHandle;
   194d4:	9a04      	ldr	r2, [sp, #16]
   194d6:	9b00      	ldr	r3, [sp, #0]
   194d8:	601a      	str	r2, [r3, #0]

    //
    // Return the status.
    //
    return AM_DEVICES_MSPI_RM69330_STATUS_SUCCESS;
   194da:	2300      	movs	r3, #0
}
   194dc:	4618      	mov	r0, r3
   194de:	b009      	add	sp, #36	@ 0x24
   194e0:	bd30      	pop	{r4, r5, pc}
   194e2:	bf00      	nop
   194e4:	0002769c 	.word	0x0002769c
   194e8:	100017c4 	.word	0x100017c4
   194ec:	000276c4 	.word	0x000276c4
   194f0:	1000100c 	.word	0x1000100c
   194f4:	1000103c 	.word	0x1000103c
   194f8:	10001024 	.word	0x10001024
   194fc:	10001054 	.word	0x10001054
   19500:	000276f4 	.word	0x000276f4
   19504:	00027704 	.word	0x00027704
   19508:	00027728 	.word	0x00027728
   1950c:	100017b8 	.word	0x100017b8
   19510:	0002774c 	.word	0x0002774c
   19514:	00027778 	.word	0x00027778
   19518:	0002779c 	.word	0x0002779c
   1951c:	000277bc 	.word	0x000277bc
   19520:	000277d8 	.word	0x000277d8
   19524:	00027800 	.word	0x00027800

00019528 <am_devices_mspi_rm69330_display_on>:
//
//
//*****************************************************************************
uint32_t
am_devices_mspi_rm69330_display_on(void *pHandle)
{
   19528:	b500      	push	{lr}
   1952a:	b083      	sub	sp, #12
   1952c:	9001      	str	r0, [sp, #4]
    if ( am_devices_mspi_rm69330_command_write(pHandle, AM_DEVICES_MSPI_RM69330_DISPLAY_OFF, NULL, 0) )
   1952e:	2300      	movs	r3, #0
   19530:	2200      	movs	r2, #0
   19532:	2128      	movs	r1, #40	@ 0x28
   19534:	9801      	ldr	r0, [sp, #4]
   19536:	f7ff fd09 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1953a:	4603      	mov	r3, r0
   1953c:	2b00      	cmp	r3, #0
   1953e:	d001      	beq.n	19544 <am_devices_mspi_rm69330_display_on+0x1c>
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   19540:	2301      	movs	r3, #1
   19542:	e00b      	b.n	1955c <am_devices_mspi_rm69330_display_on+0x34>
    }

    if (am_devices_mspi_rm69330_command_write(pHandle, AM_DEVICES_MSPI_RM69330_DISPLAY_ON, NULL, 0))
   19544:	2300      	movs	r3, #0
   19546:	2200      	movs	r2, #0
   19548:	2129      	movs	r1, #41	@ 0x29
   1954a:	9801      	ldr	r0, [sp, #4]
   1954c:	f7ff fcfe 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   19550:	4603      	mov	r3, r0
   19552:	2b00      	cmp	r3, #0
   19554:	d001      	beq.n	1955a <am_devices_mspi_rm69330_display_on+0x32>
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   19556:	2301      	movs	r3, #1
   19558:	e000      	b.n	1955c <am_devices_mspi_rm69330_display_on+0x34>
    }

    return AM_DEVICES_MSPI_RM69330_STATUS_SUCCESS;
   1955a:	2300      	movs	r3, #0
}
   1955c:	4618      	mov	r0, r3
   1955e:	b003      	add	sp, #12
   19560:	f85d fb04 	ldr.w	pc, [sp], #4

00019564 <am_devices_mspi_rm69330_nonblocking_write_endian>:
                                                 uint32_t ui32StatusSetClr,
                                                 am_hal_mspi_callback_t pfnCallback,
                                                 void *pCallbackCtxt,
                                                 bool bContinue,
                                                 bool bReverseBytes)
{
   19564:	b500      	push	{lr}
   19566:	b091      	sub	sp, #68	@ 0x44
   19568:	9005      	str	r0, [sp, #20]
   1956a:	9104      	str	r1, [sp, #16]
   1956c:	9203      	str	r2, [sp, #12]
   1956e:	9302      	str	r3, [sp, #8]
    am_hal_mspi_dma_transfer_t Transaction;
    am_devices_mspi_rm69330_t *pDisplay = (am_devices_mspi_rm69330_t *)pHandle;
   19570:	9b05      	ldr	r3, [sp, #20]
   19572:	930d      	str	r3, [sp, #52]	@ 0x34
    uint32_t      ui32BytesLeft = ui32NumBytes;
   19574:	9b03      	ldr	r3, [sp, #12]
   19576:	930f      	str	r3, [sp, #60]	@ 0x3c

#if defined(AM_PART_APOLLO4L)
    //
    // Reverse endian or not
    //
    if ( true == bReverseBytes )
   19578:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
   1957c:	2b00      	cmp	r3, #0
   1957e:	d007      	beq.n	19590 <am_devices_mspi_rm69330_nonblocking_write_endian+0x2c>
    {
        am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_HALF_WORD_REVERSE_EN, NULL);
   19580:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
   19582:	685b      	ldr	r3, [r3, #4]
   19584:	2200      	movs	r2, #0
   19586:	2120      	movs	r1, #32
   19588:	4618      	mov	r0, r3
   1958a:	f00a fe11 	bl	241b0 <am_hal_mspi_control>
   1958e:	e006      	b.n	1959e <am_devices_mspi_rm69330_nonblocking_write_endian+0x3a>
    }
    else
    {
        am_hal_mspi_control(pDisplay->pMspiHandle, AM_HAL_MSPI_HALF_WORD_REVERSE_DIS, NULL);
   19590:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
   19592:	685b      	ldr	r3, [r3, #4]
   19594:	2200      	movs	r2, #0
   19596:	2121      	movs	r1, #33	@ 0x21
   19598:	4618      	mov	r0, r3
   1959a:	f00a fe09 	bl	241b0 <am_hal_mspi_control>
#endif //defined(AM_PART_APOLLO4L)

    //
    // Create the transaction.
    //
    Transaction.ui8Priority               = 1;
   1959e:	2301      	movs	r3, #1
   195a0:	f88d 301c 	strb.w	r3, [sp, #28]
    Transaction.eDirection                = AM_HAL_MSPI_TX;
   195a4:	2301      	movs	r3, #1
   195a6:	f88d 301d 	strb.w	r3, [sp, #29]
    Transaction.ui32TransferCount         = (ui32BytesLeft <= AM_HAL_MSPI_MAX_TRANS_SIZE) ? ui32BytesLeft : AM_HAL_MSPI_MAX_TRANS_SIZE;
   195aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   195ac:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
   195b0:	4293      	cmp	r3, r2
   195b2:	bf28      	it	cs
   195b4:	4613      	movcs	r3, r2
   195b6:	9308      	str	r3, [sp, #32]
    Transaction.ui32DeviceAddress         = ((bContinue == true) ? AM_DEVICES_MSPI_RM69330_MEM_WRITE_CONTINUE : AM_DEVICES_MSPI_RM69330_MEM_WRITE) << 8;
   195b8:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
   195bc:	2b00      	cmp	r3, #0
   195be:	d002      	beq.n	195c6 <am_devices_mspi_rm69330_nonblocking_write_endian+0x62>
   195c0:	f44f 5370 	mov.w	r3, #15360	@ 0x3c00
   195c4:	e001      	b.n	195ca <am_devices_mspi_rm69330_nonblocking_write_endian+0x66>
   195c6:	f44f 5330 	mov.w	r3, #11264	@ 0x2c00
   195ca:	9309      	str	r3, [sp, #36]	@ 0x24
    Transaction.ui32SRAMAddress           = (uint32_t)pui8TxBuffer;
   195cc:	9b04      	ldr	r3, [sp, #16]
   195ce:	930a      	str	r3, [sp, #40]	@ 0x28
    Transaction.ui32PauseCondition        = ui32PauseCondition;
   195d0:	9b02      	ldr	r3, [sp, #8]
   195d2:	930b      	str	r3, [sp, #44]	@ 0x2c
    Transaction.ui32StatusSetClr          = ui32StatusSetClr;
   195d4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
   195d6:	930c      	str	r3, [sp, #48]	@ 0x30

    //
    // Execute the transction over MSPI.
    //
    if (am_hal_mspi_nonblocking_transfer(pDisplay->pMspiHandle,
   195d8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
   195da:	6858      	ldr	r0, [r3, #4]
   195dc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   195de:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
   195e2:	d201      	bcs.n	195e8 <am_devices_mspi_rm69330_nonblocking_write_endian+0x84>
   195e4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
   195e6:	e000      	b.n	195ea <am_devices_mspi_rm69330_nonblocking_write_endian+0x86>
   195e8:	2200      	movs	r2, #0
   195ea:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   195ec:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
   195f0:	d201      	bcs.n	195f6 <am_devices_mspi_rm69330_nonblocking_write_endian+0x92>
   195f2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   195f4:	e000      	b.n	195f8 <am_devices_mspi_rm69330_nonblocking_write_endian+0x94>
   195f6:	2300      	movs	r3, #0
   195f8:	a907      	add	r1, sp, #28
   195fa:	9300      	str	r3, [sp, #0]
   195fc:	4613      	mov	r3, r2
   195fe:	2201      	movs	r2, #1
   19600:	f00b fd94 	bl	2512c <am_hal_mspi_nonblocking_transfer>
   19604:	4603      	mov	r3, r0
   19606:	2b00      	cmp	r3, #0
   19608:	d001      	beq.n	1960e <am_devices_mspi_rm69330_nonblocking_write_endian+0xaa>
                                       &Transaction,
                                       AM_HAL_MSPI_TRANS_DMA,
                                       (ui32BytesLeft <= AM_HAL_MSPI_MAX_TRANS_SIZE) ? pfnCallback : NULL,
                                       (ui32BytesLeft <= AM_HAL_MSPI_MAX_TRANS_SIZE) ? pCallbackCtxt : NULL))
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   1960a:	2301      	movs	r3, #1
   1960c:	e03f      	b.n	1968e <am_devices_mspi_rm69330_nonblocking_write_endian+0x12a>
    }

    Transaction.ui32DeviceAddress         = AM_DEVICES_MSPI_RM69330_MEM_WRITE_CONTINUE << 8;
   1960e:	f44f 5370 	mov.w	r3, #15360	@ 0x3c00
   19612:	9309      	str	r3, [sp, #36]	@ 0x24
    for (int32_t block = 0; block < (ui32NumBytes / AM_HAL_MSPI_MAX_TRANS_SIZE); block++)
   19614:	2300      	movs	r3, #0
   19616:	930e      	str	r3, [sp, #56]	@ 0x38
   19618:	e02c      	b.n	19674 <am_devices_mspi_rm69330_nonblocking_write_endian+0x110>
    {
        Transaction.ui32SRAMAddress += Transaction.ui32TransferCount;
   1961a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
   1961c:	9b08      	ldr	r3, [sp, #32]
   1961e:	4413      	add	r3, r2
   19620:	930a      	str	r3, [sp, #40]	@ 0x28
        ui32BytesLeft -=  Transaction.ui32TransferCount;
   19622:	9b08      	ldr	r3, [sp, #32]
   19624:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
   19626:	1ad3      	subs	r3, r2, r3
   19628:	930f      	str	r3, [sp, #60]	@ 0x3c
        Transaction.ui32TransferCount         = (ui32BytesLeft <= AM_HAL_MSPI_MAX_TRANS_SIZE) ? ui32BytesLeft : AM_HAL_MSPI_MAX_TRANS_SIZE;
   1962a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1962c:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
   19630:	4293      	cmp	r3, r2
   19632:	bf28      	it	cs
   19634:	4613      	movcs	r3, r2
   19636:	9308      	str	r3, [sp, #32]
        if (am_hal_mspi_nonblocking_transfer(pDisplay->pMspiHandle,
   19638:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
   1963a:	6858      	ldr	r0, [r3, #4]
   1963c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1963e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
   19642:	d201      	bcs.n	19648 <am_devices_mspi_rm69330_nonblocking_write_endian+0xe4>
   19644:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
   19646:	e000      	b.n	1964a <am_devices_mspi_rm69330_nonblocking_write_endian+0xe6>
   19648:	2200      	movs	r2, #0
   1964a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1964c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
   19650:	d201      	bcs.n	19656 <am_devices_mspi_rm69330_nonblocking_write_endian+0xf2>
   19652:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   19654:	e000      	b.n	19658 <am_devices_mspi_rm69330_nonblocking_write_endian+0xf4>
   19656:	2300      	movs	r3, #0
   19658:	a907      	add	r1, sp, #28
   1965a:	9300      	str	r3, [sp, #0]
   1965c:	4613      	mov	r3, r2
   1965e:	2201      	movs	r2, #1
   19660:	f00b fd64 	bl	2512c <am_hal_mspi_nonblocking_transfer>
   19664:	4603      	mov	r3, r0
   19666:	2b00      	cmp	r3, #0
   19668:	d001      	beq.n	1966e <am_devices_mspi_rm69330_nonblocking_write_endian+0x10a>
                                             &Transaction,
                                             AM_HAL_MSPI_TRANS_DMA,
                                             (ui32BytesLeft <= AM_HAL_MSPI_MAX_TRANS_SIZE) ? pfnCallback : NULL,
                                             (ui32BytesLeft <= AM_HAL_MSPI_MAX_TRANS_SIZE) ? pCallbackCtxt : NULL))
        {
            return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   1966a:	2301      	movs	r3, #1
   1966c:	e00f      	b.n	1968e <am_devices_mspi_rm69330_nonblocking_write_endian+0x12a>
    for (int32_t block = 0; block < (ui32NumBytes / AM_HAL_MSPI_MAX_TRANS_SIZE); block++)
   1966e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   19670:	3301      	adds	r3, #1
   19672:	930e      	str	r3, [sp, #56]	@ 0x38
   19674:	9a03      	ldr	r2, [sp, #12]
   19676:	f240 1301 	movw	r3, #257	@ 0x101
   1967a:	fba3 1302 	umull	r1, r3, r3, r2
   1967e:	1ad2      	subs	r2, r2, r3
   19680:	0852      	lsrs	r2, r2, #1
   19682:	4413      	add	r3, r2
   19684:	0dda      	lsrs	r2, r3, #23
   19686:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   19688:	429a      	cmp	r2, r3
   1968a:	d8c6      	bhi.n	1961a <am_devices_mspi_rm69330_nonblocking_write_endian+0xb6>
        }
    }

    return AM_DEVICES_MSPI_RM69330_STATUS_SUCCESS;
   1968c:	2300      	movs	r3, #0
}
   1968e:	4618      	mov	r0, r3
   19690:	b011      	add	sp, #68	@ 0x44
   19692:	f85d fb04 	ldr.w	pc, [sp], #4

00019696 <am_devices_mspi_rm69330_read_id>:
//
//
//*****************************************************************************
uint32_t
am_devices_mspi_rm69330_read_id(void *pHandle, uint32_t *pdata)
{
   19696:	b500      	push	{lr}
   19698:	b083      	sub	sp, #12
   1969a:	9001      	str	r0, [sp, #4]
   1969c:	9100      	str	r1, [sp, #0]
    if (am_devices_mspi_rm69330_command_read(pHandle, AM_DEVICES_MSPI_RM69330_READ_ID, pdata, 3))
   1969e:	2303      	movs	r3, #3
   196a0:	9a00      	ldr	r2, [sp, #0]
   196a2:	2104      	movs	r1, #4
   196a4:	9801      	ldr	r0, [sp, #4]
   196a6:	f7ff fccf 	bl	19048 <am_devices_mspi_rm69330_command_read>
   196aa:	4603      	mov	r3, r0
   196ac:	2b00      	cmp	r3, #0
   196ae:	d001      	beq.n	196b4 <am_devices_mspi_rm69330_read_id+0x1e>
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   196b0:	2301      	movs	r3, #1
   196b2:	e000      	b.n	196b6 <am_devices_mspi_rm69330_read_id+0x20>
    }
    return AM_DEVICES_MSPI_RM69330_STATUS_SUCCESS;
   196b4:	2300      	movs	r3, #0
}
   196b6:	4618      	mov	r0, r3
   196b8:	b003      	add	sp, #12
   196ba:	f85d fb04 	ldr.w	pc, [sp], #4
	...

000196c0 <am_devices_mspi_rm69330_set_transfer_window>:
am_devices_mspi_rm69330_set_transfer_window(void *pHandle,
                                            uint16_t ui16ColumnStart,
                                            uint16_t ui16ColumnSize,
                                            uint16_t ui16RowStart,
                                            uint16_t ui16RowSize)
{
   196c0:	b500      	push	{lr}
   196c2:	b087      	sub	sp, #28
   196c4:	9003      	str	r0, [sp, #12]
   196c6:	4608      	mov	r0, r1
   196c8:	4611      	mov	r1, r2
   196ca:	461a      	mov	r2, r3
   196cc:	4603      	mov	r3, r0
   196ce:	f8ad 300a 	strh.w	r3, [sp, #10]
   196d2:	460b      	mov	r3, r1
   196d4:	f8ad 3008 	strh.w	r3, [sp, #8]
   196d8:	4613      	mov	r3, r2
   196da:	f8ad 3006 	strh.w	r3, [sp, #6]
    uint8_t ui8CMDBuf[4];

    g_sGraphic_conf.ui16RowOffset       = ui16RowStart;
   196de:	4a3e      	ldr	r2, [pc, #248]	@ (197d8 <am_devices_mspi_rm69330_set_transfer_window+0x118>)
   196e0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   196e4:	8113      	strh	r3, [r2, #8]
    g_sGraphic_conf.ui16ColumnOffset    = ui16ColumnStart;
   196e6:	4a3c      	ldr	r2, [pc, #240]	@ (197d8 <am_devices_mspi_rm69330_set_transfer_window+0x118>)
   196e8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   196ec:	8153      	strh	r3, [r2, #10]
    g_sGraphic_conf.ui16Height          = ui16RowSize;
   196ee:	4a3a      	ldr	r2, [pc, #232]	@ (197d8 <am_devices_mspi_rm69330_set_transfer_window+0x118>)
   196f0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
   196f4:	8093      	strh	r3, [r2, #4]
    g_sGraphic_conf.ui16Width           = ui16ColumnSize;
   196f6:	4a38      	ldr	r2, [pc, #224]	@ (197d8 <am_devices_mspi_rm69330_set_transfer_window+0x118>)
   196f8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   196fc:	80d3      	strh	r3, [r2, #6]

    ui8CMDBuf[0] = (ui16ColumnStart / 256);
   196fe:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   19702:	0a1b      	lsrs	r3, r3, #8
   19704:	b29b      	uxth	r3, r3
   19706:	b2db      	uxtb	r3, r3
   19708:	f88d 3014 	strb.w	r3, [sp, #20]
    ui8CMDBuf[1] = (ui16ColumnStart % 256);
   1970c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   19710:	b2db      	uxtb	r3, r3
   19712:	f88d 3015 	strb.w	r3, [sp, #21]
    ui8CMDBuf[2] = (ui16ColumnStart + ui16ColumnSize - 1) / 256;
   19716:	f8bd 200a 	ldrh.w	r2, [sp, #10]
   1971a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   1971e:	4413      	add	r3, r2
   19720:	3b01      	subs	r3, #1
   19722:	2b00      	cmp	r3, #0
   19724:	da00      	bge.n	19728 <am_devices_mspi_rm69330_set_transfer_window+0x68>
   19726:	33ff      	adds	r3, #255	@ 0xff
   19728:	121b      	asrs	r3, r3, #8
   1972a:	b2db      	uxtb	r3, r3
   1972c:	f88d 3016 	strb.w	r3, [sp, #22]
    ui8CMDBuf[3] = (ui16ColumnStart + ui16ColumnSize - 1) % 256;
   19730:	f8bd 200a 	ldrh.w	r2, [sp, #10]
   19734:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   19738:	4413      	add	r3, r2
   1973a:	3b01      	subs	r3, #1
   1973c:	425a      	negs	r2, r3
   1973e:	b2db      	uxtb	r3, r3
   19740:	b2d2      	uxtb	r2, r2
   19742:	bf58      	it	pl
   19744:	4253      	negpl	r3, r2
   19746:	b2db      	uxtb	r3, r3
   19748:	f88d 3017 	strb.w	r3, [sp, #23]
    if ( am_devices_mspi_rm69330_command_write(pHandle, AM_DEVICES_MSPI_RM69330_SET_COLUMN, ui8CMDBuf, 4) )
   1974c:	aa05      	add	r2, sp, #20
   1974e:	2304      	movs	r3, #4
   19750:	212a      	movs	r1, #42	@ 0x2a
   19752:	9803      	ldr	r0, [sp, #12]
   19754:	f7ff fbfa 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   19758:	4603      	mov	r3, r0
   1975a:	2b00      	cmp	r3, #0
   1975c:	d001      	beq.n	19762 <am_devices_mspi_rm69330_set_transfer_window+0xa2>
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   1975e:	2301      	movs	r3, #1
   19760:	e035      	b.n	197ce <am_devices_mspi_rm69330_set_transfer_window+0x10e>
    }

    am_util_delay_us(10);
   19762:	200a      	movs	r0, #10
   19764:	f002 f8f3 	bl	1b94e <am_util_delay_us>

    ui8CMDBuf[0] = (ui16RowStart / 256);
   19768:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   1976c:	0a1b      	lsrs	r3, r3, #8
   1976e:	b29b      	uxth	r3, r3
   19770:	b2db      	uxtb	r3, r3
   19772:	f88d 3014 	strb.w	r3, [sp, #20]
    ui8CMDBuf[1] = (ui16RowStart % 256);
   19776:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   1977a:	b2db      	uxtb	r3, r3
   1977c:	f88d 3015 	strb.w	r3, [sp, #21]
    ui8CMDBuf[2] = (ui16RowStart + ui16RowSize -1) / 256;
   19780:	f8bd 2006 	ldrh.w	r2, [sp, #6]
   19784:	f8bd 3020 	ldrh.w	r3, [sp, #32]
   19788:	4413      	add	r3, r2
   1978a:	3b01      	subs	r3, #1
   1978c:	2b00      	cmp	r3, #0
   1978e:	da00      	bge.n	19792 <am_devices_mspi_rm69330_set_transfer_window+0xd2>
   19790:	33ff      	adds	r3, #255	@ 0xff
   19792:	121b      	asrs	r3, r3, #8
   19794:	b2db      	uxtb	r3, r3
   19796:	f88d 3016 	strb.w	r3, [sp, #22]
    ui8CMDBuf[3] = (ui16RowStart + ui16RowSize -1) % 256;
   1979a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
   1979e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
   197a2:	4413      	add	r3, r2
   197a4:	3b01      	subs	r3, #1
   197a6:	425a      	negs	r2, r3
   197a8:	b2db      	uxtb	r3, r3
   197aa:	b2d2      	uxtb	r2, r2
   197ac:	bf58      	it	pl
   197ae:	4253      	negpl	r3, r2
   197b0:	b2db      	uxtb	r3, r3
   197b2:	f88d 3017 	strb.w	r3, [sp, #23]
    if ( am_devices_mspi_rm69330_command_write(pHandle, AM_DEVICES_MSPI_RM69330_SET_ROW, ui8CMDBuf, 4) )
   197b6:	aa05      	add	r2, sp, #20
   197b8:	2304      	movs	r3, #4
   197ba:	212b      	movs	r1, #43	@ 0x2b
   197bc:	9803      	ldr	r0, [sp, #12]
   197be:	f7ff fbc5 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   197c2:	4603      	mov	r3, r0
   197c4:	2b00      	cmp	r3, #0
   197c6:	d001      	beq.n	197cc <am_devices_mspi_rm69330_set_transfer_window+0x10c>
    {
        return AM_DEVICES_MSPI_RM69330_STATUS_ERROR;
   197c8:	2301      	movs	r3, #1
   197ca:	e000      	b.n	197ce <am_devices_mspi_rm69330_set_transfer_window+0x10e>
    }
    return AM_DEVICES_MSPI_RM69330_STATUS_SUCCESS;
   197cc:	2300      	movs	r3, #0
}
   197ce:	4618      	mov	r0, r3
   197d0:	b007      	add	sp, #28
   197d2:	f85d fb04 	ldr.w	pc, [sp], #4
   197d6:	bf00      	nop
   197d8:	10001000 	.word	0x10001000

000197dc <am_devices_rm69330_set_parameters>:
am_devices_rm69330_set_parameters(uint16_t ui16ColumnStart,
                                  uint16_t ui16ColumnSize,
                                  uint16_t ui16RowStart,
                                  uint16_t ui16RowSize,
                                  uint8_t ui8Format)
{
   197dc:	b410      	push	{r4}
   197de:	b083      	sub	sp, #12
   197e0:	4604      	mov	r4, r0
   197e2:	4608      	mov	r0, r1
   197e4:	4611      	mov	r1, r2
   197e6:	461a      	mov	r2, r3
   197e8:	4623      	mov	r3, r4
   197ea:	f8ad 3006 	strh.w	r3, [sp, #6]
   197ee:	4603      	mov	r3, r0
   197f0:	f8ad 3004 	strh.w	r3, [sp, #4]
   197f4:	460b      	mov	r3, r1
   197f6:	f8ad 3002 	strh.w	r3, [sp, #2]
   197fa:	4613      	mov	r3, r2
   197fc:	f8ad 3000 	strh.w	r3, [sp]
    g_sGraphic_conf.ui8ColorMode        = ui8Format;
   19800:	4a0c      	ldr	r2, [pc, #48]	@ (19834 <am_devices_rm69330_set_parameters+0x58>)
   19802:	f89d 3010 	ldrb.w	r3, [sp, #16]
   19806:	7053      	strb	r3, [r2, #1]
    g_sGraphic_conf.ui16Height          = ui16RowSize;
   19808:	4a0a      	ldr	r2, [pc, #40]	@ (19834 <am_devices_rm69330_set_parameters+0x58>)
   1980a:	f8bd 3000 	ldrh.w	r3, [sp]
   1980e:	8093      	strh	r3, [r2, #4]
    g_sGraphic_conf.ui16Width           = ui16ColumnSize;
   19810:	4a08      	ldr	r2, [pc, #32]	@ (19834 <am_devices_rm69330_set_parameters+0x58>)
   19812:	f8bd 3004 	ldrh.w	r3, [sp, #4]
   19816:	80d3      	strh	r3, [r2, #6]
    g_sGraphic_conf.ui16RowOffset       = ui16RowStart;
   19818:	4a06      	ldr	r2, [pc, #24]	@ (19834 <am_devices_rm69330_set_parameters+0x58>)
   1981a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
   1981e:	8113      	strh	r3, [r2, #8]
    g_sGraphic_conf.ui16ColumnOffset    = ui16ColumnStart;
   19820:	4a04      	ldr	r2, [pc, #16]	@ (19834 <am_devices_rm69330_set_parameters+0x58>)
   19822:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   19826:	8153      	strh	r3, [r2, #10]
}
   19828:	bf00      	nop
   1982a:	b003      	add	sp, #12
   1982c:	f85d 4b04 	ldr.w	r4, [sp], #4
   19830:	4770      	bx	lr
   19832:	bf00      	nop
   19834:	10001000 	.word	0x10001000

00019838 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
   19838:	b082      	sub	sp, #8
   1983a:	4603      	mov	r3, r0
   1983c:	f88d 3007 	strb.w	r3, [sp, #7]
  if ((int32_t)(IRQn) >= 0)
   19840:	f99d 3007 	ldrsb.w	r3, [sp, #7]
   19844:	2b00      	cmp	r3, #0
   19846:	db0c      	blt.n	19862 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   19848:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1984c:	f003 021f 	and.w	r2, r3, #31
   19850:	4905      	ldr	r1, [pc, #20]	@ (19868 <__NVIC_EnableIRQ+0x30>)
   19852:	f99d 3007 	ldrsb.w	r3, [sp, #7]
   19856:	095b      	lsrs	r3, r3, #5
   19858:	2001      	movs	r0, #1
   1985a:	fa00 f202 	lsl.w	r2, r0, r2
   1985e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
   19862:	bf00      	nop
   19864:	b002      	add	sp, #8
   19866:	4770      	bx	lr
   19868:	e000e100 	.word	0xe000e100

0001986c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
   1986c:	b082      	sub	sp, #8
   1986e:	4603      	mov	r3, r0
   19870:	9100      	str	r1, [sp, #0]
   19872:	f88d 3007 	strb.w	r3, [sp, #7]
  if ((int32_t)(IRQn) >= 0)
   19876:	f99d 3007 	ldrsb.w	r3, [sp, #7]
   1987a:	2b00      	cmp	r3, #0
   1987c:	db0a      	blt.n	19894 <__NVIC_SetPriority+0x28>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   1987e:	9b00      	ldr	r3, [sp, #0]
   19880:	b2da      	uxtb	r2, r3
   19882:	490c      	ldr	r1, [pc, #48]	@ (198b4 <__NVIC_SetPriority+0x48>)
   19884:	f99d 3007 	ldrsb.w	r3, [sp, #7]
   19888:	0152      	lsls	r2, r2, #5
   1988a:	b2d2      	uxtb	r2, r2
   1988c:	440b      	add	r3, r1
   1988e:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
   19892:	e00b      	b.n	198ac <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   19894:	9b00      	ldr	r3, [sp, #0]
   19896:	b2da      	uxtb	r2, r3
   19898:	4907      	ldr	r1, [pc, #28]	@ (198b8 <__NVIC_SetPriority+0x4c>)
   1989a:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1989e:	f003 030f 	and.w	r3, r3, #15
   198a2:	3b04      	subs	r3, #4
   198a4:	0152      	lsls	r2, r2, #5
   198a6:	b2d2      	uxtb	r2, r2
   198a8:	440b      	add	r3, r1
   198aa:	761a      	strb	r2, [r3, #24]
}
   198ac:	bf00      	nop
   198ae:	b002      	add	sp, #8
   198b0:	4770      	bx	lr
   198b2:	bf00      	nop
   198b4:	e000e100 	.word	0xe000e100
   198b8:	e000ed00 	.word	0xe000ed00

000198bc <setColor>:

bool last_uni_char = false;
unsigned char last_char;

void setColor(uint32_t x, uint32_t y, uint16_t color)
{
   198bc:	b088      	sub	sp, #32
   198be:	9003      	str	r0, [sp, #12]
   198c0:	9102      	str	r1, [sp, #8]
   198c2:	4613      	mov	r3, r2
   198c4:	f8ad 3006 	strh.w	r3, [sp, #6]

    int height = 490;
   198c8:	f44f 73f5 	mov.w	r3, #490	@ 0x1ea
   198cc:	9307      	str	r3, [sp, #28]
    int width = 192;
   198ce:	23c0      	movs	r3, #192	@ 0xc0
   198d0:	9306      	str	r3, [sp, #24]
    if (y >= height)
   198d2:	9b07      	ldr	r3, [sp, #28]
   198d4:	9a02      	ldr	r2, [sp, #8]
   198d6:	429a      	cmp	r2, r3
   198d8:	d21c      	bcs.n	19914 <setColor+0x58>
        return;
    if (x >= width)
   198da:	9b06      	ldr	r3, [sp, #24]
   198dc:	9a03      	ldr	r2, [sp, #12]
   198de:	429a      	cmp	r2, r3
   198e0:	d21a      	bcs.n	19918 <setColor+0x5c>
        return;
    int position_buffer = ((y * width) + x);
   198e2:	9b06      	ldr	r3, [sp, #24]
   198e4:	9a02      	ldr	r2, [sp, #8]
   198e6:	fb03 f202 	mul.w	r2, r3, r2
   198ea:	9b03      	ldr	r3, [sp, #12]
   198ec:	4413      	add	r3, r2
   198ee:	9305      	str	r3, [sp, #20]
    display_buffer[position_buffer * 2] = color >> 8;
   198f0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   198f4:	0a1b      	lsrs	r3, r3, #8
   198f6:	b29a      	uxth	r2, r3
   198f8:	9b05      	ldr	r3, [sp, #20]
   198fa:	005b      	lsls	r3, r3, #1
   198fc:	b2d1      	uxtb	r1, r2
   198fe:	4a08      	ldr	r2, [pc, #32]	@ (19920 <setColor+0x64>)
   19900:	54d1      	strb	r1, [r2, r3]
    display_buffer[(position_buffer * 2) + 1] = color & 0xff;
   19902:	9b05      	ldr	r3, [sp, #20]
   19904:	005b      	lsls	r3, r3, #1
   19906:	3301      	adds	r3, #1
   19908:	f8bd 2006 	ldrh.w	r2, [sp, #6]
   1990c:	b2d1      	uxtb	r1, r2
   1990e:	4a04      	ldr	r2, [pc, #16]	@ (19920 <setColor+0x64>)
   19910:	54d1      	strb	r1, [r2, r3]
   19912:	e002      	b.n	1991a <setColor+0x5e>
        return;
   19914:	bf00      	nop
   19916:	e000      	b.n	1991a <setColor+0x5e>
        return;
   19918:	bf00      	nop
}
   1991a:	b008      	add	sp, #32
   1991c:	4770      	bx	lr
   1991e:	bf00      	nop
   19920:	100017e4 	.word	0x100017e4

00019924 <displayRect>:

void displayRect(uint32_t x, uint32_t y, uint32_t w, uint32_t h, uint16_t color)
{
   19924:	b500      	push	{lr}
   19926:	b087      	sub	sp, #28
   19928:	9003      	str	r0, [sp, #12]
   1992a:	9102      	str	r1, [sp, #8]
   1992c:	9201      	str	r2, [sp, #4]
   1992e:	9300      	str	r3, [sp, #0]
    for (int w_t = 0; w_t < w; w_t++)
   19930:	2300      	movs	r3, #0
   19932:	9305      	str	r3, [sp, #20]
   19934:	e017      	b.n	19966 <displayRect+0x42>
    {
        for (int h_t = 0; h_t < h; h_t++)
   19936:	2300      	movs	r3, #0
   19938:	9304      	str	r3, [sp, #16]
   1993a:	e00d      	b.n	19958 <displayRect+0x34>
        {
            setColor(x + w_t, y + h_t, color);
   1993c:	9a05      	ldr	r2, [sp, #20]
   1993e:	9b03      	ldr	r3, [sp, #12]
   19940:	18d0      	adds	r0, r2, r3
   19942:	9a04      	ldr	r2, [sp, #16]
   19944:	9b02      	ldr	r3, [sp, #8]
   19946:	4413      	add	r3, r2
   19948:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1994c:	4619      	mov	r1, r3
   1994e:	f7ff ffb5 	bl	198bc <setColor>
        for (int h_t = 0; h_t < h; h_t++)
   19952:	9b04      	ldr	r3, [sp, #16]
   19954:	3301      	adds	r3, #1
   19956:	9304      	str	r3, [sp, #16]
   19958:	9b04      	ldr	r3, [sp, #16]
   1995a:	9a00      	ldr	r2, [sp, #0]
   1995c:	429a      	cmp	r2, r3
   1995e:	d8ed      	bhi.n	1993c <displayRect+0x18>
    for (int w_t = 0; w_t < w; w_t++)
   19960:	9b05      	ldr	r3, [sp, #20]
   19962:	3301      	adds	r3, #1
   19964:	9305      	str	r3, [sp, #20]
   19966:	9b05      	ldr	r3, [sp, #20]
   19968:	9a01      	ldr	r2, [sp, #4]
   1996a:	429a      	cmp	r2, r3
   1996c:	d8e3      	bhi.n	19936 <displayRect+0x12>
        }
    }
    // setAddrWindowDisplay(x, y, w, h);
    // displayColor(color);
}
   1996e:	bf00      	nop
   19970:	bf00      	nop
   19972:	b007      	add	sp, #28
   19974:	f85d fb04 	ldr.w	pc, [sp], #4

00019978 <drawChar>:

bool drawChar(uint32_t x, uint32_t y, unsigned char c, uint16_t color, uint16_t bg, uint32_t size)
{
   19978:	b500      	push	{lr}
   1997a:	b089      	sub	sp, #36	@ 0x24
   1997c:	9005      	str	r0, [sp, #20]
   1997e:	9104      	str	r1, [sp, #16]
   19980:	4611      	mov	r1, r2
   19982:	461a      	mov	r2, r3
   19984:	460b      	mov	r3, r1
   19986:	f88d 300f 	strb.w	r3, [sp, #15]
   1998a:	4613      	mov	r3, r2
   1998c:	f8ad 300c 	strh.w	r3, [sp, #12]
    if (c < 32)
   19990:	f89d 300f 	ldrb.w	r3, [sp, #15]
   19994:	2b1f      	cmp	r3, #31
   19996:	d801      	bhi.n	1999c <drawChar+0x24>
        return false;
   19998:	2300      	movs	r3, #0
   1999a:	e122      	b.n	19be2 <drawChar+0x26a>
    if (c >= 127)
   1999c:	f89d 300f 	ldrb.w	r3, [sp, #15]
   199a0:	2b7e      	cmp	r3, #126	@ 0x7e
   199a2:	f240 80a1 	bls.w	19ae8 <drawChar+0x170>
    {
        if (!last_uni_char)
   199a6:	4b91      	ldr	r3, [pc, #580]	@ (19bec <drawChar+0x274>)
   199a8:	781b      	ldrb	r3, [r3, #0]
   199aa:	f083 0301 	eor.w	r3, r3, #1
   199ae:	b2db      	uxtb	r3, r3
   199b0:	2b00      	cmp	r3, #0
   199b2:	d008      	beq.n	199c6 <drawChar+0x4e>
        {
            last_char = c;
   199b4:	4a8e      	ldr	r2, [pc, #568]	@ (19bf0 <drawChar+0x278>)
   199b6:	f89d 300f 	ldrb.w	r3, [sp, #15]
   199ba:	7013      	strb	r3, [r2, #0]
            last_uni_char = true;
   199bc:	4b8b      	ldr	r3, [pc, #556]	@ (19bec <drawChar+0x274>)
   199be:	2201      	movs	r2, #1
   199c0:	701a      	strb	r2, [r3, #0]
            return false;
   199c2:	2300      	movs	r3, #0
   199c4:	e10d      	b.n	19be2 <drawChar+0x26a>
        }
        else
        {
            last_uni_char = false;
   199c6:	4b89      	ldr	r3, [pc, #548]	@ (19bec <drawChar+0x274>)
   199c8:	2200      	movs	r2, #0
   199ca:	701a      	strb	r2, [r3, #0]
            if (last_char == 0xC3)
   199cc:	4b88      	ldr	r3, [pc, #544]	@ (19bf0 <drawChar+0x278>)
   199ce:	781b      	ldrb	r3, [r3, #0]
   199d0:	2bc3      	cmp	r3, #195	@ 0xc3
   199d2:	d17b      	bne.n	19acc <drawChar+0x154>
            {
                switch (c)
   199d4:	f89d 300f 	ldrb.w	r3, [sp, #15]
   199d8:	2b84      	cmp	r3, #132	@ 0x84
   199da:	d059      	beq.n	19a90 <drawChar+0x118>
   199dc:	2b84      	cmp	r3, #132	@ 0x84
   199de:	db73      	blt.n	19ac8 <drawChar+0x150>
   199e0:	2bbc      	cmp	r3, #188	@ 0xbc
   199e2:	dc71      	bgt.n	19ac8 <drawChar+0x150>
   199e4:	2b96      	cmp	r3, #150	@ 0x96
   199e6:	db6f      	blt.n	19ac8 <drawChar+0x150>
   199e8:	3b96      	subs	r3, #150	@ 0x96
   199ea:	2b26      	cmp	r3, #38	@ 0x26
   199ec:	d86c      	bhi.n	19ac8 <drawChar+0x150>
   199ee:	a201      	add	r2, pc, #4	@ (adr r2, 199f4 <drawChar+0x7c>)
   199f0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   199f4:	00019aa1 	.word	0x00019aa1
   199f8:	00019ac9 	.word	0x00019ac9
   199fc:	00019ac9 	.word	0x00019ac9
   19a00:	00019ac9 	.word	0x00019ac9
   19a04:	00019ac9 	.word	0x00019ac9
   19a08:	00019ac9 	.word	0x00019ac9
   19a0c:	00019ab1 	.word	0x00019ab1
   19a10:	00019ac9 	.word	0x00019ac9
   19a14:	00019ac9 	.word	0x00019ac9
   19a18:	00019ac1 	.word	0x00019ac1
   19a1c:	00019ac9 	.word	0x00019ac9
   19a20:	00019ac9 	.word	0x00019ac9
   19a24:	00019ac9 	.word	0x00019ac9
   19a28:	00019ac9 	.word	0x00019ac9
   19a2c:	00019a99 	.word	0x00019a99
   19a30:	00019ac9 	.word	0x00019ac9
   19a34:	00019ac9 	.word	0x00019ac9
   19a38:	00019ac9 	.word	0x00019ac9
   19a3c:	00019ac9 	.word	0x00019ac9
   19a40:	00019ac9 	.word	0x00019ac9
   19a44:	00019ac9 	.word	0x00019ac9
   19a48:	00019ac9 	.word	0x00019ac9
   19a4c:	00019ac9 	.word	0x00019ac9
   19a50:	00019ac9 	.word	0x00019ac9
   19a54:	00019ac9 	.word	0x00019ac9
   19a58:	00019ac9 	.word	0x00019ac9
   19a5c:	00019ac9 	.word	0x00019ac9
   19a60:	00019ac9 	.word	0x00019ac9
   19a64:	00019ac9 	.word	0x00019ac9
   19a68:	00019ac9 	.word	0x00019ac9
   19a6c:	00019ac9 	.word	0x00019ac9
   19a70:	00019ac9 	.word	0x00019ac9
   19a74:	00019aa9 	.word	0x00019aa9
   19a78:	00019ac9 	.word	0x00019ac9
   19a7c:	00019ac9 	.word	0x00019ac9
   19a80:	00019ac9 	.word	0x00019ac9
   19a84:	00019ac9 	.word	0x00019ac9
   19a88:	00019ac9 	.word	0x00019ac9
   19a8c:	00019ab9 	.word	0x00019ab9
                {
                case 0x84: // Ä
                    c = 0x8E;
   19a90:	238e      	movs	r3, #142	@ 0x8e
   19a92:	f88d 300f 	strb.w	r3, [sp, #15]
                    break;
   19a96:	e027      	b.n	19ae8 <drawChar+0x170>
                case 0xA4: // ä
                    c = 0x84;
   19a98:	2384      	movs	r3, #132	@ 0x84
   19a9a:	f88d 300f 	strb.w	r3, [sp, #15]
                    break;
   19a9e:	e023      	b.n	19ae8 <drawChar+0x170>
                case 0x96: // Ö
                    c = 0x99;
   19aa0:	2399      	movs	r3, #153	@ 0x99
   19aa2:	f88d 300f 	strb.w	r3, [sp, #15]
                    break;
   19aa6:	e01f      	b.n	19ae8 <drawChar+0x170>
                case 0xB6: // ö
                    c = 0x94;
   19aa8:	2394      	movs	r3, #148	@ 0x94
   19aaa:	f88d 300f 	strb.w	r3, [sp, #15]
                    break;
   19aae:	e01b      	b.n	19ae8 <drawChar+0x170>
                case 0x9C: // Ü
                    c = 0x9A;
   19ab0:	239a      	movs	r3, #154	@ 0x9a
   19ab2:	f88d 300f 	strb.w	r3, [sp, #15]
                    break;
   19ab6:	e017      	b.n	19ae8 <drawChar+0x170>
                case 0xBC: // ü
                    c = 0x81;
   19ab8:	2381      	movs	r3, #129	@ 0x81
   19aba:	f88d 300f 	strb.w	r3, [sp, #15]
                    break;
   19abe:	e013      	b.n	19ae8 <drawChar+0x170>
                case 0x9F: // ß
                    c = 0x98;
   19ac0:	2398      	movs	r3, #152	@ 0x98
   19ac2:	f88d 300f 	strb.w	r3, [sp, #15]
                    break;
   19ac6:	e00f      	b.n	19ae8 <drawChar+0x170>
                default:
                    return false;
   19ac8:	2300      	movs	r3, #0
   19aca:	e08a      	b.n	19be2 <drawChar+0x26a>
                }
            }
            else if (last_char == 0xF0 && c == 0x9F)
   19acc:	4b48      	ldr	r3, [pc, #288]	@ (19bf0 <drawChar+0x278>)
   19ace:	781b      	ldrb	r3, [r3, #0]
   19ad0:	2bf0      	cmp	r3, #240	@ 0xf0
   19ad2:	d107      	bne.n	19ae4 <drawChar+0x16c>
   19ad4:	f89d 300f 	ldrb.w	r3, [sp, #15]
   19ad8:	2b9f      	cmp	r3, #159	@ 0x9f
   19ada:	d103      	bne.n	19ae4 <drawChar+0x16c>
                c = 0x02;
   19adc:	2302      	movs	r3, #2
   19ade:	f88d 300f 	strb.w	r3, [sp, #15]
   19ae2:	e001      	b.n	19ae8 <drawChar+0x170>
            else
                return false;
   19ae4:	2300      	movs	r3, #0
   19ae6:	e07c      	b.n	19be2 <drawChar+0x26a>
        }
    }
    for (int8_t i = 0; i < 5; i++)
   19ae8:	2300      	movs	r3, #0
   19aea:	f88d 301f 	strb.w	r3, [sp, #31]
   19aee:	e05d      	b.n	19bac <drawChar+0x234>
    {
        uint8_t line = font57[c * 5 + i];
   19af0:	f89d 200f 	ldrb.w	r2, [sp, #15]
   19af4:	4613      	mov	r3, r2
   19af6:	009b      	lsls	r3, r3, #2
   19af8:	441a      	add	r2, r3
   19afa:	f99d 301f 	ldrsb.w	r3, [sp, #31]
   19afe:	4413      	add	r3, r2
   19b00:	4a3c      	ldr	r2, [pc, #240]	@ (19bf4 <drawChar+0x27c>)
   19b02:	5cd3      	ldrb	r3, [r2, r3]
   19b04:	f88d 301e 	strb.w	r3, [sp, #30]
        for (int8_t j = 0; j < 8; j++, line >>= 1)
   19b08:	2300      	movs	r3, #0
   19b0a:	f88d 301d 	strb.w	r3, [sp, #29]
   19b0e:	e042      	b.n	19b96 <drawChar+0x21e>
        {
            if (line & 1)
   19b10:	f89d 301e 	ldrb.w	r3, [sp, #30]
   19b14:	f003 0301 	and.w	r3, r3, #1
   19b18:	2b00      	cmp	r3, #0
   19b1a:	d015      	beq.n	19b48 <drawChar+0x1d0>
            {
                displayRect(x + i * size, y + j * size, size, size, color);
   19b1c:	f99d 301f 	ldrsb.w	r3, [sp, #31]
   19b20:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19b22:	fb03 f202 	mul.w	r2, r3, r2
   19b26:	9b05      	ldr	r3, [sp, #20]
   19b28:	18d0      	adds	r0, r2, r3
   19b2a:	f99d 301d 	ldrsb.w	r3, [sp, #29]
   19b2e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19b30:	fb03 f202 	mul.w	r2, r3, r2
   19b34:	9b04      	ldr	r3, [sp, #16]
   19b36:	18d1      	adds	r1, r2, r3
   19b38:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   19b3c:	9300      	str	r3, [sp, #0]
   19b3e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19b40:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19b42:	f7ff feef 	bl	19924 <displayRect>
   19b46:	e01a      	b.n	19b7e <drawChar+0x206>
            }
            else if (bg != color)
   19b48:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
   19b4c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   19b50:	429a      	cmp	r2, r3
   19b52:	d014      	beq.n	19b7e <drawChar+0x206>
            {
                displayRect(x + i * size, y + j * size, size, size, bg);
   19b54:	f99d 301f 	ldrsb.w	r3, [sp, #31]
   19b58:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19b5a:	fb03 f202 	mul.w	r2, r3, r2
   19b5e:	9b05      	ldr	r3, [sp, #20]
   19b60:	18d0      	adds	r0, r2, r3
   19b62:	f99d 301d 	ldrsb.w	r3, [sp, #29]
   19b66:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19b68:	fb03 f202 	mul.w	r2, r3, r2
   19b6c:	9b04      	ldr	r3, [sp, #16]
   19b6e:	18d1      	adds	r1, r2, r3
   19b70:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
   19b74:	9300      	str	r3, [sp, #0]
   19b76:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19b78:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19b7a:	f7ff fed3 	bl	19924 <displayRect>
        for (int8_t j = 0; j < 8; j++, line >>= 1)
   19b7e:	f99d 301d 	ldrsb.w	r3, [sp, #29]
   19b82:	b2db      	uxtb	r3, r3
   19b84:	3301      	adds	r3, #1
   19b86:	b2db      	uxtb	r3, r3
   19b88:	f88d 301d 	strb.w	r3, [sp, #29]
   19b8c:	f89d 301e 	ldrb.w	r3, [sp, #30]
   19b90:	085b      	lsrs	r3, r3, #1
   19b92:	f88d 301e 	strb.w	r3, [sp, #30]
   19b96:	f99d 301d 	ldrsb.w	r3, [sp, #29]
   19b9a:	2b07      	cmp	r3, #7
   19b9c:	ddb8      	ble.n	19b10 <drawChar+0x198>
    for (int8_t i = 0; i < 5; i++)
   19b9e:	f99d 301f 	ldrsb.w	r3, [sp, #31]
   19ba2:	b2db      	uxtb	r3, r3
   19ba4:	3301      	adds	r3, #1
   19ba6:	b2db      	uxtb	r3, r3
   19ba8:	f88d 301f 	strb.w	r3, [sp, #31]
   19bac:	f99d 301f 	ldrsb.w	r3, [sp, #31]
   19bb0:	2b04      	cmp	r3, #4
   19bb2:	dd9d      	ble.n	19af0 <drawChar+0x178>
            }
        }
    }
    if (bg != color)
   19bb4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
   19bb8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   19bbc:	429a      	cmp	r2, r3
   19bbe:	d00f      	beq.n	19be0 <drawChar+0x268>
    {
        displayRect(x + 5 * size, y, size, 8 * size, bg);
   19bc0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19bc2:	4613      	mov	r3, r2
   19bc4:	009b      	lsls	r3, r3, #2
   19bc6:	441a      	add	r2, r3
   19bc8:	9b05      	ldr	r3, [sp, #20]
   19bca:	18d0      	adds	r0, r2, r3
   19bcc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19bce:	00da      	lsls	r2, r3, #3
   19bd0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
   19bd4:	9300      	str	r3, [sp, #0]
   19bd6:	4613      	mov	r3, r2
   19bd8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19bda:	9904      	ldr	r1, [sp, #16]
   19bdc:	f7ff fea2 	bl	19924 <displayRect>
    }
    return true;
   19be0:	2301      	movs	r3, #1
}
   19be2:	4618      	mov	r0, r3
   19be4:	b009      	add	sp, #36	@ 0x24
   19be6:	f85d fb04 	ldr.w	pc, [sp], #4
   19bea:	bf00      	nop
   19bec:	1002f6e4 	.word	0x1002f6e4
   19bf0:	1002f6e5 	.word	0x1002f6e5
   19bf4:	00027c74 	.word	0x00027c74

00019bf8 <my_strlen>:

size_t my_strlen(const char *str)
{
   19bf8:	b084      	sub	sp, #16
   19bfa:	9001      	str	r0, [sp, #4]
    size_t i;

    for (i = 0; str[i]; i++)
   19bfc:	2300      	movs	r3, #0
   19bfe:	9303      	str	r3, [sp, #12]
   19c00:	e002      	b.n	19c08 <my_strlen+0x10>
   19c02:	9b03      	ldr	r3, [sp, #12]
   19c04:	3301      	adds	r3, #1
   19c06:	9303      	str	r3, [sp, #12]
   19c08:	9a01      	ldr	r2, [sp, #4]
   19c0a:	9b03      	ldr	r3, [sp, #12]
   19c0c:	4413      	add	r3, r2
   19c0e:	781b      	ldrb	r3, [r3, #0]
   19c10:	2b00      	cmp	r3, #0
   19c12:	d1f6      	bne.n	19c02 <my_strlen+0xa>
        ;
    return i;
   19c14:	9b03      	ldr	r3, [sp, #12]
}
   19c16:	4618      	mov	r0, r3
   19c18:	b004      	add	sp, #16
   19c1a:	4770      	bx	lr

00019c1c <displayPrintln>:

void displayPrintln(uint32_t x, uint32_t y, char text[], uint16_t color, uint16_t bg, uint32_t size)
{
   19c1c:	b500      	push	{lr}
   19c1e:	b089      	sub	sp, #36	@ 0x24
   19c20:	9005      	str	r0, [sp, #20]
   19c22:	9104      	str	r1, [sp, #16]
   19c24:	9203      	str	r2, [sp, #12]
   19c26:	f8ad 300a 	strh.w	r3, [sp, #10]
    int tempPosition = 0;
   19c2a:	2300      	movs	r3, #0
   19c2c:	9307      	str	r3, [sp, #28]
    for (unsigned int f = 0; f < my_strlen(text); f++)
   19c2e:	2300      	movs	r3, #0
   19c30:	9306      	str	r3, [sp, #24]
   19c32:	e045      	b.n	19cc0 <displayPrintln+0xa4>
    {
        if (x + (tempPosition * 6 * size) >= 192 - (6 * size))
   19c34:	9b07      	ldr	r3, [sp, #28]
   19c36:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19c38:	fb03 f202 	mul.w	r2, r3, r2
   19c3c:	4613      	mov	r3, r2
   19c3e:	005b      	lsls	r3, r3, #1
   19c40:	4413      	add	r3, r2
   19c42:	005b      	lsls	r3, r3, #1
   19c44:	461a      	mov	r2, r3
   19c46:	9b05      	ldr	r3, [sp, #20]
   19c48:	18d1      	adds	r1, r2, r3
   19c4a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19c4c:	4613      	mov	r3, r2
   19c4e:	005b      	lsls	r3, r3, #1
   19c50:	4413      	add	r3, r2
   19c52:	005b      	lsls	r3, r3, #1
   19c54:	f1c3 03c0 	rsb	r3, r3, #192	@ 0xc0
   19c58:	4299      	cmp	r1, r3
   19c5a:	d30e      	bcc.n	19c7a <displayPrintln+0x5e>
        {
            x = -(tempPosition * 6 * size);
   19c5c:	9b07      	ldr	r3, [sp, #28]
   19c5e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19c60:	fb03 f202 	mul.w	r2, r3, r2
   19c64:	4613      	mov	r3, r2
   19c66:	005b      	lsls	r3, r3, #1
   19c68:	4413      	add	r3, r2
   19c6a:	005b      	lsls	r3, r3, #1
   19c6c:	425b      	negs	r3, r3
   19c6e:	9305      	str	r3, [sp, #20]
            y += (8 * size);
   19c70:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19c72:	00db      	lsls	r3, r3, #3
   19c74:	9a04      	ldr	r2, [sp, #16]
   19c76:	4413      	add	r3, r2
   19c78:	9304      	str	r3, [sp, #16]
        }
        if (drawChar(x + (tempPosition * 6 * size), y, text[f], color, bg, size))
   19c7a:	9b07      	ldr	r3, [sp, #28]
   19c7c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   19c7e:	fb03 f202 	mul.w	r2, r3, r2
   19c82:	4613      	mov	r3, r2
   19c84:	005b      	lsls	r3, r3, #1
   19c86:	4413      	add	r3, r2
   19c88:	005b      	lsls	r3, r3, #1
   19c8a:	461a      	mov	r2, r3
   19c8c:	9b05      	ldr	r3, [sp, #20]
   19c8e:	18d0      	adds	r0, r2, r3
   19c90:	9a03      	ldr	r2, [sp, #12]
   19c92:	9b06      	ldr	r3, [sp, #24]
   19c94:	4413      	add	r3, r2
   19c96:	781a      	ldrb	r2, [r3, #0]
   19c98:	f8bd 100a 	ldrh.w	r1, [sp, #10]
   19c9c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19c9e:	9301      	str	r3, [sp, #4]
   19ca0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
   19ca4:	9300      	str	r3, [sp, #0]
   19ca6:	460b      	mov	r3, r1
   19ca8:	9904      	ldr	r1, [sp, #16]
   19caa:	f7ff fe65 	bl	19978 <drawChar>
   19cae:	4603      	mov	r3, r0
   19cb0:	2b00      	cmp	r3, #0
   19cb2:	d002      	beq.n	19cba <displayPrintln+0x9e>
        {
            tempPosition++;
   19cb4:	9b07      	ldr	r3, [sp, #28]
   19cb6:	3301      	adds	r3, #1
   19cb8:	9307      	str	r3, [sp, #28]
    for (unsigned int f = 0; f < my_strlen(text); f++)
   19cba:	9b06      	ldr	r3, [sp, #24]
   19cbc:	3301      	adds	r3, #1
   19cbe:	9306      	str	r3, [sp, #24]
   19cc0:	9803      	ldr	r0, [sp, #12]
   19cc2:	f7ff ff99 	bl	19bf8 <my_strlen>
   19cc6:	4602      	mov	r2, r0
   19cc8:	9b06      	ldr	r3, [sp, #24]
   19cca:	4293      	cmp	r3, r2
   19ccc:	d3b2      	bcc.n	19c34 <displayPrintln+0x18>
        }
    }
}
   19cce:	bf00      	nop
   19cd0:	bf00      	nop
   19cd2:	b009      	add	sp, #36	@ 0x24
   19cd4:	f85d fb04 	ldr.w	pc, [sp], #4

00019cd8 <display_transfer_complete>:
        .fnXferDoneCb = NULL,
        .pArgXferDone = NULL,
};

static void display_transfer_complete(void *pCallbackCtxt, uint32_t transactionStatus)
{
   19cd8:	b500      	push	{lr}
   19cda:	b083      	sub	sp, #12
   19cdc:	9001      	str	r0, [sp, #4]
   19cde:	9100      	str	r1, [sp, #0]
    sDispTransfer.bXferBusy = false;
   19ce0:	4b0e      	ldr	r3, [pc, #56]	@ (19d1c <display_transfer_complete+0x44>)
   19ce2:	2200      	movs	r2, #0
   19ce4:	705a      	strb	r2, [r3, #1]

    if (sDispTransfer.fnXferDoneCb)
   19ce6:	4b0d      	ldr	r3, [pc, #52]	@ (19d1c <display_transfer_complete+0x44>)
   19ce8:	68db      	ldr	r3, [r3, #12]
   19cea:	2b00      	cmp	r3, #0
   19cec:	d00e      	beq.n	19d0c <display_transfer_complete+0x34>
    {
        if (sDispTransfer.total_stripe == 0)
   19cee:	4b0b      	ldr	r3, [pc, #44]	@ (19d1c <display_transfer_complete+0x44>)
   19cf0:	695b      	ldr	r3, [r3, #20]
   19cf2:	2b00      	cmp	r3, #0
   19cf4:	d106      	bne.n	19d04 <display_transfer_complete+0x2c>
        {
            sDispTransfer.fnXferDoneCb(sDispTransfer.pArgXferDone);
   19cf6:	4b09      	ldr	r3, [pc, #36]	@ (19d1c <display_transfer_complete+0x44>)
   19cf8:	68db      	ldr	r3, [r3, #12]
   19cfa:	4a08      	ldr	r2, [pc, #32]	@ (19d1c <display_transfer_complete+0x44>)
   19cfc:	6912      	ldr	r2, [r2, #16]
   19cfe:	4610      	mov	r0, r2
   19d00:	4798      	blx	r3
   19d02:	e003      	b.n	19d0c <display_transfer_complete+0x34>
        }
        else
        {
            sDispTransfer.fnXferDoneCb(pCallbackCtxt);
   19d04:	4b05      	ldr	r3, [pc, #20]	@ (19d1c <display_transfer_complete+0x44>)
   19d06:	68db      	ldr	r3, [r3, #12]
   19d08:	9801      	ldr	r0, [sp, #4]
   19d0a:	4798      	blx	r3
        }
    }

    bXferDone = true;
   19d0c:	4b04      	ldr	r3, [pc, #16]	@ (19d20 <display_transfer_complete+0x48>)
   19d0e:	2201      	movs	r2, #1
   19d10:	701a      	strb	r2, [r3, #0]
}
   19d12:	bf00      	nop
   19d14:	b003      	add	sp, #12
   19d16:	f85d fb04 	ldr.w	pc, [sp], #4
   19d1a:	bf00      	nop
   19d1c:	1002fa5c 	.word	0x1002fa5c
   19d20:	1002f6e6 	.word	0x1002f6e6

00019d24 <am_devices_display_launch_transfer>:

static uint32_t am_devices_display_launch_transfer()
{
   19d24:	b500      	push	{lr}
   19d26:	b08d      	sub	sp, #52	@ 0x34
    uint32_t ui32Status = AM_DEVICES_DISPLAY_STATUS_SUCCESS;
   19d28:	2300      	movs	r3, #0
   19d2a:	930b      	str	r3, [sp, #44]	@ 0x2c

    uint32_t parts = (sDispTransfer.total_stripe == 0) ? 1 : sDispTransfer.total_stripe;
   19d2c:	4b2c      	ldr	r3, [pc, #176]	@ (19de0 <am_devices_display_launch_transfer+0xbc>)
   19d2e:	695b      	ldr	r3, [r3, #20]
   19d30:	2b00      	cmp	r3, #0
   19d32:	d002      	beq.n	19d3a <am_devices_display_launch_transfer+0x16>
   19d34:	4b2a      	ldr	r3, [pc, #168]	@ (19de0 <am_devices_display_launch_transfer+0xbc>)
   19d36:	695b      	ldr	r3, [r3, #20]
   19d38:	e000      	b.n	19d3c <am_devices_display_launch_transfer+0x18>
   19d3a:	2301      	movs	r3, #1
   19d3c:	9309      	str	r3, [sp, #36]	@ 0x24
    uint32_t pixel_size = (sDispUserSetting.eColorMode == COLOR_FORMAT_RGB565) ? 2 : 3;
   19d3e:	4b29      	ldr	r3, [pc, #164]	@ (19de4 <am_devices_display_launch_transfer+0xc0>)
   19d40:	7a1b      	ldrb	r3, [r3, #8]
   19d42:	2b00      	cmp	r3, #0
   19d44:	d101      	bne.n	19d4a <am_devices_display_launch_transfer+0x26>
   19d46:	2302      	movs	r3, #2
   19d48:	e000      	b.n	19d4c <am_devices_display_launch_transfer+0x28>
   19d4a:	2303      	movs	r3, #3
   19d4c:	9308      	str	r3, [sp, #32]
    uint32_t part_size = sDispTransfer.ui16XferResX *
   19d4e:	4b24      	ldr	r3, [pc, #144]	@ (19de0 <am_devices_display_launch_transfer+0xbc>)
   19d50:	885b      	ldrh	r3, [r3, #2]
   19d52:	461a      	mov	r2, r3
                         (sDispTransfer.ui16XferResY / parts) *
   19d54:	4b22      	ldr	r3, [pc, #136]	@ (19de0 <am_devices_display_launch_transfer+0xbc>)
   19d56:	889b      	ldrh	r3, [r3, #4]
   19d58:	4619      	mov	r1, r3
   19d5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   19d5c:	fbb1 f3f3 	udiv	r3, r1, r3
    uint32_t part_size = sDispTransfer.ui16XferResX *
   19d60:	fb03 f202 	mul.w	r2, r3, r2
   19d64:	9b08      	ldr	r3, [sp, #32]
   19d66:	fb02 f303 	mul.w	r3, r2, r3
   19d6a:	9307      	str	r3, [sp, #28]
                         pixel_size;

    for (uint32_t i = 0; i < parts; i++)
   19d6c:	2300      	movs	r3, #0
   19d6e:	930a      	str	r3, [sp, #40]	@ 0x28
   19d70:	e02a      	b.n	19dc8 <am_devices_display_launch_transfer+0xa4>
    {
        uint8_t *ptr = (uint8_t *)sDispTransfer.ui32XferAddress + i * part_size;
   19d72:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   19d74:	9a07      	ldr	r2, [sp, #28]
   19d76:	fb03 f202 	mul.w	r2, r3, r2
   19d7a:	4b19      	ldr	r3, [pc, #100]	@ (19de0 <am_devices_display_launch_transfer+0xbc>)
   19d7c:	689b      	ldr	r3, [r3, #8]
   19d7e:	4413      	add	r3, r2
   19d80:	9306      	str	r3, [sp, #24]

        ui32Status = am_devices_mspi_rm69330_nonblocking_write_endian(
   19d82:	4b19      	ldr	r3, [pc, #100]	@ (19de8 <am_devices_display_launch_transfer+0xc4>)
   19d84:	6818      	ldr	r0, [r3, #0]
   19d86:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   19d88:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
   19d8a:	2a00      	cmp	r2, #0
   19d8c:	bf14      	ite	ne
   19d8e:	2201      	movne	r2, #1
   19d90:	2200      	moveq	r2, #0
   19d92:	b2d2      	uxtb	r2, r2
            0,
            0,
            (am_hal_mspi_callback_t)display_transfer_complete,
            (void *)i,
            (i != 0),
            sDispUserSetting.eColorMode == COLOR_FORMAT_RGB565);
   19d94:	4913      	ldr	r1, [pc, #76]	@ (19de4 <am_devices_display_launch_transfer+0xc0>)
   19d96:	7a09      	ldrb	r1, [r1, #8]
        ui32Status = am_devices_mspi_rm69330_nonblocking_write_endian(
   19d98:	2900      	cmp	r1, #0
   19d9a:	bf0c      	ite	eq
   19d9c:	2101      	moveq	r1, #1
   19d9e:	2100      	movne	r1, #0
   19da0:	b2c9      	uxtb	r1, r1
   19da2:	9104      	str	r1, [sp, #16]
   19da4:	9203      	str	r2, [sp, #12]
   19da6:	9302      	str	r3, [sp, #8]
   19da8:	4b10      	ldr	r3, [pc, #64]	@ (19dec <am_devices_display_launch_transfer+0xc8>)
   19daa:	9301      	str	r3, [sp, #4]
   19dac:	2300      	movs	r3, #0
   19dae:	9300      	str	r3, [sp, #0]
   19db0:	2300      	movs	r3, #0
   19db2:	9a07      	ldr	r2, [sp, #28]
   19db4:	9906      	ldr	r1, [sp, #24]
   19db6:	f7ff fbd5 	bl	19564 <am_devices_mspi_rm69330_nonblocking_write_endian>
   19dba:	900b      	str	r0, [sp, #44]	@ 0x2c

        if (ui32Status)
   19dbc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   19dbe:	2b00      	cmp	r3, #0
   19dc0:	d107      	bne.n	19dd2 <am_devices_display_launch_transfer+0xae>
    for (uint32_t i = 0; i < parts; i++)
   19dc2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   19dc4:	3301      	adds	r3, #1
   19dc6:	930a      	str	r3, [sp, #40]	@ 0x28
   19dc8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
   19dca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   19dcc:	429a      	cmp	r2, r3
   19dce:	d3d0      	bcc.n	19d72 <am_devices_display_launch_transfer+0x4e>
   19dd0:	e000      	b.n	19dd4 <am_devices_display_launch_transfer+0xb0>
        {
            break;
   19dd2:	bf00      	nop
        }
    }
    return ui32Status;
   19dd4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
}
   19dd6:	4618      	mov	r0, r3
   19dd8:	b00d      	add	sp, #52	@ 0x34
   19dda:	f85d fb04 	ldr.w	pc, [sp], #4
   19dde:	bf00      	nop
   19de0:	1002fa5c 	.word	0x1002fa5c
   19de4:	1002fa50 	.word	0x1002fa50
   19de8:	1002f6ec 	.word	0x1002f6ec
   19dec:	00019cd9 	.word	0x00019cd9

00019df0 <am_devices_display_set_scanline_recommended_parameter>:

uint32_t am_devices_display_set_scanline_recommended_parameter(uint8_t TETimesPerFrame)
{
   19df0:	b500      	push	{lr}
   19df2:	b083      	sub	sp, #12
   19df4:	4603      	mov	r3, r0
   19df6:	f88d 3007 	strb.w	r3, [sp, #7]
    return am_devices_mspi_rm69330_set_scanline_recommended_parameter(g_DisplayHandle, TETimesPerFrame);
   19dfa:	4b06      	ldr	r3, [pc, #24]	@ (19e14 <am_devices_display_set_scanline_recommended_parameter+0x24>)
   19dfc:	681b      	ldr	r3, [r3, #0]
   19dfe:	f89d 2007 	ldrb.w	r2, [sp, #7]
   19e02:	4611      	mov	r1, r2
   19e04:	4618      	mov	r0, r3
   19e06:	f7ff f9d5 	bl	191b4 <am_devices_mspi_rm69330_set_scanline_recommended_parameter>
   19e0a:	4603      	mov	r3, r0
}
   19e0c:	4618      	mov	r0, r3
   19e0e:	b003      	add	sp, #12
   19e10:	f85d fb04 	ldr.w	pc, [sp], #4
   19e14:	1002f6ec 	.word	0x1002f6ec

00019e18 <am_devices_display_te_handler>:

static void am_devices_display_te_handler(void *pvUnused, uint32_t ui32Unused)
{
   19e18:	b500      	push	{lr}
   19e1a:	b083      	sub	sp, #12
   19e1c:	9001      	str	r0, [sp, #4]
   19e1e:	9100      	str	r1, [sp, #0]
    //
    // Transfer the frame when TE interrupt arrives.
    //
    if (sDispTransfer.bXferPending)
   19e20:	4b06      	ldr	r3, [pc, #24]	@ (19e3c <am_devices_display_te_handler+0x24>)
   19e22:	781b      	ldrb	r3, [r3, #0]
   19e24:	b2db      	uxtb	r3, r3
   19e26:	2b00      	cmp	r3, #0
   19e28:	d004      	beq.n	19e34 <am_devices_display_te_handler+0x1c>
    {
        am_devices_display_launch_transfer();
   19e2a:	f7ff ff7b 	bl	19d24 <am_devices_display_launch_transfer>
        sDispTransfer.bXferPending = false;
   19e2e:	4b03      	ldr	r3, [pc, #12]	@ (19e3c <am_devices_display_te_handler+0x24>)
   19e30:	2200      	movs	r2, #0
   19e32:	701a      	strb	r2, [r3, #0]
    }
}
   19e34:	bf00      	nop
   19e36:	b003      	add	sp, #12
   19e38:	f85d fb04 	ldr.w	pc, [sp], #4
   19e3c:	1002fa5c 	.word	0x1002fa5c

00019e40 <am_bsp_disp_pins_enable1>:

void am_bsp_disp_pins_enable1(void)
{
   19e40:	b508      	push	{r3, lr}
    am_hal_gpio_pinconfig(86, g_AM_GPIO_MSPI1_CE0);
   19e42:	4b12      	ldr	r3, [pc, #72]	@ (19e8c <am_bsp_disp_pins_enable1+0x4c>)
   19e44:	6819      	ldr	r1, [r3, #0]
   19e46:	2056      	movs	r0, #86	@ 0x56
   19e48:	f00c f9d0 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(37, g_AM_GPIO_MSPI1_D0);
   19e4c:	4b10      	ldr	r3, [pc, #64]	@ (19e90 <am_bsp_disp_pins_enable1+0x50>)
   19e4e:	6819      	ldr	r1, [r3, #0]
   19e50:	2025      	movs	r0, #37	@ 0x25
   19e52:	f00c f9cb 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(38, g_AM_GPIO_MSPI1_D1);
   19e56:	4b0f      	ldr	r3, [pc, #60]	@ (19e94 <am_bsp_disp_pins_enable1+0x54>)
   19e58:	6819      	ldr	r1, [r3, #0]
   19e5a:	2026      	movs	r0, #38	@ 0x26
   19e5c:	f00c f9c6 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(39, g_AM_GPIO_MSPI1_D2);
   19e60:	4b0d      	ldr	r3, [pc, #52]	@ (19e98 <am_bsp_disp_pins_enable1+0x58>)
   19e62:	6819      	ldr	r1, [r3, #0]
   19e64:	2027      	movs	r0, #39	@ 0x27
   19e66:	f00c f9c1 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(40, g_AM_GPIO_MSPI1_D3);
   19e6a:	4b0c      	ldr	r3, [pc, #48]	@ (19e9c <am_bsp_disp_pins_enable1+0x5c>)
   19e6c:	6819      	ldr	r1, [r3, #0]
   19e6e:	2028      	movs	r0, #40	@ 0x28
   19e70:	f00c f9bc 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(45, g_AM_GPIO_MSPI1_SCK);
   19e74:	4b0a      	ldr	r3, [pc, #40]	@ (19ea0 <am_bsp_disp_pins_enable1+0x60>)
   19e76:	6819      	ldr	r1, [r3, #0]
   19e78:	202d      	movs	r0, #45	@ 0x2d
   19e7a:	f00c f9b7 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(43, g_AM_GPIO_TE_43);
   19e7e:	4b09      	ldr	r3, [pc, #36]	@ (19ea4 <am_bsp_disp_pins_enable1+0x64>)
   19e80:	6819      	ldr	r1, [r3, #0]
   19e82:	202b      	movs	r0, #43	@ 0x2b
   19e84:	f00c f9b2 	bl	261ec <am_hal_gpio_pinconfig>
}
   19e88:	bf00      	nop
   19e8a:	bd08      	pop	{r3, pc}
   19e8c:	100010a8 	.word	0x100010a8
   19e90:	10001098 	.word	0x10001098
   19e94:	1000109c 	.word	0x1000109c
   19e98:	100010a0 	.word	0x100010a0
   19e9c:	100010a4 	.word	0x100010a4
   19ea0:	100010ac 	.word	0x100010ac
   19ea4:	10001094 	.word	0x10001094

00019ea8 <am_bsp_disp_pins_disable1>:

void am_bsp_disp_pins_disable1(void)
{
   19ea8:	b508      	push	{r3, lr}
    am_hal_gpio_pinconfig(86, gpio_default);
   19eaa:	4b12      	ldr	r3, [pc, #72]	@ (19ef4 <am_bsp_disp_pins_disable1+0x4c>)
   19eac:	6819      	ldr	r1, [r3, #0]
   19eae:	2056      	movs	r0, #86	@ 0x56
   19eb0:	f00c f99c 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(37, gpio_default);
   19eb4:	4b0f      	ldr	r3, [pc, #60]	@ (19ef4 <am_bsp_disp_pins_disable1+0x4c>)
   19eb6:	6819      	ldr	r1, [r3, #0]
   19eb8:	2025      	movs	r0, #37	@ 0x25
   19eba:	f00c f997 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(38, gpio_default);
   19ebe:	4b0d      	ldr	r3, [pc, #52]	@ (19ef4 <am_bsp_disp_pins_disable1+0x4c>)
   19ec0:	6819      	ldr	r1, [r3, #0]
   19ec2:	2026      	movs	r0, #38	@ 0x26
   19ec4:	f00c f992 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(39, gpio_default);
   19ec8:	4b0a      	ldr	r3, [pc, #40]	@ (19ef4 <am_bsp_disp_pins_disable1+0x4c>)
   19eca:	6819      	ldr	r1, [r3, #0]
   19ecc:	2027      	movs	r0, #39	@ 0x27
   19ece:	f00c f98d 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(40, gpio_default);
   19ed2:	4b08      	ldr	r3, [pc, #32]	@ (19ef4 <am_bsp_disp_pins_disable1+0x4c>)
   19ed4:	6819      	ldr	r1, [r3, #0]
   19ed6:	2028      	movs	r0, #40	@ 0x28
   19ed8:	f00c f988 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(45, gpio_default);
   19edc:	4b05      	ldr	r3, [pc, #20]	@ (19ef4 <am_bsp_disp_pins_disable1+0x4c>)
   19ede:	6819      	ldr	r1, [r3, #0]
   19ee0:	202d      	movs	r0, #45	@ 0x2d
   19ee2:	f00c f983 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(43, gpio_default);
   19ee6:	4b03      	ldr	r3, [pc, #12]	@ (19ef4 <am_bsp_disp_pins_disable1+0x4c>)
   19ee8:	6819      	ldr	r1, [r3, #0]
   19eea:	202b      	movs	r0, #43	@ 0x2b
   19eec:	f00c f97e 	bl	261ec <am_hal_gpio_pinconfig>
}
   19ef0:	bf00      	nop
   19ef2:	bd08      	pop	{r3, pc}
   19ef4:	10001090 	.word	0x10001090

00019ef8 <am_devices_display_init>:

int32_t am_devices_display_init(uint16_t ui16ResX, uint16_t ui16ResY, am_devices_disp_color_e eColorMode, bool bEnableTE)
{
   19ef8:	b510      	push	{r4, lr}
   19efa:	b08c      	sub	sp, #48	@ 0x30
   19efc:	4604      	mov	r4, r0
   19efe:	4608      	mov	r0, r1
   19f00:	4611      	mov	r1, r2
   19f02:	461a      	mov	r2, r3
   19f04:	4623      	mov	r3, r4
   19f06:	f8ad 300e 	strh.w	r3, [sp, #14]
   19f0a:	4603      	mov	r3, r0
   19f0c:	f8ad 300c 	strh.w	r3, [sp, #12]
   19f10:	460b      	mov	r3, r1
   19f12:	f88d 300b 	strb.w	r3, [sp, #11]
   19f16:	4613      	mov	r3, r2
   19f18:	f88d 300a 	strb.w	r3, [sp, #10]

    //
    // store the user setting
    //
    if (ui16ResX < g_sDispCfg.ui16ResX)
   19f1c:	4b66      	ldr	r3, [pc, #408]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   19f1e:	88db      	ldrh	r3, [r3, #6]
   19f20:	f8bd 200e 	ldrh.w	r2, [sp, #14]
   19f24:	429a      	cmp	r2, r3
   19f26:	d204      	bcs.n	19f32 <am_devices_display_init+0x3a>
    {
        sDispUserSetting.ui16ResX = ui16ResX;
   19f28:	4a64      	ldr	r2, [pc, #400]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19f2a:	f8bd 300e 	ldrh.w	r3, [sp, #14]
   19f2e:	8013      	strh	r3, [r2, #0]
   19f30:	e003      	b.n	19f3a <am_devices_display_init+0x42>
    }
    else
    {
        sDispUserSetting.ui16ResX = g_sDispCfg.ui16ResX;
   19f32:	4b61      	ldr	r3, [pc, #388]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   19f34:	88da      	ldrh	r2, [r3, #6]
   19f36:	4b61      	ldr	r3, [pc, #388]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19f38:	801a      	strh	r2, [r3, #0]
    }

    sDispUserSetting.ui16MinX = ((g_sDispCfg.ui16ResX - sDispUserSetting.ui16ResX) >> 2) << 1;
   19f3a:	4b5f      	ldr	r3, [pc, #380]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   19f3c:	88db      	ldrh	r3, [r3, #6]
   19f3e:	461a      	mov	r2, r3
   19f40:	4b5e      	ldr	r3, [pc, #376]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19f42:	881b      	ldrh	r3, [r3, #0]
   19f44:	1ad3      	subs	r3, r2, r3
   19f46:	109b      	asrs	r3, r3, #2
   19f48:	b29b      	uxth	r3, r3
   19f4a:	005b      	lsls	r3, r3, #1
   19f4c:	b29a      	uxth	r2, r3
   19f4e:	4b5b      	ldr	r3, [pc, #364]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19f50:	809a      	strh	r2, [r3, #4]

    if (ui16ResY < g_sDispCfg.ui16ResY)
   19f52:	4b59      	ldr	r3, [pc, #356]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   19f54:	891b      	ldrh	r3, [r3, #8]
   19f56:	f8bd 200c 	ldrh.w	r2, [sp, #12]
   19f5a:	429a      	cmp	r2, r3
   19f5c:	d204      	bcs.n	19f68 <am_devices_display_init+0x70>
    {
        sDispUserSetting.ui16ResY = ui16ResY;
   19f5e:	4a57      	ldr	r2, [pc, #348]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19f60:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   19f64:	8053      	strh	r3, [r2, #2]
   19f66:	e003      	b.n	19f70 <am_devices_display_init+0x78>
    }
    else
    {
        sDispUserSetting.ui16ResY = g_sDispCfg.ui16ResY;
   19f68:	4b53      	ldr	r3, [pc, #332]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   19f6a:	891a      	ldrh	r2, [r3, #8]
   19f6c:	4b53      	ldr	r3, [pc, #332]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19f6e:	805a      	strh	r2, [r3, #2]
    }

    sDispUserSetting.ui16MinY = ((g_sDispCfg.ui16ResY - sDispUserSetting.ui16ResY) >> 2) << 1;
   19f70:	4b51      	ldr	r3, [pc, #324]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   19f72:	891b      	ldrh	r3, [r3, #8]
   19f74:	461a      	mov	r2, r3
   19f76:	4b51      	ldr	r3, [pc, #324]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19f78:	885b      	ldrh	r3, [r3, #2]
   19f7a:	1ad3      	subs	r3, r2, r3
   19f7c:	109b      	asrs	r3, r3, #2
   19f7e:	b29b      	uxth	r3, r3
   19f80:	005b      	lsls	r3, r3, #1
   19f82:	b29a      	uxth	r2, r3
   19f84:	4b4d      	ldr	r3, [pc, #308]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19f86:	80da      	strh	r2, [r3, #6]

    sDispUserSetting.eColorMode = eColorMode;
   19f88:	4a4c      	ldr	r2, [pc, #304]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19f8a:	f89d 300b 	ldrb.w	r3, [sp, #11]
   19f8e:	7213      	strb	r3, [r2, #8]
    sDispTransfer.bXferPending = false;
   19f90:	4b4b      	ldr	r3, [pc, #300]	@ (1a0c0 <am_devices_display_init+0x1c8>)
   19f92:	2200      	movs	r2, #0
   19f94:	701a      	strb	r2, [r3, #0]
    sDispTransfer.bXferBusy = false;
   19f96:	4b4a      	ldr	r3, [pc, #296]	@ (1a0c0 <am_devices_display_init+0x1c8>)
   19f98:	2200      	movs	r2, #0
   19f9a:	705a      	strb	r2, [r3, #1]

    //
    // check if the user would like to use TE
    //
    if (!bEnableTE)
   19f9c:	f89d 300a 	ldrb.w	r3, [sp, #10]
   19fa0:	f083 0301 	eor.w	r3, r3, #1
   19fa4:	b2db      	uxtb	r3, r3
   19fa6:	2b00      	cmp	r3, #0
   19fa8:	d002      	beq.n	19fb0 <am_devices_display_init+0xb8>
    {
        g_sDispCfg.eTEType = DISP_TE_DISABLE;
   19faa:	4b43      	ldr	r3, [pc, #268]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   19fac:	2200      	movs	r2, #0
   19fae:	751a      	strb	r2, [r3, #20]
    }

    //
    // Initialize the display specific GPIO signals.
    //
    am_bsp_disp_pins_enable1();
   19fb0:	f7ff ff46 	bl	19e40 <am_bsp_disp_pins_enable1>

    uint32_t ui32Status = 0;
   19fb4:	2300      	movs	r3, #0
   19fb6:	930a      	str	r3, [sp, #40]	@ 0x28
    uint8_t ui8Format = AM_DEVICES_MSPI_RM69330_COLOR_MODE_16BIT;
   19fb8:	2375      	movs	r3, #117	@ 0x75
   19fba:	f88d 302f 	strb.w	r3, [sp, #47]	@ 0x2f

    if (sDispUserSetting.eColorMode == COLOR_FORMAT_RGB888)
   19fbe:	4b3f      	ldr	r3, [pc, #252]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19fc0:	7a1b      	ldrb	r3, [r3, #8]
   19fc2:	2b01      	cmp	r3, #1
   19fc4:	d103      	bne.n	19fce <am_devices_display_init+0xd6>
    {
        ui8Format = AM_DEVICES_MSPI_RM69330_COLOR_MODE_24BIT;
   19fc6:	2377      	movs	r3, #119	@ 0x77
   19fc8:	f88d 302f 	strb.w	r3, [sp, #47]	@ 0x2f
   19fcc:	e006      	b.n	19fdc <am_devices_display_init+0xe4>
    }
    else if (sDispUserSetting.eColorMode == COLOR_FORMAT_RGB565)
   19fce:	4b3b      	ldr	r3, [pc, #236]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19fd0:	7a1b      	ldrb	r3, [r3, #8]
   19fd2:	2b00      	cmp	r3, #0
   19fd4:	d102      	bne.n	19fdc <am_devices_display_init+0xe4>
    {
        ui8Format = AM_DEVICES_MSPI_RM69330_COLOR_MODE_16BIT;
   19fd6:	2375      	movs	r3, #117	@ 0x75
   19fd8:	f88d 302f 	strb.w	r3, [sp, #47]	@ 0x2f
    }
    //
    // modified default row, column and format parameters.
    //
    am_devices_rm69330_set_parameters(sDispUserSetting.ui16MinX + g_sDispCfg.ui16Offset,
   19fdc:	4b37      	ldr	r3, [pc, #220]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19fde:	889a      	ldrh	r2, [r3, #4]
   19fe0:	4b35      	ldr	r3, [pc, #212]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   19fe2:	885b      	ldrh	r3, [r3, #2]
   19fe4:	4413      	add	r3, r2
   19fe6:	b298      	uxth	r0, r3
   19fe8:	4b34      	ldr	r3, [pc, #208]	@ (1a0bc <am_devices_display_init+0x1c4>)
   19fea:	88da      	ldrh	r2, [r3, #6]
   19fec:	f8bd 400c 	ldrh.w	r4, [sp, #12]
   19ff0:	f8bd 100e 	ldrh.w	r1, [sp, #14]
   19ff4:	f89d 302f 	ldrb.w	r3, [sp, #47]	@ 0x2f
   19ff8:	9300      	str	r3, [sp, #0]
   19ffa:	4623      	mov	r3, r4
   19ffc:	f7ff fbee 	bl	197dc <am_devices_rm69330_set_parameters>
                                      ui16ResY,
                                      ui8Format);
    //
    // Initialize the MSPI Display
    //
    QuadDisplayMSPICfg.eClockFreq = g_sDispCfg.eClockFreq;
   1a000:	4b2d      	ldr	r3, [pc, #180]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   1a002:	7c5a      	ldrb	r2, [r3, #17]
   1a004:	4b2f      	ldr	r3, [pc, #188]	@ (1a0c4 <am_devices_display_init+0x1cc>)
   1a006:	705a      	strb	r2, [r3, #1]
    QuadDisplayMSPICfg.eDeviceConfig = g_sDispCfg.eDeviceConfig;
   1a008:	4b2b      	ldr	r3, [pc, #172]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   1a00a:	7c1a      	ldrb	r2, [r3, #16]
   1a00c:	4b2d      	ldr	r3, [pc, #180]	@ (1a0c4 <am_devices_display_init+0x1cc>)
   1a00e:	701a      	strb	r2, [r3, #0]

    ui32Status = am_devices_mspi_rm69330_init(g_sDispCfg.ui32Module,
   1a010:	4b29      	ldr	r3, [pc, #164]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   1a012:	68d8      	ldr	r0, [r3, #12]
   1a014:	4b2c      	ldr	r3, [pc, #176]	@ (1a0c8 <am_devices_display_init+0x1d0>)
   1a016:	4a2d      	ldr	r2, [pc, #180]	@ (1a0cc <am_devices_display_init+0x1d4>)
   1a018:	492a      	ldr	r1, [pc, #168]	@ (1a0c4 <am_devices_display_init+0x1cc>)
   1a01a:	f7ff f913 	bl	19244 <am_devices_mspi_rm69330_init>
   1a01e:	900a      	str	r0, [sp, #40]	@ 0x28
                                              &QuadDisplayMSPICfg,
                                              &g_DisplayHandle,
                                              &g_MSPIDisplayHandle);
    if (AM_DEVICES_MSPI_RM69330_STATUS_SUCCESS != ui32Status)
   1a020:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1a022:	2b00      	cmp	r3, #0
   1a024:	d001      	beq.n	1a02a <am_devices_display_init+0x132>
    {
        return AM_DEVICES_DISPLAY_STATUS_PANEL_ERR;
   1a026:	2308      	movs	r3, #8
   1a028:	e043      	b.n	1a0b2 <am_devices_display_init+0x1ba>
    }
    NVIC_SetPriority(MSPI1_IRQn, 0x4);
   1a02a:	2104      	movs	r1, #4
   1a02c:	2015      	movs	r0, #21
   1a02e:	f7ff fc1d 	bl	1986c <__NVIC_SetPriority>
    NVIC_EnableIRQ(MSPI1_IRQn);
   1a032:	2015      	movs	r0, #21
   1a034:	f7ff fc00 	bl	19838 <__NVIC_EnableIRQ>

    am_devices_mspi_rm69330_display_on(g_DisplayHandle);
   1a038:	4b24      	ldr	r3, [pc, #144]	@ (1a0cc <am_devices_display_init+0x1d4>)
   1a03a:	681b      	ldr	r3, [r3, #0]
   1a03c:	4618      	mov	r0, r3
   1a03e:	f7ff fa73 	bl	19528 <am_devices_mspi_rm69330_display_on>

    bXferDone = false;
   1a042:	4b23      	ldr	r3, [pc, #140]	@ (1a0d0 <am_devices_display_init+0x1d8>)
   1a044:	2200      	movs	r2, #0
   1a046:	701a      	strb	r2, [r3, #0]
    //
    // Setting default scanline
    //
    am_devices_display_set_scanline_recommended_parameter(1);
   1a048:	2001      	movs	r0, #1
   1a04a:	f7ff fed1 	bl	19df0 <am_devices_display_set_scanline_recommended_parameter>
    //
    // Enable GPIO TE interrupt
    //
    if (g_sDispCfg.eTEType == DISP_TE_GPIO)
   1a04e:	4b1a      	ldr	r3, [pc, #104]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   1a050:	7d1b      	ldrb	r3, [r3, #20]
   1a052:	2b01      	cmp	r3, #1
   1a054:	d12c      	bne.n	1a0b0 <am_devices_display_init+0x1b8>
    {
        uint32_t IntNum = g_sDispCfg.ui16TEpin;
   1a056:	4b18      	ldr	r3, [pc, #96]	@ (1a0b8 <am_devices_display_init+0x1c0>)
   1a058:	8adb      	ldrh	r3, [r3, #22]
   1a05a:	9309      	str	r3, [sp, #36]	@ 0x24
        am_hal_gpio_mask_t gpio_mask = AM_HAL_GPIO_MASK_DECLARE_ZERO;
   1a05c:	ab05      	add	r3, sp, #20
   1a05e:	2200      	movs	r2, #0
   1a060:	601a      	str	r2, [r3, #0]
   1a062:	605a      	str	r2, [r3, #4]
   1a064:	609a      	str	r2, [r3, #8]
   1a066:	60da      	str	r2, [r3, #12]
        gpio_mask.U.Msk[GPIO_NUM2IDX(IntNum)] = GPIO_NUM2MSK(IntNum);
   1a068:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1a06a:	f003 031f 	and.w	r3, r3, #31
   1a06e:	2201      	movs	r2, #1
   1a070:	409a      	lsls	r2, r3
   1a072:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1a074:	095b      	lsrs	r3, r3, #5
   1a076:	009b      	lsls	r3, r3, #2
   1a078:	3330      	adds	r3, #48	@ 0x30
   1a07a:	446b      	add	r3, sp
   1a07c:	f843 2c1c 	str.w	r2, [r3, #-28]
        am_hal_gpio_interrupt_clear(AM_HAL_GPIO_INT_CHANNEL_0, &gpio_mask);
   1a080:	ab05      	add	r3, sp, #20
   1a082:	4619      	mov	r1, r3
   1a084:	2000      	movs	r0, #0
   1a086:	f00c fa7b 	bl	26580 <am_hal_gpio_interrupt_clear>
        am_hal_gpio_interrupt_register(AM_HAL_GPIO_INT_CHANNEL_0, IntNum, (am_hal_gpio_handler_t)am_devices_display_te_handler, NULL);
   1a08a:	9909      	ldr	r1, [sp, #36]	@ 0x24
   1a08c:	2300      	movs	r3, #0
   1a08e:	4a11      	ldr	r2, [pc, #68]	@ (1a0d4 <am_devices_display_init+0x1dc>)
   1a090:	2000      	movs	r0, #0
   1a092:	f00c fb21 	bl	266d8 <am_hal_gpio_interrupt_register>
        am_hal_gpio_interrupt_control(AM_HAL_GPIO_INT_CHANNEL_0, AM_HAL_GPIO_INT_CTRL_INDV_ENABLE, (void *)&IntNum);
   1a096:	ab09      	add	r3, sp, #36	@ 0x24
   1a098:	461a      	mov	r2, r3
   1a09a:	2101      	movs	r1, #1
   1a09c:	2000      	movs	r0, #0
   1a09e:	f00c f99d 	bl	263dc <am_hal_gpio_interrupt_control>
        NVIC_SetPriority(GPIO0_203F_IRQn, 0x4);
   1a0a2:	2104      	movs	r1, #4
   1a0a4:	2039      	movs	r0, #57	@ 0x39
   1a0a6:	f7ff fbe1 	bl	1986c <__NVIC_SetPriority>
        NVIC_EnableIRQ(GPIO0_203F_IRQn);
   1a0aa:	2039      	movs	r0, #57	@ 0x39
   1a0ac:	f7ff fbc4 	bl	19838 <__NVIC_EnableIRQ>
    }

    return AM_DEVICES_DISPLAY_STATUS_SUCCESS;
   1a0b0:	2300      	movs	r3, #0
}
   1a0b2:	4618      	mov	r0, r3
   1a0b4:	b00c      	add	sp, #48	@ 0x30
   1a0b6:	bd10      	pop	{r4, pc}
   1a0b8:	10001078 	.word	0x10001078
   1a0bc:	1002fa50 	.word	0x1002fa50
   1a0c0:	1002fa5c 	.word	0x1002fa5c
   1a0c4:	1000106c 	.word	0x1000106c
   1a0c8:	1002f6e8 	.word	0x1002f6e8
   1a0cc:	1002f6ec 	.word	0x1002f6ec
   1a0d0:	1002f6e6 	.word	0x1002f6e6
   1a0d4:	00019e19 	.word	0x00019e19

0001a0d8 <send_mode7>:

int send_mode7()
{
   1a0d8:	b500      	push	{lr}
   1a0da:	b08b      	sub	sp, #44	@ 0x2c
    am_util_stdio_printf("Sending mode 7 display config now\r\n");
   1a0dc:	4897      	ldr	r0, [pc, #604]	@ (1a33c <send_mode7+0x264>)
   1a0de:	f002 fb6f 	bl	1c7c0 <am_util_stdio_printf>
    uint8_t pData[20];

    pData[0] = 0x70;
   1a0e2:	2370      	movs	r3, #112	@ 0x70
   1a0e4:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u);
   1a0e8:	4b95      	ldr	r3, [pc, #596]	@ (1a340 <send_mode7+0x268>)
   1a0ea:	6818      	ldr	r0, [r3, #0]
   1a0ec:	aa05      	add	r2, sp, #20
   1a0ee:	2301      	movs	r3, #1
   1a0f0:	21fe      	movs	r1, #254	@ 0xfe
   1a0f2:	f7fe ff2b 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0xC9;
   1a0f6:	23c9      	movs	r3, #201	@ 0xc9
   1a0f8:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0, pData, 1u);
   1a0fc:	4b90      	ldr	r3, [pc, #576]	@ (1a340 <send_mode7+0x268>)
   1a0fe:	6818      	ldr	r0, [r3, #0]
   1a100:	aa05      	add	r2, sp, #20
   1a102:	2301      	movs	r3, #1
   1a104:	2100      	movs	r1, #0
   1a106:	f7fe ff21 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x80;
   1a10a:	2380      	movs	r3, #128	@ 0x80
   1a10c:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 8u, pData, 1u);
   1a110:	4b8b      	ldr	r3, [pc, #556]	@ (1a340 <send_mode7+0x268>)
   1a112:	6818      	ldr	r0, [r3, #0]
   1a114:	aa05      	add	r2, sp, #20
   1a116:	2301      	movs	r3, #1
   1a118:	2108      	movs	r1, #8
   1a11a:	f7fe ff17 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0xC9;
   1a11e:	23c9      	movs	r3, #201	@ 0xc9
   1a120:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 9u, pData, 1u);
   1a124:	4b86      	ldr	r3, [pc, #536]	@ (1a340 <send_mode7+0x268>)
   1a126:	6818      	ldr	r0, [r3, #0]
   1a128:	aa05      	add	r2, sp, #20
   1a12a:	2301      	movs	r3, #1
   1a12c:	2109      	movs	r1, #9
   1a12e:	f7fe ff0d 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x80;
   1a132:	2380      	movs	r3, #128	@ 0x80
   1a134:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x11u, pData, 1u);
   1a138:	4b81      	ldr	r3, [pc, #516]	@ (1a340 <send_mode7+0x268>)
   1a13a:	6818      	ldr	r0, [r3, #0]
   1a13c:	aa05      	add	r2, sp, #20
   1a13e:	2301      	movs	r3, #1
   1a140:	2111      	movs	r1, #17
   1a142:	f7fe ff03 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x82;
   1a146:	2382      	movs	r3, #130	@ 0x82
   1a148:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u);
   1a14c:	4b7c      	ldr	r3, [pc, #496]	@ (1a340 <send_mode7+0x268>)
   1a14e:	6818      	ldr	r0, [r3, #0]
   1a150:	aa05      	add	r2, sp, #20
   1a152:	2301      	movs	r3, #1
   1a154:	21fe      	movs	r1, #254	@ 0xfe
   1a156:	f7fe fef9 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 3;
   1a15a:	2303      	movs	r3, #3
   1a15c:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 9u, pData, 1u);
   1a160:	4b77      	ldr	r3, [pc, #476]	@ (1a340 <send_mode7+0x268>)
   1a162:	6818      	ldr	r0, [r3, #0]
   1a164:	aa05      	add	r2, sp, #20
   1a166:	2301      	movs	r3, #1
   1a168:	2109      	movs	r1, #9
   1a16a:	f7fe feef 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x1A;
   1a16e:	231a      	movs	r3, #26
   1a170:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x34u, pData, 1u);
   1a174:	4b72      	ldr	r3, [pc, #456]	@ (1a340 <send_mode7+0x268>)
   1a176:	6818      	ldr	r0, [r3, #0]
   1a178:	aa05      	add	r2, sp, #20
   1a17a:	2301      	movs	r3, #1
   1a17c:	2134      	movs	r1, #52	@ 0x34
   1a17e:	f7fe fee5 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x1B;
   1a182:	231b      	movs	r3, #27
   1a184:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x40u, pData, 1u);
   1a188:	4b6d      	ldr	r3, [pc, #436]	@ (1a340 <send_mode7+0x268>)
   1a18a:	6818      	ldr	r0, [r3, #0]
   1a18c:	aa05      	add	r2, sp, #20
   1a18e:	2301      	movs	r3, #1
   1a190:	2140      	movs	r1, #64	@ 0x40
   1a192:	f7fe fedb 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 1;
   1a196:	2301      	movs	r3, #1
   1a198:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x17u, pData, 1u);
   1a19c:	4b68      	ldr	r3, [pc, #416]	@ (1a340 <send_mode7+0x268>)
   1a19e:	6818      	ldr	r0, [r3, #0]
   1a1a0:	aa05      	add	r2, sp, #20
   1a1a2:	2301      	movs	r3, #1
   1a1a4:	2117      	movs	r1, #23
   1a1a6:	f7fe fed1 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 2;
   1a1aa:	2302      	movs	r3, #2
   1a1ac:	f88d 3014 	strb.w	r3, [sp, #20]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x43u, pData, 1u);
   1a1b0:	4b63      	ldr	r3, [pc, #396]	@ (1a340 <send_mode7+0x268>)
   1a1b2:	6818      	ldr	r0, [r3, #0]
   1a1b4:	aa05      	add	r2, sp, #20
   1a1b6:	2301      	movs	r3, #1
   1a1b8:	2143      	movs	r1, #67	@ 0x43
   1a1ba:	f7fe fec7 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0;
   1a1be:	2300      	movs	r3, #0
   1a1c0:	f88d 3014 	strb.w	r3, [sp, #20]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u))
   1a1c4:	4b5e      	ldr	r3, [pc, #376]	@ (1a340 <send_mode7+0x268>)
   1a1c6:	6818      	ldr	r0, [r3, #0]
   1a1c8:	aa05      	add	r2, sp, #20
   1a1ca:	2301      	movs	r3, #1
   1a1cc:	21fe      	movs	r1, #254	@ 0xfe
   1a1ce:	f7fe febd 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a1d2:	4603      	mov	r3, r0
   1a1d4:	2b00      	cmp	r3, #0
   1a1d6:	d001      	beq.n	1a1dc <send_mode7+0x104>
        return 1;
   1a1d8:	2301      	movs	r3, #1
   1a1da:	e0aa      	b.n	1a332 <send_mode7+0x25a>
    pData[0] = 23;
   1a1dc:	2317      	movs	r3, #23
   1a1de:	f88d 3014 	strb.w	r3, [sp, #20]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x80u, pData, 1u))
   1a1e2:	4b57      	ldr	r3, [pc, #348]	@ (1a340 <send_mode7+0x268>)
   1a1e4:	6818      	ldr	r0, [r3, #0]
   1a1e6:	aa05      	add	r2, sp, #20
   1a1e8:	2301      	movs	r3, #1
   1a1ea:	2180      	movs	r1, #128	@ 0x80
   1a1ec:	f7fe feae 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a1f0:	4603      	mov	r3, r0
   1a1f2:	2b00      	cmp	r3, #0
   1a1f4:	d001      	beq.n	1a1fa <send_mode7+0x122>
        return 1;
   1a1f6:	2301      	movs	r3, #1
   1a1f8:	e09b      	b.n	1a332 <send_mode7+0x25a>
    pData[0] = 32;
   1a1fa:	2320      	movs	r3, #32
   1a1fc:	f88d 3014 	strb.w	r3, [sp, #20]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x53u, pData, 1u))
   1a200:	4b4f      	ldr	r3, [pc, #316]	@ (1a340 <send_mode7+0x268>)
   1a202:	6818      	ldr	r0, [r3, #0]
   1a204:	aa05      	add	r2, sp, #20
   1a206:	2301      	movs	r3, #1
   1a208:	2153      	movs	r1, #83	@ 0x53
   1a20a:	f7fe fe9f 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a20e:	4603      	mov	r3, r0
   1a210:	2b00      	cmp	r3, #0
   1a212:	d001      	beq.n	1a218 <send_mode7+0x140>
        return 1;
   1a214:	2301      	movs	r3, #1
   1a216:	e08c      	b.n	1a332 <send_mode7+0x25a>
    uint32_t v4 = 0xD7001800;
   1a218:	4b4a      	ldr	r3, [pc, #296]	@ (1a344 <send_mode7+0x26c>)
   1a21a:	9304      	str	r3, [sp, #16]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x2Au, (uint8_t *)&v4, 4u))
   1a21c:	4b48      	ldr	r3, [pc, #288]	@ (1a340 <send_mode7+0x268>)
   1a21e:	6818      	ldr	r0, [r3, #0]
   1a220:	aa04      	add	r2, sp, #16
   1a222:	2304      	movs	r3, #4
   1a224:	212a      	movs	r1, #42	@ 0x2a
   1a226:	f7fe fe91 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a22a:	4603      	mov	r3, r0
   1a22c:	2b00      	cmp	r3, #0
   1a22e:	d001      	beq.n	1a234 <send_mode7+0x15c>
        return 1;
   1a230:	2301      	movs	r3, #1
   1a232:	e07e      	b.n	1a332 <send_mode7+0x25a>
    uint32_t v3 = 0xE9010000;
   1a234:	4b44      	ldr	r3, [pc, #272]	@ (1a348 <send_mode7+0x270>)
   1a236:	9303      	str	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x2Bu, (uint8_t *)&v3, 4u))
   1a238:	4b41      	ldr	r3, [pc, #260]	@ (1a340 <send_mode7+0x268>)
   1a23a:	6818      	ldr	r0, [r3, #0]
   1a23c:	aa03      	add	r2, sp, #12
   1a23e:	2304      	movs	r3, #4
   1a240:	212b      	movs	r1, #43	@ 0x2b
   1a242:	f7fe fe83 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a246:	4603      	mov	r3, r0
   1a248:	2b00      	cmp	r3, #0
   1a24a:	d001      	beq.n	1a250 <send_mode7+0x178>
        return 1;
   1a24c:	2301      	movs	r3, #1
   1a24e:	e070      	b.n	1a332 <send_mode7+0x25a>
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x12u, 0, 0))
   1a250:	4b3b      	ldr	r3, [pc, #236]	@ (1a340 <send_mode7+0x268>)
   1a252:	6818      	ldr	r0, [r3, #0]
   1a254:	2300      	movs	r3, #0
   1a256:	2200      	movs	r2, #0
   1a258:	2112      	movs	r1, #18
   1a25a:	f7fe fe77 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a25e:	4603      	mov	r3, r0
   1a260:	2b00      	cmp	r3, #0
   1a262:	d001      	beq.n	1a268 <send_mode7+0x190>
        return 1;
   1a264:	2301      	movs	r3, #1
   1a266:	e064      	b.n	1a332 <send_mode7+0x25a>
    uint32_t v2 = 0xD6001900;
   1a268:	4b38      	ldr	r3, [pc, #224]	@ (1a34c <send_mode7+0x274>)
   1a26a:	9302      	str	r3, [sp, #8]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x31u, (uint8_t *)&v2, 4u))
   1a26c:	4b34      	ldr	r3, [pc, #208]	@ (1a340 <send_mode7+0x268>)
   1a26e:	6818      	ldr	r0, [r3, #0]
   1a270:	aa02      	add	r2, sp, #8
   1a272:	2304      	movs	r3, #4
   1a274:	2131      	movs	r1, #49	@ 0x31
   1a276:	f7fe fe69 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a27a:	4603      	mov	r3, r0
   1a27c:	2b00      	cmp	r3, #0
   1a27e:	d001      	beq.n	1a284 <send_mode7+0x1ac>
        return 1;
   1a280:	2301      	movs	r3, #1
   1a282:	e056      	b.n	1a332 <send_mode7+0x25a>
    uint32_t v1 = 0xE8010100;
   1a284:	4b32      	ldr	r3, [pc, #200]	@ (1a350 <send_mode7+0x278>)
   1a286:	9301      	str	r3, [sp, #4]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x30u, (uint8_t *)&v1, 4u))
   1a288:	4b2d      	ldr	r3, [pc, #180]	@ (1a340 <send_mode7+0x268>)
   1a28a:	6818      	ldr	r0, [r3, #0]
   1a28c:	aa01      	add	r2, sp, #4
   1a28e:	2304      	movs	r3, #4
   1a290:	2130      	movs	r1, #48	@ 0x30
   1a292:	f7fe fe5b 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a296:	4603      	mov	r3, r0
   1a298:	2b00      	cmp	r3, #0
   1a29a:	d001      	beq.n	1a2a0 <send_mode7+0x1c8>
        return 1;
   1a29c:	2301      	movs	r3, #1
   1a29e:	e048      	b.n	1a332 <send_mode7+0x25a>
    pData[0] = 117;
   1a2a0:	2375      	movs	r3, #117	@ 0x75
   1a2a2:	f88d 3014 	strb.w	r3, [sp, #20]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x3Au, pData, 1u))
   1a2a6:	4b26      	ldr	r3, [pc, #152]	@ (1a340 <send_mode7+0x268>)
   1a2a8:	6818      	ldr	r0, [r3, #0]
   1a2aa:	aa05      	add	r2, sp, #20
   1a2ac:	2301      	movs	r3, #1
   1a2ae:	213a      	movs	r1, #58	@ 0x3a
   1a2b0:	f7fe fe4c 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a2b4:	4603      	mov	r3, r0
   1a2b6:	2b00      	cmp	r3, #0
   1a2b8:	d001      	beq.n	1a2be <send_mode7+0x1e6>
        return 1;
   1a2ba:	2301      	movs	r3, #1
   1a2bc:	e039      	b.n	1a332 <send_mode7+0x25a>
    pData[0] = 2;
   1a2be:	2302      	movs	r3, #2
   1a2c0:	f88d 3014 	strb.w	r3, [sp, #20]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x35u, pData, 1u))
   1a2c4:	4b1e      	ldr	r3, [pc, #120]	@ (1a340 <send_mode7+0x268>)
   1a2c6:	6818      	ldr	r0, [r3, #0]
   1a2c8:	aa05      	add	r2, sp, #20
   1a2ca:	2301      	movs	r3, #1
   1a2cc:	2135      	movs	r1, #53	@ 0x35
   1a2ce:	f7fe fe3d 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a2d2:	4603      	mov	r3, r0
   1a2d4:	2b00      	cmp	r3, #0
   1a2d6:	d001      	beq.n	1a2dc <send_mode7+0x204>
        return 1;
   1a2d8:	2301      	movs	r3, #1
   1a2da:	e02a      	b.n	1a332 <send_mode7+0x25a>
    pData[0] = -1;
   1a2dc:	23ff      	movs	r3, #255	@ 0xff
   1a2de:	f88d 3014 	strb.w	r3, [sp, #20]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x51u, pData, 1u))
   1a2e2:	4b17      	ldr	r3, [pc, #92]	@ (1a340 <send_mode7+0x268>)
   1a2e4:	6818      	ldr	r0, [r3, #0]
   1a2e6:	aa05      	add	r2, sp, #20
   1a2e8:	2301      	movs	r3, #1
   1a2ea:	2151      	movs	r1, #81	@ 0x51
   1a2ec:	f7fe fe2e 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a2f0:	4603      	mov	r3, r0
   1a2f2:	2b00      	cmp	r3, #0
   1a2f4:	d001      	beq.n	1a2fa <send_mode7+0x222>
        return 1;
   1a2f6:	2301      	movs	r3, #1
   1a2f8:	e01b      	b.n	1a332 <send_mode7+0x25a>
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x11u, 0, 0))
   1a2fa:	4b11      	ldr	r3, [pc, #68]	@ (1a340 <send_mode7+0x268>)
   1a2fc:	6818      	ldr	r0, [r3, #0]
   1a2fe:	2300      	movs	r3, #0
   1a300:	2200      	movs	r2, #0
   1a302:	2111      	movs	r1, #17
   1a304:	f7fe fe22 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a308:	4603      	mov	r3, r0
   1a30a:	2b00      	cmp	r3, #0
   1a30c:	d001      	beq.n	1a312 <send_mode7+0x23a>
        return 1;
   1a30e:	2301      	movs	r3, #1
   1a310:	e00f      	b.n	1a332 <send_mode7+0x25a>
    am_util_delay_ms(60);
   1a312:	203c      	movs	r0, #60	@ 0x3c
   1a314:	f001 fb0c 	bl	1b930 <am_util_delay_ms>
    return am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x29u, 0, 0) != 0;
   1a318:	4b09      	ldr	r3, [pc, #36]	@ (1a340 <send_mode7+0x268>)
   1a31a:	6818      	ldr	r0, [r3, #0]
   1a31c:	2300      	movs	r3, #0
   1a31e:	2200      	movs	r2, #0
   1a320:	2129      	movs	r1, #41	@ 0x29
   1a322:	f7fe fe13 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a326:	4603      	mov	r3, r0
   1a328:	2b00      	cmp	r3, #0
   1a32a:	bf14      	ite	ne
   1a32c:	2301      	movne	r3, #1
   1a32e:	2300      	moveq	r3, #0
   1a330:	b2db      	uxtb	r3, r3
}
   1a332:	4618      	mov	r0, r3
   1a334:	b00b      	add	sp, #44	@ 0x2c
   1a336:	f85d fb04 	ldr.w	pc, [sp], #4
   1a33a:	bf00      	nop
   1a33c:	00027828 	.word	0x00027828
   1a340:	1002f6ec 	.word	0x1002f6ec
   1a344:	d7001800 	.word	0xd7001800
   1a348:	e9010000 	.word	0xe9010000
   1a34c:	d6001900 	.word	0xd6001900
   1a350:	e8010100 	.word	0xe8010100

0001a354 <send_mode4>:

int send_mode4()
{
   1a354:	b500      	push	{lr}
   1a356:	b087      	sub	sp, #28
    am_util_stdio_printf("Sending mode 4 display config now\r\n");
   1a358:	4890      	ldr	r0, [pc, #576]	@ (1a59c <send_mode4+0x248>)
   1a35a:	f002 fa31 	bl	1c7c0 <am_util_stdio_printf>
    uint8_t pData[12];

    pData[0] = 0x20;
   1a35e:	2320      	movs	r3, #32
   1a360:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u);
   1a364:	4b8e      	ldr	r3, [pc, #568]	@ (1a5a0 <send_mode4+0x24c>)
   1a366:	6818      	ldr	r0, [r3, #0]
   1a368:	aa03      	add	r2, sp, #12
   1a36a:	2301      	movs	r3, #1
   1a36c:	21fe      	movs	r1, #254	@ 0xfe
   1a36e:	f7fe fded 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x5A;
   1a372:	235a      	movs	r3, #90	@ 0x5a
   1a374:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xF4u, pData, 1u);
   1a378:	4b89      	ldr	r3, [pc, #548]	@ (1a5a0 <send_mode4+0x24c>)
   1a37a:	6818      	ldr	r0, [r3, #0]
   1a37c:	aa03      	add	r2, sp, #12
   1a37e:	2301      	movs	r3, #1
   1a380:	21f4      	movs	r1, #244	@ 0xf4
   1a382:	f7fe fde3 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x59;
   1a386:	2359      	movs	r3, #89	@ 0x59
   1a388:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xF5u, pData, 1u);
   1a38c:	4b84      	ldr	r3, [pc, #528]	@ (1a5a0 <send_mode4+0x24c>)
   1a38e:	6818      	ldr	r0, [r3, #0]
   1a390:	aa03      	add	r2, sp, #12
   1a392:	2301      	movs	r3, #1
   1a394:	21f5      	movs	r1, #245	@ 0xf5
   1a396:	f7fe fdd9 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0xE0;
   1a39a:	23e0      	movs	r3, #224	@ 0xe0
   1a39c:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u);
   1a3a0:	4b7f      	ldr	r3, [pc, #508]	@ (1a5a0 <send_mode4+0x24c>)
   1a3a2:	6818      	ldr	r0, [r3, #0]
   1a3a4:	aa03      	add	r2, sp, #12
   1a3a6:	2301      	movs	r3, #1
   1a3a8:	21fe      	movs	r1, #254	@ 0xfe
   1a3aa:	f7fe fdcf 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0;
   1a3ae:	2300      	movs	r3, #0
   1a3b0:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xBu, pData, 1u);
   1a3b4:	4b7a      	ldr	r3, [pc, #488]	@ (1a5a0 <send_mode4+0x24c>)
   1a3b6:	6818      	ldr	r0, [r3, #0]
   1a3b8:	aa03      	add	r2, sp, #12
   1a3ba:	2301      	movs	r3, #1
   1a3bc:	210b      	movs	r1, #11
   1a3be:	f7fe fdc5 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x9B;
   1a3c2:	239b      	movs	r3, #155	@ 0x9b
   1a3c4:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x2Du, pData, 1u);
   1a3c8:	4b75      	ldr	r3, [pc, #468]	@ (1a5a0 <send_mode4+0x24c>)
   1a3ca:	6818      	ldr	r0, [r3, #0]
   1a3cc:	aa03      	add	r2, sp, #12
   1a3ce:	2301      	movs	r3, #1
   1a3d0:	212d      	movs	r1, #45	@ 0x2d
   1a3d2:	f7fe fdbb 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x1D;
   1a3d6:	231d      	movs	r3, #29
   1a3d8:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x23u, pData, 1u);
   1a3dc:	4b70      	ldr	r3, [pc, #448]	@ (1a5a0 <send_mode4+0x24c>)
   1a3de:	6818      	ldr	r0, [r3, #0]
   1a3e0:	aa03      	add	r2, sp, #12
   1a3e2:	2301      	movs	r3, #1
   1a3e4:	2123      	movs	r1, #35	@ 0x23
   1a3e6:	f7fe fdb1 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x81;
   1a3ea:	2381      	movs	r3, #129	@ 0x81
   1a3ec:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x24u, pData, 1u);
   1a3f0:	4b6b      	ldr	r3, [pc, #428]	@ (1a5a0 <send_mode4+0x24c>)
   1a3f2:	6818      	ldr	r0, [r3, #0]
   1a3f4:	aa03      	add	r2, sp, #12
   1a3f6:	2301      	movs	r3, #1
   1a3f8:	2124      	movs	r1, #36	@ 0x24
   1a3fa:	f7fe fda7 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 3;
   1a3fe:	2303      	movs	r3, #3
   1a400:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x30u, pData, 1u);
   1a404:	4b66      	ldr	r3, [pc, #408]	@ (1a5a0 <send_mode4+0x24c>)
   1a406:	6818      	ldr	r0, [r3, #0]
   1a408:	aa03      	add	r2, sp, #12
   1a40a:	2301      	movs	r3, #1
   1a40c:	2130      	movs	r1, #48	@ 0x30
   1a40e:	f7fe fd9d 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x40;
   1a412:	2340      	movs	r3, #64	@ 0x40
   1a414:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u))
   1a418:	4b61      	ldr	r3, [pc, #388]	@ (1a5a0 <send_mode4+0x24c>)
   1a41a:	6818      	ldr	r0, [r3, #0]
   1a41c:	aa03      	add	r2, sp, #12
   1a41e:	2301      	movs	r3, #1
   1a420:	21fe      	movs	r1, #254	@ 0xfe
   1a422:	f7fe fd93 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a426:	4603      	mov	r3, r0
   1a428:	2b00      	cmp	r3, #0
   1a42a:	d001      	beq.n	1a430 <send_mode4+0xdc>
        return 1;
   1a42c:	2301      	movs	r3, #1
   1a42e:	e0b0      	b.n	1a592 <send_mode4+0x23e>
    pData[0] = 1;
   1a430:	2301      	movs	r3, #1
   1a432:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x76u, pData, 1u))
   1a436:	4b5a      	ldr	r3, [pc, #360]	@ (1a5a0 <send_mode4+0x24c>)
   1a438:	6818      	ldr	r0, [r3, #0]
   1a43a:	aa03      	add	r2, sp, #12
   1a43c:	2301      	movs	r3, #1
   1a43e:	2176      	movs	r1, #118	@ 0x76
   1a440:	f7fe fd84 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a444:	4603      	mov	r3, r0
   1a446:	2b00      	cmp	r3, #0
   1a448:	d001      	beq.n	1a44e <send_mode4+0xfa>
        return 1;
   1a44a:	2301      	movs	r3, #1
   1a44c:	e0a1      	b.n	1a592 <send_mode4+0x23e>
    pData[0] = 0;
   1a44e:	2300      	movs	r3, #0
   1a450:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u))
   1a454:	4b52      	ldr	r3, [pc, #328]	@ (1a5a0 <send_mode4+0x24c>)
   1a456:	6818      	ldr	r0, [r3, #0]
   1a458:	aa03      	add	r2, sp, #12
   1a45a:	2301      	movs	r3, #1
   1a45c:	21fe      	movs	r1, #254	@ 0xfe
   1a45e:	f7fe fd75 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a462:	4603      	mov	r3, r0
   1a464:	2b00      	cmp	r3, #0
   1a466:	d001      	beq.n	1a46c <send_mode4+0x118>
        return 1;
   1a468:	2301      	movs	r3, #1
   1a46a:	e092      	b.n	1a592 <send_mode4+0x23e>
    pData[0] = 0x80;
   1a46c:	2380      	movs	r3, #128	@ 0x80
   1a46e:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xC4u, pData, 1u))
   1a472:	4b4b      	ldr	r3, [pc, #300]	@ (1a5a0 <send_mode4+0x24c>)
   1a474:	6818      	ldr	r0, [r3, #0]
   1a476:	aa03      	add	r2, sp, #12
   1a478:	2301      	movs	r3, #1
   1a47a:	21c4      	movs	r1, #196	@ 0xc4
   1a47c:	f7fe fd66 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a480:	4603      	mov	r3, r0
   1a482:	2b00      	cmp	r3, #0
   1a484:	d001      	beq.n	1a48a <send_mode4+0x136>
        return 1;
   1a486:	2301      	movs	r3, #1
   1a488:	e083      	b.n	1a592 <send_mode4+0x23e>
    pData[0] = 0x55;
   1a48a:	2355      	movs	r3, #85	@ 0x55
   1a48c:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x3Au, pData, 1u))
   1a490:	4b43      	ldr	r3, [pc, #268]	@ (1a5a0 <send_mode4+0x24c>)
   1a492:	6818      	ldr	r0, [r3, #0]
   1a494:	aa03      	add	r2, sp, #12
   1a496:	2301      	movs	r3, #1
   1a498:	213a      	movs	r1, #58	@ 0x3a
   1a49a:	f7fe fd57 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a49e:	4603      	mov	r3, r0
   1a4a0:	2b00      	cmp	r3, #0
   1a4a2:	d001      	beq.n	1a4a8 <send_mode4+0x154>
        return 1;
   1a4a4:	2301      	movs	r3, #1
   1a4a6:	e074      	b.n	1a592 <send_mode4+0x23e>
    pData[0] = 0;
   1a4a8:	2300      	movs	r3, #0
   1a4aa:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x35u, pData, 1u))
   1a4ae:	4b3c      	ldr	r3, [pc, #240]	@ (1a5a0 <send_mode4+0x24c>)
   1a4b0:	6818      	ldr	r0, [r3, #0]
   1a4b2:	aa03      	add	r2, sp, #12
   1a4b4:	2301      	movs	r3, #1
   1a4b6:	2135      	movs	r1, #53	@ 0x35
   1a4b8:	f7fe fd48 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a4bc:	4603      	mov	r3, r0
   1a4be:	2b00      	cmp	r3, #0
   1a4c0:	d001      	beq.n	1a4c6 <send_mode4+0x172>
        return 1;
   1a4c2:	2301      	movs	r3, #1
   1a4c4:	e065      	b.n	1a592 <send_mode4+0x23e>
    pData[0] = 0x20;
   1a4c6:	2320      	movs	r3, #32
   1a4c8:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x53u, pData, 1u))
   1a4cc:	4b34      	ldr	r3, [pc, #208]	@ (1a5a0 <send_mode4+0x24c>)
   1a4ce:	6818      	ldr	r0, [r3, #0]
   1a4d0:	aa03      	add	r2, sp, #12
   1a4d2:	2301      	movs	r3, #1
   1a4d4:	2153      	movs	r1, #83	@ 0x53
   1a4d6:	f7fe fd39 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a4da:	4603      	mov	r3, r0
   1a4dc:	2b00      	cmp	r3, #0
   1a4de:	d001      	beq.n	1a4e4 <send_mode4+0x190>
        return 1;
   1a4e0:	2301      	movs	r3, #1
   1a4e2:	e056      	b.n	1a592 <send_mode4+0x23e>
    pData[0] = 0xFF;
   1a4e4:	23ff      	movs	r3, #255	@ 0xff
   1a4e6:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x51u, pData, 1u))
   1a4ea:	4b2d      	ldr	r3, [pc, #180]	@ (1a5a0 <send_mode4+0x24c>)
   1a4ec:	6818      	ldr	r0, [r3, #0]
   1a4ee:	aa03      	add	r2, sp, #12
   1a4f0:	2301      	movs	r3, #1
   1a4f2:	2151      	movs	r1, #81	@ 0x51
   1a4f4:	f7fe fd2a 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a4f8:	4603      	mov	r3, r0
   1a4fa:	2b00      	cmp	r3, #0
   1a4fc:	d001      	beq.n	1a502 <send_mode4+0x1ae>
        return 1;
   1a4fe:	2301      	movs	r3, #1
   1a500:	e047      	b.n	1a592 <send_mode4+0x23e>
    pData[0] = 0xFF;
   1a502:	23ff      	movs	r3, #255	@ 0xff
   1a504:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x63u, pData, 1u))
   1a508:	4b25      	ldr	r3, [pc, #148]	@ (1a5a0 <send_mode4+0x24c>)
   1a50a:	6818      	ldr	r0, [r3, #0]
   1a50c:	aa03      	add	r2, sp, #12
   1a50e:	2301      	movs	r3, #1
   1a510:	2163      	movs	r1, #99	@ 0x63
   1a512:	f7fe fd1b 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a516:	4603      	mov	r3, r0
   1a518:	2b00      	cmp	r3, #0
   1a51a:	d001      	beq.n	1a520 <send_mode4+0x1cc>
        return 1;
   1a51c:	2301      	movs	r3, #1
   1a51e:	e038      	b.n	1a592 <send_mode4+0x23e>
    uint32_t v2 = 0xBF000000;
   1a520:	f04f 433f 	mov.w	r3, #3204448256	@ 0xbf000000
   1a524:	9302      	str	r3, [sp, #8]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x2Au, (uint8_t *)&v2, 4u))
   1a526:	4b1e      	ldr	r3, [pc, #120]	@ (1a5a0 <send_mode4+0x24c>)
   1a528:	6818      	ldr	r0, [r3, #0]
   1a52a:	aa02      	add	r2, sp, #8
   1a52c:	2304      	movs	r3, #4
   1a52e:	212a      	movs	r1, #42	@ 0x2a
   1a530:	f7fe fd0c 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a534:	4603      	mov	r3, r0
   1a536:	2b00      	cmp	r3, #0
   1a538:	d001      	beq.n	1a53e <send_mode4+0x1ea>
        return 1;
   1a53a:	2301      	movs	r3, #1
   1a53c:	e029      	b.n	1a592 <send_mode4+0x23e>
    uint32_t v1 = 0xE9010000;
   1a53e:	4b19      	ldr	r3, [pc, #100]	@ (1a5a4 <send_mode4+0x250>)
   1a540:	9301      	str	r3, [sp, #4]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x2Bu, (uint8_t *)&v1, 4u))
   1a542:	4b17      	ldr	r3, [pc, #92]	@ (1a5a0 <send_mode4+0x24c>)
   1a544:	6818      	ldr	r0, [r3, #0]
   1a546:	aa01      	add	r2, sp, #4
   1a548:	2304      	movs	r3, #4
   1a54a:	212b      	movs	r1, #43	@ 0x2b
   1a54c:	f7fe fcfe 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a550:	4603      	mov	r3, r0
   1a552:	2b00      	cmp	r3, #0
   1a554:	d001      	beq.n	1a55a <send_mode4+0x206>
        return 1;
   1a556:	2301      	movs	r3, #1
   1a558:	e01b      	b.n	1a592 <send_mode4+0x23e>
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x11u, 0, 0))
   1a55a:	4b11      	ldr	r3, [pc, #68]	@ (1a5a0 <send_mode4+0x24c>)
   1a55c:	6818      	ldr	r0, [r3, #0]
   1a55e:	2300      	movs	r3, #0
   1a560:	2200      	movs	r2, #0
   1a562:	2111      	movs	r1, #17
   1a564:	f7fe fcf2 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a568:	4603      	mov	r3, r0
   1a56a:	2b00      	cmp	r3, #0
   1a56c:	d001      	beq.n	1a572 <send_mode4+0x21e>
        return 1;
   1a56e:	2301      	movs	r3, #1
   1a570:	e00f      	b.n	1a592 <send_mode4+0x23e>
    am_util_delay_ms(60);
   1a572:	203c      	movs	r0, #60	@ 0x3c
   1a574:	f001 f9dc 	bl	1b930 <am_util_delay_ms>
    return am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x29u, 0, 0) != 0;
   1a578:	4b09      	ldr	r3, [pc, #36]	@ (1a5a0 <send_mode4+0x24c>)
   1a57a:	6818      	ldr	r0, [r3, #0]
   1a57c:	2300      	movs	r3, #0
   1a57e:	2200      	movs	r2, #0
   1a580:	2129      	movs	r1, #41	@ 0x29
   1a582:	f7fe fce3 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a586:	4603      	mov	r3, r0
   1a588:	2b00      	cmp	r3, #0
   1a58a:	bf14      	ite	ne
   1a58c:	2301      	movne	r3, #1
   1a58e:	2300      	moveq	r3, #0
   1a590:	b2db      	uxtb	r3, r3
}
   1a592:	4618      	mov	r0, r3
   1a594:	b007      	add	sp, #28
   1a596:	f85d fb04 	ldr.w	pc, [sp], #4
   1a59a:	bf00      	nop
   1a59c:	0002784c 	.word	0x0002784c
   1a5a0:	1002f6ec 	.word	0x1002f6ec
   1a5a4:	e9010000 	.word	0xe9010000

0001a5a8 <send_mode5>:

int send_mode5()
{
   1a5a8:	b500      	push	{lr}
   1a5aa:	b087      	sub	sp, #28
    am_util_stdio_printf("Sending mode 5 display config now\r\n");
   1a5ac:	484f      	ldr	r0, [pc, #316]	@ (1a6ec <send_mode5+0x144>)
   1a5ae:	f002 f907 	bl	1c7c0 <am_util_stdio_printf>
    uint8_t v4[12];

    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x11, 0, 0))
   1a5b2:	4b4f      	ldr	r3, [pc, #316]	@ (1a6f0 <send_mode5+0x148>)
   1a5b4:	6818      	ldr	r0, [r3, #0]
   1a5b6:	2300      	movs	r3, #0
   1a5b8:	2200      	movs	r2, #0
   1a5ba:	2111      	movs	r1, #17
   1a5bc:	f7fe fcc6 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a5c0:	4603      	mov	r3, r0
   1a5c2:	2b00      	cmp	r3, #0
   1a5c4:	d001      	beq.n	1a5ca <send_mode5+0x22>
        return 1;
   1a5c6:	2301      	movs	r3, #1
   1a5c8:	e08b      	b.n	1a6e2 <send_mode5+0x13a>
    am_util_delay_ms(5);
   1a5ca:	2005      	movs	r0, #5
   1a5cc:	f001 f9b0 	bl	1b930 <am_util_delay_ms>
    uint32_t v3 = 0xBF000000;
   1a5d0:	f04f 433f 	mov.w	r3, #3204448256	@ 0xbf000000
   1a5d4:	9302      	str	r3, [sp, #8]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x2A, (uint8_t *)&v3, 4))
   1a5d6:	4b46      	ldr	r3, [pc, #280]	@ (1a6f0 <send_mode5+0x148>)
   1a5d8:	6818      	ldr	r0, [r3, #0]
   1a5da:	aa02      	add	r2, sp, #8
   1a5dc:	2304      	movs	r3, #4
   1a5de:	212a      	movs	r1, #42	@ 0x2a
   1a5e0:	f7fe fcb4 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a5e4:	4603      	mov	r3, r0
   1a5e6:	2b00      	cmp	r3, #0
   1a5e8:	d001      	beq.n	1a5ee <send_mode5+0x46>
        return 1;
   1a5ea:	2301      	movs	r3, #1
   1a5ec:	e079      	b.n	1a6e2 <send_mode5+0x13a>
    uint32_t v2 = 0xE9010000;
   1a5ee:	4b41      	ldr	r3, [pc, #260]	@ (1a6f4 <send_mode5+0x14c>)
   1a5f0:	9301      	str	r3, [sp, #4]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x2B, (uint8_t *)&v2, 4))
   1a5f2:	4b3f      	ldr	r3, [pc, #252]	@ (1a6f0 <send_mode5+0x148>)
   1a5f4:	6818      	ldr	r0, [r3, #0]
   1a5f6:	aa01      	add	r2, sp, #4
   1a5f8:	2304      	movs	r3, #4
   1a5fa:	212b      	movs	r1, #43	@ 0x2b
   1a5fc:	f7fe fca6 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a600:	4603      	mov	r3, r0
   1a602:	2b00      	cmp	r3, #0
   1a604:	d001      	beq.n	1a60a <send_mode5+0x62>
        return 1;
   1a606:	2301      	movs	r3, #1
   1a608:	e06b      	b.n	1a6e2 <send_mode5+0x13a>
    uint16_t v1 = 0xE901;
   1a60a:	f64e 1301 	movw	r3, #59649	@ 0xe901
   1a60e:	f8ad 3002 	strh.w	r3, [sp, #2]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x44, (uint8_t *)&v1, 2))
   1a612:	4b37      	ldr	r3, [pc, #220]	@ (1a6f0 <send_mode5+0x148>)
   1a614:	6818      	ldr	r0, [r3, #0]
   1a616:	f10d 0202 	add.w	r2, sp, #2
   1a61a:	2302      	movs	r3, #2
   1a61c:	2144      	movs	r1, #68	@ 0x44
   1a61e:	f7fe fc95 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a622:	4603      	mov	r3, r0
   1a624:	2b00      	cmp	r3, #0
   1a626:	d001      	beq.n	1a62c <send_mode5+0x84>
        return 1;
   1a628:	2301      	movs	r3, #1
   1a62a:	e05a      	b.n	1a6e2 <send_mode5+0x13a>
    v4[0] = 0;
   1a62c:	2300      	movs	r3, #0
   1a62e:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x35, v4, 1))
   1a632:	4b2f      	ldr	r3, [pc, #188]	@ (1a6f0 <send_mode5+0x148>)
   1a634:	6818      	ldr	r0, [r3, #0]
   1a636:	aa03      	add	r2, sp, #12
   1a638:	2301      	movs	r3, #1
   1a63a:	2135      	movs	r1, #53	@ 0x35
   1a63c:	f7fe fc86 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a640:	4603      	mov	r3, r0
   1a642:	2b00      	cmp	r3, #0
   1a644:	d001      	beq.n	1a64a <send_mode5+0xa2>
        return 1;
   1a646:	2301      	movs	r3, #1
   1a648:	e04b      	b.n	1a6e2 <send_mode5+0x13a>
    v4[0] = 0x53;
   1a64a:	2353      	movs	r3, #83	@ 0x53
   1a64c:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x4A, v4, 1))
   1a650:	4b27      	ldr	r3, [pc, #156]	@ (1a6f0 <send_mode5+0x148>)
   1a652:	6818      	ldr	r0, [r3, #0]
   1a654:	aa03      	add	r2, sp, #12
   1a656:	2301      	movs	r3, #1
   1a658:	214a      	movs	r1, #74	@ 0x4a
   1a65a:	f7fe fc77 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a65e:	4603      	mov	r3, r0
   1a660:	2b00      	cmp	r3, #0
   1a662:	d001      	beq.n	1a668 <send_mode5+0xc0>
        return 1;
   1a664:	2301      	movs	r3, #1
   1a666:	e03c      	b.n	1a6e2 <send_mode5+0x13a>
    v4[0] = 0x17;
   1a668:	2317      	movs	r3, #23
   1a66a:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x80, v4, 1))
   1a66e:	4b20      	ldr	r3, [pc, #128]	@ (1a6f0 <send_mode5+0x148>)
   1a670:	6818      	ldr	r0, [r3, #0]
   1a672:	aa03      	add	r2, sp, #12
   1a674:	2301      	movs	r3, #1
   1a676:	2180      	movs	r1, #128	@ 0x80
   1a678:	f7fe fc68 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a67c:	4603      	mov	r3, r0
   1a67e:	2b00      	cmp	r3, #0
   1a680:	d001      	beq.n	1a686 <send_mode5+0xde>
        return 1;
   1a682:	2301      	movs	r3, #1
   1a684:	e02d      	b.n	1a6e2 <send_mode5+0x13a>
    v4[0] = 0x55;
   1a686:	2355      	movs	r3, #85	@ 0x55
   1a688:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x3A, v4, 1))
   1a68c:	4b18      	ldr	r3, [pc, #96]	@ (1a6f0 <send_mode5+0x148>)
   1a68e:	6818      	ldr	r0, [r3, #0]
   1a690:	aa03      	add	r2, sp, #12
   1a692:	2301      	movs	r3, #1
   1a694:	213a      	movs	r1, #58	@ 0x3a
   1a696:	f7fe fc59 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a69a:	4603      	mov	r3, r0
   1a69c:	2b00      	cmp	r3, #0
   1a69e:	d001      	beq.n	1a6a4 <send_mode5+0xfc>
        return 1;
   1a6a0:	2301      	movs	r3, #1
   1a6a2:	e01e      	b.n	1a6e2 <send_mode5+0x13a>
    v4[0] = 0x20;
   1a6a4:	2320      	movs	r3, #32
   1a6a6:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x53, v4, 1))
   1a6aa:	4b11      	ldr	r3, [pc, #68]	@ (1a6f0 <send_mode5+0x148>)
   1a6ac:	6818      	ldr	r0, [r3, #0]
   1a6ae:	aa03      	add	r2, sp, #12
   1a6b0:	2301      	movs	r3, #1
   1a6b2:	2153      	movs	r1, #83	@ 0x53
   1a6b4:	f7fe fc4a 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a6b8:	4603      	mov	r3, r0
   1a6ba:	2b00      	cmp	r3, #0
   1a6bc:	d001      	beq.n	1a6c2 <send_mode5+0x11a>
        return 1;
   1a6be:	2301      	movs	r3, #1
   1a6c0:	e00f      	b.n	1a6e2 <send_mode5+0x13a>
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x29, 0, 0))
   1a6c2:	4b0b      	ldr	r3, [pc, #44]	@ (1a6f0 <send_mode5+0x148>)
   1a6c4:	6818      	ldr	r0, [r3, #0]
   1a6c6:	2300      	movs	r3, #0
   1a6c8:	2200      	movs	r2, #0
   1a6ca:	2129      	movs	r1, #41	@ 0x29
   1a6cc:	f7fe fc3e 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a6d0:	4603      	mov	r3, r0
   1a6d2:	2b00      	cmp	r3, #0
   1a6d4:	d001      	beq.n	1a6da <send_mode5+0x132>
        return 1;
   1a6d6:	2301      	movs	r3, #1
   1a6d8:	e003      	b.n	1a6e2 <send_mode5+0x13a>
    am_util_delay_ms(20);
   1a6da:	2014      	movs	r0, #20
   1a6dc:	f001 f928 	bl	1b930 <am_util_delay_ms>
    return 0;
   1a6e0:	2300      	movs	r3, #0
}
   1a6e2:	4618      	mov	r0, r3
   1a6e4:	b007      	add	sp, #28
   1a6e6:	f85d fb04 	ldr.w	pc, [sp], #4
   1a6ea:	bf00      	nop
   1a6ec:	00027870 	.word	0x00027870
   1a6f0:	1002f6ec 	.word	0x1002f6ec
   1a6f4:	e9010000 	.word	0xe9010000

0001a6f8 <send_mode6>:

int send_mode6()
{
   1a6f8:	b500      	push	{lr}
   1a6fa:	b089      	sub	sp, #36	@ 0x24
    am_util_stdio_printf("Sending mode 6 display config now\r\n");
   1a6fc:	4880      	ldr	r0, [pc, #512]	@ (1a900 <send_mode6+0x208>)
   1a6fe:	f002 f85f 	bl	1c7c0 <am_util_stdio_printf>
    uint8_t pData[20];

    pData[0] = 0x20;
   1a702:	2320      	movs	r3, #32
   1a704:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u);
   1a708:	4b7e      	ldr	r3, [pc, #504]	@ (1a904 <send_mode6+0x20c>)
   1a70a:	6818      	ldr	r0, [r3, #0]
   1a70c:	aa03      	add	r2, sp, #12
   1a70e:	2301      	movs	r3, #1
   1a710:	21fe      	movs	r1, #254	@ 0xfe
   1a712:	f7fe fc1b 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x5A;
   1a716:	235a      	movs	r3, #90	@ 0x5a
   1a718:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xF4u, pData, 1u);
   1a71c:	4b79      	ldr	r3, [pc, #484]	@ (1a904 <send_mode6+0x20c>)
   1a71e:	6818      	ldr	r0, [r3, #0]
   1a720:	aa03      	add	r2, sp, #12
   1a722:	2301      	movs	r3, #1
   1a724:	21f4      	movs	r1, #244	@ 0xf4
   1a726:	f7fe fc11 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x59;
   1a72a:	2359      	movs	r3, #89	@ 0x59
   1a72c:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xF5u, pData, 1u);
   1a730:	4b74      	ldr	r3, [pc, #464]	@ (1a904 <send_mode6+0x20c>)
   1a732:	6818      	ldr	r0, [r3, #0]
   1a734:	aa03      	add	r2, sp, #12
   1a736:	2301      	movs	r3, #1
   1a738:	21f5      	movs	r1, #245	@ 0xf5
   1a73a:	f7fe fc07 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x40;
   1a73e:	2340      	movs	r3, #64	@ 0x40
   1a740:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u);
   1a744:	4b6f      	ldr	r3, [pc, #444]	@ (1a904 <send_mode6+0x20c>)
   1a746:	6818      	ldr	r0, [r3, #0]
   1a748:	aa03      	add	r2, sp, #12
   1a74a:	2301      	movs	r3, #1
   1a74c:	21fe      	movs	r1, #254	@ 0xfe
   1a74e:	f7fe fbfd 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 1;
   1a752:	2301      	movs	r3, #1
   1a754:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x98u, pData, 1u);
   1a758:	4b6a      	ldr	r3, [pc, #424]	@ (1a904 <send_mode6+0x20c>)
   1a75a:	6818      	ldr	r0, [r3, #0]
   1a75c:	aa03      	add	r2, sp, #12
   1a75e:	2301      	movs	r3, #1
   1a760:	2198      	movs	r1, #152	@ 0x98
   1a762:	f7fe fbf3 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0xE0;
   1a766:	23e0      	movs	r3, #224	@ 0xe0
   1a768:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u);
   1a76c:	4b65      	ldr	r3, [pc, #404]	@ (1a904 <send_mode6+0x20c>)
   1a76e:	6818      	ldr	r0, [r3, #0]
   1a770:	aa03      	add	r2, sp, #12
   1a772:	2301      	movs	r3, #1
   1a774:	21fe      	movs	r1, #254	@ 0xfe
   1a776:	f7fe fbe9 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x9E;
   1a77a:	239e      	movs	r3, #158	@ 0x9e
   1a77c:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x23u, pData, 1u);
   1a780:	4b60      	ldr	r3, [pc, #384]	@ (1a904 <send_mode6+0x20c>)
   1a782:	6818      	ldr	r0, [r3, #0]
   1a784:	aa03      	add	r2, sp, #12
   1a786:	2301      	movs	r3, #1
   1a788:	2123      	movs	r1, #35	@ 0x23
   1a78a:	f7fe fbdf 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0x81;
   1a78e:	2381      	movs	r3, #129	@ 0x81
   1a790:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x24u, pData, 1u);
   1a794:	4b5b      	ldr	r3, [pc, #364]	@ (1a904 <send_mode6+0x20c>)
   1a796:	6818      	ldr	r0, [r3, #0]
   1a798:	aa03      	add	r2, sp, #12
   1a79a:	2301      	movs	r3, #1
   1a79c:	2124      	movs	r1, #36	@ 0x24
   1a79e:	f7fe fbd5 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 3;
   1a7a2:	2303      	movs	r3, #3
   1a7a4:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x30u, pData, 1u);
   1a7a8:	4b56      	ldr	r3, [pc, #344]	@ (1a904 <send_mode6+0x20c>)
   1a7aa:	6818      	ldr	r0, [r3, #0]
   1a7ac:	aa03      	add	r2, sp, #12
   1a7ae:	2301      	movs	r3, #1
   1a7b0:	2130      	movs	r1, #48	@ 0x30
   1a7b2:	f7fe fbcb 	bl	18f4c <am_devices_mspi_rm69330_command_write>
    pData[0] = 0;
   1a7b6:	2300      	movs	r3, #0
   1a7b8:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xFEu, pData, 1u))
   1a7bc:	4b51      	ldr	r3, [pc, #324]	@ (1a904 <send_mode6+0x20c>)
   1a7be:	6818      	ldr	r0, [r3, #0]
   1a7c0:	aa03      	add	r2, sp, #12
   1a7c2:	2301      	movs	r3, #1
   1a7c4:	21fe      	movs	r1, #254	@ 0xfe
   1a7c6:	f7fe fbc1 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a7ca:	4603      	mov	r3, r0
   1a7cc:	2b00      	cmp	r3, #0
   1a7ce:	d001      	beq.n	1a7d4 <send_mode6+0xdc>
        return 1;
   1a7d0:	2301      	movs	r3, #1
   1a7d2:	e091      	b.n	1a8f8 <send_mode6+0x200>
    pData[0] = 0x80;
   1a7d4:	2380      	movs	r3, #128	@ 0x80
   1a7d6:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0xC4u, pData, 1u))
   1a7da:	4b4a      	ldr	r3, [pc, #296]	@ (1a904 <send_mode6+0x20c>)
   1a7dc:	6818      	ldr	r0, [r3, #0]
   1a7de:	aa03      	add	r2, sp, #12
   1a7e0:	2301      	movs	r3, #1
   1a7e2:	21c4      	movs	r1, #196	@ 0xc4
   1a7e4:	f7fe fbb2 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a7e8:	4603      	mov	r3, r0
   1a7ea:	2b00      	cmp	r3, #0
   1a7ec:	d001      	beq.n	1a7f2 <send_mode6+0xfa>
        return 1;
   1a7ee:	2301      	movs	r3, #1
   1a7f0:	e082      	b.n	1a8f8 <send_mode6+0x200>
    pData[0] = 0x55;
   1a7f2:	2355      	movs	r3, #85	@ 0x55
   1a7f4:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x3Au, pData, 1u))
   1a7f8:	4b42      	ldr	r3, [pc, #264]	@ (1a904 <send_mode6+0x20c>)
   1a7fa:	6818      	ldr	r0, [r3, #0]
   1a7fc:	aa03      	add	r2, sp, #12
   1a7fe:	2301      	movs	r3, #1
   1a800:	213a      	movs	r1, #58	@ 0x3a
   1a802:	f7fe fba3 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a806:	4603      	mov	r3, r0
   1a808:	2b00      	cmp	r3, #0
   1a80a:	d001      	beq.n	1a810 <send_mode6+0x118>
        return 1;
   1a80c:	2301      	movs	r3, #1
   1a80e:	e073      	b.n	1a8f8 <send_mode6+0x200>
    pData[0] = 0;
   1a810:	2300      	movs	r3, #0
   1a812:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x35u, pData, 1u))
   1a816:	4b3b      	ldr	r3, [pc, #236]	@ (1a904 <send_mode6+0x20c>)
   1a818:	6818      	ldr	r0, [r3, #0]
   1a81a:	aa03      	add	r2, sp, #12
   1a81c:	2301      	movs	r3, #1
   1a81e:	2135      	movs	r1, #53	@ 0x35
   1a820:	f7fe fb94 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a824:	4603      	mov	r3, r0
   1a826:	2b00      	cmp	r3, #0
   1a828:	d001      	beq.n	1a82e <send_mode6+0x136>
        return 1;
   1a82a:	2301      	movs	r3, #1
   1a82c:	e064      	b.n	1a8f8 <send_mode6+0x200>
    pData[0] = 0x20;
   1a82e:	2320      	movs	r3, #32
   1a830:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x53u, pData, 1u))
   1a834:	4b33      	ldr	r3, [pc, #204]	@ (1a904 <send_mode6+0x20c>)
   1a836:	6818      	ldr	r0, [r3, #0]
   1a838:	aa03      	add	r2, sp, #12
   1a83a:	2301      	movs	r3, #1
   1a83c:	2153      	movs	r1, #83	@ 0x53
   1a83e:	f7fe fb85 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a842:	4603      	mov	r3, r0
   1a844:	2b00      	cmp	r3, #0
   1a846:	d001      	beq.n	1a84c <send_mode6+0x154>
        return 1;
   1a848:	2301      	movs	r3, #1
   1a84a:	e055      	b.n	1a8f8 <send_mode6+0x200>
    pData[0] = 0xFF;
   1a84c:	23ff      	movs	r3, #255	@ 0xff
   1a84e:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x51u, pData, 1u))
   1a852:	4b2c      	ldr	r3, [pc, #176]	@ (1a904 <send_mode6+0x20c>)
   1a854:	6818      	ldr	r0, [r3, #0]
   1a856:	aa03      	add	r2, sp, #12
   1a858:	2301      	movs	r3, #1
   1a85a:	2151      	movs	r1, #81	@ 0x51
   1a85c:	f7fe fb76 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a860:	4603      	mov	r3, r0
   1a862:	2b00      	cmp	r3, #0
   1a864:	d001      	beq.n	1a86a <send_mode6+0x172>
        return 1;
   1a866:	2301      	movs	r3, #1
   1a868:	e046      	b.n	1a8f8 <send_mode6+0x200>
    pData[0] = 0xFF;
   1a86a:	23ff      	movs	r3, #255	@ 0xff
   1a86c:	f88d 300c 	strb.w	r3, [sp, #12]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x63u, pData, 1u))
   1a870:	4b24      	ldr	r3, [pc, #144]	@ (1a904 <send_mode6+0x20c>)
   1a872:	6818      	ldr	r0, [r3, #0]
   1a874:	aa03      	add	r2, sp, #12
   1a876:	2301      	movs	r3, #1
   1a878:	2163      	movs	r1, #99	@ 0x63
   1a87a:	f7fe fb67 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a87e:	4603      	mov	r3, r0
   1a880:	2b00      	cmp	r3, #0
   1a882:	d001      	beq.n	1a888 <send_mode6+0x190>
        return 1;
   1a884:	2301      	movs	r3, #1
   1a886:	e037      	b.n	1a8f8 <send_mode6+0x200>
    uint32_t v2 = 0xD7001800;
   1a888:	4b1f      	ldr	r3, [pc, #124]	@ (1a908 <send_mode6+0x210>)
   1a88a:	9302      	str	r3, [sp, #8]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x2Au, (uint8_t *)&v2, 4u))
   1a88c:	4b1d      	ldr	r3, [pc, #116]	@ (1a904 <send_mode6+0x20c>)
   1a88e:	6818      	ldr	r0, [r3, #0]
   1a890:	aa02      	add	r2, sp, #8
   1a892:	2304      	movs	r3, #4
   1a894:	212a      	movs	r1, #42	@ 0x2a
   1a896:	f7fe fb59 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a89a:	4603      	mov	r3, r0
   1a89c:	2b00      	cmp	r3, #0
   1a89e:	d001      	beq.n	1a8a4 <send_mode6+0x1ac>
        return 1;
   1a8a0:	2301      	movs	r3, #1
   1a8a2:	e029      	b.n	1a8f8 <send_mode6+0x200>
    uint32_t v1 = 0xE9010000;
   1a8a4:	4b19      	ldr	r3, [pc, #100]	@ (1a90c <send_mode6+0x214>)
   1a8a6:	9301      	str	r3, [sp, #4]
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x2Bu, (uint8_t *)&v1, 4u))
   1a8a8:	4b16      	ldr	r3, [pc, #88]	@ (1a904 <send_mode6+0x20c>)
   1a8aa:	6818      	ldr	r0, [r3, #0]
   1a8ac:	aa01      	add	r2, sp, #4
   1a8ae:	2304      	movs	r3, #4
   1a8b0:	212b      	movs	r1, #43	@ 0x2b
   1a8b2:	f7fe fb4b 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a8b6:	4603      	mov	r3, r0
   1a8b8:	2b00      	cmp	r3, #0
   1a8ba:	d001      	beq.n	1a8c0 <send_mode6+0x1c8>
        return 1;
   1a8bc:	2301      	movs	r3, #1
   1a8be:	e01b      	b.n	1a8f8 <send_mode6+0x200>
    if (am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x11u, 0, 0))
   1a8c0:	4b10      	ldr	r3, [pc, #64]	@ (1a904 <send_mode6+0x20c>)
   1a8c2:	6818      	ldr	r0, [r3, #0]
   1a8c4:	2300      	movs	r3, #0
   1a8c6:	2200      	movs	r2, #0
   1a8c8:	2111      	movs	r1, #17
   1a8ca:	f7fe fb3f 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a8ce:	4603      	mov	r3, r0
   1a8d0:	2b00      	cmp	r3, #0
   1a8d2:	d001      	beq.n	1a8d8 <send_mode6+0x1e0>
        return 1;
   1a8d4:	2301      	movs	r3, #1
   1a8d6:	e00f      	b.n	1a8f8 <send_mode6+0x200>
    am_util_delay_ms(60);
   1a8d8:	203c      	movs	r0, #60	@ 0x3c
   1a8da:	f001 f829 	bl	1b930 <am_util_delay_ms>
    return am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x29u, 0, 0) != 0;
   1a8de:	4b09      	ldr	r3, [pc, #36]	@ (1a904 <send_mode6+0x20c>)
   1a8e0:	6818      	ldr	r0, [r3, #0]
   1a8e2:	2300      	movs	r3, #0
   1a8e4:	2200      	movs	r2, #0
   1a8e6:	2129      	movs	r1, #41	@ 0x29
   1a8e8:	f7fe fb30 	bl	18f4c <am_devices_mspi_rm69330_command_write>
   1a8ec:	4603      	mov	r3, r0
   1a8ee:	2b00      	cmp	r3, #0
   1a8f0:	bf14      	ite	ne
   1a8f2:	2301      	movne	r3, #1
   1a8f4:	2300      	moveq	r3, #0
   1a8f6:	b2db      	uxtb	r3, r3
}
   1a8f8:	4618      	mov	r0, r3
   1a8fa:	b009      	add	sp, #36	@ 0x24
   1a8fc:	f85d fb04 	ldr.w	pc, [sp], #4
   1a900:	00027894 	.word	0x00027894
   1a904:	1002f6ec 	.word	0x1002f6ec
   1a908:	d7001800 	.word	0xd7001800
   1a90c:	e9010000 	.word	0xe9010000

0001a910 <getDisplayMode>:

int getDisplayMode(uint32_t displayId)
{
   1a910:	b082      	sub	sp, #8
   1a912:	9001      	str	r0, [sp, #4]
    displayId = displayId & 0xffffff;
   1a914:	9b01      	ldr	r3, [sp, #4]
   1a916:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
   1a91a:	9301      	str	r3, [sp, #4]
    if (displayId == 0x200216)
   1a91c:	9b01      	ldr	r3, [sp, #4]
   1a91e:	4a1a      	ldr	r2, [pc, #104]	@ (1a988 <getDisplayMode+0x78>)
   1a920:	4293      	cmp	r3, r2
   1a922:	d101      	bne.n	1a928 <getDisplayMode+0x18>
        return 1;
   1a924:	2301      	movs	r3, #1
   1a926:	e02b      	b.n	1a980 <getDisplayMode+0x70>
    if (displayId == 0x200116)
   1a928:	9b01      	ldr	r3, [sp, #4]
   1a92a:	4a18      	ldr	r2, [pc, #96]	@ (1a98c <getDisplayMode+0x7c>)
   1a92c:	4293      	cmp	r3, r2
   1a92e:	d101      	bne.n	1a934 <getDisplayMode+0x24>
        return 7;
   1a930:	2307      	movs	r3, #7
   1a932:	e025      	b.n	1a980 <getDisplayMode+0x70>
    if (((displayId & 0xffff) == 0x0216) && ((displayId >> 16) - 0x30) <= 1)
   1a934:	9b01      	ldr	r3, [sp, #4]
   1a936:	b29b      	uxth	r3, r3
   1a938:	f240 2216 	movw	r2, #534	@ 0x216
   1a93c:	4293      	cmp	r3, r2
   1a93e:	d106      	bne.n	1a94e <getDisplayMode+0x3e>
   1a940:	9b01      	ldr	r3, [sp, #4]
   1a942:	0c1b      	lsrs	r3, r3, #16
   1a944:	3b30      	subs	r3, #48	@ 0x30
   1a946:	2b01      	cmp	r3, #1
   1a948:	d801      	bhi.n	1a94e <getDisplayMode+0x3e>
        return 2;
   1a94a:	2302      	movs	r3, #2
   1a94c:	e018      	b.n	1a980 <getDisplayMode+0x70>
    if (displayId == 0x300416)
   1a94e:	9b01      	ldr	r3, [sp, #4]
   1a950:	4a0f      	ldr	r2, [pc, #60]	@ (1a990 <getDisplayMode+0x80>)
   1a952:	4293      	cmp	r3, r2
   1a954:	d101      	bne.n	1a95a <getDisplayMode+0x4a>
        return 6;
   1a956:	2306      	movs	r3, #6
   1a958:	e012      	b.n	1a980 <getDisplayMode+0x70>
    if (displayId == 0x400216)
   1a95a:	9b01      	ldr	r3, [sp, #4]
   1a95c:	4a0d      	ldr	r2, [pc, #52]	@ (1a994 <getDisplayMode+0x84>)
   1a95e:	4293      	cmp	r3, r2
   1a960:	d101      	bne.n	1a966 <getDisplayMode+0x56>
        return 5;
   1a962:	2305      	movs	r3, #5
   1a964:	e00c      	b.n	1a980 <getDisplayMode+0x70>
    if (displayId == 0x050A1D)
   1a966:	9b01      	ldr	r3, [sp, #4]
   1a968:	4a0b      	ldr	r2, [pc, #44]	@ (1a998 <getDisplayMode+0x88>)
   1a96a:	4293      	cmp	r3, r2
   1a96c:	d101      	bne.n	1a972 <getDisplayMode+0x62>
        return 3;
   1a96e:	2303      	movs	r3, #3
   1a970:	e006      	b.n	1a980 <getDisplayMode+0x70>
    if (displayId == 0x050A5A)
   1a972:	9b01      	ldr	r3, [sp, #4]
   1a974:	4a09      	ldr	r2, [pc, #36]	@ (1a99c <getDisplayMode+0x8c>)
   1a976:	4293      	cmp	r3, r2
   1a978:	d101      	bne.n	1a97e <getDisplayMode+0x6e>
        return 4;
   1a97a:	2304      	movs	r3, #4
   1a97c:	e000      	b.n	1a980 <getDisplayMode+0x70>
    return 0;
   1a97e:	2300      	movs	r3, #0
}
   1a980:	4618      	mov	r0, r3
   1a982:	b002      	add	sp, #8
   1a984:	4770      	bx	lr
   1a986:	bf00      	nop
   1a988:	00200216 	.word	0x00200216
   1a98c:	00200116 	.word	0x00200116
   1a990:	00300416 	.word	0x00300416
   1a994:	00400216 	.word	0x00400216
   1a998:	00050a1d 	.word	0x00050a1d
   1a99c:	00050a5a 	.word	0x00050a5a

0001a9a0 <display_pins_enable>:
    am_hal_interrupt_master_set(v0);
    am_util_delay_ms(1);
}

void display_pins_enable(bool state)
{
   1a9a0:	b500      	push	{lr}
   1a9a2:	b083      	sub	sp, #12
   1a9a4:	4603      	mov	r3, r0
   1a9a6:	f88d 3007 	strb.w	r3, [sp, #7]
    if (state)
   1a9aa:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1a9ae:	2b00      	cmp	r3, #0
   1a9b0:	d021      	beq.n	1a9f6 <display_pins_enable+0x56>
    {
        am_hal_gpio_pinconfig(42, g_AM_GPIO_RESET_42);
   1a9b2:	4b1a      	ldr	r3, [pc, #104]	@ (1aa1c <display_pins_enable+0x7c>)
   1a9b4:	6819      	ldr	r1, [r3, #0]
   1a9b6:	202a      	movs	r0, #42	@ 0x2a
   1a9b8:	f00b fc18 	bl	261ec <am_hal_gpio_pinconfig>
        // display_pins_irq_something_enable();
        pinMode(11, 1);
   1a9bc:	2101      	movs	r1, #1
   1a9be:	200b      	movs	r0, #11
   1a9c0:	f7fe fa68 	bl	18e94 <pinMode>
        pinMode(41, 1);
   1a9c4:	2101      	movs	r1, #1
   1a9c6:	2029      	movs	r0, #41	@ 0x29
   1a9c8:	f7fe fa64 	bl	18e94 <pinMode>
        digitalWrite(11, 1);
   1a9cc:	2101      	movs	r1, #1
   1a9ce:	200b      	movs	r0, #11
   1a9d0:	f7fe fa8e 	bl	18ef0 <digitalWrite>
        digitalWrite(41, 1);
   1a9d4:	2101      	movs	r1, #1
   1a9d6:	2029      	movs	r0, #41	@ 0x29
   1a9d8:	f7fe fa8a 	bl	18ef0 <digitalWrite>
        digitalWrite(42, 1);
   1a9dc:	2101      	movs	r1, #1
   1a9de:	202a      	movs	r0, #42	@ 0x2a
   1a9e0:	f7fe fa86 	bl	18ef0 <digitalWrite>
        am_util_delay_ms(25);
   1a9e4:	2019      	movs	r0, #25
   1a9e6:	f000 ffa3 	bl	1b930 <am_util_delay_ms>
        am_bsp_disp_pins_enable1();
   1a9ea:	f7ff fa29 	bl	19e40 <am_bsp_disp_pins_enable1>
        am_util_delay_ms(1);
   1a9ee:	2001      	movs	r0, #1
   1a9f0:	f000 ff9e 	bl	1b930 <am_util_delay_ms>
        am_util_delay_ms(1);
        am_bsp_disp_pins_disable1();
        am_util_delay_ms(1);
        // display_pins_irq_something_disable();
    }
}
   1a9f4:	e00e      	b.n	1aa14 <display_pins_enable+0x74>
        am_util_delay_ms(100);
   1a9f6:	2064      	movs	r0, #100	@ 0x64
   1a9f8:	f000 ff9a 	bl	1b930 <am_util_delay_ms>
        digitalWrite(42, 0);
   1a9fc:	2100      	movs	r1, #0
   1a9fe:	202a      	movs	r0, #42	@ 0x2a
   1aa00:	f7fe fa76 	bl	18ef0 <digitalWrite>
        am_util_delay_ms(1);
   1aa04:	2001      	movs	r0, #1
   1aa06:	f000 ff93 	bl	1b930 <am_util_delay_ms>
        am_bsp_disp_pins_disable1();
   1aa0a:	f7ff fa4d 	bl	19ea8 <am_bsp_disp_pins_disable1>
        am_util_delay_ms(1);
   1aa0e:	2001      	movs	r0, #1
   1aa10:	f000 ff8e 	bl	1b930 <am_util_delay_ms>
}
   1aa14:	bf00      	nop
   1aa16:	b003      	add	sp, #12
   1aa18:	f85d fb04 	ldr.w	pc, [sp], #4
   1aa1c:	100010b0 	.word	0x100010b0

0001aa20 <setBrightness>:

void setBrightness(uint8_t brightness)
{
   1aa20:	b500      	push	{lr}
   1aa22:	b085      	sub	sp, #20
   1aa24:	4603      	mov	r3, r0
   1aa26:	f88d 3007 	strb.w	r3, [sp, #7]
    uint8_t dd[1] = {brightness};
   1aa2a:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1aa2e:	f88d 300c 	strb.w	r3, [sp, #12]
    am_devices_mspi_rm69330_command_write(g_DisplayHandle, 0x51u, dd, 1);
   1aa32:	4b05      	ldr	r3, [pc, #20]	@ (1aa48 <setBrightness+0x28>)
   1aa34:	6818      	ldr	r0, [r3, #0]
   1aa36:	aa03      	add	r2, sp, #12
   1aa38:	2301      	movs	r3, #1
   1aa3a:	2151      	movs	r1, #81	@ 0x51
   1aa3c:	f7fe fa86 	bl	18f4c <am_devices_mspi_rm69330_command_write>
}
   1aa40:	bf00      	nop
   1aa42:	b005      	add	sp, #20
   1aa44:	f85d fb04 	ldr.w	pc, [sp], #4
   1aa48:	1002f6ec 	.word	0x1002f6ec

0001aa4c <am_devices_display_transfer_frame_inter>:

static uint32_t am_devices_display_transfer_frame_inter(void)
{
    // am_devices_display_prepare_transfer();
    sDispTransfer.bXferPending = true;
   1aa4c:	4b02      	ldr	r3, [pc, #8]	@ (1aa58 <am_devices_display_transfer_frame_inter+0xc>)
   1aa4e:	2201      	movs	r2, #1
   1aa50:	701a      	strb	r2, [r3, #0]
    return AM_DEVICES_DISPLAY_STATUS_SUCCESS;
   1aa52:	2300      	movs	r3, #0
}
   1aa54:	4618      	mov	r0, r3
   1aa56:	4770      	bx	lr
   1aa58:	1002fa5c 	.word	0x1002fa5c

0001aa5c <am_devices_display_transfer_frame>:

uint32_t am_devices_display_transfer_frame(uint16_t ui16ResX, uint16_t ui16ResY, uint32_t ui32Address, am_devices_disp_handler_t fnXferDoneCb, void *pArgXferDone)
{
   1aa5c:	b500      	push	{lr}
   1aa5e:	b085      	sub	sp, #20
   1aa60:	9202      	str	r2, [sp, #8]
   1aa62:	9301      	str	r3, [sp, #4]
   1aa64:	4603      	mov	r3, r0
   1aa66:	f8ad 300e 	strh.w	r3, [sp, #14]
   1aa6a:	460b      	mov	r3, r1
   1aa6c:	f8ad 300c 	strh.w	r3, [sp, #12]
    if (sDispTransfer.bXferBusy)
   1aa70:	4b13      	ldr	r3, [pc, #76]	@ (1aac0 <am_devices_display_transfer_frame+0x64>)
   1aa72:	785b      	ldrb	r3, [r3, #1]
   1aa74:	b2db      	uxtb	r3, r3
   1aa76:	2b00      	cmp	r3, #0
   1aa78:	d001      	beq.n	1aa7e <am_devices_display_transfer_frame+0x22>
    {
        return AM_DEVICES_DISPLAY_STATUS_TRY_AGAIN;
   1aa7a:	230a      	movs	r3, #10
   1aa7c:	e01c      	b.n	1aab8 <am_devices_display_transfer_frame+0x5c>
    }

    //
    // Record the transfer setting
    //
    sDispTransfer.bXferBusy = true;
   1aa7e:	4b10      	ldr	r3, [pc, #64]	@ (1aac0 <am_devices_display_transfer_frame+0x64>)
   1aa80:	2201      	movs	r2, #1
   1aa82:	705a      	strb	r2, [r3, #1]
    sDispTransfer.bXferPending = false;
   1aa84:	4b0e      	ldr	r3, [pc, #56]	@ (1aac0 <am_devices_display_transfer_frame+0x64>)
   1aa86:	2200      	movs	r2, #0
   1aa88:	701a      	strb	r2, [r3, #0]
    sDispTransfer.ui16XferResX = ui16ResX;
   1aa8a:	4a0d      	ldr	r2, [pc, #52]	@ (1aac0 <am_devices_display_transfer_frame+0x64>)
   1aa8c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
   1aa90:	8053      	strh	r3, [r2, #2]
    sDispTransfer.ui16XferResY = ui16ResY;
   1aa92:	4a0b      	ldr	r2, [pc, #44]	@ (1aac0 <am_devices_display_transfer_frame+0x64>)
   1aa94:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   1aa98:	8093      	strh	r3, [r2, #4]
    sDispTransfer.ui32XferAddress = ui32Address;
   1aa9a:	4a09      	ldr	r2, [pc, #36]	@ (1aac0 <am_devices_display_transfer_frame+0x64>)
   1aa9c:	9b02      	ldr	r3, [sp, #8]
   1aa9e:	6093      	str	r3, [r2, #8]
    sDispTransfer.fnXferDoneCb = fnXferDoneCb;
   1aaa0:	4a07      	ldr	r2, [pc, #28]	@ (1aac0 <am_devices_display_transfer_frame+0x64>)
   1aaa2:	9b01      	ldr	r3, [sp, #4]
   1aaa4:	60d3      	str	r3, [r2, #12]
    sDispTransfer.pArgXferDone = pArgXferDone;
   1aaa6:	4a06      	ldr	r2, [pc, #24]	@ (1aac0 <am_devices_display_transfer_frame+0x64>)
   1aaa8:	9b06      	ldr	r3, [sp, #24]
   1aaaa:	6113      	str	r3, [r2, #16]
    sDispTransfer.total_stripe = 0;
   1aaac:	4b04      	ldr	r3, [pc, #16]	@ (1aac0 <am_devices_display_transfer_frame+0x64>)
   1aaae:	2200      	movs	r2, #0
   1aab0:	615a      	str	r2, [r3, #20]

    return am_devices_display_transfer_frame_inter();
   1aab2:	f7ff ffcb 	bl	1aa4c <am_devices_display_transfer_frame_inter>
   1aab6:	4603      	mov	r3, r0
}
   1aab8:	4618      	mov	r0, r3
   1aaba:	b005      	add	sp, #20
   1aabc:	f85d fb04 	ldr.w	pc, [sp], #4
   1aac0:	1002fa5c 	.word	0x1002fa5c

0001aac4 <set_xy_here>:

uint16_t x_here, y_here;

void set_xy_here(uint16_t x_now, uint16_t y_now)
{
   1aac4:	b500      	push	{lr}
   1aac6:	b089      	sub	sp, #36	@ 0x24
   1aac8:	4603      	mov	r3, r0
   1aaca:	460a      	mov	r2, r1
   1aacc:	f8ad 300e 	strh.w	r3, [sp, #14]
   1aad0:	4613      	mov	r3, r2
   1aad2:	f8ad 300c 	strh.w	r3, [sp, #12]
    x_here = x_now;
   1aad6:	4a24      	ldr	r2, [pc, #144]	@ (1ab68 <set_xy_here+0xa4>)
   1aad8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
   1aadc:	8013      	strh	r3, [r2, #0]
    y_here = y_now;
   1aade:	4a23      	ldr	r2, [pc, #140]	@ (1ab6c <set_xy_here+0xa8>)
   1aae0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   1aae4:	8013      	strh	r3, [r2, #0]
    displayPrintln(5, 300, (char *)"ATC1441", 0x1A1E, 0x0000, 4);
   1aae6:	2304      	movs	r3, #4
   1aae8:	9301      	str	r3, [sp, #4]
   1aaea:	2300      	movs	r3, #0
   1aaec:	9300      	str	r3, [sp, #0]
   1aaee:	f641 231e 	movw	r3, #6686	@ 0x1a1e
   1aaf2:	4a1f      	ldr	r2, [pc, #124]	@ (1ab70 <set_xy_here+0xac>)
   1aaf4:	f44f 7196 	mov.w	r1, #300	@ 0x12c
   1aaf8:	2005      	movs	r0, #5
   1aafa:	f7ff f88f 	bl	19c1c <displayPrintln>
    char time_string[14];
    sprintf(time_string, "X %i  ", x_here);
   1aafe:	4b1a      	ldr	r3, [pc, #104]	@ (1ab68 <set_xy_here+0xa4>)
   1ab00:	881b      	ldrh	r3, [r3, #0]
   1ab02:	461a      	mov	r2, r3
   1ab04:	ab04      	add	r3, sp, #16
   1ab06:	491b      	ldr	r1, [pc, #108]	@ (1ab74 <set_xy_here+0xb0>)
   1ab08:	4618      	mov	r0, r3
   1ab0a:	f001 feb3 	bl	1c874 <sprintf>
    displayPrintln(5, 340, time_string, 0xFBA8, 0x0000, 4);
   1ab0e:	aa04      	add	r2, sp, #16
   1ab10:	2304      	movs	r3, #4
   1ab12:	9301      	str	r3, [sp, #4]
   1ab14:	2300      	movs	r3, #0
   1ab16:	9300      	str	r3, [sp, #0]
   1ab18:	f64f 33a8 	movw	r3, #64424	@ 0xfba8
   1ab1c:	f44f 71aa 	mov.w	r1, #340	@ 0x154
   1ab20:	2005      	movs	r0, #5
   1ab22:	f7ff f87b 	bl	19c1c <displayPrintln>
    sprintf(time_string, "Y %i  ", y_here);
   1ab26:	4b11      	ldr	r3, [pc, #68]	@ (1ab6c <set_xy_here+0xa8>)
   1ab28:	881b      	ldrh	r3, [r3, #0]
   1ab2a:	461a      	mov	r2, r3
   1ab2c:	ab04      	add	r3, sp, #16
   1ab2e:	4912      	ldr	r1, [pc, #72]	@ (1ab78 <set_xy_here+0xb4>)
   1ab30:	4618      	mov	r0, r3
   1ab32:	f001 fe9f 	bl	1c874 <sprintf>
    displayPrintln(5, 380, time_string, 0xFBA8, 0x0000, 4);
   1ab36:	aa04      	add	r2, sp, #16
   1ab38:	2304      	movs	r3, #4
   1ab3a:	9301      	str	r3, [sp, #4]
   1ab3c:	2300      	movs	r3, #0
   1ab3e:	9300      	str	r3, [sp, #0]
   1ab40:	f64f 33a8 	movw	r3, #64424	@ 0xfba8
   1ab44:	f44f 71be 	mov.w	r1, #380	@ 0x17c
   1ab48:	2005      	movs	r0, #5
   1ab4a:	f7ff f867 	bl	19c1c <displayPrintln>
    am_devices_display_transfer_frame(490, 192, (uint32_t)&display_buffer, NULL, NULL);
   1ab4e:	4a0b      	ldr	r2, [pc, #44]	@ (1ab7c <set_xy_here+0xb8>)
   1ab50:	2300      	movs	r3, #0
   1ab52:	9300      	str	r3, [sp, #0]
   1ab54:	2300      	movs	r3, #0
   1ab56:	21c0      	movs	r1, #192	@ 0xc0
   1ab58:	f44f 70f5 	mov.w	r0, #490	@ 0x1ea
   1ab5c:	f7ff ff7e 	bl	1aa5c <am_devices_display_transfer_frame>
}
   1ab60:	bf00      	nop
   1ab62:	b009      	add	sp, #36	@ 0x24
   1ab64:	f85d fb04 	ldr.w	pc, [sp], #4
   1ab68:	1002fa74 	.word	0x1002fa74
   1ab6c:	1002fa76 	.word	0x1002fa76
   1ab70:	000278b8 	.word	0x000278b8
   1ab74:	000278c0 	.word	0x000278c0
   1ab78:	000278c8 	.word	0x000278c8
   1ab7c:	100017e4 	.word	0x100017e4

0001ab80 <set_light_here>:

uint16_t light_here;
uint16_t light_small_here;
void set_light_here(uint16_t light_value, uint16_t light_small)
{
   1ab80:	b500      	push	{lr}
   1ab82:	b089      	sub	sp, #36	@ 0x24
   1ab84:	4603      	mov	r3, r0
   1ab86:	460a      	mov	r2, r1
   1ab88:	f8ad 300e 	strh.w	r3, [sp, #14]
   1ab8c:	4613      	mov	r3, r2
   1ab8e:	f8ad 300c 	strh.w	r3, [sp, #12]
    light_here = light_value;
   1ab92:	4a30      	ldr	r2, [pc, #192]	@ (1ac54 <set_light_here+0xd4>)
   1ab94:	f8bd 300e 	ldrh.w	r3, [sp, #14]
   1ab98:	8013      	strh	r3, [r2, #0]
    light_small_here = light_small;
   1ab9a:	4a2f      	ldr	r2, [pc, #188]	@ (1ac58 <set_light_here+0xd8>)
   1ab9c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   1aba0:	8013      	strh	r3, [r2, #0]
    displayPrintln(5, 100, (char *)"ATC1441", 0x1A1E, 0x0000, 4);
   1aba2:	2304      	movs	r3, #4
   1aba4:	9301      	str	r3, [sp, #4]
   1aba6:	2300      	movs	r3, #0
   1aba8:	9300      	str	r3, [sp, #0]
   1abaa:	f641 231e 	movw	r3, #6686	@ 0x1a1e
   1abae:	4a2b      	ldr	r2, [pc, #172]	@ (1ac5c <set_light_here+0xdc>)
   1abb0:	2164      	movs	r1, #100	@ 0x64
   1abb2:	2005      	movs	r0, #5
   1abb4:	f7ff f832 	bl	19c1c <displayPrintln>
    displayPrintln(5, 260, (char *)"Light", 0x1A1E, 0x0000, 4);
   1abb8:	2304      	movs	r3, #4
   1abba:	9301      	str	r3, [sp, #4]
   1abbc:	2300      	movs	r3, #0
   1abbe:	9300      	str	r3, [sp, #0]
   1abc0:	f641 231e 	movw	r3, #6686	@ 0x1a1e
   1abc4:	4a26      	ldr	r2, [pc, #152]	@ (1ac60 <set_light_here+0xe0>)
   1abc6:	f44f 7182 	mov.w	r1, #260	@ 0x104
   1abca:	2005      	movs	r0, #5
   1abcc:	f7ff f826 	bl	19c1c <displayPrintln>
    displayPrintln(5, 300, (char *)"Sensor", 0x1A1E, 0x0000, 4);
   1abd0:	2304      	movs	r3, #4
   1abd2:	9301      	str	r3, [sp, #4]
   1abd4:	2300      	movs	r3, #0
   1abd6:	9300      	str	r3, [sp, #0]
   1abd8:	f641 231e 	movw	r3, #6686	@ 0x1a1e
   1abdc:	4a21      	ldr	r2, [pc, #132]	@ (1ac64 <set_light_here+0xe4>)
   1abde:	f44f 7196 	mov.w	r1, #300	@ 0x12c
   1abe2:	2005      	movs	r0, #5
   1abe4:	f7ff f81a 	bl	19c1c <displayPrintln>
    char time_string[14];
    sprintf(time_string, "%i   ", light_here);
   1abe8:	4b1a      	ldr	r3, [pc, #104]	@ (1ac54 <set_light_here+0xd4>)
   1abea:	881b      	ldrh	r3, [r3, #0]
   1abec:	461a      	mov	r2, r3
   1abee:	ab04      	add	r3, sp, #16
   1abf0:	491d      	ldr	r1, [pc, #116]	@ (1ac68 <set_light_here+0xe8>)
   1abf2:	4618      	mov	r0, r3
   1abf4:	f001 fe3e 	bl	1c874 <sprintf>
    displayPrintln(5, 340, time_string, 0xFBA8, 0x0000, 4);
   1abf8:	aa04      	add	r2, sp, #16
   1abfa:	2304      	movs	r3, #4
   1abfc:	9301      	str	r3, [sp, #4]
   1abfe:	2300      	movs	r3, #0
   1ac00:	9300      	str	r3, [sp, #0]
   1ac02:	f64f 33a8 	movw	r3, #64424	@ 0xfba8
   1ac06:	f44f 71aa 	mov.w	r1, #340	@ 0x154
   1ac0a:	2005      	movs	r0, #5
   1ac0c:	f7ff f806 	bl	19c1c <displayPrintln>
    sprintf(time_string, "%i   ", light_small_here);
   1ac10:	4b11      	ldr	r3, [pc, #68]	@ (1ac58 <set_light_here+0xd8>)
   1ac12:	881b      	ldrh	r3, [r3, #0]
   1ac14:	461a      	mov	r2, r3
   1ac16:	ab04      	add	r3, sp, #16
   1ac18:	4913      	ldr	r1, [pc, #76]	@ (1ac68 <set_light_here+0xe8>)
   1ac1a:	4618      	mov	r0, r3
   1ac1c:	f001 fe2a 	bl	1c874 <sprintf>
    displayPrintln(5, 380, time_string, 0xFBA8, 0x0000, 4);
   1ac20:	aa04      	add	r2, sp, #16
   1ac22:	2304      	movs	r3, #4
   1ac24:	9301      	str	r3, [sp, #4]
   1ac26:	2300      	movs	r3, #0
   1ac28:	9300      	str	r3, [sp, #0]
   1ac2a:	f64f 33a8 	movw	r3, #64424	@ 0xfba8
   1ac2e:	f44f 71be 	mov.w	r1, #380	@ 0x17c
   1ac32:	2005      	movs	r0, #5
   1ac34:	f7fe fff2 	bl	19c1c <displayPrintln>
    am_devices_display_transfer_frame(490, 192, (uint32_t)&display_buffer, NULL, NULL);
   1ac38:	4a0c      	ldr	r2, [pc, #48]	@ (1ac6c <set_light_here+0xec>)
   1ac3a:	2300      	movs	r3, #0
   1ac3c:	9300      	str	r3, [sp, #0]
   1ac3e:	2300      	movs	r3, #0
   1ac40:	21c0      	movs	r1, #192	@ 0xc0
   1ac42:	f44f 70f5 	mov.w	r0, #490	@ 0x1ea
   1ac46:	f7ff ff09 	bl	1aa5c <am_devices_display_transfer_frame>
}
   1ac4a:	bf00      	nop
   1ac4c:	b009      	add	sp, #36	@ 0x24
   1ac4e:	f85d fb04 	ldr.w	pc, [sp], #4
   1ac52:	bf00      	nop
   1ac54:	1002fa78 	.word	0x1002fa78
   1ac58:	1002fa7a 	.word	0x1002fa7a
   1ac5c:	000278b8 	.word	0x000278b8
   1ac60:	000278d0 	.word	0x000278d0
   1ac64:	000278d8 	.word	0x000278d8
   1ac68:	000278e0 	.word	0x000278e0
   1ac6c:	100017e4 	.word	0x100017e4

0001ac70 <display_buffset>:

void display_buffset(uint16_t data)
{
   1ac70:	b500      	push	{lr}
   1ac72:	b087      	sub	sp, #28
   1ac74:	4603      	mov	r3, r0
   1ac76:	f8ad 300e 	strh.w	r3, [sp, #14]
    for (int i = 0; i < sizeof(display_buffer) / 2; i++)
   1ac7a:	2300      	movs	r3, #0
   1ac7c:	9305      	str	r3, [sp, #20]
   1ac7e:	e013      	b.n	1aca8 <display_buffset+0x38>
    {
        display_buffer[i * 2] = data >> 8;
   1ac80:	f8bd 300e 	ldrh.w	r3, [sp, #14]
   1ac84:	0a1b      	lsrs	r3, r3, #8
   1ac86:	b29a      	uxth	r2, r3
   1ac88:	9b05      	ldr	r3, [sp, #20]
   1ac8a:	005b      	lsls	r3, r3, #1
   1ac8c:	b2d1      	uxtb	r1, r2
   1ac8e:	4a0f      	ldr	r2, [pc, #60]	@ (1accc <display_buffset+0x5c>)
   1ac90:	54d1      	strb	r1, [r2, r3]
        display_buffer[(i * 2) + 1] = data & 0xff;
   1ac92:	9b05      	ldr	r3, [sp, #20]
   1ac94:	005b      	lsls	r3, r3, #1
   1ac96:	3301      	adds	r3, #1
   1ac98:	f8bd 200e 	ldrh.w	r2, [sp, #14]
   1ac9c:	b2d1      	uxtb	r1, r2
   1ac9e:	4a0b      	ldr	r2, [pc, #44]	@ (1accc <display_buffset+0x5c>)
   1aca0:	54d1      	strb	r1, [r2, r3]
    for (int i = 0; i < sizeof(display_buffer) / 2; i++)
   1aca2:	9b05      	ldr	r3, [sp, #20]
   1aca4:	3301      	adds	r3, #1
   1aca6:	9305      	str	r3, [sp, #20]
   1aca8:	9b05      	ldr	r3, [sp, #20]
   1acaa:	4a09      	ldr	r2, [pc, #36]	@ (1acd0 <display_buffset+0x60>)
   1acac:	4293      	cmp	r3, r2
   1acae:	d9e7      	bls.n	1ac80 <display_buffset+0x10>
    }
    am_devices_display_transfer_frame(490, 192, (uint32_t)&display_buffer, NULL, NULL);
   1acb0:	4a06      	ldr	r2, [pc, #24]	@ (1accc <display_buffset+0x5c>)
   1acb2:	2300      	movs	r3, #0
   1acb4:	9300      	str	r3, [sp, #0]
   1acb6:	2300      	movs	r3, #0
   1acb8:	21c0      	movs	r1, #192	@ 0xc0
   1acba:	f44f 70f5 	mov.w	r0, #490	@ 0x1ea
   1acbe:	f7ff fecd 	bl	1aa5c <am_devices_display_transfer_frame>
}
   1acc2:	bf00      	nop
   1acc4:	b007      	add	sp, #28
   1acc6:	f85d fb04 	ldr.w	pc, [sp], #4
   1acca:	bf00      	nop
   1accc:	100017e4 	.word	0x100017e4
   1acd0:	00016f7f 	.word	0x00016f7f

0001acd4 <init_display>:

void init_display()
{
   1acd4:	b500      	push	{lr}
   1acd6:	b087      	sub	sp, #28
    display_pins_enable(1);
   1acd8:	2001      	movs	r0, #1
   1acda:	f7ff fe61 	bl	1a9a0 <display_pins_enable>
    am_util_stdio_printf("Init display start\r\n");
   1acde:	483e      	ldr	r0, [pc, #248]	@ (1add8 <init_display+0x104>)
   1ace0:	f001 fd6e 	bl	1c7c0 <am_util_stdio_printf>
    int returnVal = am_devices_display_init(192, 490, COLOR_FORMAT_RGB565, true);
   1ace4:	2301      	movs	r3, #1
   1ace6:	2200      	movs	r2, #0
   1ace8:	f44f 71f5 	mov.w	r1, #490	@ 0x1ea
   1acec:	20c0      	movs	r0, #192	@ 0xc0
   1acee:	f7ff f903 	bl	19ef8 <am_devices_display_init>
   1acf2:	9004      	str	r0, [sp, #16]
    am_util_stdio_printf("Init display mid %i \r\n", returnVal);
   1acf4:	9904      	ldr	r1, [sp, #16]
   1acf6:	4839      	ldr	r0, [pc, #228]	@ (1addc <init_display+0x108>)
   1acf8:	f001 fd62 	bl	1c7c0 <am_util_stdio_printf>

    uint32_t data;
    returnVal = am_devices_mspi_rm69330_read_id(g_DisplayHandle, (uint32_t *)&data);
   1acfc:	4b38      	ldr	r3, [pc, #224]	@ (1ade0 <init_display+0x10c>)
   1acfe:	681b      	ldr	r3, [r3, #0]
   1ad00:	aa02      	add	r2, sp, #8
   1ad02:	4611      	mov	r1, r2
   1ad04:	4618      	mov	r0, r3
   1ad06:	f7fe fcc6 	bl	19696 <am_devices_mspi_rm69330_read_id>
   1ad0a:	4603      	mov	r3, r0
   1ad0c:	9304      	str	r3, [sp, #16]
    am_util_stdio_printf("Init display done %i - %06X\r\n", returnVal, data & 0xffffff);
   1ad0e:	9b02      	ldr	r3, [sp, #8]
   1ad10:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
   1ad14:	461a      	mov	r2, r3
   1ad16:	9904      	ldr	r1, [sp, #16]
   1ad18:	4832      	ldr	r0, [pc, #200]	@ (1ade4 <init_display+0x110>)
   1ad1a:	f001 fd51 	bl	1c7c0 <am_util_stdio_printf>
    if (returnVal)
   1ad1e:	9b04      	ldr	r3, [sp, #16]
   1ad20:	2b00      	cmp	r3, #0
   1ad22:	d002      	beq.n	1ad2a <init_display+0x56>
    {
        am_util_stdio_printf("Init display failed!!!\r\n");
   1ad24:	4830      	ldr	r0, [pc, #192]	@ (1ade8 <init_display+0x114>)
   1ad26:	f001 fd4b 	bl	1c7c0 <am_util_stdio_printf>
    }
    int displayMode = getDisplayMode(data);
   1ad2a:	9b02      	ldr	r3, [sp, #8]
   1ad2c:	4618      	mov	r0, r3
   1ad2e:	f7ff fdef 	bl	1a910 <getDisplayMode>
   1ad32:	9003      	str	r0, [sp, #12]
    switch (displayMode)
   1ad34:	9b03      	ldr	r3, [sp, #12]
   1ad36:	3b01      	subs	r3, #1
   1ad38:	2b06      	cmp	r3, #6
   1ad3a:	d81d      	bhi.n	1ad78 <init_display+0xa4>
   1ad3c:	a201      	add	r2, pc, #4	@ (adr r2, 1ad44 <init_display+0x70>)
   1ad3e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1ad42:	bf00      	nop
   1ad44:	0001ad61 	.word	0x0001ad61
   1ad48:	0001ad67 	.word	0x0001ad67
   1ad4c:	0001ad79 	.word	0x0001ad79
   1ad50:	0001ad67 	.word	0x0001ad67
   1ad54:	0001ad6d 	.word	0x0001ad6d
   1ad58:	0001ad73 	.word	0x0001ad73
   1ad5c:	0001ad61 	.word	0x0001ad61
    {
    case 1:
    case 7:
        send_mode7();
   1ad60:	f7ff f9ba 	bl	1a0d8 <send_mode7>
        break;
   1ad64:	e009      	b.n	1ad7a <init_display+0xa6>
    case 2:
    case 4:
        send_mode4();
   1ad66:	f7ff faf5 	bl	1a354 <send_mode4>
        break;
   1ad6a:	e006      	b.n	1ad7a <init_display+0xa6>
    case 5:
        send_mode5();
   1ad6c:	f7ff fc1c 	bl	1a5a8 <send_mode5>
        break;
   1ad70:	e003      	b.n	1ad7a <init_display+0xa6>
    case 6:
        send_mode6();
   1ad72:	f7ff fcc1 	bl	1a6f8 <send_mode6>
        break;
   1ad76:	e000      	b.n	1ad7a <init_display+0xa6>
    default:
        break;
   1ad78:	bf00      	nop
    }
    setBrightness(170);
   1ad7a:	20aa      	movs	r0, #170	@ 0xaa
   1ad7c:	f7ff fe50 	bl	1aa20 <setBrightness>

    am_util_delay_ms(10);
   1ad80:	200a      	movs	r0, #10
   1ad82:	f000 fdd5 	bl	1b930 <am_util_delay_ms>
    uint16_t X_start = 0;
   1ad86:	2300      	movs	r3, #0
   1ad88:	f8ad 3016 	strh.w	r3, [sp, #22]
    if (displayMode == 1 || displayMode == 3 || displayMode == 6 || displayMode == 7)
   1ad8c:	9b03      	ldr	r3, [sp, #12]
   1ad8e:	2b01      	cmp	r3, #1
   1ad90:	d008      	beq.n	1ada4 <init_display+0xd0>
   1ad92:	9b03      	ldr	r3, [sp, #12]
   1ad94:	2b03      	cmp	r3, #3
   1ad96:	d005      	beq.n	1ada4 <init_display+0xd0>
   1ad98:	9b03      	ldr	r3, [sp, #12]
   1ad9a:	2b06      	cmp	r3, #6
   1ad9c:	d002      	beq.n	1ada4 <init_display+0xd0>
   1ad9e:	9b03      	ldr	r3, [sp, #12]
   1ada0:	2b07      	cmp	r3, #7
   1ada2:	d104      	bne.n	1adae <init_display+0xda>
        X_start += 24;
   1ada4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
   1ada8:	3318      	adds	r3, #24
   1adaa:	f8ad 3016 	strh.w	r3, [sp, #22]
    am_devices_mspi_rm69330_set_transfer_window(g_DisplayHandle, X_start, 192, 0, 490);
   1adae:	4b0c      	ldr	r3, [pc, #48]	@ (1ade0 <init_display+0x10c>)
   1adb0:	6818      	ldr	r0, [r3, #0]
   1adb2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
   1adb6:	f44f 73f5 	mov.w	r3, #490	@ 0x1ea
   1adba:	9300      	str	r3, [sp, #0]
   1adbc:	2300      	movs	r3, #0
   1adbe:	22c0      	movs	r2, #192	@ 0xc0
   1adc0:	f7fe fc7e 	bl	196c0 <am_devices_mspi_rm69330_set_transfer_window>
    am_util_delay_ms(10);
   1adc4:	200a      	movs	r0, #10
   1adc6:	f000 fdb3 	bl	1b930 <am_util_delay_ms>

    display_buffset(0);
   1adca:	2000      	movs	r0, #0
   1adcc:	f7ff ff50 	bl	1ac70 <display_buffset>
}
   1add0:	bf00      	nop
   1add2:	b007      	add	sp, #28
   1add4:	f85d fb04 	ldr.w	pc, [sp], #4
   1add8:	000278e8 	.word	0x000278e8
   1addc:	00027900 	.word	0x00027900
   1ade0:	1002f6ec 	.word	0x1002f6ec
   1ade4:	00027918 	.word	0x00027918
   1ade8:	00027938 	.word	0x00027938

0001adec <am_mspi1_isr>:
    am_util_delay_ms(150);
    am_devices_mspi_rm69330_term(g_DisplayHandle);
}

void am_mspi1_isr(void)
{
   1adec:	b500      	push	{lr}
   1adee:	b083      	sub	sp, #12
    uint32_t ui32Status;
    am_hal_mspi_interrupt_status_get(g_MSPIDisplayHandle, &ui32Status, false);
   1adf0:	4b0c      	ldr	r3, [pc, #48]	@ (1ae24 <am_mspi1_isr+0x38>)
   1adf2:	681b      	ldr	r3, [r3, #0]
   1adf4:	a901      	add	r1, sp, #4
   1adf6:	2200      	movs	r2, #0
   1adf8:	4618      	mov	r0, r3
   1adfa:	f00a fa5d 	bl	252b8 <am_hal_mspi_interrupt_status_get>
    am_hal_mspi_interrupt_clear(g_MSPIDisplayHandle, ui32Status);
   1adfe:	4b09      	ldr	r3, [pc, #36]	@ (1ae24 <am_mspi1_isr+0x38>)
   1ae00:	681b      	ldr	r3, [r3, #0]
   1ae02:	9a01      	ldr	r2, [sp, #4]
   1ae04:	4611      	mov	r1, r2
   1ae06:	4618      	mov	r0, r3
   1ae08:	f00a fa7e 	bl	25308 <am_hal_mspi_interrupt_clear>
    am_hal_mspi_interrupt_service(g_MSPIDisplayHandle, ui32Status);
   1ae0c:	4b05      	ldr	r3, [pc, #20]	@ (1ae24 <am_mspi1_isr+0x38>)
   1ae0e:	681b      	ldr	r3, [r3, #0]
   1ae10:	9a01      	ldr	r2, [sp, #4]
   1ae12:	4611      	mov	r1, r2
   1ae14:	4618      	mov	r0, r3
   1ae16:	f00a fa8b 	bl	25330 <am_hal_mspi_interrupt_service>
}
   1ae1a:	bf00      	nop
   1ae1c:	b003      	add	sp, #12
   1ae1e:	f85d fb04 	ldr.w	pc, [sp], #4
   1ae22:	bf00      	nop
   1ae24:	1002f6e8 	.word	0x1002f6e8

0001ae28 <am_gpio0_203f_isr>:
    am_hal_gpio_interrupt_irq_clear(GPIO0_001F_IRQn, ui32IntStatus);
    am_hal_gpio_interrupt_service(GPIO0_001F_IRQn, ui32IntStatus);
}
*/
void am_gpio0_203f_isr(void)
{
   1ae28:	b500      	push	{lr}
   1ae2a:	b083      	sub	sp, #12
    uint32_t ui32IntStatus;
    am_hal_gpio_interrupt_irq_status_get(GPIO0_203F_IRQn, false, &ui32IntStatus);
   1ae2c:	ab01      	add	r3, sp, #4
   1ae2e:	461a      	mov	r2, r3
   1ae30:	2100      	movs	r1, #0
   1ae32:	2039      	movs	r0, #57	@ 0x39
   1ae34:	f00b fc0a 	bl	2664c <am_hal_gpio_interrupt_irq_status_get>
    am_hal_gpio_interrupt_irq_clear(GPIO0_203F_IRQn, ui32IntStatus);
   1ae38:	9b01      	ldr	r3, [sp, #4]
   1ae3a:	4619      	mov	r1, r3
   1ae3c:	2039      	movs	r0, #57	@ 0x39
   1ae3e:	f00b fc3f 	bl	266c0 <am_hal_gpio_interrupt_irq_clear>
    am_hal_gpio_interrupt_service(GPIO0_203F_IRQn, ui32IntStatus);
   1ae42:	9b01      	ldr	r3, [sp, #4]
   1ae44:	4619      	mov	r1, r3
   1ae46:	2039      	movs	r0, #57	@ 0x39
   1ae48:	f00b fc88 	bl	2675c <am_hal_gpio_interrupt_service>
}
   1ae4c:	bf00      	nop
   1ae4e:	b003      	add	sp, #12
   1ae50:	f85d fb04 	ldr.w	pc, [sp], #4

0001ae54 <touch_transceive>:
        return;
    }
}

void touch_transceive(uint16_t cmd, uint32_t *buffer, int readLen)
{
   1ae54:	b500      	push	{lr}
   1ae56:	b091      	sub	sp, #68	@ 0x44
   1ae58:	4603      	mov	r3, r0
   1ae5a:	9102      	str	r1, [sp, #8]
   1ae5c:	9201      	str	r2, [sp, #4]
   1ae5e:	f8ad 300e 	strh.w	r3, [sp, #14]
    am_hal_iom_transfer_t Transaction;

    Transaction.ui32InstrLen = 0;
   1ae62:	2300      	movs	r3, #0
   1ae64:	9305      	str	r3, [sp, #20]
    Transaction.ui64Instr = 0;
   1ae66:	f04f 0200 	mov.w	r2, #0
   1ae6a:	f04f 0300 	mov.w	r3, #0
   1ae6e:	e9cd 2306 	strd	r2, r3, [sp, #24]
    Transaction.eDirection = AM_HAL_IOM_TX;
   1ae72:	2300      	movs	r3, #0
   1ae74:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
    Transaction.ui32NumBytes = 2;
   1ae78:	2302      	movs	r3, #2
   1ae7a:	9308      	str	r3, [sp, #32]
    Transaction.pui32TxBuffer = (uint32_t *)&cmd;
   1ae7c:	f10d 030e 	add.w	r3, sp, #14
   1ae80:	930a      	str	r3, [sp, #40]	@ 0x28
    Transaction.uPeerInfo.ui32I2CDevAddr = 0x48;
   1ae82:	2348      	movs	r3, #72	@ 0x48
   1ae84:	9304      	str	r3, [sp, #16]
    Transaction.bContinue = 1;
   1ae86:	2301      	movs	r3, #1
   1ae88:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
    Transaction.ui8RepeatCount = 0;
   1ae8c:	2300      	movs	r3, #0
   1ae8e:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
    Transaction.ui32PauseCondition = 0;
   1ae92:	2300      	movs	r3, #0
   1ae94:	930d      	str	r3, [sp, #52]	@ 0x34
    Transaction.ui32StatusSetClr = 0;
   1ae96:	2300      	movs	r3, #0
   1ae98:	930e      	str	r3, [sp, #56]	@ 0x38

    if (am_hal_iom_blocking_transfer(touch_pIomHandle, &Transaction))
   1ae9a:	4b1d      	ldr	r3, [pc, #116]	@ (1af10 <touch_transceive+0xbc>)
   1ae9c:	681b      	ldr	r3, [r3, #0]
   1ae9e:	aa04      	add	r2, sp, #16
   1aea0:	4611      	mov	r1, r2
   1aea2:	4618      	mov	r0, r3
   1aea4:	f008 faee 	bl	23484 <am_hal_iom_blocking_transfer>
   1aea8:	4603      	mov	r3, r0
   1aeaa:	2b00      	cmp	r3, #0
   1aeac:	d003      	beq.n	1aeb6 <touch_transceive+0x62>
    {
        am_util_stdio_printf("Touch I2C_STATUS_ERROR 1\r\n");
   1aeae:	4819      	ldr	r0, [pc, #100]	@ (1af14 <touch_transceive+0xc0>)
   1aeb0:	f001 fc86 	bl	1c7c0 <am_util_stdio_printf>
        return;
   1aeb4:	e028      	b.n	1af08 <touch_transceive+0xb4>
    }

    Transaction.ui32InstrLen = 0;
   1aeb6:	2300      	movs	r3, #0
   1aeb8:	9305      	str	r3, [sp, #20]
    Transaction.ui64Instr = 0;
   1aeba:	f04f 0200 	mov.w	r2, #0
   1aebe:	f04f 0300 	mov.w	r3, #0
   1aec2:	e9cd 2306 	strd	r2, r3, [sp, #24]
    Transaction.eDirection = AM_HAL_IOM_RX;
   1aec6:	2301      	movs	r3, #1
   1aec8:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
    Transaction.ui32NumBytes = readLen;
   1aecc:	9b01      	ldr	r3, [sp, #4]
   1aece:	9308      	str	r3, [sp, #32]
    Transaction.pui32RxBuffer = buffer;
   1aed0:	9b02      	ldr	r3, [sp, #8]
   1aed2:	930b      	str	r3, [sp, #44]	@ 0x2c
    Transaction.uPeerInfo.ui32I2CDevAddr = 0x48;
   1aed4:	2348      	movs	r3, #72	@ 0x48
   1aed6:	9304      	str	r3, [sp, #16]
    Transaction.bContinue = 0;
   1aed8:	2300      	movs	r3, #0
   1aeda:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
    Transaction.ui8RepeatCount = 0;
   1aede:	2300      	movs	r3, #0
   1aee0:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
    Transaction.ui32PauseCondition = 0;
   1aee4:	2300      	movs	r3, #0
   1aee6:	930d      	str	r3, [sp, #52]	@ 0x34
    Transaction.ui32StatusSetClr = 0;
   1aee8:	2300      	movs	r3, #0
   1aeea:	930e      	str	r3, [sp, #56]	@ 0x38

    if (am_hal_iom_blocking_transfer(touch_pIomHandle, &Transaction))
   1aeec:	4b08      	ldr	r3, [pc, #32]	@ (1af10 <touch_transceive+0xbc>)
   1aeee:	681b      	ldr	r3, [r3, #0]
   1aef0:	aa04      	add	r2, sp, #16
   1aef2:	4611      	mov	r1, r2
   1aef4:	4618      	mov	r0, r3
   1aef6:	f008 fac5 	bl	23484 <am_hal_iom_blocking_transfer>
   1aefa:	4603      	mov	r3, r0
   1aefc:	2b00      	cmp	r3, #0
   1aefe:	d003      	beq.n	1af08 <touch_transceive+0xb4>
    {
        am_util_stdio_printf("Touch I2C_STATUS_ERROR 2\r\n");
   1af00:	4805      	ldr	r0, [pc, #20]	@ (1af18 <touch_transceive+0xc4>)
   1af02:	f001 fc5d 	bl	1c7c0 <am_util_stdio_printf>
        return;
   1af06:	bf00      	nop
    }
}
   1af08:	b011      	add	sp, #68	@ 0x44
   1af0a:	f85d fb04 	ldr.w	pc, [sp], #4
   1af0e:	bf00      	nop
   1af10:	1002fa7c 	.word	0x1002fa7c
   1af14:	00027984 	.word	0x00027984
   1af18:	000279a0 	.word	0x000279a0

0001af1c <touch_init>:

void touch_init()
{
   1af1c:	b508      	push	{r3, lr}
    pinMode(87, 1);
   1af1e:	2101      	movs	r1, #1
   1af20:	2057      	movs	r0, #87	@ 0x57
   1af22:	f7fd ffb7 	bl	18e94 <pinMode>
    pinMode(104, 1);
   1af26:	2101      	movs	r1, #1
   1af28:	2068      	movs	r0, #104	@ 0x68
   1af2a:	f7fd ffb3 	bl	18e94 <pinMode>
    pinMode(27, 1);
   1af2e:	2101      	movs	r1, #1
   1af30:	201b      	movs	r0, #27
   1af32:	f7fd ffaf 	bl	18e94 <pinMode>
    pinMode(24, 0);
   1af36:	2100      	movs	r1, #0
   1af38:	2018      	movs	r0, #24
   1af3a:	f7fd ffab 	bl	18e94 <pinMode>
    digitalWrite(87, 1);
   1af3e:	2101      	movs	r1, #1
   1af40:	2057      	movs	r0, #87	@ 0x57
   1af42:	f7fd ffd5 	bl	18ef0 <digitalWrite>
    digitalWrite(104, 1);
   1af46:	2101      	movs	r1, #1
   1af48:	2068      	movs	r0, #104	@ 0x68
   1af4a:	f7fd ffd1 	bl	18ef0 <digitalWrite>
    digitalWrite(27, 1);
   1af4e:	2101      	movs	r1, #1
   1af50:	201b      	movs	r0, #27
   1af52:	f7fd ffcd 	bl	18ef0 <digitalWrite>
    am_util_delay_ms(20);
   1af56:	2014      	movs	r0, #20
   1af58:	f000 fcea 	bl	1b930 <am_util_delay_ms>
    digitalWrite(27, 0);
   1af5c:	2100      	movs	r1, #0
   1af5e:	201b      	movs	r0, #27
   1af60:	f7fd ffc6 	bl	18ef0 <digitalWrite>
    am_util_delay_ms(50);
   1af64:	2032      	movs	r0, #50	@ 0x32
   1af66:	f000 fce3 	bl	1b930 <am_util_delay_ms>
    digitalWrite(27, 1);
   1af6a:	2101      	movs	r1, #1
   1af6c:	201b      	movs	r0, #27
   1af6e:	f7fd ffbf 	bl	18ef0 <digitalWrite>
    am_util_delay_ms(100);
   1af72:	2064      	movs	r0, #100	@ 0x64
   1af74:	f000 fcdc 	bl	1b930 <am_util_delay_ms>
    am_util_stdio_printf("Touch init started\r\n");
   1af78:	481d      	ldr	r0, [pc, #116]	@ (1aff0 <touch_init+0xd4>)
   1af7a:	f001 fc21 	bl	1c7c0 <am_util_stdio_printf>
    if (am_hal_iom_initialize(ui32ModuleTouch, &touch_pIomHandle) ||
   1af7e:	4b1d      	ldr	r3, [pc, #116]	@ (1aff4 <touch_init+0xd8>)
   1af80:	681b      	ldr	r3, [r3, #0]
   1af82:	491d      	ldr	r1, [pc, #116]	@ (1aff8 <touch_init+0xdc>)
   1af84:	4618      	mov	r0, r3
   1af86:	f007 ff79 	bl	22e7c <am_hal_iom_initialize>
   1af8a:	4603      	mov	r3, r0
   1af8c:	2b00      	cmp	r3, #0
   1af8e:	d11a      	bne.n	1afc6 <touch_init+0xaa>
        am_hal_iom_power_ctrl(touch_pIomHandle, AM_HAL_SYSCTRL_WAKE, false) ||
   1af90:	4b19      	ldr	r3, [pc, #100]	@ (1aff8 <touch_init+0xdc>)
   1af92:	681b      	ldr	r3, [r3, #0]
   1af94:	2200      	movs	r2, #0
   1af96:	2100      	movs	r1, #0
   1af98:	4618      	mov	r0, r3
   1af9a:	f008 f80f 	bl	22fbc <am_hal_iom_power_ctrl>
   1af9e:	4603      	mov	r3, r0
    if (am_hal_iom_initialize(ui32ModuleTouch, &touch_pIomHandle) ||
   1afa0:	2b00      	cmp	r3, #0
   1afa2:	d110      	bne.n	1afc6 <touch_init+0xaa>
        am_hal_iom_configure(touch_pIomHandle, &touch_i2cSettings) ||
   1afa4:	4b14      	ldr	r3, [pc, #80]	@ (1aff8 <touch_init+0xdc>)
   1afa6:	681b      	ldr	r3, [r3, #0]
   1afa8:	4914      	ldr	r1, [pc, #80]	@ (1affc <touch_init+0xe0>)
   1afaa:	4618      	mov	r0, r3
   1afac:	f008 f8fe 	bl	231ac <am_hal_iom_configure>
   1afb0:	4603      	mov	r3, r0
        am_hal_iom_power_ctrl(touch_pIomHandle, AM_HAL_SYSCTRL_WAKE, false) ||
   1afb2:	2b00      	cmp	r3, #0
   1afb4:	d107      	bne.n	1afc6 <touch_init+0xaa>
        am_hal_iom_enable(touch_pIomHandle))
   1afb6:	4b10      	ldr	r3, [pc, #64]	@ (1aff8 <touch_init+0xdc>)
   1afb8:	681b      	ldr	r3, [r3, #0]
   1afba:	4618      	mov	r0, r3
   1afbc:	f007 ff86 	bl	22ecc <am_hal_iom_enable>
   1afc0:	4603      	mov	r3, r0
        am_hal_iom_configure(touch_pIomHandle, &touch_i2cSettings) ||
   1afc2:	2b00      	cmp	r3, #0
   1afc4:	d003      	beq.n	1afce <touch_init+0xb2>
    {
        am_util_stdio_printf("Touch AM_DEVICES_I2C_STATUS_ERROR\r\n");
   1afc6:	480e      	ldr	r0, [pc, #56]	@ (1b000 <touch_init+0xe4>)
   1afc8:	f001 fbfa 	bl	1c7c0 <am_util_stdio_printf>
   1afcc:	e00d      	b.n	1afea <touch_init+0xce>
    }
    else
    {
        am_hal_gpio_pinconfig(AM_BSP_GPIO_IOM2_SCL, g_AM_BSP_GPIO_IOM2_SCL);
   1afce:	4b0d      	ldr	r3, [pc, #52]	@ (1b004 <touch_init+0xe8>)
   1afd0:	6819      	ldr	r1, [r3, #0]
   1afd2:	2019      	movs	r0, #25
   1afd4:	f00b f90a 	bl	261ec <am_hal_gpio_pinconfig>
        am_hal_gpio_pinconfig(AM_BSP_GPIO_IOM2_SDA, g_AM_BSP_GPIO_IOM2_SDA);
   1afd8:	4b0b      	ldr	r3, [pc, #44]	@ (1b008 <touch_init+0xec>)
   1afda:	6819      	ldr	r1, [r3, #0]
   1afdc:	201a      	movs	r0, #26
   1afde:	f00b f905 	bl	261ec <am_hal_gpio_pinconfig>
        am_util_stdio_printf("Touch AM_DEVICES_I2C_STATUS_SUCCESS\r\n");
   1afe2:	480a      	ldr	r0, [pc, #40]	@ (1b00c <touch_init+0xf0>)
   1afe4:	f001 fbec 	bl	1c7c0 <am_util_stdio_printf>
    }
   1afe8:	bf00      	nop
   1afea:	bf00      	nop
   1afec:	bd08      	pop	{r3, pc}
   1afee:	bf00      	nop
   1aff0:	000279bc 	.word	0x000279bc
   1aff4:	100010b4 	.word	0x100010b4
   1aff8:	1002fa7c 	.word	0x1002fa7c
   1affc:	100010b8 	.word	0x100010b8
   1b000:	000279d4 	.word	0x000279d4
   1b004:	100017b0 	.word	0x100017b0
   1b008:	100017b4 	.word	0x100017b4
   1b00c:	000279f8 	.word	0x000279f8

0001b010 <lightSens_transmit>:
        .ui32NBTxnBufLength = 0,
        .pNBTxnBuf = NULL,
};

void lightSens_transmit(uint8_t cmd, uint8_t data)
{
   1b010:	b500      	push	{lr}
   1b012:	b091      	sub	sp, #68	@ 0x44
   1b014:	4603      	mov	r3, r0
   1b016:	460a      	mov	r2, r1
   1b018:	f88d 3007 	strb.w	r3, [sp, #7]
   1b01c:	4613      	mov	r3, r2
   1b01e:	f88d 3006 	strb.w	r3, [sp, #6]
    uint8_t outBuff[2];
    outBuff[0] = cmd;
   1b022:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1b026:	f88d 3038 	strb.w	r3, [sp, #56]	@ 0x38
    outBuff[1] = data;
   1b02a:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1b02e:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
    am_hal_iom_transfer_t Transaction;

    Transaction.ui32InstrLen = 0;
   1b032:	2300      	movs	r3, #0
   1b034:	9303      	str	r3, [sp, #12]
    Transaction.ui64Instr = 0;
   1b036:	f04f 0200 	mov.w	r2, #0
   1b03a:	f04f 0300 	mov.w	r3, #0
   1b03e:	e9cd 2304 	strd	r2, r3, [sp, #16]
    Transaction.eDirection = AM_HAL_IOM_TX;
   1b042:	2300      	movs	r3, #0
   1b044:	f88d 301c 	strb.w	r3, [sp, #28]
    Transaction.ui32NumBytes = 2;
   1b048:	2302      	movs	r3, #2
   1b04a:	9306      	str	r3, [sp, #24]
    Transaction.pui32TxBuffer = (uint32_t *)&outBuff;
   1b04c:	ab0e      	add	r3, sp, #56	@ 0x38
   1b04e:	9308      	str	r3, [sp, #32]
    Transaction.uPeerInfo.ui32I2CDevAddr = 0x45;
   1b050:	2345      	movs	r3, #69	@ 0x45
   1b052:	9302      	str	r3, [sp, #8]
    Transaction.bContinue = 0;
   1b054:	2300      	movs	r3, #0
   1b056:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
    Transaction.ui8RepeatCount = 0;
   1b05a:	2300      	movs	r3, #0
   1b05c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
    Transaction.ui32PauseCondition = 0;
   1b060:	2300      	movs	r3, #0
   1b062:	930b      	str	r3, [sp, #44]	@ 0x2c
    Transaction.ui32StatusSetClr = 0;
   1b064:	2300      	movs	r3, #0
   1b066:	930c      	str	r3, [sp, #48]	@ 0x30

    int error_ret = am_hal_iom_blocking_transfer(LightSens_pIomHandle, &Transaction);
   1b068:	4b09      	ldr	r3, [pc, #36]	@ (1b090 <lightSens_transmit+0x80>)
   1b06a:	681b      	ldr	r3, [r3, #0]
   1b06c:	aa02      	add	r2, sp, #8
   1b06e:	4611      	mov	r1, r2
   1b070:	4618      	mov	r0, r3
   1b072:	f008 fa07 	bl	23484 <am_hal_iom_blocking_transfer>
   1b076:	4603      	mov	r3, r0
   1b078:	930f      	str	r3, [sp, #60]	@ 0x3c
    if (error_ret)
   1b07a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1b07c:	2b00      	cmp	r3, #0
   1b07e:	d003      	beq.n	1b088 <lightSens_transmit+0x78>
    {
        am_util_stdio_printf("Light Sensor I2C_STATUS_ERROR 1: %i\r\n", error_ret);
   1b080:	990f      	ldr	r1, [sp, #60]	@ 0x3c
   1b082:	4804      	ldr	r0, [pc, #16]	@ (1b094 <lightSens_transmit+0x84>)
   1b084:	f001 fb9c 	bl	1c7c0 <am_util_stdio_printf>
        return;
    }
}
   1b088:	b011      	add	sp, #68	@ 0x44
   1b08a:	f85d fb04 	ldr.w	pc, [sp], #4
   1b08e:	bf00      	nop
   1b090:	1002fa84 	.word	0x1002fa84
   1b094:	00027a20 	.word	0x00027a20

0001b098 <lightSens_transceive>:

void lightSens_transceive(uint8_t cmd, uint32_t *buffer, int readLen)
{
   1b098:	b500      	push	{lr}
   1b09a:	b091      	sub	sp, #68	@ 0x44
   1b09c:	4603      	mov	r3, r0
   1b09e:	9102      	str	r1, [sp, #8]
   1b0a0:	9201      	str	r2, [sp, #4]
   1b0a2:	f88d 300f 	strb.w	r3, [sp, #15]
    am_hal_iom_transfer_t Transaction;

    Transaction.ui32InstrLen = 0;
   1b0a6:	2300      	movs	r3, #0
   1b0a8:	9305      	str	r3, [sp, #20]
    Transaction.ui64Instr = 0;
   1b0aa:	f04f 0200 	mov.w	r2, #0
   1b0ae:	f04f 0300 	mov.w	r3, #0
   1b0b2:	e9cd 2306 	strd	r2, r3, [sp, #24]
    Transaction.eDirection = AM_HAL_IOM_TX;
   1b0b6:	2300      	movs	r3, #0
   1b0b8:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
    Transaction.ui32NumBytes = 1;
   1b0bc:	2301      	movs	r3, #1
   1b0be:	9308      	str	r3, [sp, #32]
    Transaction.pui32TxBuffer = (uint32_t *)&cmd;
   1b0c0:	f10d 030f 	add.w	r3, sp, #15
   1b0c4:	930a      	str	r3, [sp, #40]	@ 0x28
    Transaction.uPeerInfo.ui32I2CDevAddr = 0x45;
   1b0c6:	2345      	movs	r3, #69	@ 0x45
   1b0c8:	9304      	str	r3, [sp, #16]
    Transaction.bContinue = 1;
   1b0ca:	2301      	movs	r3, #1
   1b0cc:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
    Transaction.ui8RepeatCount = 0;
   1b0d0:	2300      	movs	r3, #0
   1b0d2:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
    Transaction.ui32PauseCondition = 0;
   1b0d6:	2300      	movs	r3, #0
   1b0d8:	930d      	str	r3, [sp, #52]	@ 0x34
    Transaction.ui32StatusSetClr = 0;
   1b0da:	2300      	movs	r3, #0
   1b0dc:	930e      	str	r3, [sp, #56]	@ 0x38

    if (am_hal_iom_blocking_transfer(LightSens_pIomHandle, &Transaction))
   1b0de:	4b1d      	ldr	r3, [pc, #116]	@ (1b154 <lightSens_transceive+0xbc>)
   1b0e0:	681b      	ldr	r3, [r3, #0]
   1b0e2:	aa04      	add	r2, sp, #16
   1b0e4:	4611      	mov	r1, r2
   1b0e6:	4618      	mov	r0, r3
   1b0e8:	f008 f9cc 	bl	23484 <am_hal_iom_blocking_transfer>
   1b0ec:	4603      	mov	r3, r0
   1b0ee:	2b00      	cmp	r3, #0
   1b0f0:	d003      	beq.n	1b0fa <lightSens_transceive+0x62>
    {
        am_util_stdio_printf("Light Sensor I2C_STATUS_ERROR 1\r\n");
   1b0f2:	4819      	ldr	r0, [pc, #100]	@ (1b158 <lightSens_transceive+0xc0>)
   1b0f4:	f001 fb64 	bl	1c7c0 <am_util_stdio_printf>
        return;
   1b0f8:	e028      	b.n	1b14c <lightSens_transceive+0xb4>
    }

    Transaction.ui32InstrLen = 0;
   1b0fa:	2300      	movs	r3, #0
   1b0fc:	9305      	str	r3, [sp, #20]
    Transaction.ui64Instr = 0;
   1b0fe:	f04f 0200 	mov.w	r2, #0
   1b102:	f04f 0300 	mov.w	r3, #0
   1b106:	e9cd 2306 	strd	r2, r3, [sp, #24]
    Transaction.eDirection = AM_HAL_IOM_RX;
   1b10a:	2301      	movs	r3, #1
   1b10c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
    Transaction.ui32NumBytes = readLen;
   1b110:	9b01      	ldr	r3, [sp, #4]
   1b112:	9308      	str	r3, [sp, #32]
    Transaction.pui32RxBuffer = buffer;
   1b114:	9b02      	ldr	r3, [sp, #8]
   1b116:	930b      	str	r3, [sp, #44]	@ 0x2c
    Transaction.uPeerInfo.ui32I2CDevAddr = 0x45;
   1b118:	2345      	movs	r3, #69	@ 0x45
   1b11a:	9304      	str	r3, [sp, #16]
    Transaction.bContinue = 0;
   1b11c:	2300      	movs	r3, #0
   1b11e:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
    Transaction.ui8RepeatCount = 0;
   1b122:	2300      	movs	r3, #0
   1b124:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
    Transaction.ui32PauseCondition = 0;
   1b128:	2300      	movs	r3, #0
   1b12a:	930d      	str	r3, [sp, #52]	@ 0x34
    Transaction.ui32StatusSetClr = 0;
   1b12c:	2300      	movs	r3, #0
   1b12e:	930e      	str	r3, [sp, #56]	@ 0x38

    if (am_hal_iom_blocking_transfer(LightSens_pIomHandle, &Transaction))
   1b130:	4b08      	ldr	r3, [pc, #32]	@ (1b154 <lightSens_transceive+0xbc>)
   1b132:	681b      	ldr	r3, [r3, #0]
   1b134:	aa04      	add	r2, sp, #16
   1b136:	4611      	mov	r1, r2
   1b138:	4618      	mov	r0, r3
   1b13a:	f008 f9a3 	bl	23484 <am_hal_iom_blocking_transfer>
   1b13e:	4603      	mov	r3, r0
   1b140:	2b00      	cmp	r3, #0
   1b142:	d003      	beq.n	1b14c <lightSens_transceive+0xb4>
    {
        am_util_stdio_printf("Light Sensor I2C_STATUS_ERROR 2\r\n");
   1b144:	4805      	ldr	r0, [pc, #20]	@ (1b15c <lightSens_transceive+0xc4>)
   1b146:	f001 fb3b 	bl	1c7c0 <am_util_stdio_printf>
        return;
   1b14a:	bf00      	nop
    }
}
   1b14c:	b011      	add	sp, #68	@ 0x44
   1b14e:	f85d fb04 	ldr.w	pc, [sp], #4
   1b152:	bf00      	nop
   1b154:	1002fa84 	.word	0x1002fa84
   1b158:	00027a48 	.word	0x00027a48
   1b15c:	00027a6c 	.word	0x00027a6c

0001b160 <lightSens_init>:

void lightSens_init()
{
   1b160:	b500      	push	{lr}
   1b162:	b08f      	sub	sp, #60	@ 0x3c
    pinMode(80, 0);
   1b164:	2100      	movs	r1, #0
   1b166:	2050      	movs	r0, #80	@ 0x50
   1b168:	f7fd fe94 	bl	18e94 <pinMode>
    // digitalWrite(80, 0);
    am_util_delay_ms(10);
   1b16c:	200a      	movs	r0, #10
   1b16e:	f000 fbdf 	bl	1b930 <am_util_delay_ms>
    am_util_stdio_printf("Light Sensor init started\r\n");
   1b172:	4861      	ldr	r0, [pc, #388]	@ (1b2f8 <lightSens_init+0x198>)
   1b174:	f001 fb24 	bl	1c7c0 <am_util_stdio_printf>
    if (am_hal_iom_initialize(ui32ModuleLightSens, &LightSens_pIomHandle) ||
   1b178:	4b60      	ldr	r3, [pc, #384]	@ (1b2fc <lightSens_init+0x19c>)
   1b17a:	681b      	ldr	r3, [r3, #0]
   1b17c:	4960      	ldr	r1, [pc, #384]	@ (1b300 <lightSens_init+0x1a0>)
   1b17e:	4618      	mov	r0, r3
   1b180:	f007 fe7c 	bl	22e7c <am_hal_iom_initialize>
   1b184:	4603      	mov	r3, r0
   1b186:	2b00      	cmp	r3, #0
   1b188:	d11a      	bne.n	1b1c0 <lightSens_init+0x60>
        am_hal_iom_power_ctrl(LightSens_pIomHandle, AM_HAL_SYSCTRL_WAKE, false) ||
   1b18a:	4b5d      	ldr	r3, [pc, #372]	@ (1b300 <lightSens_init+0x1a0>)
   1b18c:	681b      	ldr	r3, [r3, #0]
   1b18e:	2200      	movs	r2, #0
   1b190:	2100      	movs	r1, #0
   1b192:	4618      	mov	r0, r3
   1b194:	f007 ff12 	bl	22fbc <am_hal_iom_power_ctrl>
   1b198:	4603      	mov	r3, r0
    if (am_hal_iom_initialize(ui32ModuleLightSens, &LightSens_pIomHandle) ||
   1b19a:	2b00      	cmp	r3, #0
   1b19c:	d110      	bne.n	1b1c0 <lightSens_init+0x60>
        am_hal_iom_configure(LightSens_pIomHandle, &LightSens_sti2cSettings) ||
   1b19e:	4b58      	ldr	r3, [pc, #352]	@ (1b300 <lightSens_init+0x1a0>)
   1b1a0:	681b      	ldr	r3, [r3, #0]
   1b1a2:	4958      	ldr	r1, [pc, #352]	@ (1b304 <lightSens_init+0x1a4>)
   1b1a4:	4618      	mov	r0, r3
   1b1a6:	f008 f801 	bl	231ac <am_hal_iom_configure>
   1b1aa:	4603      	mov	r3, r0
        am_hal_iom_power_ctrl(LightSens_pIomHandle, AM_HAL_SYSCTRL_WAKE, false) ||
   1b1ac:	2b00      	cmp	r3, #0
   1b1ae:	d107      	bne.n	1b1c0 <lightSens_init+0x60>
        am_hal_iom_enable(LightSens_pIomHandle))
   1b1b0:	4b53      	ldr	r3, [pc, #332]	@ (1b300 <lightSens_init+0x1a0>)
   1b1b2:	681b      	ldr	r3, [r3, #0]
   1b1b4:	4618      	mov	r0, r3
   1b1b6:	f007 fe89 	bl	22ecc <am_hal_iom_enable>
   1b1ba:	4603      	mov	r3, r0
        am_hal_iom_configure(LightSens_pIomHandle, &LightSens_sti2cSettings) ||
   1b1bc:	2b00      	cmp	r3, #0
   1b1be:	d003      	beq.n	1b1c8 <lightSens_init+0x68>
    {
        am_util_stdio_printf("Light Sensor AM_DEVICES_I2C_STATUS_ERROR\r\n");
   1b1c0:	4851      	ldr	r0, [pc, #324]	@ (1b308 <lightSens_init+0x1a8>)
   1b1c2:	f001 fafd 	bl	1c7c0 <am_util_stdio_printf>
   1b1c6:	e092      	b.n	1b2ee <lightSens_init+0x18e>
    }
    else
    {
        am_hal_gpio_pinconfig(AM_BSP_GPIO_IOM0_SCL, g_AM_BSP_GPIO_IOM0_SCL);
   1b1c8:	4b50      	ldr	r3, [pc, #320]	@ (1b30c <lightSens_init+0x1ac>)
   1b1ca:	6819      	ldr	r1, [r3, #0]
   1b1cc:	2005      	movs	r0, #5
   1b1ce:	f00b f80d 	bl	261ec <am_hal_gpio_pinconfig>
        am_hal_gpio_pinconfig(AM_BSP_GPIO_IOM0_SDA, g_AM_BSP_GPIO_IOM0_SDA);
   1b1d2:	4b4f      	ldr	r3, [pc, #316]	@ (1b310 <lightSens_init+0x1b0>)
   1b1d4:	6819      	ldr	r1, [r3, #0]
   1b1d6:	2006      	movs	r0, #6
   1b1d8:	f00b f808 	bl	261ec <am_hal_gpio_pinconfig>
        am_util_stdio_printf("Light Sensor AM_DEVICES_I2C_STATUS_SUCCESS\r\n");
   1b1dc:	484d      	ldr	r0, [pc, #308]	@ (1b314 <lightSens_init+0x1b4>)
   1b1de:	f001 faef 	bl	1c7c0 <am_util_stdio_printf>
        uint8_t dataOut[50];
        lightSens_transceive(0x3E, (uint32_t *)&dataOut, 1);
   1b1e2:	ab01      	add	r3, sp, #4
   1b1e4:	2201      	movs	r2, #1
   1b1e6:	4619      	mov	r1, r3
   1b1e8:	203e      	movs	r0, #62	@ 0x3e
   1b1ea:	f7ff ff55 	bl	1b098 <lightSens_transceive>
        am_util_stdio_printf("Light answer: %02X %02X %02X\r\n", dataOut[0], dataOut[1], dataOut[2]);
   1b1ee:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1b1f2:	4619      	mov	r1, r3
   1b1f4:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1b1f8:	461a      	mov	r2, r3
   1b1fa:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1b1fe:	4846      	ldr	r0, [pc, #280]	@ (1b318 <lightSens_init+0x1b8>)
   1b200:	f001 fade 	bl	1c7c0 <am_util_stdio_printf>
        lightSens_transceive(0x3E, (uint32_t *)&dataOut, 1);
   1b204:	ab01      	add	r3, sp, #4
   1b206:	2201      	movs	r2, #1
   1b208:	4619      	mov	r1, r3
   1b20a:	203e      	movs	r0, #62	@ 0x3e
   1b20c:	f7ff ff44 	bl	1b098 <lightSens_transceive>
        am_util_stdio_printf("Light answer: %02X %02X %02X\r\n", dataOut[0], dataOut[1], dataOut[2]);
   1b210:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1b214:	4619      	mov	r1, r3
   1b216:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1b21a:	461a      	mov	r2, r3
   1b21c:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1b220:	483d      	ldr	r0, [pc, #244]	@ (1b318 <lightSens_init+0x1b8>)
   1b222:	f001 facd 	bl	1c7c0 <am_util_stdio_printf>
        lightSens_transmit(0x80, 0xFF);
   1b226:	21ff      	movs	r1, #255	@ 0xff
   1b228:	2080      	movs	r0, #128	@ 0x80
   1b22a:	f7ff fef1 	bl	1b010 <lightSens_transmit>
        am_util_delay_ms(50);
   1b22e:	2032      	movs	r0, #50	@ 0x32
   1b230:	f000 fb7e 	bl	1b930 <am_util_delay_ms>

        /////////////////////////////
        lightSens_transmit(0x02, 0x20);
   1b234:	2120      	movs	r1, #32
   1b236:	2002      	movs	r0, #2
   1b238:	f7ff feea 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0x04, 0x00);
   1b23c:	2100      	movs	r1, #0
   1b23e:	2004      	movs	r0, #4
   1b240:	f7ff fee6 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0x05, 0x40);
   1b244:	2140      	movs	r1, #64	@ 0x40
   1b246:	2005      	movs	r0, #5
   1b248:	f7ff fee2 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0x10, 0x00);
   1b24c:	2100      	movs	r1, #0
   1b24e:	2010      	movs	r0, #16
   1b250:	f7ff fede 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0x4e, 0x26);
   1b254:	2126      	movs	r1, #38	@ 0x26
   1b256:	204e      	movs	r0, #78	@ 0x4e
   1b258:	f7ff feda 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0x6f, 0x14);
   1b25c:	2114      	movs	r1, #20
   1b25e:	206f      	movs	r0, #111	@ 0x6f
   1b260:	f7ff fed6 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0xa1, 0x03);
   1b264:	2103      	movs	r1, #3
   1b266:	20a1      	movs	r0, #161	@ 0xa1
   1b268:	f7ff fed2 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0xa5, 0x00);
   1b26c:	2100      	movs	r1, #0
   1b26e:	20a5      	movs	r0, #165	@ 0xa5
   1b270:	f7ff fece 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0xdb, 0x00);
   1b274:	2100      	movs	r1, #0
   1b276:	20db      	movs	r0, #219	@ 0xdb
   1b278:	f7ff feca 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0x60, 0xa2);
   1b27c:	21a2      	movs	r1, #162	@ 0xa2
   1b27e:	2060      	movs	r0, #96	@ 0x60
   1b280:	f7ff fec6 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0x61, 0x00);
   1b284:	2100      	movs	r1, #0
   1b286:	2061      	movs	r0, #97	@ 0x61
   1b288:	f7ff fec2 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0x62, 0x00);
   1b28c:	2100      	movs	r1, #0
   1b28e:	2062      	movs	r0, #98	@ 0x62
   1b290:	f7ff febe 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0x63, 0x00);
   1b294:	2100      	movs	r1, #0
   1b296:	2063      	movs	r0, #99	@ 0x63
   1b298:	f7ff feba 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0xf6, 0x09);
   1b29c:	2109      	movs	r1, #9
   1b29e:	20f6      	movs	r0, #246	@ 0xf6
   1b2a0:	f7ff feb6 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0xf1, 0x00);
   1b2a4:	2100      	movs	r1, #0
   1b2a6:	20f1      	movs	r0, #241	@ 0xf1
   1b2a8:	f7ff feb2 	bl	1b010 <lightSens_transmit>

        /////////////////////////////

        lightSens_transmit(0x60, 0x22); // Clear FIFO
   1b2ac:	2122      	movs	r1, #34	@ 0x22
   1b2ae:	2060      	movs	r0, #96	@ 0x60
   1b2b0:	f7ff feae 	bl	1b010 <lightSens_transmit>
        lightSens_transmit(0x00, 0x02); // Mode Enable
   1b2b4:	2102      	movs	r1, #2
   1b2b6:	2000      	movs	r0, #0
   1b2b8:	f7ff feaa 	bl	1b010 <lightSens_transmit>
        // lightSens_transmit(0x00, 0x00); // Mode Disable

        lightSens_transceive(0x64, (uint32_t *)&dataOut, 1);// Read if fifo is full = 1
   1b2bc:	ab01      	add	r3, sp, #4
   1b2be:	2201      	movs	r2, #1
   1b2c0:	4619      	mov	r1, r3
   1b2c2:	2064      	movs	r0, #100	@ 0x64
   1b2c4:	f7ff fee8 	bl	1b098 <lightSens_transceive>
        am_util_stdio_printf("Light answer: %02X\r\n", dataOut[0]);
   1b2c8:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1b2cc:	4619      	mov	r1, r3
   1b2ce:	4813      	ldr	r0, [pc, #76]	@ (1b31c <lightSens_init+0x1bc>)
   1b2d0:	f001 fa76 	bl	1c7c0 <am_util_stdio_printf>
        lightSens_transceive(0x65, (uint32_t *)&dataOut, 1);// Read amount of data in fifo
   1b2d4:	ab01      	add	r3, sp, #4
   1b2d6:	2201      	movs	r2, #1
   1b2d8:	4619      	mov	r1, r3
   1b2da:	2065      	movs	r0, #101	@ 0x65
   1b2dc:	f7ff fedc 	bl	1b098 <lightSens_transceive>
        am_util_stdio_printf("Light answer: %02X\r\n", dataOut[0]);
   1b2e0:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1b2e4:	4619      	mov	r1, r3
   1b2e6:	480d      	ldr	r0, [pc, #52]	@ (1b31c <lightSens_init+0x1bc>)
   1b2e8:	f001 fa6a 	bl	1c7c0 <am_util_stdio_printf>
            am_util_delay_ms(10);
        }
        dataOut[0] = 0x22;
        lightSens_transmit(0x60, 0x22);*/
    }
   1b2ec:	bf00      	nop
   1b2ee:	bf00      	nop
   1b2f0:	b00f      	add	sp, #60	@ 0x3c
   1b2f2:	f85d fb04 	ldr.w	pc, [sp], #4
   1b2f6:	bf00      	nop
   1b2f8:	00027a90 	.word	0x00027a90
   1b2fc:	1002fa80 	.word	0x1002fa80
   1b300:	1002fa84 	.word	0x1002fa84
   1b304:	100010cc 	.word	0x100010cc
   1b308:	00027aac 	.word	0x00027aac
   1b30c:	100017a8 	.word	0x100017a8
   1b310:	100017ac 	.word	0x100017ac
   1b314:	00027ad8 	.word	0x00027ad8
   1b318:	00027b08 	.word	0x00027b08
   1b31c:	00027b28 	.word	0x00027b28

0001b320 <spiSend>:
#define ACCL_CS 12
#define ACCL_INT1 61
#define ACCL_INT2 62

uint8_t spiSend(uint8_t data)
{
   1b320:	b500      	push	{lr}
   1b322:	b085      	sub	sp, #20
   1b324:	4603      	mov	r3, r0
   1b326:	f88d 3007 	strb.w	r3, [sp, #7]
    uint8_t tempRet = 0;
   1b32a:	2300      	movs	r3, #0
   1b32c:	f88d 300f 	strb.w	r3, [sp, #15]

    for (int i = 0; i < 8; i++)
   1b330:	2300      	movs	r3, #0
   1b332:	9302      	str	r3, [sp, #8]
   1b334:	e033      	b.n	1b39e <spiSend+0x7e>
    {
        if ((data << i) & 0x80)
   1b336:	f89d 2007 	ldrb.w	r2, [sp, #7]
   1b33a:	9b02      	ldr	r3, [sp, #8]
   1b33c:	fa02 f303 	lsl.w	r3, r2, r3
   1b340:	f003 0380 	and.w	r3, r3, #128	@ 0x80
   1b344:	2b00      	cmp	r3, #0
   1b346:	d004      	beq.n	1b352 <spiSend+0x32>
            digitalWrite(ACCL_MOSI, 1);
   1b348:	2101      	movs	r1, #1
   1b34a:	2030      	movs	r0, #48	@ 0x30
   1b34c:	f7fd fdd0 	bl	18ef0 <digitalWrite>
   1b350:	e003      	b.n	1b35a <spiSend+0x3a>
        else
            digitalWrite(ACCL_MOSI, 0);
   1b352:	2100      	movs	r1, #0
   1b354:	2030      	movs	r0, #48	@ 0x30
   1b356:	f7fd fdcb 	bl	18ef0 <digitalWrite>
        digitalWrite(ACCL_CLK, 0);
   1b35a:	2100      	movs	r1, #0
   1b35c:	202f      	movs	r0, #47	@ 0x2f
   1b35e:	f7fd fdc7 	bl	18ef0 <digitalWrite>
        am_util_delay_us(100);
   1b362:	2064      	movs	r0, #100	@ 0x64
   1b364:	f000 faf3 	bl	1b94e <am_util_delay_us>
        digitalWrite(ACCL_CLK, 1);
   1b368:	2101      	movs	r1, #1
   1b36a:	202f      	movs	r0, #47	@ 0x2f
   1b36c:	f7fd fdc0 	bl	18ef0 <digitalWrite>
        tempRet <<= 1;
   1b370:	f89d 300f 	ldrb.w	r3, [sp, #15]
   1b374:	005b      	lsls	r3, r3, #1
   1b376:	f88d 300f 	strb.w	r3, [sp, #15]
        if (digitalRead(ACCL_MISO))
   1b37a:	2031      	movs	r0, #49	@ 0x31
   1b37c:	f7fd fdcf 	bl	18f1e <digitalRead>
   1b380:	4603      	mov	r3, r0
   1b382:	2b00      	cmp	r3, #0
   1b384:	d005      	beq.n	1b392 <spiSend+0x72>
        {

            tempRet |= 1;
   1b386:	f89d 300f 	ldrb.w	r3, [sp, #15]
   1b38a:	f043 0301 	orr.w	r3, r3, #1
   1b38e:	f88d 300f 	strb.w	r3, [sp, #15]
        }
        else
        {
        }
        am_util_delay_us(100);
   1b392:	2064      	movs	r0, #100	@ 0x64
   1b394:	f000 fadb 	bl	1b94e <am_util_delay_us>
    for (int i = 0; i < 8; i++)
   1b398:	9b02      	ldr	r3, [sp, #8]
   1b39a:	3301      	adds	r3, #1
   1b39c:	9302      	str	r3, [sp, #8]
   1b39e:	9b02      	ldr	r3, [sp, #8]
   1b3a0:	2b07      	cmp	r3, #7
   1b3a2:	ddc8      	ble.n	1b336 <spiSend+0x16>
    }

    return tempRet;
   1b3a4:	f89d 300f 	ldrb.w	r3, [sp, #15]
}
   1b3a8:	4618      	mov	r0, r3
   1b3aa:	b005      	add	sp, #20
   1b3ac:	f85d fb04 	ldr.w	pc, [sp], #4

0001b3b0 <accl_transceive>:
    am_util_delay_us(100);
    digitalWrite(ACCL_CS, 1);
}

void accl_transceive(uint8_t cmd, uint8_t *buffer, int readLen)
{
   1b3b0:	b510      	push	{r4, lr}
   1b3b2:	b086      	sub	sp, #24
   1b3b4:	4603      	mov	r3, r0
   1b3b6:	9102      	str	r1, [sp, #8]
   1b3b8:	9201      	str	r2, [sp, #4]
   1b3ba:	f88d 300f 	strb.w	r3, [sp, #15]
    digitalWrite(ACCL_CS, 0);
   1b3be:	2100      	movs	r1, #0
   1b3c0:	200c      	movs	r0, #12
   1b3c2:	f7fd fd95 	bl	18ef0 <digitalWrite>
    am_util_delay_us(100);
   1b3c6:	2064      	movs	r0, #100	@ 0x64
   1b3c8:	f000 fac1 	bl	1b94e <am_util_delay_us>
    cmd |= 0x80;
   1b3cc:	f89d 300f 	ldrb.w	r3, [sp, #15]
   1b3d0:	f063 037f 	orn	r3, r3, #127	@ 0x7f
   1b3d4:	f88d 300f 	strb.w	r3, [sp, #15]
    spiSend(cmd);
   1b3d8:	f89d 300f 	ldrb.w	r3, [sp, #15]
   1b3dc:	4618      	mov	r0, r3
   1b3de:	f7ff ff9f 	bl	1b320 <spiSend>
    spiSend(0x00);
   1b3e2:	2000      	movs	r0, #0
   1b3e4:	f7ff ff9c 	bl	1b320 <spiSend>
    //spiSend(cmd);
    am_util_delay_us(100);
   1b3e8:	2064      	movs	r0, #100	@ 0x64
   1b3ea:	f000 fab0 	bl	1b94e <am_util_delay_us>
    for (int i = 0; i < readLen; i++)
   1b3ee:	2300      	movs	r3, #0
   1b3f0:	9305      	str	r3, [sp, #20]
   1b3f2:	e00a      	b.n	1b40a <accl_transceive+0x5a>
    {
        buffer[i] = spiSend(0xff);
   1b3f4:	9b05      	ldr	r3, [sp, #20]
   1b3f6:	9a02      	ldr	r2, [sp, #8]
   1b3f8:	18d4      	adds	r4, r2, r3
   1b3fa:	20ff      	movs	r0, #255	@ 0xff
   1b3fc:	f7ff ff90 	bl	1b320 <spiSend>
   1b400:	4603      	mov	r3, r0
   1b402:	7023      	strb	r3, [r4, #0]
    for (int i = 0; i < readLen; i++)
   1b404:	9b05      	ldr	r3, [sp, #20]
   1b406:	3301      	adds	r3, #1
   1b408:	9305      	str	r3, [sp, #20]
   1b40a:	9a05      	ldr	r2, [sp, #20]
   1b40c:	9b01      	ldr	r3, [sp, #4]
   1b40e:	429a      	cmp	r2, r3
   1b410:	dbf0      	blt.n	1b3f4 <accl_transceive+0x44>
    }
    am_util_delay_us(100);
   1b412:	2064      	movs	r0, #100	@ 0x64
   1b414:	f000 fa9b 	bl	1b94e <am_util_delay_us>
    digitalWrite(ACCL_CS, 1);
   1b418:	2101      	movs	r1, #1
   1b41a:	200c      	movs	r0, #12
   1b41c:	f7fd fd68 	bl	18ef0 <digitalWrite>
}
   1b420:	bf00      	nop
   1b422:	b006      	add	sp, #24
   1b424:	bd10      	pop	{r4, pc}
	...

0001b428 <accl_init>:

uint8_t spi_buffer[100];

uint8_t dd = 0;
void accl_init()
{
   1b428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b42c:	b09c      	sub	sp, #112	@ 0x70
    pinMode(ACCL_CS, 1);
   1b42e:	2101      	movs	r1, #1
   1b430:	200c      	movs	r0, #12
   1b432:	f7fd fd2f 	bl	18e94 <pinMode>
    digitalWrite(ACCL_CS, 1);
   1b436:	2101      	movs	r1, #1
   1b438:	200c      	movs	r0, #12
   1b43a:	f7fd fd59 	bl	18ef0 <digitalWrite>

    pinMode(ACCL_MOSI, 1);
   1b43e:	2101      	movs	r1, #1
   1b440:	2030      	movs	r0, #48	@ 0x30
   1b442:	f7fd fd27 	bl	18e94 <pinMode>
    digitalWrite(ACCL_MOSI, 1);
   1b446:	2101      	movs	r1, #1
   1b448:	2030      	movs	r0, #48	@ 0x30
   1b44a:	f7fd fd51 	bl	18ef0 <digitalWrite>
    pinMode(ACCL_CLK, 1);
   1b44e:	2101      	movs	r1, #1
   1b450:	202f      	movs	r0, #47	@ 0x2f
   1b452:	f7fd fd1f 	bl	18e94 <pinMode>
    digitalWrite(ACCL_CLK, 1);
   1b456:	2101      	movs	r1, #1
   1b458:	202f      	movs	r0, #47	@ 0x2f
   1b45a:	f7fd fd49 	bl	18ef0 <digitalWrite>

    pinMode(ACCL_MISO, 0);
   1b45e:	2100      	movs	r1, #0
   1b460:	2031      	movs	r0, #49	@ 0x31
   1b462:	f7fd fd17 	bl	18e94 <pinMode>

    pinMode(ACCL_INT1, 0);
   1b466:	2100      	movs	r1, #0
   1b468:	203d      	movs	r0, #61	@ 0x3d
   1b46a:	f7fd fd13 	bl	18e94 <pinMode>
    pinMode(ACCL_INT2, 0);
   1b46e:	2100      	movs	r1, #0
   1b470:	203e      	movs	r0, #62	@ 0x3e
   1b472:	f7fd fd0f 	bl	18e94 <pinMode>
    am_util_delay_ms(50);
   1b476:	2032      	movs	r0, #50	@ 0x32
   1b478:	f000 fa5a 	bl	1b930 <am_util_delay_ms>
    am_util_stdio_printf("Accl init started\r\n"); 
   1b47c:	4833      	ldr	r0, [pc, #204]	@ (1b54c <accl_init+0x124>)
   1b47e:	f001 f99f 	bl	1c7c0 <am_util_stdio_printf>
    //while (1)
    {
        accl_transceive(0x00, spi_buffer, 10);
   1b482:	220a      	movs	r2, #10
   1b484:	4932      	ldr	r1, [pc, #200]	@ (1b550 <accl_init+0x128>)
   1b486:	2000      	movs	r0, #0
   1b488:	f7ff ff92 	bl	1b3b0 <accl_transceive>
        am_util_stdio_printf("Accl answer: %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X\r\n", spi_buffer[0], spi_buffer[1], spi_buffer[2], spi_buffer[3], spi_buffer[4], spi_buffer[5], spi_buffer[6], spi_buffer[7], spi_buffer[8], spi_buffer[9], spi_buffer[10], spi_buffer[11], spi_buffer[12], spi_buffer[13], spi_buffer[14], spi_buffer[15], spi_buffer[16], spi_buffer[17], spi_buffer[18], spi_buffer[19]);
   1b48c:	4b30      	ldr	r3, [pc, #192]	@ (1b550 <accl_init+0x128>)
   1b48e:	781b      	ldrb	r3, [r3, #0]
   1b490:	469c      	mov	ip, r3
   1b492:	4b2f      	ldr	r3, [pc, #188]	@ (1b550 <accl_init+0x128>)
   1b494:	785b      	ldrb	r3, [r3, #1]
   1b496:	469e      	mov	lr, r3
   1b498:	4b2d      	ldr	r3, [pc, #180]	@ (1b550 <accl_init+0x128>)
   1b49a:	789b      	ldrb	r3, [r3, #2]
   1b49c:	4698      	mov	r8, r3
   1b49e:	4b2c      	ldr	r3, [pc, #176]	@ (1b550 <accl_init+0x128>)
   1b4a0:	78db      	ldrb	r3, [r3, #3]
   1b4a2:	461e      	mov	r6, r3
   1b4a4:	4b2a      	ldr	r3, [pc, #168]	@ (1b550 <accl_init+0x128>)
   1b4a6:	791b      	ldrb	r3, [r3, #4]
   1b4a8:	461f      	mov	r7, r3
   1b4aa:	4b29      	ldr	r3, [pc, #164]	@ (1b550 <accl_init+0x128>)
   1b4ac:	795b      	ldrb	r3, [r3, #5]
   1b4ae:	9313      	str	r3, [sp, #76]	@ 0x4c
   1b4b0:	4b27      	ldr	r3, [pc, #156]	@ (1b550 <accl_init+0x128>)
   1b4b2:	799b      	ldrb	r3, [r3, #6]
   1b4b4:	9314      	str	r3, [sp, #80]	@ 0x50
   1b4b6:	4b26      	ldr	r3, [pc, #152]	@ (1b550 <accl_init+0x128>)
   1b4b8:	79db      	ldrb	r3, [r3, #7]
   1b4ba:	9315      	str	r3, [sp, #84]	@ 0x54
   1b4bc:	4b24      	ldr	r3, [pc, #144]	@ (1b550 <accl_init+0x128>)
   1b4be:	7a1b      	ldrb	r3, [r3, #8]
   1b4c0:	9316      	str	r3, [sp, #88]	@ 0x58
   1b4c2:	4b23      	ldr	r3, [pc, #140]	@ (1b550 <accl_init+0x128>)
   1b4c4:	7a5b      	ldrb	r3, [r3, #9]
   1b4c6:	9317      	str	r3, [sp, #92]	@ 0x5c
   1b4c8:	4b21      	ldr	r3, [pc, #132]	@ (1b550 <accl_init+0x128>)
   1b4ca:	7a9b      	ldrb	r3, [r3, #10]
   1b4cc:	9318      	str	r3, [sp, #96]	@ 0x60
   1b4ce:	4b20      	ldr	r3, [pc, #128]	@ (1b550 <accl_init+0x128>)
   1b4d0:	7adb      	ldrb	r3, [r3, #11]
   1b4d2:	9319      	str	r3, [sp, #100]	@ 0x64
   1b4d4:	4b1e      	ldr	r3, [pc, #120]	@ (1b550 <accl_init+0x128>)
   1b4d6:	7b1b      	ldrb	r3, [r3, #12]
   1b4d8:	931a      	str	r3, [sp, #104]	@ 0x68
   1b4da:	4b1d      	ldr	r3, [pc, #116]	@ (1b550 <accl_init+0x128>)
   1b4dc:	7b5b      	ldrb	r3, [r3, #13]
   1b4de:	931b      	str	r3, [sp, #108]	@ 0x6c
   1b4e0:	4b1b      	ldr	r3, [pc, #108]	@ (1b550 <accl_init+0x128>)
   1b4e2:	7b9b      	ldrb	r3, [r3, #14]
   1b4e4:	461d      	mov	r5, r3
   1b4e6:	4b1a      	ldr	r3, [pc, #104]	@ (1b550 <accl_init+0x128>)
   1b4e8:	7bdb      	ldrb	r3, [r3, #15]
   1b4ea:	461c      	mov	r4, r3
   1b4ec:	4b18      	ldr	r3, [pc, #96]	@ (1b550 <accl_init+0x128>)
   1b4ee:	7c1b      	ldrb	r3, [r3, #16]
   1b4f0:	4618      	mov	r0, r3
   1b4f2:	4b17      	ldr	r3, [pc, #92]	@ (1b550 <accl_init+0x128>)
   1b4f4:	7c5b      	ldrb	r3, [r3, #17]
   1b4f6:	4619      	mov	r1, r3
   1b4f8:	4b15      	ldr	r3, [pc, #84]	@ (1b550 <accl_init+0x128>)
   1b4fa:	7c9b      	ldrb	r3, [r3, #18]
   1b4fc:	461a      	mov	r2, r3
   1b4fe:	4b14      	ldr	r3, [pc, #80]	@ (1b550 <accl_init+0x128>)
   1b500:	7cdb      	ldrb	r3, [r3, #19]
   1b502:	9310      	str	r3, [sp, #64]	@ 0x40
   1b504:	920f      	str	r2, [sp, #60]	@ 0x3c
   1b506:	910e      	str	r1, [sp, #56]	@ 0x38
   1b508:	900d      	str	r0, [sp, #52]	@ 0x34
   1b50a:	940c      	str	r4, [sp, #48]	@ 0x30
   1b50c:	950b      	str	r5, [sp, #44]	@ 0x2c
   1b50e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
   1b510:	920a      	str	r2, [sp, #40]	@ 0x28
   1b512:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
   1b514:	9209      	str	r2, [sp, #36]	@ 0x24
   1b516:	9a19      	ldr	r2, [sp, #100]	@ 0x64
   1b518:	9208      	str	r2, [sp, #32]
   1b51a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
   1b51c:	9207      	str	r2, [sp, #28]
   1b51e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
   1b520:	9206      	str	r2, [sp, #24]
   1b522:	9a16      	ldr	r2, [sp, #88]	@ 0x58
   1b524:	9205      	str	r2, [sp, #20]
   1b526:	9a15      	ldr	r2, [sp, #84]	@ 0x54
   1b528:	9204      	str	r2, [sp, #16]
   1b52a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
   1b52c:	9203      	str	r2, [sp, #12]
   1b52e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
   1b530:	9302      	str	r3, [sp, #8]
   1b532:	9701      	str	r7, [sp, #4]
   1b534:	9600      	str	r6, [sp, #0]
   1b536:	4643      	mov	r3, r8
   1b538:	4672      	mov	r2, lr
   1b53a:	4661      	mov	r1, ip
   1b53c:	4805      	ldr	r0, [pc, #20]	@ (1b554 <accl_init+0x12c>)
   1b53e:	f001 f93f 	bl	1c7c0 <am_util_stdio_printf>
    }
   1b542:	bf00      	nop
   1b544:	b01c      	add	sp, #112	@ 0x70
   1b546:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b54a:	bf00      	nop
   1b54c:	00027b40 	.word	0x00027b40
   1b550:	1002fa88 	.word	0x1002fa88
   1b554:	00027b54 	.word	0x00027b54

0001b558 <__NVIC_EnableIRQ>:
{
   1b558:	b082      	sub	sp, #8
   1b55a:	4603      	mov	r3, r0
   1b55c:	f88d 3007 	strb.w	r3, [sp, #7]
  if ((int32_t)(IRQn) >= 0)
   1b560:	f99d 3007 	ldrsb.w	r3, [sp, #7]
   1b564:	2b00      	cmp	r3, #0
   1b566:	db0c      	blt.n	1b582 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   1b568:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1b56c:	f003 021f 	and.w	r2, r3, #31
   1b570:	4905      	ldr	r1, [pc, #20]	@ (1b588 <__NVIC_EnableIRQ+0x30>)
   1b572:	f99d 3007 	ldrsb.w	r3, [sp, #7]
   1b576:	095b      	lsrs	r3, r3, #5
   1b578:	2001      	movs	r0, #1
   1b57a:	fa00 f202 	lsl.w	r2, r0, r2
   1b57e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
   1b582:	bf00      	nop
   1b584:	b002      	add	sp, #8
   1b586:	4770      	bx	lr
   1b588:	e000e100 	.word	0xe000e100

0001b58c <__NVIC_SetPriority>:
{
   1b58c:	b082      	sub	sp, #8
   1b58e:	4603      	mov	r3, r0
   1b590:	9100      	str	r1, [sp, #0]
   1b592:	f88d 3007 	strb.w	r3, [sp, #7]
  if ((int32_t)(IRQn) >= 0)
   1b596:	f99d 3007 	ldrsb.w	r3, [sp, #7]
   1b59a:	2b00      	cmp	r3, #0
   1b59c:	db0a      	blt.n	1b5b4 <__NVIC_SetPriority+0x28>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   1b59e:	9b00      	ldr	r3, [sp, #0]
   1b5a0:	b2da      	uxtb	r2, r3
   1b5a2:	490c      	ldr	r1, [pc, #48]	@ (1b5d4 <__NVIC_SetPriority+0x48>)
   1b5a4:	f99d 3007 	ldrsb.w	r3, [sp, #7]
   1b5a8:	0152      	lsls	r2, r2, #5
   1b5aa:	b2d2      	uxtb	r2, r2
   1b5ac:	440b      	add	r3, r1
   1b5ae:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
   1b5b2:	e00b      	b.n	1b5cc <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   1b5b4:	9b00      	ldr	r3, [sp, #0]
   1b5b6:	b2da      	uxtb	r2, r3
   1b5b8:	4907      	ldr	r1, [pc, #28]	@ (1b5d8 <__NVIC_SetPriority+0x4c>)
   1b5ba:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1b5be:	f003 030f 	and.w	r3, r3, #15
   1b5c2:	3b04      	subs	r3, #4
   1b5c4:	0152      	lsls	r2, r2, #5
   1b5c6:	b2d2      	uxtb	r2, r2
   1b5c8:	440b      	add	r3, r1
   1b5ca:	761a      	strb	r2, [r3, #24]
}
   1b5cc:	bf00      	nop
   1b5ce:	b002      	add	sp, #8
   1b5d0:	4770      	bx	lr
   1b5d2:	bf00      	nop
   1b5d4:	e000e100 	.word	0xe000e100
   1b5d8:	e000ed00 	.word	0xe000ed00

0001b5dc <am_uart_isr>:
        .eTXFifoLevel = AM_HAL_UART_FIFO_LEVEL_16,
        .eRXFifoLevel = AM_HAL_UART_FIFO_LEVEL_16,
};

void am_uart_isr(void)
{
   1b5dc:	b500      	push	{lr}
   1b5de:	b083      	sub	sp, #12
    //
    // Service the FIFOs as necessary, and clear the interrupts.
    //
    uint32_t ui32Status;
    am_hal_uart_interrupt_status_get(phUART, &ui32Status, true);
   1b5e0:	4b0c      	ldr	r3, [pc, #48]	@ (1b614 <am_uart_isr+0x38>)
   1b5e2:	681b      	ldr	r3, [r3, #0]
   1b5e4:	a901      	add	r1, sp, #4
   1b5e6:	2201      	movs	r2, #1
   1b5e8:	4618      	mov	r0, r3
   1b5ea:	f00a fd33 	bl	26054 <am_hal_uart_interrupt_status_get>
    am_hal_uart_interrupt_clear(phUART, ui32Status);
   1b5ee:	4b09      	ldr	r3, [pc, #36]	@ (1b614 <am_uart_isr+0x38>)
   1b5f0:	681b      	ldr	r3, [r3, #0]
   1b5f2:	9a01      	ldr	r2, [sp, #4]
   1b5f4:	4611      	mov	r1, r2
   1b5f6:	4618      	mov	r0, r3
   1b5f8:	f00a fd1a 	bl	26030 <am_hal_uart_interrupt_clear>
    am_hal_uart_interrupt_service(phUART, ui32Status);
   1b5fc:	4b05      	ldr	r3, [pc, #20]	@ (1b614 <am_uart_isr+0x38>)
   1b5fe:	681b      	ldr	r3, [r3, #0]
   1b600:	9a01      	ldr	r2, [sp, #4]
   1b602:	4611      	mov	r1, r2
   1b604:	4618      	mov	r0, r3
   1b606:	f00a fd41 	bl	2608c <am_hal_uart_interrupt_service>
}
   1b60a:	bf00      	nop
   1b60c:	b003      	add	sp, #12
   1b60e:	f85d fb04 	ldr.w	pc, [sp], #4
   1b612:	bf00      	nop
   1b614:	1002faec 	.word	0x1002faec

0001b618 <uart_print>:

void uart_print(char *pcStr)
{
   1b618:	b500      	push	{lr}
   1b61a:	b08d      	sub	sp, #52	@ 0x34
   1b61c:	9001      	str	r0, [sp, #4]
    uint32_t ui32StrLen = 0;
   1b61e:	2300      	movs	r3, #0
   1b620:	930b      	str	r3, [sp, #44]	@ 0x2c
    uint32_t ui32BytesWritten = 0;
   1b622:	2300      	movs	r3, #0
   1b624:	930a      	str	r3, [sp, #40]	@ 0x28

    //
    // Measure the length of the string.
    //
    while (pcStr[ui32StrLen] != 0)
   1b626:	e002      	b.n	1b62e <uart_print+0x16>
    {
        ui32StrLen++;
   1b628:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1b62a:	3301      	adds	r3, #1
   1b62c:	930b      	str	r3, [sp, #44]	@ 0x2c
    while (pcStr[ui32StrLen] != 0)
   1b62e:	9a01      	ldr	r2, [sp, #4]
   1b630:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1b632:	4413      	add	r3, r2
   1b634:	781b      	ldrb	r3, [r3, #0]
   1b636:	2b00      	cmp	r3, #0
   1b638:	d1f6      	bne.n	1b628 <uart_print+0x10>
    }

    //
    // Print the string via the UART.
    //
    const am_hal_uart_transfer_t sUartWrite =
   1b63a:	2300      	movs	r3, #0
   1b63c:	f88d 3008 	strb.w	r3, [sp, #8]
   1b640:	9b01      	ldr	r3, [sp, #4]
   1b642:	9303      	str	r3, [sp, #12]
   1b644:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1b646:	9304      	str	r3, [sp, #16]
   1b648:	ab0a      	add	r3, sp, #40	@ 0x28
   1b64a:	9305      	str	r3, [sp, #20]
   1b64c:	2364      	movs	r3, #100	@ 0x64
   1b64e:	9306      	str	r3, [sp, #24]
   1b650:	2300      	movs	r3, #0
   1b652:	9307      	str	r3, [sp, #28]
   1b654:	2300      	movs	r3, #0
   1b656:	9308      	str	r3, [sp, #32]
   1b658:	2300      	movs	r3, #0
   1b65a:	9309      	str	r3, [sp, #36]	@ 0x24
            .ui32TimeoutMs = 100,
            .pfnCallback = NULL,
            .pvContext = NULL,
            .ui32ErrorStatus = 0};

    am_hal_uart_transfer(phUART, &sUartWrite);
   1b65c:	4b08      	ldr	r3, [pc, #32]	@ (1b680 <uart_print+0x68>)
   1b65e:	681b      	ldr	r3, [r3, #0]
   1b660:	aa02      	add	r2, sp, #8
   1b662:	4611      	mov	r1, r2
   1b664:	4618      	mov	r0, r3
   1b666:	f00a fb71 	bl	25d4c <am_hal_uart_transfer>

    if (ui32BytesWritten != ui32StrLen)
   1b66a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1b66c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1b66e:	429a      	cmp	r2, r3
   1b670:	d001      	beq.n	1b676 <uart_print+0x5e>
    {
        //
        // Couldn't send the whole string!!
        //
        while (1)
   1b672:	bf00      	nop
   1b674:	e7fd      	b.n	1b672 <uart_print+0x5a>
            ;
    }
}
   1b676:	bf00      	nop
   1b678:	b00d      	add	sp, #52	@ 0x34
   1b67a:	f85d fb04 	ldr.w	pc, [sp], #4
   1b67e:	bf00      	nop
   1b680:	1002faec 	.word	0x1002faec

0001b684 <uart_init>:
        .GP.cfg_b.eForceOutputEn = AM_HAL_GPIO_PIN_FORCEEN_NONE,
        .GP.cfg_b.uRsvd_1 = 0,
};

void uart_init()
{
   1b684:	b508      	push	{r3, lr}
    //
    // Initialize the printf interface for UART output.
    //
    am_hal_uart_initialize(0, &phUART);
   1b686:	4914      	ldr	r1, [pc, #80]	@ (1b6d8 <uart_init+0x54>)
   1b688:	2000      	movs	r0, #0
   1b68a:	f00a fa11 	bl	25ab0 <am_hal_uart_initialize>
    am_hal_uart_power_control(phUART, AM_HAL_SYSCTRL_WAKE, false);
   1b68e:	4b12      	ldr	r3, [pc, #72]	@ (1b6d8 <uart_init+0x54>)
   1b690:	681b      	ldr	r3, [r3, #0]
   1b692:	2200      	movs	r2, #0
   1b694:	2100      	movs	r1, #0
   1b696:	4618      	mov	r0, r3
   1b698:	f00a fa42 	bl	25b20 <am_hal_uart_power_control>
    am_hal_uart_configure(phUART, &g_sUartConfig);
   1b69c:	4b0e      	ldr	r3, [pc, #56]	@ (1b6d8 <uart_init+0x54>)
   1b69e:	681b      	ldr	r3, [r3, #0]
   1b6a0:	490e      	ldr	r1, [pc, #56]	@ (1b6dc <uart_init+0x58>)
   1b6a2:	4618      	mov	r0, r3
   1b6a4:	f00a fa98 	bl	25bd8 <am_hal_uart_configure>

    //
    // Enable the UART pins.
    //
    am_hal_gpio_pinconfig(0, g_AM_GPIO_COM_UART_TX);
   1b6a8:	4b0d      	ldr	r3, [pc, #52]	@ (1b6e0 <uart_init+0x5c>)
   1b6aa:	6819      	ldr	r1, [r3, #0]
   1b6ac:	2000      	movs	r0, #0
   1b6ae:	f00a fd9d 	bl	261ec <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(2, g_AM_GPIO_COM_UART_RX);
   1b6b2:	4b0c      	ldr	r3, [pc, #48]	@ (1b6e4 <uart_init+0x60>)
   1b6b4:	6819      	ldr	r1, [r3, #0]
   1b6b6:	2002      	movs	r0, #2
   1b6b8:	f00a fd98 	bl	261ec <am_hal_gpio_pinconfig>

    //
    // Enable interrupts.
    //
    NVIC_SetPriority((IRQn_Type)(UART0_IRQn), AM_IRQ_PRIORITY_DEFAULT);
   1b6bc:	2104      	movs	r1, #4
   1b6be:	200f      	movs	r0, #15
   1b6c0:	f7ff ff64 	bl	1b58c <__NVIC_SetPriority>
    NVIC_EnableIRQ((IRQn_Type)(UART0_IRQn));
   1b6c4:	200f      	movs	r0, #15
   1b6c6:	f7ff ff47 	bl	1b558 <__NVIC_EnableIRQ>
    am_hal_interrupt_master_enable();
   1b6ca:	f007 fb47 	bl	22d5c <am_hal_interrupt_master_enable>

    //
    // Set the main print interface to use the UART print function we defined.
    //
    am_util_stdio_printf_init(uart_print);
   1b6ce:	4806      	ldr	r0, [pc, #24]	@ (1b6e8 <uart_init+0x64>)
   1b6d0:	f000 f9ee 	bl	1bab0 <am_util_stdio_printf_init>
}
   1b6d4:	bf00      	nop
   1b6d6:	bd08      	pop	{r3, pc}
   1b6d8:	1002faec 	.word	0x1002faec
   1b6dc:	00028170 	.word	0x00028170
   1b6e0:	100010e0 	.word	0x100010e0
   1b6e4:	100010e4 	.word	0x100010e4
   1b6e8:	0001b619 	.word	0x0001b619

0001b6ec <uart_flush>:

void uart_flush()
{
   1b6ec:	b508      	push	{r3, lr}
    am_hal_uart_tx_flush(phUART);
   1b6ee:	4b03      	ldr	r3, [pc, #12]	@ (1b6fc <uart_flush+0x10>)
   1b6f0:	681b      	ldr	r3, [r3, #0]
   1b6f2:	4618      	mov	r0, r3
   1b6f4:	f00a fc50 	bl	25f98 <am_hal_uart_tx_flush>
   1b6f8:	bf00      	nop
   1b6fa:	bd08      	pop	{r3, pc}
   1b6fc:	1002faec 	.word	0x1002faec

0001b700 <color565>:
#include "touch.h"
#include "light_sensor.h"
#include "accl.h"

uint16_t color565(uint8_t r, uint8_t g, uint8_t b)
{
   1b700:	b082      	sub	sp, #8
   1b702:	4603      	mov	r3, r0
   1b704:	f88d 3007 	strb.w	r3, [sp, #7]
   1b708:	460b      	mov	r3, r1
   1b70a:	f88d 3006 	strb.w	r3, [sp, #6]
   1b70e:	4613      	mov	r3, r2
   1b710:	f88d 3005 	strb.w	r3, [sp, #5]
    return ((r & 0xF8) << 8) | ((g & 0xFC) << 3) | (b >> 3);
   1b714:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1b718:	021b      	lsls	r3, r3, #8
   1b71a:	b21b      	sxth	r3, r3
   1b71c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
   1b720:	f023 0307 	bic.w	r3, r3, #7
   1b724:	b21a      	sxth	r2, r3
   1b726:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1b72a:	00db      	lsls	r3, r3, #3
   1b72c:	b21b      	sxth	r3, r3
   1b72e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
   1b732:	b21b      	sxth	r3, r3
   1b734:	4313      	orrs	r3, r2
   1b736:	b21a      	sxth	r2, r3
   1b738:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1b73c:	08db      	lsrs	r3, r3, #3
   1b73e:	b2db      	uxtb	r3, r3
   1b740:	b21b      	sxth	r3, r3
   1b742:	4313      	orrs	r3, r2
   1b744:	b21b      	sxth	r3, r3
   1b746:	b29b      	uxth	r3, r3
}
   1b748:	4618      	mov	r0, r3
   1b74a:	b002      	add	sp, #8
   1b74c:	4770      	bx	lr
	...

0001b750 <main>:
int main(void)
{
   1b750:	b500      	push	{lr}
   1b752:	b095      	sub	sp, #84	@ 0x54
    //
    // Set the default cache configuration
    //
    am_hal_cachectrl_config(&am_hal_cachectrl_defaults);
   1b754:	4872      	ldr	r0, [pc, #456]	@ (1b920 <main+0x1d0>)
   1b756:	f007 f9e9 	bl	22b2c <am_hal_cachectrl_config>
    am_hal_cachectrl_enable();
   1b75a:	f007 fa09 	bl	22b70 <am_hal_cachectrl_enable>

    //
    // Configure the board for low power operation.
    //
    am_bsp_external_pwr_on();
   1b75e:	f00b ff73 	bl	27648 <am_bsp_external_pwr_on>
    am_util_delay_ms(100);
   1b762:	2064      	movs	r0, #100	@ 0x64
   1b764:	f000 f8e4 	bl	1b930 <am_util_delay_ms>
    am_bsp_low_power_init();
   1b768:	f00b ff70 	bl	2764c <am_bsp_low_power_init>

    pinMode(88, 1);
   1b76c:	2101      	movs	r1, #1
   1b76e:	2058      	movs	r0, #88	@ 0x58
   1b770:	f7fd fb90 	bl	18e94 <pinMode>
    digitalWrite(88, 0);
   1b774:	2100      	movs	r1, #0
   1b776:	2058      	movs	r0, #88	@ 0x58
   1b778:	f7fd fbba 	bl	18ef0 <digitalWrite>
    pinMode(91, 1);
   1b77c:	2101      	movs	r1, #1
   1b77e:	205b      	movs	r0, #91	@ 0x5b
   1b780:	f7fd fb88 	bl	18e94 <pinMode>
    digitalWrite(91, 1);
   1b784:	2101      	movs	r1, #1
   1b786:	205b      	movs	r0, #91	@ 0x5b
   1b788:	f7fd fbb2 	bl	18ef0 <digitalWrite>
    pinMode(23, 1);
   1b78c:	2101      	movs	r1, #1
   1b78e:	2017      	movs	r0, #23
   1b790:	f7fd fb80 	bl	18e94 <pinMode>
    digitalWrite(23, 0);
   1b794:	2100      	movs	r1, #0
   1b796:	2017      	movs	r0, #23
   1b798:	f7fd fbaa 	bl	18ef0 <digitalWrite>

    pinMode(7, 2);
   1b79c:	2102      	movs	r1, #2
   1b79e:	2007      	movs	r0, #7
   1b7a0:	f7fd fb78 	bl	18e94 <pinMode>
    digitalWrite(7, 1);
   1b7a4:	2101      	movs	r1, #1
   1b7a6:	2007      	movs	r0, #7
   1b7a8:	f7fd fba2 	bl	18ef0 <digitalWrite>

    digitalWrite(55, 0);
   1b7ac:	2100      	movs	r1, #0
   1b7ae:	2037      	movs	r0, #55	@ 0x37
   1b7b0:	f7fd fb9e 	bl	18ef0 <digitalWrite>
    pinMode(55, 1);
   1b7b4:	2101      	movs	r1, #1
   1b7b6:	2037      	movs	r0, #55	@ 0x37
   1b7b8:	f7fd fb6c 	bl	18e94 <pinMode>
    digitalWrite(5, 1);
   1b7bc:	2101      	movs	r1, #1
   1b7be:	2005      	movs	r0, #5
   1b7c0:	f7fd fb96 	bl	18ef0 <digitalWrite>
    digitalWrite(5, 0);
   1b7c4:	2100      	movs	r1, #0
   1b7c6:	2005      	movs	r0, #5
   1b7c8:	f7fd fb92 	bl	18ef0 <digitalWrite>

    pinMode(18, 1);
   1b7cc:	2101      	movs	r1, #1
   1b7ce:	2012      	movs	r0, #18
   1b7d0:	f7fd fb60 	bl	18e94 <pinMode>
    digitalWrite(18, 1);
   1b7d4:	2101      	movs	r1, #1
   1b7d6:	2012      	movs	r0, #18
   1b7d8:	f7fd fb8a 	bl	18ef0 <digitalWrite>
    am_util_delay_ms(100);
   1b7dc:	2064      	movs	r0, #100	@ 0x64
   1b7de:	f000 f8a7 	bl	1b930 <am_util_delay_ms>
    pinMode(88, 1);
   1b7e2:	2101      	movs	r1, #1
   1b7e4:	2058      	movs	r0, #88	@ 0x58
   1b7e6:	f7fd fb55 	bl	18e94 <pinMode>
    digitalWrite(88, 0);
   1b7ea:	2100      	movs	r1, #0
   1b7ec:	2058      	movs	r0, #88	@ 0x58
   1b7ee:	f7fd fb7f 	bl	18ef0 <digitalWrite>
    am_util_delay_ms(10);
   1b7f2:	200a      	movs	r0, #10
   1b7f4:	f000 f89c 	bl	1b930 <am_util_delay_ms>

    uart_init();
   1b7f8:	f7ff ff44 	bl	1b684 <uart_init>

    am_util_stdio_printf("Hello World!\r\n");
   1b7fc:	4849      	ldr	r0, [pc, #292]	@ (1b924 <main+0x1d4>)
   1b7fe:	f000 ffdf 	bl	1c7c0 <am_util_stdio_printf>

    init_display();
   1b802:	f7ff fa67 	bl	1acd4 <init_display>
    display_buffset(color565(123, 123, 0));
   1b806:	2200      	movs	r2, #0
   1b808:	217b      	movs	r1, #123	@ 0x7b
   1b80a:	207b      	movs	r0, #123	@ 0x7b
   1b80c:	f7ff ff78 	bl	1b700 <color565>
   1b810:	4603      	mov	r3, r0
   1b812:	4618      	mov	r0, r3
   1b814:	f7ff fa2c 	bl	1ac70 <display_buffset>
    /*am_util_delay_ms(2000);
    am_util_stdio_printf("End display:    %i\r\n", a);
    end_display();*/

    touch_init();
   1b818:	f7ff fb80 	bl	1af1c <touch_init>
    lightSens_init();
   1b81c:	f7ff fca0 	bl	1b160 <lightSens_init>
    accl_init();
   1b820:	f7ff fe02 	bl	1b428 <accl_init>

    am_hal_interrupt_master_enable();
   1b824:	f007 fa9a 	bl	22d5c <am_hal_interrupt_master_enable>
    uint8_t a = 0;
   1b828:	2300      	movs	r3, #0
   1b82a:	f88d 304f 	strb.w	r3, [sp, #79]	@ 0x4f
    while (1)
    {
        uart_flush();
   1b82e:	f7ff ff5d 	bl	1b6ec <uart_flush>
        // am_util_delay_ms(1000);
        if (!digitalRead(24))
   1b832:	2018      	movs	r0, #24
   1b834:	f7fd fb73 	bl	18f1e <digitalRead>
   1b838:	4603      	mov	r3, r0
   1b83a:	f083 0301 	eor.w	r3, r3, #1
   1b83e:	b2db      	uxtb	r3, r3
   1b840:	2b00      	cmp	r3, #0
   1b842:	d038      	beq.n	1b8b6 <main+0x166>
        {
            // am_util_stdio_printf("App:    %i\r\n", pin_state);
            uint8_t data[16] = {0};
   1b844:	2300      	movs	r3, #0
   1b846:	930d      	str	r3, [sp, #52]	@ 0x34
   1b848:	ab0e      	add	r3, sp, #56	@ 0x38
   1b84a:	2200      	movs	r2, #0
   1b84c:	601a      	str	r2, [r3, #0]
   1b84e:	605a      	str	r2, [r3, #4]
   1b850:	609a      	str	r2, [r3, #8]
            touch_transceive(0x0010, (uint32_t *)&data, 16);
   1b852:	ab0d      	add	r3, sp, #52	@ 0x34
   1b854:	2210      	movs	r2, #16
   1b856:	4619      	mov	r1, r3
   1b858:	2010      	movs	r0, #16
   1b85a:	f7ff fafb 	bl	1ae54 <touch_transceive>
            // am_util_stdio_printf("Touch answer: %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X %02X\r\n", data[0], data[1], data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11], data[12], data[13], data[14], data[15]);
            uint16_t touch_x = (data[4] << 8 | data[3]);
   1b85e:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
   1b862:	021b      	lsls	r3, r3, #8
   1b864:	b21a      	sxth	r2, r3
   1b866:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   1b86a:	b21b      	sxth	r3, r3
   1b86c:	4313      	orrs	r3, r2
   1b86e:	b21b      	sxth	r3, r3
   1b870:	f8ad 3048 	strh.w	r3, [sp, #72]	@ 0x48
            uint16_t touch_y = (data[6] << 8 | data[5]);
   1b874:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
   1b878:	021b      	lsls	r3, r3, #8
   1b87a:	b21a      	sxth	r2, r3
   1b87c:	f89d 3039 	ldrb.w	r3, [sp, #57]	@ 0x39
   1b880:	b21b      	sxth	r3, r3
   1b882:	4313      	orrs	r3, r2
   1b884:	b21b      	sxth	r3, r3
   1b886:	f8ad 3046 	strh.w	r3, [sp, #70]	@ 0x46
            uint8_t touch_state = data[8];
   1b88a:	f89d 303c 	ldrb.w	r3, [sp, #60]	@ 0x3c
   1b88e:	f88d 3045 	strb.w	r3, [sp, #69]	@ 0x45
            am_util_stdio_printf("Touch:    %i  %i  %i\r\n", touch_x, touch_y, touch_state);
   1b892:	f8bd 1048 	ldrh.w	r1, [sp, #72]	@ 0x48
   1b896:	f8bd 2046 	ldrh.w	r2, [sp, #70]	@ 0x46
   1b89a:	f89d 3045 	ldrb.w	r3, [sp, #69]	@ 0x45
   1b89e:	4822      	ldr	r0, [pc, #136]	@ (1b928 <main+0x1d8>)
   1b8a0:	f000 ff8e 	bl	1c7c0 <am_util_stdio_printf>
            set_xy_here(touch_x, touch_y);
   1b8a4:	f8bd 2046 	ldrh.w	r2, [sp, #70]	@ 0x46
   1b8a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
   1b8ac:	4611      	mov	r1, r2
   1b8ae:	4618      	mov	r0, r3
   1b8b0:	f7ff f908 	bl	1aac4 <set_xy_here>
   1b8b4:	e7bb      	b.n	1b82e <main+0xde>
                display_buffset(color565(touch_x, touch_y / 2, 0));*/
        }
        else
        {
            uint8_t dataOut[50];
            lightSens_transceive(0x66, (uint32_t *)&dataOut, 4);
   1b8b6:	466b      	mov	r3, sp
   1b8b8:	2204      	movs	r2, #4
   1b8ba:	4619      	mov	r1, r3
   1b8bc:	2066      	movs	r0, #102	@ 0x66
   1b8be:	f7ff fbeb 	bl	1b098 <lightSens_transceive>
            // am_util_stdio_printf("Light answer: %02X %02X %02X\r\n", dataOut[0], dataOut[1], dataOut[2]);
            uint16_t light_value = (dataOut[0] << 8 | dataOut[1]);
   1b8c2:	f89d 3000 	ldrb.w	r3, [sp]
   1b8c6:	021b      	lsls	r3, r3, #8
   1b8c8:	b21a      	sxth	r2, r3
   1b8ca:	f89d 3001 	ldrb.w	r3, [sp, #1]
   1b8ce:	b21b      	sxth	r3, r3
   1b8d0:	4313      	orrs	r3, r2
   1b8d2:	b21b      	sxth	r3, r3
   1b8d4:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
            uint16_t light_state = (dataOut[2] << 8 | dataOut[3]);
   1b8d8:	f89d 3002 	ldrb.w	r3, [sp, #2]
   1b8dc:	021b      	lsls	r3, r3, #8
   1b8de:	b21a      	sxth	r2, r3
   1b8e0:	f89d 3003 	ldrb.w	r3, [sp, #3]
   1b8e4:	b21b      	sxth	r3, r3
   1b8e6:	4313      	orrs	r3, r2
   1b8e8:	b21b      	sxth	r3, r3
   1b8ea:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
            am_util_stdio_printf("Light:    %i  %i\r\n", light_value, light_state);
   1b8ee:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
   1b8f2:	f8bd 204a 	ldrh.w	r2, [sp, #74]	@ 0x4a
   1b8f6:	4619      	mov	r1, r3
   1b8f8:	480c      	ldr	r0, [pc, #48]	@ (1b92c <main+0x1dc>)
   1b8fa:	f000 ff61 	bl	1c7c0 <am_util_stdio_printf>
            set_light_here(light_value, light_state);
   1b8fe:	f8bd 204a 	ldrh.w	r2, [sp, #74]	@ 0x4a
   1b902:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
   1b906:	4611      	mov	r1, r2
   1b908:	4618      	mov	r0, r3
   1b90a:	f7ff f939 	bl	1ab80 <set_light_here>
            lightSens_transmit(0x60, 0x22); // Clear FIFO
   1b90e:	2122      	movs	r1, #34	@ 0x22
   1b910:	2060      	movs	r0, #96	@ 0x60
   1b912:	f7ff fb7d 	bl	1b010 <lightSens_transmit>
            am_util_delay_ms(20);
   1b916:	2014      	movs	r0, #20
   1b918:	f000 f80a 	bl	1b930 <am_util_delay_ms>
        uart_flush();
   1b91c:	e787      	b.n	1b82e <main+0xde>
   1b91e:	bf00      	nop
   1b920:	00028564 	.word	0x00028564
   1b924:	00027bc8 	.word	0x00027bc8
   1b928:	00027bd8 	.word	0x00027bd8
   1b92c:	00027bf0 	.word	0x00027bf0

0001b930 <am_util_delay_ms>:
// Delays for a desired amount of milliseconds.
//
//*****************************************************************************
void
am_util_delay_ms(uint32_t ui32MilliSeconds)
{
   1b930:	b500      	push	{lr}
   1b932:	b083      	sub	sp, #12
   1b934:	9001      	str	r0, [sp, #4]
#if defined(AM_PART_APOLLO4_API)
    am_hal_delay_us( ui32MilliSeconds * 1000);
   1b936:	9b01      	ldr	r3, [sp, #4]
   1b938:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
   1b93c:	fb02 f303 	mul.w	r3, r2, r3
   1b940:	4618      	mov	r0, r3
   1b942:	f00a fbcd 	bl	260e0 <am_hal_delay_us>
    //
    // Call the BOOTROM cycle delay function
    //
    am_hal_flash_delay(ui32Loops);
#endif // AM_PART_APOLLO4_API
}
   1b946:	bf00      	nop
   1b948:	b003      	add	sp, #12
   1b94a:	f85d fb04 	ldr.w	pc, [sp], #4

0001b94e <am_util_delay_us>:
// Delays for a desired amount of microseconds.
//
//*****************************************************************************
void
am_util_delay_us(uint32_t ui32MicroSeconds)
{
   1b94e:	b500      	push	{lr}
   1b950:	b083      	sub	sp, #12
   1b952:	9001      	str	r0, [sp, #4]
#if defined(AM_PART_APOLLO4_API)
    am_hal_delay_us( ui32MicroSeconds );
   1b954:	9801      	ldr	r0, [sp, #4]
   1b956:	f00a fbc3 	bl	260e0 <am_hal_delay_us>
    //
    // Call the BOOTROM cycle delay function
    //
    am_hal_flash_delay(ui32Loops);
#endif // AM_PART_APOLLO4_API
}
   1b95a:	bf00      	nop
   1b95c:	b003      	add	sp, #12
   1b95e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0001b964 <HardFault_Handler>:
HardFault_Handler(void)
#else // AM_CMSIS_REGS
am_fault_isr(void)
#endif // AM_CMSIS_REGS
{
     __asm("    tst    lr, #4\n"                          // Check if we should use MSP or PSP
   1b964:	f01e 0f04 	tst.w	lr, #4
   1b968:	bf0c      	ite	eq
   1b96a:	f3ef 8008 	mrseq	r0, MSP
   1b96e:	f3ef 8009 	mrsne	r0, PSP
          "    ite    eq\n"                              // Instrs executed when: eq,ne
          "    mrseq  r0, msp\n"                         // t: bit2=0 indicating MSP stack
          "    mrsne  r0, psp\n");                       // e: bit2=1 indicating PSP stack
#if defined(AM_LOCAL_STACK)
    __asm("    ldr    r1, =gFaultStack\n"                // get address of the base of the temp_stack
   1b972:	4905      	ldr	r1, [pc, #20]	@ (1b988 <HardFault_Handler+0x24>)
   1b974:	f501 7100 	add.w	r1, r1, #512	@ 0x200
   1b978:	f021 0103 	bic.w	r1, r1, #3
   1b97c:	468d      	mov	sp, r1
          "    add    r1, r1, #512\n"                    // address of the top of the stack.
          "    bic    r1, #3\n"                          // make sure the new stack is 8-byte aligned
          "    mov    sp,r1\n");                         // move the new stack address to the SP
#endif
    __asm("    b      am_util_faultisr_collect_data\n"); // no return - simple branch to get fault info
   1b97e:	f000 b80b 	b.w	1b998 <am_util_faultisr_collect_data>
}
   1b982:	bf00      	nop
   1b984:	4618      	mov	r0, r3
   1b986:	0000      	.short	0x0000
   1b988:	1002faf0 	.word	0x1002faf0

0001b98c <getStackedReg>:

uint32_t __attribute__((naked))
getStackedReg(uint32_t regnum, uint32_t u32SP)
{
    __asm("    lsls    r0, r0, #2");
   1b98c:	0080      	lsls	r0, r0, #2
    __asm("    adds    r0, r1");
   1b98e:	1840      	adds	r0, r0, r1
    __asm("    ldr     r0, [r0]");
   1b990:	6800      	ldr	r0, [r0, #0]
    __asm("    bx      lr");
   1b992:	4770      	bx	lr
}
   1b994:	bf00      	nop
   1b996:	4618      	mov	r0, r3

0001b998 <am_util_faultisr_collect_data>:
// HardFault_Handler() was called.
//
//*****************************************************************************
void
am_util_faultisr_collect_data(uint32_t u32IsrSP)
{
   1b998:	b500      	push	{lr}
   1b99a:	b097      	sub	sp, #92	@ 0x5c
   1b99c:	9001      	str	r0, [sp, #4]
    volatile am_fault_t sFaultData;
#if defined(AM_PART_APOLLO4B) || defined(AM_PART_APOLLO4P) || defined(AM_PART_APOLLO4L)
    am_hal_fault_status_t  sHalFaultData = {0};
   1b99e:	ab03      	add	r3, sp, #12
   1b9a0:	2200      	movs	r2, #0
   1b9a2:	601a      	str	r2, [r3, #0]
   1b9a4:	605a      	str	r2, [r3, #4]
   1b9a6:	609a      	str	r2, [r3, #8]
   1b9a8:	60da      	str	r2, [r3, #12]
   1b9aa:	611a      	str	r2, [r3, #16]
   1b9ac:	615a      	str	r2, [r3, #20]
#elif defined(AM_PART_APOLLO3) || defined(AM_PART_APOLLO3P) || defined(AM_PART_APOLLO2) || defined(AM_PART_APOLLO)
    am_hal_mcuctrl_fault_t sHalFaultData = {0};
#endif // if defined(AM_PART_APOLLO4X)

    uint32_t u32Mask = 0;
   1b9ae:	2300      	movs	r3, #0
   1b9b0:	9315      	str	r3, [sp, #84]	@ 0x54
    // u32Mask is used for 2 things: 1) in the print loop, 2) as a spot to set
    // a breakpoint at the end of the routine.  If the printing is not used,
    // we'll get a compiler warning; so to avoid that warning, we'll use it
    // in a dummy assignment here.
    //
    sFaultData.u32CFSR = u32Mask;       // Avoid compiler warning
   1b9b2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
   1b9b4:	9313      	str	r3, [sp, #76]	@ 0x4c
    sFaultData.u32CFSR = AM_REGVAL(AM_REG_SYSCTRL_CFSR_O);
   1b9b6:	4b31      	ldr	r3, [pc, #196]	@ (1ba7c <am_util_faultisr_collect_data+0xe4>)
   1b9b8:	681b      	ldr	r3, [r3, #0]
   1b9ba:	9313      	str	r3, [sp, #76]	@ 0x4c
    sFaultData.u8MMSR  = (sFaultData.u32CFSR >> 0)  & 0xff;
   1b9bc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
   1b9be:	b2db      	uxtb	r3, r3
   1b9c0:	f88d 3050 	strb.w	r3, [sp, #80]	@ 0x50
    sFaultData.u8BFSR  = (sFaultData.u32CFSR >> 8)  & 0xff;
   1b9c4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
   1b9c6:	0a1b      	lsrs	r3, r3, #8
   1b9c8:	b2db      	uxtb	r3, r3
   1b9ca:	f88d 3051 	strb.w	r3, [sp, #81]	@ 0x51
    sFaultData.u16UFSR = (sFaultData.u32CFSR >> 16) & 0xffff;
   1b9ce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
   1b9d0:	0c1b      	lsrs	r3, r3, #16
   1b9d2:	b29b      	uxth	r3, r3
   1b9d4:	f8ad 3052 	strh.w	r3, [sp, #82]	@ 0x52

    //
    // The address of the location that caused the fault.  e.g. if accessing an
    // invalid data location caused the fault, that address will appear here.
    //
    sFaultData.u32BFAR = AM_REGVAL(AM_REG_SYSCTRL_BFAR_O);
   1b9d8:	4b29      	ldr	r3, [pc, #164]	@ (1ba80 <am_util_faultisr_collect_data+0xe8>)
   1b9da:	681b      	ldr	r3, [r3, #0]
   1b9dc:	9312      	str	r3, [sp, #72]	@ 0x48

    // make sure that the SP points to a valid address (so that accessing the stack frame doesn't cause another fault).
    if (am_valid_sp(u32IsrSP))
   1b9de:	9801      	ldr	r0, [sp, #4]
   1b9e0:	f000 f850 	bl	1ba84 <am_valid_sp>
   1b9e4:	4603      	mov	r3, r0
   1b9e6:	2b00      	cmp	r3, #0
   1b9e8:	d03f      	beq.n	1ba6a <am_util_faultisr_collect_data+0xd2>
    {
        //
        // The address of the instruction that caused the fault is the stacked PC
        // if BFSR bit1 is set.
        //
        sFaultData.u32FaultAddr = (sFaultData.u8BFSR & 0x02) ? getStackedReg(6, u32IsrSP) : 0xffffffff;
   1b9ea:	f89d 3051 	ldrb.w	r3, [sp, #81]	@ 0x51
   1b9ee:	b2db      	uxtb	r3, r3
   1b9f0:	f003 0302 	and.w	r3, r3, #2
   1b9f4:	2b00      	cmp	r3, #0
   1b9f6:	d005      	beq.n	1ba04 <am_util_faultisr_collect_data+0x6c>
   1b9f8:	9901      	ldr	r1, [sp, #4]
   1b9fa:	2006      	movs	r0, #6
   1b9fc:	f7ff ffc6 	bl	1b98c <getStackedReg>
   1ba00:	4603      	mov	r3, r0
   1ba02:	e001      	b.n	1ba08 <am_util_faultisr_collect_data+0x70>
   1ba04:	f04f 33ff 	mov.w	r3, #4294967295
   1ba08:	9311      	str	r3, [sp, #68]	@ 0x44

        //
        // Get the stacked registers.
        // Note - the address of the instruction that caused the fault is u32PC.
        //
        sFaultData.u32R0  = getStackedReg(0, u32IsrSP);
   1ba0a:	9901      	ldr	r1, [sp, #4]
   1ba0c:	2000      	movs	r0, #0
   1ba0e:	f7ff ffbd 	bl	1b98c <getStackedReg>
   1ba12:	4603      	mov	r3, r0
   1ba14:	9309      	str	r3, [sp, #36]	@ 0x24
        sFaultData.u32R1  = getStackedReg(1, u32IsrSP);
   1ba16:	9901      	ldr	r1, [sp, #4]
   1ba18:	2001      	movs	r0, #1
   1ba1a:	f7ff ffb7 	bl	1b98c <getStackedReg>
   1ba1e:	4603      	mov	r3, r0
   1ba20:	930a      	str	r3, [sp, #40]	@ 0x28
        sFaultData.u32R2  = getStackedReg(2, u32IsrSP);
   1ba22:	9901      	ldr	r1, [sp, #4]
   1ba24:	2002      	movs	r0, #2
   1ba26:	f7ff ffb1 	bl	1b98c <getStackedReg>
   1ba2a:	4603      	mov	r3, r0
   1ba2c:	930b      	str	r3, [sp, #44]	@ 0x2c
        sFaultData.u32R3  = getStackedReg(3, u32IsrSP);
   1ba2e:	9901      	ldr	r1, [sp, #4]
   1ba30:	2003      	movs	r0, #3
   1ba32:	f7ff ffab 	bl	1b98c <getStackedReg>
   1ba36:	4603      	mov	r3, r0
   1ba38:	930c      	str	r3, [sp, #48]	@ 0x30
        sFaultData.u32R12 = getStackedReg(4, u32IsrSP);
   1ba3a:	9901      	ldr	r1, [sp, #4]
   1ba3c:	2004      	movs	r0, #4
   1ba3e:	f7ff ffa5 	bl	1b98c <getStackedReg>
   1ba42:	4603      	mov	r3, r0
   1ba44:	930d      	str	r3, [sp, #52]	@ 0x34
        sFaultData.u32LR  = getStackedReg(5, u32IsrSP);
   1ba46:	9901      	ldr	r1, [sp, #4]
   1ba48:	2005      	movs	r0, #5
   1ba4a:	f7ff ff9f 	bl	1b98c <getStackedReg>
   1ba4e:	4603      	mov	r3, r0
   1ba50:	930e      	str	r3, [sp, #56]	@ 0x38
        sFaultData.u32PC  = getStackedReg(6, u32IsrSP);
   1ba52:	9901      	ldr	r1, [sp, #4]
   1ba54:	2006      	movs	r0, #6
   1ba56:	f7ff ff99 	bl	1b98c <getStackedReg>
   1ba5a:	4603      	mov	r3, r0
   1ba5c:	930f      	str	r3, [sp, #60]	@ 0x3c
        sFaultData.u32PSR = getStackedReg(7, u32IsrSP);
   1ba5e:	9901      	ldr	r1, [sp, #4]
   1ba60:	2007      	movs	r0, #7
   1ba62:	f7ff ff93 	bl	1b98c <getStackedReg>
   1ba66:	4603      	mov	r3, r0
   1ba68:	9310      	str	r3, [sp, #64]	@ 0x40
    }
    //
    // Use the HAL MCUCTRL functions to read the fault data.
    //
#if defined(AM_PART_APOLLO4B) || defined(AM_PART_APOLLO4P) || defined(AM_PART_APOLLO4L)
    am_hal_fault_status_get(&sHalFaultData);
   1ba6a:	ab03      	add	r3, sp, #12
   1ba6c:	4618      	mov	r0, r3
   1ba6e:	f007 f951 	bl	22d14 <am_hal_fault_status_get>
    //
    am_util_stdio_printf("\n\nDone with output. Entering infinite loop.\n\n");

#endif  // AM_UTIL_FAULTISR_PRINT

    u32Mask = 0;
   1ba72:	2300      	movs	r3, #0
   1ba74:	9315      	str	r3, [sp, #84]	@ 0x54

    while (1)  {  };   // spin forever
   1ba76:	bf00      	nop
   1ba78:	e7fd      	b.n	1ba76 <am_util_faultisr_collect_data+0xde>
   1ba7a:	bf00      	nop
   1ba7c:	e000ed28 	.word	0xe000ed28
   1ba80:	e000ed38 	.word	0xe000ed38

0001ba84 <am_valid_sp>:
// use when the hardfault occured.
//
//*****************************************************************************
bool
am_valid_sp(uint32_t u32IsrSP)
{
   1ba84:	b082      	sub	sp, #8
   1ba86:	9001      	str	r0, [sp, #4]
    return ( (u32IsrSP >= AM_SP_LOW) && (u32IsrSP < AM_SP_HIGH) ) ? true : false;
   1ba88:	9b01      	ldr	r3, [sp, #4]
   1ba8a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
   1ba8e:	d305      	bcc.n	1ba9c <am_valid_sp+0x18>
   1ba90:	9b01      	ldr	r3, [sp, #4]
   1ba92:	4a06      	ldr	r2, [pc, #24]	@ (1baac <am_valid_sp+0x28>)
   1ba94:	4293      	cmp	r3, r2
   1ba96:	d801      	bhi.n	1ba9c <am_valid_sp+0x18>
   1ba98:	2301      	movs	r3, #1
   1ba9a:	e000      	b.n	1ba9e <am_valid_sp+0x1a>
   1ba9c:	2300      	movs	r3, #0
   1ba9e:	f003 0301 	and.w	r3, r3, #1
   1baa2:	b2db      	uxtb	r3, r3
}
   1baa4:	4618      	mov	r0, r3
   1baa6:	b002      	add	sp, #8
   1baa8:	4770      	bx	lr
   1baaa:	bf00      	nop
   1baac:	1015ffff 	.word	0x1015ffff

0001bab0 <am_util_stdio_printf_init>:
// Sets the interface for printf calls.
//
//*****************************************************************************
void
am_util_stdio_printf_init(am_util_stdio_print_char_t pfnCharPrint)
{
   1bab0:	b082      	sub	sp, #8
   1bab2:	9001      	str	r0, [sp, #4]
    g_pfnCharPrint = pfnCharPrint;
   1bab4:	4a02      	ldr	r2, [pc, #8]	@ (1bac0 <am_util_stdio_printf_init+0x10>)
   1bab6:	9b01      	ldr	r3, [sp, #4]
   1bab8:	6013      	str	r3, [r2, #0]
}
   1baba:	bf00      	nop
   1babc:	b002      	add	sp, #8
   1babe:	4770      	bx	lr
   1bac0:	1002fcf0 	.word	0x1002fcf0

0001bac4 <divu64_10>:
//  Note: Adapted from Ch10 of Hackers Delight (hackersdelight.org).
//
//*****************************************************************************
static uint64_t
divu64_10(uint64_t ui64Val)
{
   1bac4:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1bac8:	b098      	sub	sp, #96	@ 0x60
   1baca:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
    uint32_t q32, r32, ui32Val;

    //
    // If a 32-bit value, use the more optimal 32-bit routine.
    //
    if ( ui64Val >> 32 )
   1bace:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
   1bad2:	f04f 0000 	mov.w	r0, #0
   1bad6:	f04f 0100 	mov.w	r1, #0
   1bada:	0018      	movs	r0, r3
   1badc:	2100      	movs	r1, #0
   1bade:	ea50 0301 	orrs.w	r3, r0, r1
   1bae2:	f000 80b0 	beq.w	1bc46 <divu64_10+0x182>
    {
        q64 = (ui64Val>>1) + (ui64Val>>2);
   1bae6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
   1baea:	f04f 0400 	mov.w	r4, #0
   1baee:	f04f 0500 	mov.w	r5, #0
   1baf2:	0854      	lsrs	r4, r2, #1
   1baf4:	ea44 74c3 	orr.w	r4, r4, r3, lsl #31
   1baf8:	085d      	lsrs	r5, r3, #1
   1bafa:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
   1bafe:	f04f 0000 	mov.w	r0, #0
   1bb02:	f04f 0100 	mov.w	r1, #0
   1bb06:	0890      	lsrs	r0, r2, #2
   1bb08:	ea40 7083 	orr.w	r0, r0, r3, lsl #30
   1bb0c:	0899      	lsrs	r1, r3, #2
   1bb0e:	eb14 0a00 	adds.w	sl, r4, r0
   1bb12:	eb45 0b01 	adc.w	fp, r5, r1
   1bb16:	e9cd ab12 	strd	sl, fp, [sp, #72]	@ 0x48
        q64 += (q64 >> 4);
   1bb1a:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
   1bb1e:	f04f 0000 	mov.w	r0, #0
   1bb22:	f04f 0100 	mov.w	r1, #0
   1bb26:	0910      	lsrs	r0, r2, #4
   1bb28:	ea40 7003 	orr.w	r0, r0, r3, lsl #28
   1bb2c:	0919      	lsrs	r1, r3, #4
   1bb2e:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
   1bb32:	1814      	adds	r4, r2, r0
   1bb34:	9402      	str	r4, [sp, #8]
   1bb36:	414b      	adcs	r3, r1
   1bb38:	9303      	str	r3, [sp, #12]
   1bb3a:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
   1bb3e:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
        q64 += (q64 >> 8);
   1bb42:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
   1bb46:	f04f 0000 	mov.w	r0, #0
   1bb4a:	f04f 0100 	mov.w	r1, #0
   1bb4e:	0a10      	lsrs	r0, r2, #8
   1bb50:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
   1bb54:	0a19      	lsrs	r1, r3, #8
   1bb56:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
   1bb5a:	1814      	adds	r4, r2, r0
   1bb5c:	9404      	str	r4, [sp, #16]
   1bb5e:	414b      	adcs	r3, r1
   1bb60:	9305      	str	r3, [sp, #20]
   1bb62:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
   1bb66:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
        q64 += (q64 >> 16);
   1bb6a:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
   1bb6e:	f04f 0000 	mov.w	r0, #0
   1bb72:	f04f 0100 	mov.w	r1, #0
   1bb76:	0c10      	lsrs	r0, r2, #16
   1bb78:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   1bb7c:	0c19      	lsrs	r1, r3, #16
   1bb7e:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
   1bb82:	1814      	adds	r4, r2, r0
   1bb84:	9406      	str	r4, [sp, #24]
   1bb86:	414b      	adcs	r3, r1
   1bb88:	9307      	str	r3, [sp, #28]
   1bb8a:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
   1bb8e:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
        q64 += (q64 >> 32);
   1bb92:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
   1bb96:	f04f 0000 	mov.w	r0, #0
   1bb9a:	f04f 0100 	mov.w	r1, #0
   1bb9e:	0018      	movs	r0, r3
   1bba0:	2100      	movs	r1, #0
   1bba2:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
   1bba6:	1814      	adds	r4, r2, r0
   1bba8:	9408      	str	r4, [sp, #32]
   1bbaa:	414b      	adcs	r3, r1
   1bbac:	9309      	str	r3, [sp, #36]	@ 0x24
   1bbae:	e9dd 3408 	ldrd	r3, r4, [sp, #32]
   1bbb2:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
        q64 >>= 3;
   1bbb6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1bbba:	f04f 0200 	mov.w	r2, #0
   1bbbe:	f04f 0300 	mov.w	r3, #0
   1bbc2:	08c2      	lsrs	r2, r0, #3
   1bbc4:	ea42 7241 	orr.w	r2, r2, r1, lsl #29
   1bbc8:	08cb      	lsrs	r3, r1, #3
   1bbca:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
        r64 = ui64Val - q64*10;
   1bbce:	e9dd 4512 	ldrd	r4, r5, [sp, #72]	@ 0x48
   1bbd2:	4622      	mov	r2, r4
   1bbd4:	462b      	mov	r3, r5
   1bbd6:	f04f 0000 	mov.w	r0, #0
   1bbda:	f04f 0100 	mov.w	r1, #0
   1bbde:	0099      	lsls	r1, r3, #2
   1bbe0:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
   1bbe4:	0090      	lsls	r0, r2, #2
   1bbe6:	4602      	mov	r2, r0
   1bbe8:	460b      	mov	r3, r1
   1bbea:	1916      	adds	r6, r2, r4
   1bbec:	eb43 0705 	adc.w	r7, r3, r5
   1bbf0:	19b3      	adds	r3, r6, r6
   1bbf2:	930a      	str	r3, [sp, #40]	@ 0x28
   1bbf4:	eb47 0307 	adc.w	r3, r7, r7
   1bbf8:	930b      	str	r3, [sp, #44]	@ 0x2c
   1bbfa:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	@ 0x28
   1bbfe:	4630      	mov	r0, r6
   1bc00:	4639      	mov	r1, r7
   1bc02:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
   1bc06:	1a14      	subs	r4, r2, r0
   1bc08:	940c      	str	r4, [sp, #48]	@ 0x30
   1bc0a:	eb63 0301 	sbc.w	r3, r3, r1
   1bc0e:	930d      	str	r3, [sp, #52]	@ 0x34
   1bc10:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
   1bc14:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
        return q64 + ((r64 + 6) >> 4);
   1bc18:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
   1bc1c:	f112 0806 	adds.w	r8, r2, #6
   1bc20:	f143 0900 	adc.w	r9, r3, #0
   1bc24:	f04f 0200 	mov.w	r2, #0
   1bc28:	f04f 0300 	mov.w	r3, #0
   1bc2c:	ea4f 1218 	mov.w	r2, r8, lsr #4
   1bc30:	ea42 7209 	orr.w	r2, r2, r9, lsl #28
   1bc34:	ea4f 1319 	mov.w	r3, r9, lsr #4
   1bc38:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1bc3c:	1814      	adds	r4, r2, r0
   1bc3e:	9400      	str	r4, [sp, #0]
   1bc40:	414b      	adcs	r3, r1
   1bc42:	9301      	str	r3, [sp, #4]
   1bc44:	e02a      	b.n	1bc9c <divu64_10+0x1d8>
    }
    else
    {
        ui32Val = (uint32_t)(ui64Val & 0xffffffff);
   1bc46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   1bc48:	9317      	str	r3, [sp, #92]	@ 0x5c
        q32 = (ui32Val>>1) + (ui32Val>>2);
   1bc4a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
   1bc4c:	085a      	lsrs	r2, r3, #1
   1bc4e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
   1bc50:	089b      	lsrs	r3, r3, #2
   1bc52:	4413      	add	r3, r2
   1bc54:	9316      	str	r3, [sp, #88]	@ 0x58
        q32 += (q32 >> 4);
   1bc56:	9b16      	ldr	r3, [sp, #88]	@ 0x58
   1bc58:	091b      	lsrs	r3, r3, #4
   1bc5a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
   1bc5c:	4413      	add	r3, r2
   1bc5e:	9316      	str	r3, [sp, #88]	@ 0x58
        q32 += (q32 >> 8);
   1bc60:	9b16      	ldr	r3, [sp, #88]	@ 0x58
   1bc62:	0a1b      	lsrs	r3, r3, #8
   1bc64:	9a16      	ldr	r2, [sp, #88]	@ 0x58
   1bc66:	4413      	add	r3, r2
   1bc68:	9316      	str	r3, [sp, #88]	@ 0x58
        q32 += (q32 >> 16);
   1bc6a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
   1bc6c:	0c1b      	lsrs	r3, r3, #16
   1bc6e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
   1bc70:	4413      	add	r3, r2
   1bc72:	9316      	str	r3, [sp, #88]	@ 0x58
        q32 >>= 3;
   1bc74:	9b16      	ldr	r3, [sp, #88]	@ 0x58
   1bc76:	08db      	lsrs	r3, r3, #3
   1bc78:	9316      	str	r3, [sp, #88]	@ 0x58
        r32 = ui32Val - q32*10;
   1bc7a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
   1bc7c:	4613      	mov	r3, r2
   1bc7e:	009b      	lsls	r3, r3, #2
   1bc80:	4413      	add	r3, r2
   1bc82:	005b      	lsls	r3, r3, #1
   1bc84:	461a      	mov	r2, r3
   1bc86:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
   1bc88:	1a9b      	subs	r3, r3, r2
   1bc8a:	9315      	str	r3, [sp, #84]	@ 0x54
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
   1bc8c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
   1bc8e:	3306      	adds	r3, #6
   1bc90:	091a      	lsrs	r2, r3, #4
   1bc92:	9b16      	ldr	r3, [sp, #88]	@ 0x58
   1bc94:	4413      	add	r3, r2
   1bc96:	2200      	movs	r2, #0
   1bc98:	9300      	str	r3, [sp, #0]
   1bc9a:	9201      	str	r2, [sp, #4]
    }
}
   1bc9c:	e9dd 2300 	ldrd	r2, r3, [sp]
   1bca0:	4610      	mov	r0, r2
   1bca2:	4619      	mov	r1, r3
   1bca4:	b018      	add	sp, #96	@ 0x60
   1bca6:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1bcaa:	4770      	bx	lr

0001bcac <ndigits_in_u64>:
// example: 10000 return 5, 123 returns 3.
//
//*****************************************************************************
static int
ndigits_in_u64(uint64_t ui64Val)
{
   1bcac:	b500      	push	{lr}
   1bcae:	b085      	sub	sp, #20
   1bcb0:	e9cd 0100 	strd	r0, r1, [sp]
    int iNDigits = ui64Val ? 0 : 1;
   1bcb4:	9a00      	ldr	r2, [sp, #0]
   1bcb6:	9b01      	ldr	r3, [sp, #4]
   1bcb8:	4313      	orrs	r3, r2
   1bcba:	2b00      	cmp	r3, #0
   1bcbc:	bf0c      	ite	eq
   1bcbe:	2301      	moveq	r3, #1
   1bcc0:	2300      	movne	r3, #0
   1bcc2:	b2db      	uxtb	r3, r3
   1bcc4:	9303      	str	r3, [sp, #12]

    while ( ui64Val )
   1bcc6:	e008      	b.n	1bcda <ndigits_in_u64+0x2e>
    {
        //
        // ui32Val /= 10;
        //
        ui64Val = divu64_10(ui64Val);
   1bcc8:	e9dd 0100 	ldrd	r0, r1, [sp]
   1bccc:	f7ff fefa 	bl	1bac4 <divu64_10>
   1bcd0:	e9cd 0100 	strd	r0, r1, [sp]
        ++iNDigits;
   1bcd4:	9b03      	ldr	r3, [sp, #12]
   1bcd6:	3301      	adds	r3, #1
   1bcd8:	9303      	str	r3, [sp, #12]
    while ( ui64Val )
   1bcda:	e9dd 2300 	ldrd	r2, r3, [sp]
   1bcde:	4313      	orrs	r3, r2
   1bce0:	d1f2      	bne.n	1bcc8 <ndigits_in_u64+0x1c>
    }

    return iNDigits;
   1bce2:	9b03      	ldr	r3, [sp, #12]
}
   1bce4:	4618      	mov	r0, r3
   1bce6:	b005      	add	sp, #20
   1bce8:	f85d fb04 	ldr.w	pc, [sp], #4

0001bcec <ndigits_in_i64>:
// example: -3 returns 1, 3 returns 1, 15 returns 2, -15 returns 2, ...
//
//*****************************************************************************
static int
ndigits_in_i64(int64_t i64Val)
{
   1bcec:	b530      	push	{r4, r5, lr}
   1bcee:	b083      	sub	sp, #12
   1bcf0:	e9cd 0100 	strd	r0, r1, [sp]
    if ( i64Val < 0 )
   1bcf4:	e9dd 2300 	ldrd	r2, r3, [sp]
   1bcf8:	2b00      	cmp	r3, #0
   1bcfa:	da07      	bge.n	1bd0c <ndigits_in_i64+0x20>
    {
        //
        // Get absolute value
        //
        i64Val = -i64Val;
   1bcfc:	e9dd 2300 	ldrd	r2, r3, [sp]
   1bd00:	2100      	movs	r1, #0
   1bd02:	4254      	negs	r4, r2
   1bd04:	eb61 0503 	sbc.w	r5, r1, r3
   1bd08:	e9cd 4500 	strd	r4, r5, [sp]
    }

    return ndigits_in_u64((uint64_t) i64Val);
   1bd0c:	e9dd 2300 	ldrd	r2, r3, [sp]
   1bd10:	4610      	mov	r0, r2
   1bd12:	4619      	mov	r1, r3
   1bd14:	f7ff ffca 	bl	1bcac <ndigits_in_u64>
   1bd18:	4603      	mov	r3, r0
}
   1bd1a:	4618      	mov	r0, r3
   1bd1c:	b003      	add	sp, #12
   1bd1e:	bd30      	pop	{r4, r5, pc}

0001bd20 <ndigits_in_hex>:
// Return the number of hex digits in an uint64_t.
//
//*****************************************************************************
static int
ndigits_in_hex(uint64_t ui64Val)
{
   1bd20:	b084      	sub	sp, #16
   1bd22:	e9cd 0100 	strd	r0, r1, [sp]
    int iDigits = ui64Val ? 0 : 1;
   1bd26:	9a00      	ldr	r2, [sp, #0]
   1bd28:	9b01      	ldr	r3, [sp, #4]
   1bd2a:	4313      	orrs	r3, r2
   1bd2c:	2b00      	cmp	r3, #0
   1bd2e:	bf0c      	ite	eq
   1bd30:	2301      	moveq	r3, #1
   1bd32:	2300      	movne	r3, #0
   1bd34:	b2db      	uxtb	r3, r3
   1bd36:	9303      	str	r3, [sp, #12]

    while ( ui64Val )
   1bd38:	e00e      	b.n	1bd58 <ndigits_in_hex+0x38>
    {
        ui64Val >>= 4;
   1bd3a:	e9dd 0100 	ldrd	r0, r1, [sp]
   1bd3e:	f04f 0200 	mov.w	r2, #0
   1bd42:	f04f 0300 	mov.w	r3, #0
   1bd46:	0902      	lsrs	r2, r0, #4
   1bd48:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
   1bd4c:	090b      	lsrs	r3, r1, #4
   1bd4e:	e9cd 2300 	strd	r2, r3, [sp]
        ++iDigits;
   1bd52:	9b03      	ldr	r3, [sp, #12]
   1bd54:	3301      	adds	r3, #1
   1bd56:	9303      	str	r3, [sp, #12]
    while ( ui64Val )
   1bd58:	e9dd 2300 	ldrd	r2, r3, [sp]
   1bd5c:	4313      	orrs	r3, r2
   1bd5e:	d1ec      	bne.n	1bd3a <ndigits_in_hex+0x1a>
    }

    return iDigits;
   1bd60:	9b03      	ldr	r3, [sp, #12]
}
   1bd62:	4618      	mov	r0, r3
   1bd64:	b004      	add	sp, #16
   1bd66:	4770      	bx	lr

0001bd68 <decstr_to_int>:
// pui32CharCnt.
//
//*****************************************************************************
static uint32_t
decstr_to_int(const char *pcStr, uint32_t *pui32CharCnt)
{
   1bd68:	b086      	sub	sp, #24
   1bd6a:	9001      	str	r0, [sp, #4]
   1bd6c:	9100      	str	r1, [sp, #0]
    bool bNeg = false;
   1bd6e:	2300      	movs	r3, #0
   1bd70:	f88d 3017 	strb.w	r3, [sp, #23]
    uint32_t ui32Val = 0, uCnt = 0;
   1bd74:	2300      	movs	r3, #0
   1bd76:	9304      	str	r3, [sp, #16]
   1bd78:	2300      	movs	r3, #0
   1bd7a:	9303      	str	r3, [sp, #12]

    if ( *pcStr == '-')
   1bd7c:	9b01      	ldr	r3, [sp, #4]
   1bd7e:	781b      	ldrb	r3, [r3, #0]
   1bd80:	2b2d      	cmp	r3, #45	@ 0x2d
   1bd82:	d11c      	bne.n	1bdbe <decstr_to_int+0x56>
    {
        bNeg = true;
   1bd84:	2301      	movs	r3, #1
   1bd86:	f88d 3017 	strb.w	r3, [sp, #23]
        pcStr++;
   1bd8a:	9b01      	ldr	r3, [sp, #4]
   1bd8c:	3301      	adds	r3, #1
   1bd8e:	9301      	str	r3, [sp, #4]
        uCnt++;
   1bd90:	9b03      	ldr	r3, [sp, #12]
   1bd92:	3301      	adds	r3, #1
   1bd94:	9303      	str	r3, [sp, #12]
    }

    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
   1bd96:	e012      	b.n	1bdbe <decstr_to_int+0x56>
    {
        ++uCnt;
   1bd98:	9b03      	ldr	r3, [sp, #12]
   1bd9a:	3301      	adds	r3, #1
   1bd9c:	9303      	str	r3, [sp, #12]

        //
        // Multiply accumulated value by 10.
        //
        ui32Val *= 10;
   1bd9e:	9a04      	ldr	r2, [sp, #16]
   1bda0:	4613      	mov	r3, r2
   1bda2:	009b      	lsls	r3, r3, #2
   1bda4:	4413      	add	r3, r2
   1bda6:	005b      	lsls	r3, r3, #1
   1bda8:	9304      	str	r3, [sp, #16]

        //
        // Add in the new low digit.
        //
        ui32Val += (*pcStr - '0');
   1bdaa:	9b01      	ldr	r3, [sp, #4]
   1bdac:	781b      	ldrb	r3, [r3, #0]
   1bdae:	461a      	mov	r2, r3
   1bdb0:	9b04      	ldr	r3, [sp, #16]
   1bdb2:	4413      	add	r3, r2
   1bdb4:	3b30      	subs	r3, #48	@ 0x30
   1bdb6:	9304      	str	r3, [sp, #16]
        pcStr++;
   1bdb8:	9b01      	ldr	r3, [sp, #4]
   1bdba:	3301      	adds	r3, #1
   1bdbc:	9301      	str	r3, [sp, #4]
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
   1bdbe:	9b01      	ldr	r3, [sp, #4]
   1bdc0:	781b      	ldrb	r3, [r3, #0]
   1bdc2:	2b2f      	cmp	r3, #47	@ 0x2f
   1bdc4:	d903      	bls.n	1bdce <decstr_to_int+0x66>
   1bdc6:	9b01      	ldr	r3, [sp, #4]
   1bdc8:	781b      	ldrb	r3, [r3, #0]
   1bdca:	2b39      	cmp	r3, #57	@ 0x39
   1bdcc:	d9e4      	bls.n	1bd98 <decstr_to_int+0x30>
    }

    if ( pui32CharCnt )
   1bdce:	9b00      	ldr	r3, [sp, #0]
   1bdd0:	2b00      	cmp	r3, #0
   1bdd2:	d002      	beq.n	1bdda <decstr_to_int+0x72>
    {
        *pui32CharCnt = uCnt;
   1bdd4:	9b00      	ldr	r3, [sp, #0]
   1bdd6:	9a03      	ldr	r2, [sp, #12]
   1bdd8:	601a      	str	r2, [r3, #0]
    }

    return bNeg ? -ui32Val : ui32Val;
   1bdda:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1bdde:	2b00      	cmp	r3, #0
   1bde0:	d002      	beq.n	1bde8 <decstr_to_int+0x80>
   1bde2:	9b04      	ldr	r3, [sp, #16]
   1bde4:	425b      	negs	r3, r3
   1bde6:	e000      	b.n	1bdea <decstr_to_int+0x82>
   1bde8:	9b04      	ldr	r3, [sp, #16]
}
   1bdea:	4618      	mov	r0, r3
   1bdec:	b006      	add	sp, #24
   1bdee:	4770      	bx	lr

0001bdf0 <uint64_to_str>:
// written).
//
//*****************************************************************************
static int
uint64_to_str(uint64_t ui64Val, char *pcBuf)
{
   1bdf0:	b500      	push	{lr}
   1bdf2:	b091      	sub	sp, #68	@ 0x44
   1bdf4:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1bdf8:	9201      	str	r2, [sp, #4]
    char tbuf[25];
    int ix = 0, iNumDig = 0;
   1bdfa:	2300      	movs	r3, #0
   1bdfc:	930f      	str	r3, [sp, #60]	@ 0x3c
   1bdfe:	2300      	movs	r3, #0
   1be00:	930e      	str	r3, [sp, #56]	@ 0x38
    do
    {
        //
        // Divide by 10
        //
        u64Tmp = divu64_10(ui64Val);
   1be02:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1be06:	f7ff fe5d 	bl	1bac4 <divu64_10>
   1be0a:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30

        //
        // Get modulus
        //
        uMod = ui64Val - (u64Tmp * 10);
   1be0e:	9902      	ldr	r1, [sp, #8]
   1be10:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
   1be12:	4613      	mov	r3, r2
   1be14:	009b      	lsls	r3, r3, #2
   1be16:	4413      	add	r3, r2
   1be18:	005b      	lsls	r3, r3, #1
   1be1a:	1acb      	subs	r3, r1, r3
   1be1c:	930b      	str	r3, [sp, #44]	@ 0x2c

        tbuf[ix++] = uMod + '0';
   1be1e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1be20:	b2da      	uxtb	r2, r3
   1be22:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1be24:	1c59      	adds	r1, r3, #1
   1be26:	910f      	str	r1, [sp, #60]	@ 0x3c
   1be28:	3230      	adds	r2, #48	@ 0x30
   1be2a:	b2d2      	uxtb	r2, r2
   1be2c:	3340      	adds	r3, #64	@ 0x40
   1be2e:	446b      	add	r3, sp
   1be30:	f803 2c30 	strb.w	r2, [r3, #-48]
        ui64Val = u64Tmp;
   1be34:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
   1be38:	e9cd 2302 	strd	r2, r3, [sp, #8]
    } while ( ui64Val );
   1be3c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1be40:	4313      	orrs	r3, r2
   1be42:	d1de      	bne.n	1be02 <uint64_to_str+0x12>

    //
    // Save the total number of digits
    //
    iNumDig = ix;
   1be44:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1be46:	930e      	str	r3, [sp, #56]	@ 0x38

    //
    // Now, reverse the buffer when saving to the caller's buffer.
    //
    if ( pcBuf )
   1be48:	9b01      	ldr	r3, [sp, #4]
   1be4a:	2b00      	cmp	r3, #0
   1be4c:	d010      	beq.n	1be70 <uint64_to_str+0x80>
    {
        while ( ix-- )
   1be4e:	e007      	b.n	1be60 <uint64_to_str+0x70>
        {
            *pcBuf++ = tbuf[ix];
   1be50:	9b01      	ldr	r3, [sp, #4]
   1be52:	1c5a      	adds	r2, r3, #1
   1be54:	9201      	str	r2, [sp, #4]
   1be56:	a904      	add	r1, sp, #16
   1be58:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
   1be5a:	440a      	add	r2, r1
   1be5c:	7812      	ldrb	r2, [r2, #0]
   1be5e:	701a      	strb	r2, [r3, #0]
        while ( ix-- )
   1be60:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1be62:	1e5a      	subs	r2, r3, #1
   1be64:	920f      	str	r2, [sp, #60]	@ 0x3c
   1be66:	2b00      	cmp	r3, #0
   1be68:	d1f2      	bne.n	1be50 <uint64_to_str+0x60>
        }

        //
        // Terminate the caller's buffer
        //
        *pcBuf = 0x00;
   1be6a:	9b01      	ldr	r3, [sp, #4]
   1be6c:	2200      	movs	r2, #0
   1be6e:	701a      	strb	r2, [r3, #0]
    }

    return iNumDig;
   1be70:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
}
   1be72:	4618      	mov	r0, r3
   1be74:	b011      	add	sp, #68	@ 0x44
   1be76:	f85d fb04 	ldr.w	pc, [sp], #4

0001be7a <uint64_to_hexstr>:
// written).
//
//*****************************************************************************
static int
uint64_to_hexstr(uint64_t ui64Val, char *pcBuf, bool bLower)
{
   1be7a:	b08c      	sub	sp, #48	@ 0x30
   1be7c:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1be80:	9201      	str	r2, [sp, #4]
   1be82:	f88d 3003 	strb.w	r3, [sp, #3]
    int iNumDig, ix = 0;
   1be86:	2300      	movs	r3, #0
   1be88:	930b      	str	r3, [sp, #44]	@ 0x2c
    char cCh, tbuf[20];

    if ( ui64Val == 0 )
   1be8a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1be8e:	4313      	orrs	r3, r2
   1be90:	d135      	bne.n	1befe <uint64_to_hexstr+0x84>
    {
        tbuf[ix++] = '0';   // Print a '0'
   1be92:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1be94:	1c5a      	adds	r2, r3, #1
   1be96:	920b      	str	r2, [sp, #44]	@ 0x2c
   1be98:	3330      	adds	r3, #48	@ 0x30
   1be9a:	446b      	add	r3, sp
   1be9c:	2230      	movs	r2, #48	@ 0x30
   1be9e:	f803 2c20 	strb.w	r2, [r3, #-32]
    }

    while ( ui64Val )
   1bea2:	e02c      	b.n	1befe <uint64_to_hexstr+0x84>
    {
        cCh = ui64Val & 0xf;
   1bea4:	f89d 3008 	ldrb.w	r3, [sp, #8]
   1bea8:	f003 030f 	and.w	r3, r3, #15
   1beac:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b

        //
        // Alpha character
        //
        if ( cCh > 9 )
   1beb0:	f89d 302b 	ldrb.w	r3, [sp, #43]	@ 0x2b
   1beb4:	2b09      	cmp	r3, #9
   1beb6:	d90b      	bls.n	1bed0 <uint64_to_hexstr+0x56>
        {
            cCh += bLower ? 0x27 : 0x7;
   1beb8:	f89d 3003 	ldrb.w	r3, [sp, #3]
   1bebc:	2b00      	cmp	r3, #0
   1bebe:	d001      	beq.n	1bec4 <uint64_to_hexstr+0x4a>
   1bec0:	2227      	movs	r2, #39	@ 0x27
   1bec2:	e000      	b.n	1bec6 <uint64_to_hexstr+0x4c>
   1bec4:	2207      	movs	r2, #7
   1bec6:	f89d 302b 	ldrb.w	r3, [sp, #43]	@ 0x2b
   1beca:	4413      	add	r3, r2
   1becc:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
        }

        tbuf[ix++] = cCh + '0';
   1bed0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1bed2:	1c5a      	adds	r2, r3, #1
   1bed4:	920b      	str	r2, [sp, #44]	@ 0x2c
   1bed6:	f89d 202b 	ldrb.w	r2, [sp, #43]	@ 0x2b
   1beda:	3230      	adds	r2, #48	@ 0x30
   1bedc:	b2d2      	uxtb	r2, r2
   1bede:	3330      	adds	r3, #48	@ 0x30
   1bee0:	446b      	add	r3, sp
   1bee2:	f803 2c20 	strb.w	r2, [r3, #-32]
        ui64Val >>= 4;
   1bee6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1beea:	f04f 0200 	mov.w	r2, #0
   1beee:	f04f 0300 	mov.w	r3, #0
   1bef2:	0902      	lsrs	r2, r0, #4
   1bef4:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
   1bef8:	090b      	lsrs	r3, r1, #4
   1befa:	e9cd 2302 	strd	r2, r3, [sp, #8]
    while ( ui64Val )
   1befe:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1bf02:	4313      	orrs	r3, r2
   1bf04:	d1ce      	bne.n	1bea4 <uint64_to_hexstr+0x2a>
    }

    //
    // Save the total number of digits
    //
    iNumDig = ix;
   1bf06:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1bf08:	9309      	str	r3, [sp, #36]	@ 0x24

    //
    // Now, reverse the buffer when saving to the callers buffer.
    //
    if (pcBuf)
   1bf0a:	9b01      	ldr	r3, [sp, #4]
   1bf0c:	2b00      	cmp	r3, #0
   1bf0e:	d010      	beq.n	1bf32 <uint64_to_hexstr+0xb8>
    {
        while (ix--)
   1bf10:	e007      	b.n	1bf22 <uint64_to_hexstr+0xa8>
        {
            *pcBuf++ = tbuf[ix];
   1bf12:	9b01      	ldr	r3, [sp, #4]
   1bf14:	1c5a      	adds	r2, r3, #1
   1bf16:	9201      	str	r2, [sp, #4]
   1bf18:	a904      	add	r1, sp, #16
   1bf1a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1bf1c:	440a      	add	r2, r1
   1bf1e:	7812      	ldrb	r2, [r2, #0]
   1bf20:	701a      	strb	r2, [r3, #0]
        while (ix--)
   1bf22:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1bf24:	1e5a      	subs	r2, r3, #1
   1bf26:	920b      	str	r2, [sp, #44]	@ 0x2c
   1bf28:	2b00      	cmp	r3, #0
   1bf2a:	d1f2      	bne.n	1bf12 <uint64_to_hexstr+0x98>
        }

        //
        // Terminate the caller's buffer
        //
        *pcBuf = 0;
   1bf2c:	9b01      	ldr	r3, [sp, #4]
   1bf2e:	2200      	movs	r2, #0
   1bf30:	701a      	strb	r2, [r3, #0]
    }

    return iNumDig;
   1bf32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
}
   1bf34:	4618      	mov	r0, r3
   1bf36:	b00c      	add	sp, #48	@ 0x30
   1bf38:	4770      	bx	lr

0001bf3a <simple_strlen>:
// Return length of the given string.
//
//*****************************************************************************
static uint32_t
simple_strlen(char *pcBuf)
{
   1bf3a:	b084      	sub	sp, #16
   1bf3c:	9001      	str	r0, [sp, #4]
    uint32_t ui32RetVal = 0;
   1bf3e:	2300      	movs	r3, #0
   1bf40:	9303      	str	r3, [sp, #12]
    if ( !pcBuf )
   1bf42:	9b01      	ldr	r3, [sp, #4]
   1bf44:	2b00      	cmp	r3, #0
   1bf46:	d104      	bne.n	1bf52 <simple_strlen+0x18>
    {
        return ui32RetVal;
   1bf48:	9b03      	ldr	r3, [sp, #12]
   1bf4a:	e009      	b.n	1bf60 <simple_strlen+0x26>
    }

    while ( *pcBuf++ )
    {
        ui32RetVal++;
   1bf4c:	9b03      	ldr	r3, [sp, #12]
   1bf4e:	3301      	adds	r3, #1
   1bf50:	9303      	str	r3, [sp, #12]
    while ( *pcBuf++ )
   1bf52:	9b01      	ldr	r3, [sp, #4]
   1bf54:	1c5a      	adds	r2, r3, #1
   1bf56:	9201      	str	r2, [sp, #4]
   1bf58:	781b      	ldrb	r3, [r3, #0]
   1bf5a:	2b00      	cmp	r3, #0
   1bf5c:	d1f6      	bne.n	1bf4c <simple_strlen+0x12>
    }
    return ui32RetVal;
   1bf5e:	9b03      	ldr	r3, [sp, #12]
}
   1bf60:	4618      	mov	r0, r3
   1bf62:	b004      	add	sp, #16
   1bf64:	4770      	bx	lr

0001bf66 <padbuffer>:
// Pad a string buffer with pad characters.
//
//*****************************************************************************
static int32_t
padbuffer(char *pcBuf, uint8_t cPadChar, int32_t i32NumChars)
{
   1bf66:	b086      	sub	sp, #24
   1bf68:	9003      	str	r0, [sp, #12]
   1bf6a:	460b      	mov	r3, r1
   1bf6c:	9201      	str	r2, [sp, #4]
   1bf6e:	f88d 300b 	strb.w	r3, [sp, #11]
    int32_t i32Cnt = 0;
   1bf72:	2300      	movs	r3, #0
   1bf74:	9305      	str	r3, [sp, #20]

    if ( i32NumChars <= 0 )
   1bf76:	9b01      	ldr	r3, [sp, #4]
   1bf78:	2b00      	cmp	r3, #0
   1bf7a:	dc0d      	bgt.n	1bf98 <padbuffer+0x32>
    {
        return i32Cnt;
   1bf7c:	9b05      	ldr	r3, [sp, #20]
   1bf7e:	e011      	b.n	1bfa4 <padbuffer+0x3e>
    }

    while ( i32NumChars-- )
    {
        if ( pcBuf )
   1bf80:	9b03      	ldr	r3, [sp, #12]
   1bf82:	2b00      	cmp	r3, #0
   1bf84:	d005      	beq.n	1bf92 <padbuffer+0x2c>
        {
            *pcBuf++ = cPadChar;
   1bf86:	9b03      	ldr	r3, [sp, #12]
   1bf88:	1c5a      	adds	r2, r3, #1
   1bf8a:	9203      	str	r2, [sp, #12]
   1bf8c:	f89d 200b 	ldrb.w	r2, [sp, #11]
   1bf90:	701a      	strb	r2, [r3, #0]
        }
        i32Cnt++;
   1bf92:	9b05      	ldr	r3, [sp, #20]
   1bf94:	3301      	adds	r3, #1
   1bf96:	9305      	str	r3, [sp, #20]
    while ( i32NumChars-- )
   1bf98:	9b01      	ldr	r3, [sp, #4]
   1bf9a:	1e5a      	subs	r2, r3, #1
   1bf9c:	9201      	str	r2, [sp, #4]
   1bf9e:	2b00      	cmp	r3, #0
   1bfa0:	d1ee      	bne.n	1bf80 <padbuffer+0x1a>
    }

    return i32Cnt;
   1bfa2:	9b05      	ldr	r3, [sp, #20]
}
   1bfa4:	4618      	mov	r0, r3
   1bfa6:	b006      	add	sp, #24
   1bfa8:	4770      	bx	lr
	...

0001bfac <ftoa>:
    int32_t I32;
    float F;
} i32fl_t;

static int ftoa(float fValue, char *pcBuf, int iPrecision)
{
   1bfac:	b5f0      	push	{r4, r5, r6, r7, lr}
   1bfae:	b08f      	sub	sp, #60	@ 0x3c
   1bfb0:	ed8d 0a03 	vstr	s0, [sp, #12]
   1bfb4:	9002      	str	r0, [sp, #8]
   1bfb6:	9101      	str	r1, [sp, #4]
    i32fl_t unFloatValue;
    int iExp2, iBufSize;
    int32_t i32Significand, i32IntPart, i32FracPart;
    char *pcBufInitial, *pcBuftmp;

    iBufSize = *(uint32_t*)pcBuf;
   1bfb8:	9b02      	ldr	r3, [sp, #8]
   1bfba:	681b      	ldr	r3, [r3, #0]
   1bfbc:	9309      	str	r3, [sp, #36]	@ 0x24
    if (iBufSize < 4)
   1bfbe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1bfc0:	2b03      	cmp	r3, #3
   1bfc2:	dc02      	bgt.n	1bfca <ftoa+0x1e>
    {
        return AM_FTOA_ERR_BUFSIZE;
   1bfc4:	f06f 0302 	mvn.w	r3, #2
   1bfc8:	e0e9      	b.n	1c19e <ftoa+0x1f2>
    }

    if (fValue == 0.0f)
   1bfca:	eddd 7a03 	vldr	s15, [sp, #12]
   1bfce:	eef5 7a40 	vcmp.f32	s15, #0.0
   1bfd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1bfd6:	d104      	bne.n	1bfe2 <ftoa+0x36>
    {
        // "0.0"
        *(uint32_t*)pcBuf = 0x00 << 24 | ('0' << 16) | ('.' << 8) | ('0' << 0);
   1bfd8:	9b02      	ldr	r3, [sp, #8]
   1bfda:	4a72      	ldr	r2, [pc, #456]	@ (1c1a4 <ftoa+0x1f8>)
   1bfdc:	601a      	str	r2, [r3, #0]
        return 3;
   1bfde:	2303      	movs	r3, #3
   1bfe0:	e0dd      	b.n	1c19e <ftoa+0x1f2>
    }

    pcBufInitial = pcBuf;
   1bfe2:	9b02      	ldr	r3, [sp, #8]
   1bfe4:	9308      	str	r3, [sp, #32]

    unFloatValue.F = fValue;
   1bfe6:	9b03      	ldr	r3, [sp, #12]
   1bfe8:	9304      	str	r3, [sp, #16]

    iExp2 = ((unFloatValue.I32 >> 23) & 0x000000FF) - 127;
   1bfea:	9b04      	ldr	r3, [sp, #16]
   1bfec:	15db      	asrs	r3, r3, #23
   1bfee:	b2db      	uxtb	r3, r3
   1bff0:	3b7f      	subs	r3, #127	@ 0x7f
   1bff2:	9307      	str	r3, [sp, #28]
    i32Significand = (unFloatValue.I32 & 0x00FFFFFF) | 0x00800000;
   1bff4:	9b04      	ldr	r3, [sp, #16]
   1bff6:	f3c3 0316 	ubfx	r3, r3, #0, #23
   1bffa:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
   1bffe:	9306      	str	r3, [sp, #24]
    i32FracPart = 0;
   1c000:	2300      	movs	r3, #0
   1c002:	930c      	str	r3, [sp, #48]	@ 0x30
    i32IntPart = 0;
   1c004:	2300      	movs	r3, #0
   1c006:	930d      	str	r3, [sp, #52]	@ 0x34

    if (iExp2 >= 31)
   1c008:	9b07      	ldr	r3, [sp, #28]
   1c00a:	2b1e      	cmp	r3, #30
   1c00c:	dd02      	ble.n	1c014 <ftoa+0x68>
    {
        return AM_FTOA_ERR_VAL_TOO_LARGE;
   1c00e:	f06f 0301 	mvn.w	r3, #1
   1c012:	e0c4      	b.n	1c19e <ftoa+0x1f2>
    }
    else if (iExp2 < -23)
   1c014:	9b07      	ldr	r3, [sp, #28]
   1c016:	f113 0f17 	cmn.w	r3, #23
   1c01a:	da02      	bge.n	1c022 <ftoa+0x76>
    {
        return AM_FTOA_ERR_VAL_TOO_SMALL;
   1c01c:	f04f 33ff 	mov.w	r3, #4294967295
   1c020:	e0bd      	b.n	1c19e <ftoa+0x1f2>
    }
    else if (iExp2 >= 23)
   1c022:	9b07      	ldr	r3, [sp, #28]
   1c024:	2b16      	cmp	r3, #22
   1c026:	dd06      	ble.n	1c036 <ftoa+0x8a>
    {
        i32IntPart = i32Significand << (iExp2 - 23);
   1c028:	9b07      	ldr	r3, [sp, #28]
   1c02a:	3b17      	subs	r3, #23
   1c02c:	9a06      	ldr	r2, [sp, #24]
   1c02e:	fa02 f303 	lsl.w	r3, r2, r3
   1c032:	930d      	str	r3, [sp, #52]	@ 0x34
   1c034:	e01a      	b.n	1c06c <ftoa+0xc0>
    }
    else if (iExp2 >= 0)
   1c036:	9b07      	ldr	r3, [sp, #28]
   1c038:	2b00      	cmp	r3, #0
   1c03a:	db0f      	blt.n	1c05c <ftoa+0xb0>
    {
        i32IntPart = i32Significand >> (23 - iExp2);
   1c03c:	9b07      	ldr	r3, [sp, #28]
   1c03e:	f1c3 0317 	rsb	r3, r3, #23
   1c042:	9a06      	ldr	r2, [sp, #24]
   1c044:	fa42 f303 	asr.w	r3, r2, r3
   1c048:	930d      	str	r3, [sp, #52]	@ 0x34
        i32FracPart = (i32Significand << (iExp2 + 1)) & 0x00FFFFFF;
   1c04a:	9b07      	ldr	r3, [sp, #28]
   1c04c:	3301      	adds	r3, #1
   1c04e:	9a06      	ldr	r2, [sp, #24]
   1c050:	fa02 f303 	lsl.w	r3, r2, r3
   1c054:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
   1c058:	930c      	str	r3, [sp, #48]	@ 0x30
   1c05a:	e007      	b.n	1c06c <ftoa+0xc0>
    }
    else // if (iExp2 < 0)
    {
        i32FracPart = (i32Significand & 0x00FFFFFF) >> -(iExp2 + 1);
   1c05c:	9b06      	ldr	r3, [sp, #24]
   1c05e:	f023 427f 	bic.w	r2, r3, #4278190080	@ 0xff000000
   1c062:	9b07      	ldr	r3, [sp, #28]
   1c064:	43db      	mvns	r3, r3
   1c066:	fa42 f303 	asr.w	r3, r2, r3
   1c06a:	930c      	str	r3, [sp, #48]	@ 0x30
    }

    if (unFloatValue.I32 < 0)
   1c06c:	9b04      	ldr	r3, [sp, #16]
   1c06e:	2b00      	cmp	r3, #0
   1c070:	da04      	bge.n	1c07c <ftoa+0xd0>
    {
        *pcBuf++ = '-';
   1c072:	9b02      	ldr	r3, [sp, #8]
   1c074:	1c5a      	adds	r2, r3, #1
   1c076:	9202      	str	r2, [sp, #8]
   1c078:	222d      	movs	r2, #45	@ 0x2d
   1c07a:	701a      	strb	r2, [r3, #0]
    }

    if (i32IntPart == 0)
   1c07c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
   1c07e:	2b00      	cmp	r3, #0
   1c080:	d105      	bne.n	1c08e <ftoa+0xe2>
    {
        *pcBuf++ = '0';
   1c082:	9b02      	ldr	r3, [sp, #8]
   1c084:	1c5a      	adds	r2, r3, #1
   1c086:	9202      	str	r2, [sp, #8]
   1c088:	2230      	movs	r2, #48	@ 0x30
   1c08a:	701a      	strb	r2, [r3, #0]
   1c08c:	e023      	b.n	1c0d6 <ftoa+0x12a>
    }
    else
    {
        if (i32IntPart > 0)
   1c08e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
   1c090:	2b00      	cmp	r3, #0
   1c092:	dd09      	ble.n	1c0a8 <ftoa+0xfc>
        {
            uint64_to_str(i32IntPart, pcBuf);
   1c094:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
   1c096:	17da      	asrs	r2, r3, #31
   1c098:	461e      	mov	r6, r3
   1c09a:	4617      	mov	r7, r2
   1c09c:	9a02      	ldr	r2, [sp, #8]
   1c09e:	4630      	mov	r0, r6
   1c0a0:	4639      	mov	r1, r7
   1c0a2:	f7ff fea5 	bl	1bdf0 <uint64_to_str>
   1c0a6:	e012      	b.n	1c0ce <ftoa+0x122>
        }
        else
        {
            *pcBuf++ = '-';
   1c0a8:	9b02      	ldr	r3, [sp, #8]
   1c0aa:	1c5a      	adds	r2, r3, #1
   1c0ac:	9202      	str	r2, [sp, #8]
   1c0ae:	222d      	movs	r2, #45	@ 0x2d
   1c0b0:	701a      	strb	r2, [r3, #0]
            uint64_to_str(-i32IntPart, pcBuf);
   1c0b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
   1c0b4:	425b      	negs	r3, r3
   1c0b6:	17da      	asrs	r2, r3, #31
   1c0b8:	461c      	mov	r4, r3
   1c0ba:	4615      	mov	r5, r2
   1c0bc:	9a02      	ldr	r2, [sp, #8]
   1c0be:	4620      	mov	r0, r4
   1c0c0:	4629      	mov	r1, r5
   1c0c2:	f7ff fe95 	bl	1bdf0 <uint64_to_str>
        }
        while (*pcBuf)    // Get to end of new string
   1c0c6:	e002      	b.n	1c0ce <ftoa+0x122>
        {
            pcBuf++;
   1c0c8:	9b02      	ldr	r3, [sp, #8]
   1c0ca:	3301      	adds	r3, #1
   1c0cc:	9302      	str	r3, [sp, #8]
        while (*pcBuf)    // Get to end of new string
   1c0ce:	9b02      	ldr	r3, [sp, #8]
   1c0d0:	781b      	ldrb	r3, [r3, #0]
   1c0d2:	2b00      	cmp	r3, #0
   1c0d4:	d1f8      	bne.n	1c0c8 <ftoa+0x11c>
    }

    //
    // Now, begin the fractional part
    //
    *pcBuf++ = '.';
   1c0d6:	9b02      	ldr	r3, [sp, #8]
   1c0d8:	1c5a      	adds	r2, r3, #1
   1c0da:	9202      	str	r2, [sp, #8]
   1c0dc:	222e      	movs	r2, #46	@ 0x2e
   1c0de:	701a      	strb	r2, [r3, #0]

    if (i32FracPart == 0)
   1c0e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
   1c0e2:	2b00      	cmp	r3, #0
   1c0e4:	d105      	bne.n	1c0f2 <ftoa+0x146>
    {
        *pcBuf++ = '0';
   1c0e6:	9b02      	ldr	r3, [sp, #8]
   1c0e8:	1c5a      	adds	r2, r3, #1
   1c0ea:	9202      	str	r2, [sp, #8]
   1c0ec:	2230      	movs	r2, #48	@ 0x30
   1c0ee:	701a      	strb	r2, [r3, #0]
   1c0f0:	e04f      	b.n	1c192 <ftoa+0x1e6>
    }
    else
    {
        int jx, iMax;

        iMax = iBufSize - (pcBuf - pcBufInitial) - 1;
   1c0f2:	9a02      	ldr	r2, [sp, #8]
   1c0f4:	9b08      	ldr	r3, [sp, #32]
   1c0f6:	1ad3      	subs	r3, r2, r3
   1c0f8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
   1c0fa:	1ad3      	subs	r3, r2, r3
   1c0fc:	3b01      	subs	r3, #1
   1c0fe:	9305      	str	r3, [sp, #20]
        iMax = (iMax > iPrecision) ? iPrecision : iMax;
   1c100:	9a05      	ldr	r2, [sp, #20]
   1c102:	9b01      	ldr	r3, [sp, #4]
   1c104:	4293      	cmp	r3, r2
   1c106:	bfa8      	it	ge
   1c108:	4613      	movge	r3, r2
   1c10a:	9305      	str	r3, [sp, #20]

        for (jx = 0; jx < iMax; jx++)
   1c10c:	2300      	movs	r3, #0
   1c10e:	930a      	str	r3, [sp, #40]	@ 0x28
   1c110:	e015      	b.n	1c13e <ftoa+0x192>
        {
            i32FracPart *= 10;
   1c112:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
   1c114:	4613      	mov	r3, r2
   1c116:	009b      	lsls	r3, r3, #2
   1c118:	4413      	add	r3, r2
   1c11a:	005b      	lsls	r3, r3, #1
   1c11c:	930c      	str	r3, [sp, #48]	@ 0x30
            *pcBuf++ = (i32FracPart >> 24) + '0';
   1c11e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
   1c120:	161b      	asrs	r3, r3, #24
   1c122:	b2da      	uxtb	r2, r3
   1c124:	9b02      	ldr	r3, [sp, #8]
   1c126:	1c59      	adds	r1, r3, #1
   1c128:	9102      	str	r1, [sp, #8]
   1c12a:	3230      	adds	r2, #48	@ 0x30
   1c12c:	b2d2      	uxtb	r2, r2
   1c12e:	701a      	strb	r2, [r3, #0]
            i32FracPart &= 0x00FFFFFF;
   1c130:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
   1c132:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
   1c136:	930c      	str	r3, [sp, #48]	@ 0x30
        for (jx = 0; jx < iMax; jx++)
   1c138:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1c13a:	3301      	adds	r3, #1
   1c13c:	930a      	str	r3, [sp, #40]	@ 0x28
   1c13e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
   1c140:	9b05      	ldr	r3, [sp, #20]
   1c142:	429a      	cmp	r2, r3
   1c144:	dbe5      	blt.n	1c112 <ftoa+0x166>
        // 1.996        4                   1.9960
        //
        // To determine whether to round up, we'll look at what the next
        // decimal value would have been.
        //
        if ( ((i32FracPart * 10) >> 24) >= 5 )
   1c146:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
   1c148:	4613      	mov	r3, r2
   1c14a:	009b      	lsls	r3, r3, #2
   1c14c:	4413      	add	r3, r2
   1c14e:	005b      	lsls	r3, r3, #1
   1c150:	161b      	asrs	r3, r3, #24
   1c152:	2b04      	cmp	r3, #4
   1c154:	dd1d      	ble.n	1c192 <ftoa+0x1e6>
        {
            //
            // Yes, we need to round up.
            // Go back through the string and make adjustments as necessary.
            //
            pcBuftmp = pcBuf - 1;
   1c156:	9b02      	ldr	r3, [sp, #8]
   1c158:	3b01      	subs	r3, #1
   1c15a:	930b      	str	r3, [sp, #44]	@ 0x2c
            while ( pcBuftmp >= pcBufInitial )
   1c15c:	e015      	b.n	1c18a <ftoa+0x1de>
            {
                if ( *pcBuftmp == '.' )
   1c15e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1c160:	781b      	ldrb	r3, [r3, #0]
   1c162:	2b2e      	cmp	r3, #46	@ 0x2e
   1c164:	d00e      	beq.n	1c184 <ftoa+0x1d8>
                {
                }
                else if ( *pcBuftmp == '9' )
   1c166:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1c168:	781b      	ldrb	r3, [r3, #0]
   1c16a:	2b39      	cmp	r3, #57	@ 0x39
   1c16c:	d103      	bne.n	1c176 <ftoa+0x1ca>
                {
                    *pcBuftmp = '0';
   1c16e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1c170:	2230      	movs	r2, #48	@ 0x30
   1c172:	701a      	strb	r2, [r3, #0]
   1c174:	e006      	b.n	1c184 <ftoa+0x1d8>
                }
                else
                {
                    *pcBuftmp += 1;
   1c176:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1c178:	781b      	ldrb	r3, [r3, #0]
   1c17a:	3301      	adds	r3, #1
   1c17c:	b2da      	uxtb	r2, r3
   1c17e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1c180:	701a      	strb	r2, [r3, #0]
                    break;
   1c182:	e006      	b.n	1c192 <ftoa+0x1e6>
                }
                pcBuftmp--;
   1c184:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1c186:	3b01      	subs	r3, #1
   1c188:	930b      	str	r3, [sp, #44]	@ 0x2c
            while ( pcBuftmp >= pcBufInitial )
   1c18a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1c18c:	9b08      	ldr	r3, [sp, #32]
   1c18e:	429a      	cmp	r2, r3
   1c190:	d2e5      	bcs.n	1c15e <ftoa+0x1b2>
    }

    //
    // Terminate the string and we're done
    //
    *pcBuf = 0x00;
   1c192:	9b02      	ldr	r3, [sp, #8]
   1c194:	2200      	movs	r2, #0
   1c196:	701a      	strb	r2, [r3, #0]

    return (pcBuf - pcBufInitial);
   1c198:	9a02      	ldr	r2, [sp, #8]
   1c19a:	9b08      	ldr	r3, [sp, #32]
   1c19c:	1ad3      	subs	r3, r2, r3
} // ftoa()
   1c19e:	4618      	mov	r0, r3
   1c1a0:	b00f      	add	sp, #60	@ 0x3c
   1c1a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1c1a4:	00302e30 	.word	0x00302e30

0001c1a8 <am_util_stdio_vsprintf>:
// Format data into string. (va_list implementation)
//
//******************************************************************************
uint32_t
am_util_stdio_vsprintf(char *pcBuf, const char *pcFmt, va_list pArgs)
{
   1c1a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c1ac:	b097      	sub	sp, #92	@ 0x5c
   1c1ae:	9003      	str	r0, [sp, #12]
   1c1b0:	9102      	str	r1, [sp, #8]
   1c1b2:	9201      	str	r2, [sp, #4]
    char *pcStr;
    uint64_t ui64Val;
    int64_t i64Val;
    uint32_t ui32NumChars, ui32CharCnt = 0;
   1c1b4:	2300      	movs	r3, #0
   1c1b6:	9311      	str	r3, [sp, #68]	@ 0x44
    int iWidth, iVal, iPrecision;
    uint8_t ui8CharSpecifier, ui8PadChar;
    bool bLower, bLongLong, bNeg;
    uint32_t ui32strlen = 0;
   1c1b8:	2300      	movs	r3, #0
   1c1ba:	930b      	str	r3, [sp, #44]	@ 0x2c

    while ( *pcFmt != 0x0 )
   1c1bc:	e2e9      	b.n	1c792 <am_util_stdio_vsprintf+0x5ea>
    {
        iPrecision = 6;             // printf() default precision for %f is 6
   1c1be:	2306      	movs	r3, #6
   1c1c0:	930e      	str	r3, [sp, #56]	@ 0x38

        if ( *pcFmt != '%' )
   1c1c2:	9b02      	ldr	r3, [sp, #8]
   1c1c4:	781b      	ldrb	r3, [r3, #0]
   1c1c6:	2b25      	cmp	r3, #37	@ 0x25
   1c1c8:	d01f      	beq.n	1c20a <am_util_stdio_vsprintf+0x62>
        {
            //
            // Accumulate the string portion of the format specification.
            //
            if ( pcBuf )
   1c1ca:	9b03      	ldr	r3, [sp, #12]
   1c1cc:	2b00      	cmp	r3, #0
   1c1ce:	d015      	beq.n	1c1fc <am_util_stdio_vsprintf+0x54>
            {
                // If '\n', convert to '\r\n'
                if ( *pcFmt == '\n'  &&  g_bTxtXlate )
   1c1d0:	9b02      	ldr	r3, [sp, #8]
   1c1d2:	781b      	ldrb	r3, [r3, #0]
   1c1d4:	2b0a      	cmp	r3, #10
   1c1d6:	d10b      	bne.n	1c1f0 <am_util_stdio_vsprintf+0x48>
   1c1d8:	4ba8      	ldr	r3, [pc, #672]	@ (1c47c <am_util_stdio_vsprintf+0x2d4>)
   1c1da:	781b      	ldrb	r3, [r3, #0]
   1c1dc:	2b00      	cmp	r3, #0
   1c1de:	d007      	beq.n	1c1f0 <am_util_stdio_vsprintf+0x48>
                {
                    *pcBuf++ = '\r';
   1c1e0:	9b03      	ldr	r3, [sp, #12]
   1c1e2:	1c5a      	adds	r2, r3, #1
   1c1e4:	9203      	str	r2, [sp, #12]
   1c1e6:	220d      	movs	r2, #13
   1c1e8:	701a      	strb	r2, [r3, #0]
                    ++ui32CharCnt;
   1c1ea:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1c1ec:	3301      	adds	r3, #1
   1c1ee:	9311      	str	r3, [sp, #68]	@ 0x44
                }
                *pcBuf++ = *pcFmt;
   1c1f0:	9b03      	ldr	r3, [sp, #12]
   1c1f2:	1c5a      	adds	r2, r3, #1
   1c1f4:	9203      	str	r2, [sp, #12]
   1c1f6:	9a02      	ldr	r2, [sp, #8]
   1c1f8:	7812      	ldrb	r2, [r2, #0]
   1c1fa:	701a      	strb	r2, [r3, #0]
            }

            ++pcFmt;
   1c1fc:	9b02      	ldr	r3, [sp, #8]
   1c1fe:	3301      	adds	r3, #1
   1c200:	9302      	str	r3, [sp, #8]
            ++ui32CharCnt;
   1c202:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1c204:	3301      	adds	r3, #1
   1c206:	9311      	str	r3, [sp, #68]	@ 0x44
            continue;
   1c208:	e2c3      	b.n	1c792 <am_util_stdio_vsprintf+0x5ea>
        }

        //
        // Handle the specifier.
        //
        ++pcFmt;
   1c20a:	9b02      	ldr	r3, [sp, #8]
   1c20c:	3301      	adds	r3, #1
   1c20e:	9302      	str	r3, [sp, #8]
        bLower = bLongLong = false;
   1c210:	2300      	movs	r3, #0
   1c212:	f88d 3035 	strb.w	r3, [sp, #53]	@ 0x35
   1c216:	f89d 3035 	ldrb.w	r3, [sp, #53]	@ 0x35
   1c21a:	f88d 3036 	strb.w	r3, [sp, #54]	@ 0x36

        //
        // Default to space as ui8PadChar
        //
        ui8PadChar = ' ';
   1c21e:	2320      	movs	r3, #32
   1c220:	f88d 3037 	strb.w	r3, [sp, #55]	@ 0x37

        if ( *pcFmt == '0' )
   1c224:	9b02      	ldr	r3, [sp, #8]
   1c226:	781b      	ldrb	r3, [r3, #0]
   1c228:	2b30      	cmp	r3, #48	@ 0x30
   1c22a:	d105      	bne.n	1c238 <am_util_stdio_vsprintf+0x90>
        {
            ui8PadChar = '0';
   1c22c:	2330      	movs	r3, #48	@ 0x30
   1c22e:	f88d 3037 	strb.w	r3, [sp, #55]	@ 0x37
            ++pcFmt;
   1c232:	9b02      	ldr	r3, [sp, #8]
   1c234:	3301      	adds	r3, #1
   1c236:	9302      	str	r3, [sp, #8]
        }

        //
        // Width specifier
        //
        iWidth = decstr_to_int(pcFmt, &ui32NumChars);
   1c238:	ab05      	add	r3, sp, #20
   1c23a:	4619      	mov	r1, r3
   1c23c:	9802      	ldr	r0, [sp, #8]
   1c23e:	f7ff fd93 	bl	1bd68 <decstr_to_int>
   1c242:	4603      	mov	r3, r0
   1c244:	9310      	str	r3, [sp, #64]	@ 0x40
        pcFmt += ui32NumChars;
   1c246:	9b05      	ldr	r3, [sp, #20]
   1c248:	9a02      	ldr	r2, [sp, #8]
   1c24a:	4413      	add	r3, r2
   1c24c:	9302      	str	r3, [sp, #8]

        //
        // For now, only support a negative width specifier for %s
        //
        if ( ( *pcFmt != 's' )  &&  ( iWidth < 0 ) )
   1c24e:	9b02      	ldr	r3, [sp, #8]
   1c250:	781b      	ldrb	r3, [r3, #0]
   1c252:	2b73      	cmp	r3, #115	@ 0x73
   1c254:	d005      	beq.n	1c262 <am_util_stdio_vsprintf+0xba>
   1c256:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c258:	2b00      	cmp	r3, #0
   1c25a:	da02      	bge.n	1c262 <am_util_stdio_vsprintf+0xba>
        {
            iWidth = -iWidth;
   1c25c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c25e:	425b      	negs	r3, r3
   1c260:	9310      	str	r3, [sp, #64]	@ 0x40
        }

        //
        // Check for precision specifier
        //
        if (*pcFmt == '.')
   1c262:	9b02      	ldr	r3, [sp, #8]
   1c264:	781b      	ldrb	r3, [r3, #0]
   1c266:	2b2e      	cmp	r3, #46	@ 0x2e
   1c268:	d10d      	bne.n	1c286 <am_util_stdio_vsprintf+0xde>
        {
            ++pcFmt;
   1c26a:	9b02      	ldr	r3, [sp, #8]
   1c26c:	3301      	adds	r3, #1
   1c26e:	9302      	str	r3, [sp, #8]
            iPrecision = decstr_to_int(pcFmt, &ui32NumChars);
   1c270:	ab05      	add	r3, sp, #20
   1c272:	4619      	mov	r1, r3
   1c274:	9802      	ldr	r0, [sp, #8]
   1c276:	f7ff fd77 	bl	1bd68 <decstr_to_int>
   1c27a:	4603      	mov	r3, r0
   1c27c:	930e      	str	r3, [sp, #56]	@ 0x38
            pcFmt += ui32NumChars;
   1c27e:	9b05      	ldr	r3, [sp, #20]
   1c280:	9a02      	ldr	r2, [sp, #8]
   1c282:	4413      	add	r3, r2
   1c284:	9302      	str	r3, [sp, #8]
        // 'll', which must be a modifier for either 'd', 'i', 'u', 'x', or 'X'
        // (or even 'o', which is not currently supported). Other sub-specifiers
        // like 'hh','h', etc. are not currently handled.
        // Note - 'l' is used in Coremark, a primary reason it's supported here.
        //
        if ( *pcFmt == 'l' )
   1c286:	9b02      	ldr	r3, [sp, #8]
   1c288:	781b      	ldrb	r3, [r3, #0]
   1c28a:	2b6c      	cmp	r3, #108	@ 0x6c
   1c28c:	d10c      	bne.n	1c2a8 <am_util_stdio_vsprintf+0x100>
        {
            pcFmt++;
   1c28e:	9b02      	ldr	r3, [sp, #8]
   1c290:	3301      	adds	r3, #1
   1c292:	9302      	str	r3, [sp, #8]
            if ( *pcFmt == 'l' )    // "ll" (long long)
   1c294:	9b02      	ldr	r3, [sp, #8]
   1c296:	781b      	ldrb	r3, [r3, #0]
   1c298:	2b6c      	cmp	r3, #108	@ 0x6c
   1c29a:	d105      	bne.n	1c2a8 <am_util_stdio_vsprintf+0x100>
            {
                pcFmt++;
   1c29c:	9b02      	ldr	r3, [sp, #8]
   1c29e:	3301      	adds	r3, #1
   1c2a0:	9302      	str	r3, [sp, #8]
                bLongLong = true;
   1c2a2:	2301      	movs	r3, #1
   1c2a4:	f88d 3035 	strb.w	r3, [sp, #53]	@ 0x35
            }
        }

        switch ( *pcFmt )
   1c2a8:	9b02      	ldr	r3, [sp, #8]
   1c2aa:	781b      	ldrb	r3, [r3, #0]
   1c2ac:	3b46      	subs	r3, #70	@ 0x46
   1c2ae:	2b32      	cmp	r3, #50	@ 0x32
   1c2b0:	f200 825c 	bhi.w	1c76c <am_util_stdio_vsprintf+0x5c4>
   1c2b4:	a201      	add	r2, pc, #4	@ (adr r2, 1c2bc <am_util_stdio_vsprintf+0x114>)
   1c2b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1c2ba:	bf00      	nop
   1c2bc:	0001c6f3 	.word	0x0001c6f3
   1c2c0:	0001c76d 	.word	0x0001c76d
   1c2c4:	0001c76d 	.word	0x0001c76d
   1c2c8:	0001c76d 	.word	0x0001c76d
   1c2cc:	0001c76d 	.word	0x0001c76d
   1c2d0:	0001c76d 	.word	0x0001c76d
   1c2d4:	0001c76d 	.word	0x0001c76d
   1c2d8:	0001c76d 	.word	0x0001c76d
   1c2dc:	0001c76d 	.word	0x0001c76d
   1c2e0:	0001c76d 	.word	0x0001c76d
   1c2e4:	0001c76d 	.word	0x0001c76d
   1c2e8:	0001c76d 	.word	0x0001c76d
   1c2ec:	0001c76d 	.word	0x0001c76d
   1c2f0:	0001c76d 	.word	0x0001c76d
   1c2f4:	0001c76d 	.word	0x0001c76d
   1c2f8:	0001c76d 	.word	0x0001c76d
   1c2fc:	0001c76d 	.word	0x0001c76d
   1c300:	0001c76d 	.word	0x0001c76d
   1c304:	0001c487 	.word	0x0001c487
   1c308:	0001c76d 	.word	0x0001c76d
   1c30c:	0001c76d 	.word	0x0001c76d
   1c310:	0001c76d 	.word	0x0001c76d
   1c314:	0001c76d 	.word	0x0001c76d
   1c318:	0001c76d 	.word	0x0001c76d
   1c31c:	0001c76d 	.word	0x0001c76d
   1c320:	0001c76d 	.word	0x0001c76d
   1c324:	0001c76d 	.word	0x0001c76d
   1c328:	0001c76d 	.word	0x0001c76d
   1c32c:	0001c76d 	.word	0x0001c76d
   1c330:	0001c389 	.word	0x0001c389
   1c334:	0001c5b7 	.word	0x0001c5b7
   1c338:	0001c76d 	.word	0x0001c76d
   1c33c:	0001c6f3 	.word	0x0001c6f3
   1c340:	0001c76d 	.word	0x0001c76d
   1c344:	0001c76d 	.word	0x0001c76d
   1c348:	0001c5b7 	.word	0x0001c5b7
   1c34c:	0001c76d 	.word	0x0001c76d
   1c350:	0001c76d 	.word	0x0001c76d
   1c354:	0001c76d 	.word	0x0001c76d
   1c358:	0001c76d 	.word	0x0001c76d
   1c35c:	0001c76d 	.word	0x0001c76d
   1c360:	0001c76d 	.word	0x0001c76d
   1c364:	0001c76d 	.word	0x0001c76d
   1c368:	0001c76d 	.word	0x0001c76d
   1c36c:	0001c76d 	.word	0x0001c76d
   1c370:	0001c3af 	.word	0x0001c3af
   1c374:	0001c76d 	.word	0x0001c76d
   1c378:	0001c521 	.word	0x0001c521
   1c37c:	0001c76d 	.word	0x0001c76d
   1c380:	0001c76d 	.word	0x0001c76d
   1c384:	0001c481 	.word	0x0001c481
        {
            case 'c':
                ui8CharSpecifier = va_arg(pArgs, uint32_t);
   1c388:	9b01      	ldr	r3, [sp, #4]
   1c38a:	1d1a      	adds	r2, r3, #4
   1c38c:	9201      	str	r2, [sp, #4]
   1c38e:	681b      	ldr	r3, [r3, #0]
   1c390:	f88d 301f 	strb.w	r3, [sp, #31]

                if ( pcBuf )
   1c394:	9b03      	ldr	r3, [sp, #12]
   1c396:	2b00      	cmp	r3, #0
   1c398:	d005      	beq.n	1c3a6 <am_util_stdio_vsprintf+0x1fe>
                {
                    *pcBuf++ = ui8CharSpecifier;
   1c39a:	9b03      	ldr	r3, [sp, #12]
   1c39c:	1c5a      	adds	r2, r3, #1
   1c39e:	9203      	str	r2, [sp, #12]
   1c3a0:	f89d 201f 	ldrb.w	r2, [sp, #31]
   1c3a4:	701a      	strb	r2, [r3, #0]
                }

                ++ui32CharCnt;
   1c3a6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1c3a8:	3301      	adds	r3, #1
   1c3aa:	9311      	str	r3, [sp, #68]	@ 0x44
                break;
   1c3ac:	e1ee      	b.n	1c78c <am_util_stdio_vsprintf+0x5e4>

            case 's':
                pcStr = va_arg(pArgs, char *);
   1c3ae:	9b01      	ldr	r3, [sp, #4]
   1c3b0:	1d1a      	adds	r2, r3, #4
   1c3b2:	9201      	str	r2, [sp, #4]
   1c3b4:	681b      	ldr	r3, [r3, #0]
   1c3b6:	9315      	str	r3, [sp, #84]	@ 0x54
                //
                // For %s, we support the width specifier. If iWidth is negative
                // the string is left-aligned (padding on the right).  Otherwise
                // the string is padded at the beginning with spaces.
                //
                ui32strlen = simple_strlen(pcStr);
   1c3b8:	9815      	ldr	r0, [sp, #84]	@ 0x54
   1c3ba:	f7ff fdbe 	bl	1bf3a <simple_strlen>
   1c3be:	900b      	str	r0, [sp, #44]	@ 0x2c
                if ( iWidth > 0 )
   1c3c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c3c2:	2b00      	cmp	r3, #0
   1c3c4:	dd2e      	ble.n	1c424 <am_util_stdio_vsprintf+0x27c>
                {
                    // Pad the beginning of the string (right-aligned).
                    if ( ui32strlen < iWidth )
   1c3c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c3c8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1c3ca:	429a      	cmp	r2, r3
   1c3cc:	d22a      	bcs.n	1c424 <am_util_stdio_vsprintf+0x27c>
                    {
                        // String needs some padding.
                        iWidth -= ui32strlen;
   1c3ce:	9a10      	ldr	r2, [sp, #64]	@ 0x40
   1c3d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1c3d2:	1ad3      	subs	r3, r2, r3
   1c3d4:	9310      	str	r3, [sp, #64]	@ 0x40
                        iWidth = padbuffer(pcBuf, ui8PadChar, iWidth);
   1c3d6:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   1c3da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
   1c3dc:	4619      	mov	r1, r3
   1c3de:	9803      	ldr	r0, [sp, #12]
   1c3e0:	f7ff fdc1 	bl	1bf66 <padbuffer>
   1c3e4:	9010      	str	r0, [sp, #64]	@ 0x40
                        pcBuf += pcBuf ? iWidth : 0;
   1c3e6:	9b03      	ldr	r3, [sp, #12]
   1c3e8:	2b00      	cmp	r3, #0
   1c3ea:	d001      	beq.n	1c3f0 <am_util_stdio_vsprintf+0x248>
   1c3ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c3ee:	e000      	b.n	1c3f2 <am_util_stdio_vsprintf+0x24a>
   1c3f0:	2300      	movs	r3, #0
   1c3f2:	9a03      	ldr	r2, [sp, #12]
   1c3f4:	4413      	add	r3, r2
   1c3f6:	9303      	str	r3, [sp, #12]
                        ui32CharCnt += iWidth;
   1c3f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c3fa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1c3fc:	4413      	add	r3, r2
   1c3fe:	9311      	str	r3, [sp, #68]	@ 0x44
                        iWidth = 0;
   1c400:	2300      	movs	r3, #0
   1c402:	9310      	str	r3, [sp, #64]	@ 0x40
                    }
                }

                while (*pcStr != 0x0)
   1c404:	e00e      	b.n	1c424 <am_util_stdio_vsprintf+0x27c>
                {
                    if ( pcBuf )
   1c406:	9b03      	ldr	r3, [sp, #12]
   1c408:	2b00      	cmp	r3, #0
   1c40a:	d005      	beq.n	1c418 <am_util_stdio_vsprintf+0x270>
                    {
                        *pcBuf++ = *pcStr;
   1c40c:	9b03      	ldr	r3, [sp, #12]
   1c40e:	1c5a      	adds	r2, r3, #1
   1c410:	9203      	str	r2, [sp, #12]
   1c412:	9a15      	ldr	r2, [sp, #84]	@ 0x54
   1c414:	7812      	ldrb	r2, [r2, #0]
   1c416:	701a      	strb	r2, [r3, #0]
                    }

                    ++pcStr;
   1c418:	9b15      	ldr	r3, [sp, #84]	@ 0x54
   1c41a:	3301      	adds	r3, #1
   1c41c:	9315      	str	r3, [sp, #84]	@ 0x54
                    ++ui32CharCnt;
   1c41e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1c420:	3301      	adds	r3, #1
   1c422:	9311      	str	r3, [sp, #68]	@ 0x44
                while (*pcStr != 0x0)
   1c424:	9b15      	ldr	r3, [sp, #84]	@ 0x54
   1c426:	781b      	ldrb	r3, [r3, #0]
   1c428:	2b00      	cmp	r3, #0
   1c42a:	d1ec      	bne.n	1c406 <am_util_stdio_vsprintf+0x25e>
                }

                if ( iWidth )
   1c42c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c42e:	2b00      	cmp	r3, #0
   1c430:	f000 81a9 	beq.w	1c786 <am_util_stdio_vsprintf+0x5de>
                {
                    iWidth = -iWidth;
   1c434:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c436:	425b      	negs	r3, r3
   1c438:	9310      	str	r3, [sp, #64]	@ 0x40

                    // Pad the end of the string (left-aligned).
                    if ( ui32strlen < iWidth )
   1c43a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c43c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1c43e:	429a      	cmp	r2, r3
   1c440:	f080 81a1 	bcs.w	1c786 <am_util_stdio_vsprintf+0x5de>
                    {
                        // String needs some padding.
                        iWidth -= ui32strlen;
   1c444:	9a10      	ldr	r2, [sp, #64]	@ 0x40
   1c446:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1c448:	1ad3      	subs	r3, r2, r3
   1c44a:	9310      	str	r3, [sp, #64]	@ 0x40
                        iWidth = padbuffer(pcBuf, ui8PadChar, iWidth);
   1c44c:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   1c450:	9a10      	ldr	r2, [sp, #64]	@ 0x40
   1c452:	4619      	mov	r1, r3
   1c454:	9803      	ldr	r0, [sp, #12]
   1c456:	f7ff fd86 	bl	1bf66 <padbuffer>
   1c45a:	9010      	str	r0, [sp, #64]	@ 0x40
                        pcBuf += pcBuf ? iWidth : 0;
   1c45c:	9b03      	ldr	r3, [sp, #12]
   1c45e:	2b00      	cmp	r3, #0
   1c460:	d001      	beq.n	1c466 <am_util_stdio_vsprintf+0x2be>
   1c462:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c464:	e000      	b.n	1c468 <am_util_stdio_vsprintf+0x2c0>
   1c466:	2300      	movs	r3, #0
   1c468:	9a03      	ldr	r2, [sp, #12]
   1c46a:	4413      	add	r3, r2
   1c46c:	9303      	str	r3, [sp, #12]
                        ui32CharCnt += iWidth;
   1c46e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c470:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1c472:	4413      	add	r3, r2
   1c474:	9311      	str	r3, [sp, #68]	@ 0x44
                        iWidth = 0;
   1c476:	2300      	movs	r3, #0
   1c478:	9310      	str	r3, [sp, #64]	@ 0x40
                    }
                }
                break;
   1c47a:	e184      	b.n	1c786 <am_util_stdio_vsprintf+0x5de>
   1c47c:	100300f4 	.word	0x100300f4

            case 'x':
                bLower = true;
   1c480:	2301      	movs	r3, #1
   1c482:	f88d 3036 	strb.w	r3, [sp, #54]	@ 0x36
            case 'X':
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
   1c486:	f89d 3035 	ldrb.w	r3, [sp, #53]	@ 0x35
   1c48a:	2b00      	cmp	r3, #0
   1c48c:	d009      	beq.n	1c4a2 <am_util_stdio_vsprintf+0x2fa>
   1c48e:	9b01      	ldr	r3, [sp, #4]
   1c490:	3307      	adds	r3, #7
   1c492:	f023 0307 	bic.w	r3, r3, #7
   1c496:	f103 0208 	add.w	r2, r3, #8
   1c49a:	9201      	str	r2, [sp, #4]
   1c49c:	e9d3 4500 	ldrd	r4, r5, [r3]
   1c4a0:	e006      	b.n	1c4b0 <am_util_stdio_vsprintf+0x308>
                                      va_arg(pArgs, uint32_t);
   1c4a2:	9b01      	ldr	r3, [sp, #4]
   1c4a4:	1d1a      	adds	r2, r3, #4
   1c4a6:	9201      	str	r2, [sp, #4]
   1c4a8:	681b      	ldr	r3, [r3, #0]
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
   1c4aa:	2200      	movs	r2, #0
   1c4ac:	461c      	mov	r4, r3
   1c4ae:	4615      	mov	r5, r2
   1c4b0:	e9cd 4512 	strd	r4, r5, [sp, #72]	@ 0x48

                if ( iWidth )
   1c4b4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c4b6:	2b00      	cmp	r3, #0
   1c4b8:	d01e      	beq.n	1c4f8 <am_util_stdio_vsprintf+0x350>
                {
                    //
                    // Compute # of leading chars
                    //
                    iWidth -= ndigits_in_hex(ui64Val);
   1c4ba:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1c4be:	f7ff fc2f 	bl	1bd20 <ndigits_in_hex>
   1c4c2:	4602      	mov	r2, r0
   1c4c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c4c6:	1a9b      	subs	r3, r3, r2
   1c4c8:	9310      	str	r3, [sp, #64]	@ 0x40

                    iWidth = padbuffer(pcBuf, ui8PadChar, iWidth);
   1c4ca:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   1c4ce:	9a10      	ldr	r2, [sp, #64]	@ 0x40
   1c4d0:	4619      	mov	r1, r3
   1c4d2:	9803      	ldr	r0, [sp, #12]
   1c4d4:	f7ff fd47 	bl	1bf66 <padbuffer>
   1c4d8:	9010      	str	r0, [sp, #64]	@ 0x40
                    pcBuf += pcBuf ? iWidth : 0;
   1c4da:	9b03      	ldr	r3, [sp, #12]
   1c4dc:	2b00      	cmp	r3, #0
   1c4de:	d001      	beq.n	1c4e4 <am_util_stdio_vsprintf+0x33c>
   1c4e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c4e2:	e000      	b.n	1c4e6 <am_util_stdio_vsprintf+0x33e>
   1c4e4:	2300      	movs	r3, #0
   1c4e6:	9a03      	ldr	r2, [sp, #12]
   1c4e8:	4413      	add	r3, r2
   1c4ea:	9303      	str	r3, [sp, #12]
                    ui32CharCnt += iWidth;
   1c4ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c4ee:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1c4f0:	4413      	add	r3, r2
   1c4f2:	9311      	str	r3, [sp, #68]	@ 0x44
                    iWidth = 0;
   1c4f4:	2300      	movs	r3, #0
   1c4f6:	9310      	str	r3, [sp, #64]	@ 0x40
                }

                iVal = uint64_to_hexstr(ui64Val, pcBuf, bLower);
   1c4f8:	f89d 3036 	ldrb.w	r3, [sp, #54]	@ 0x36
   1c4fc:	9a03      	ldr	r2, [sp, #12]
   1c4fe:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1c502:	f7ff fcba 	bl	1be7a <uint64_to_hexstr>
   1c506:	900f      	str	r0, [sp, #60]	@ 0x3c

                if ( pcBuf )
   1c508:	9b03      	ldr	r3, [sp, #12]
   1c50a:	2b00      	cmp	r3, #0
   1c50c:	d003      	beq.n	1c516 <am_util_stdio_vsprintf+0x36e>
                {
                    pcBuf += iVal;
   1c50e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c510:	9a03      	ldr	r2, [sp, #12]
   1c512:	4413      	add	r3, r2
   1c514:	9303      	str	r3, [sp, #12]
                }

                ui32CharCnt += iVal;
   1c516:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c518:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1c51a:	4413      	add	r3, r2
   1c51c:	9311      	str	r3, [sp, #68]	@ 0x44
                break;
   1c51e:	e135      	b.n	1c78c <am_util_stdio_vsprintf+0x5e4>

            case 'u':
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
   1c520:	f89d 3035 	ldrb.w	r3, [sp, #53]	@ 0x35
   1c524:	2b00      	cmp	r3, #0
   1c526:	d009      	beq.n	1c53c <am_util_stdio_vsprintf+0x394>
   1c528:	9b01      	ldr	r3, [sp, #4]
   1c52a:	3307      	adds	r3, #7
   1c52c:	f023 0307 	bic.w	r3, r3, #7
   1c530:	f103 0208 	add.w	r2, r3, #8
   1c534:	9201      	str	r2, [sp, #4]
   1c536:	e9d3 6700 	ldrd	r6, r7, [r3]
   1c53a:	e006      	b.n	1c54a <am_util_stdio_vsprintf+0x3a2>
                                      va_arg(pArgs, uint32_t);
   1c53c:	9b01      	ldr	r3, [sp, #4]
   1c53e:	1d1a      	adds	r2, r3, #4
   1c540:	9201      	str	r2, [sp, #4]
   1c542:	681b      	ldr	r3, [r3, #0]
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
   1c544:	2200      	movs	r2, #0
   1c546:	461e      	mov	r6, r3
   1c548:	4617      	mov	r7, r2
   1c54a:	e9cd 6712 	strd	r6, r7, [sp, #72]	@ 0x48

                if ( iWidth )
   1c54e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c550:	2b00      	cmp	r3, #0
   1c552:	d01e      	beq.n	1c592 <am_util_stdio_vsprintf+0x3ea>
                {
                    //
                    // We need to pad the beginning of the value.
                    // Compute # of leading chars
                    //
                    iWidth -= ndigits_in_u64(ui64Val);
   1c554:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1c558:	f7ff fba8 	bl	1bcac <ndigits_in_u64>
   1c55c:	4602      	mov	r2, r0
   1c55e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c560:	1a9b      	subs	r3, r3, r2
   1c562:	9310      	str	r3, [sp, #64]	@ 0x40

                    iWidth = padbuffer(pcBuf, ui8PadChar, iWidth);
   1c564:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   1c568:	9a10      	ldr	r2, [sp, #64]	@ 0x40
   1c56a:	4619      	mov	r1, r3
   1c56c:	9803      	ldr	r0, [sp, #12]
   1c56e:	f7ff fcfa 	bl	1bf66 <padbuffer>
   1c572:	9010      	str	r0, [sp, #64]	@ 0x40
                    pcBuf += pcBuf ? iWidth : 0;
   1c574:	9b03      	ldr	r3, [sp, #12]
   1c576:	2b00      	cmp	r3, #0
   1c578:	d001      	beq.n	1c57e <am_util_stdio_vsprintf+0x3d6>
   1c57a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c57c:	e000      	b.n	1c580 <am_util_stdio_vsprintf+0x3d8>
   1c57e:	2300      	movs	r3, #0
   1c580:	9a03      	ldr	r2, [sp, #12]
   1c582:	4413      	add	r3, r2
   1c584:	9303      	str	r3, [sp, #12]
                    ui32CharCnt += iWidth;
   1c586:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c588:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1c58a:	4413      	add	r3, r2
   1c58c:	9311      	str	r3, [sp, #68]	@ 0x44
                    iWidth = 0;
   1c58e:	2300      	movs	r3, #0
   1c590:	9310      	str	r3, [sp, #64]	@ 0x40
                }

                iVal = uint64_to_str(ui64Val, pcBuf);
   1c592:	9a03      	ldr	r2, [sp, #12]
   1c594:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1c598:	f7ff fc2a 	bl	1bdf0 <uint64_to_str>
   1c59c:	900f      	str	r0, [sp, #60]	@ 0x3c

                if ( pcBuf )
   1c59e:	9b03      	ldr	r3, [sp, #12]
   1c5a0:	2b00      	cmp	r3, #0
   1c5a2:	d003      	beq.n	1c5ac <am_util_stdio_vsprintf+0x404>
                {
                    pcBuf += iVal;
   1c5a4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c5a6:	9a03      	ldr	r2, [sp, #12]
   1c5a8:	4413      	add	r3, r2
   1c5aa:	9303      	str	r3, [sp, #12]
                }

                ui32CharCnt += iVal;
   1c5ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c5ae:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1c5b0:	4413      	add	r3, r2
   1c5b2:	9311      	str	r3, [sp, #68]	@ 0x44
                break;
   1c5b4:	e0ea      	b.n	1c78c <am_util_stdio_vsprintf+0x5e4>
                // Output for a negative number, for example, -5:
                //   %d:-5
                //  %5d:   -5
                // %05d:-0005
                //
                i64Val = bLongLong ? va_arg(pArgs, int64_t) :
   1c5b6:	f89d 3035 	ldrb.w	r3, [sp, #53]	@ 0x35
   1c5ba:	2b00      	cmp	r3, #0
   1c5bc:	d009      	beq.n	1c5d2 <am_util_stdio_vsprintf+0x42a>
   1c5be:	9b01      	ldr	r3, [sp, #4]
   1c5c0:	3307      	adds	r3, #7
   1c5c2:	f023 0307 	bic.w	r3, r3, #7
   1c5c6:	f103 0208 	add.w	r2, r3, #8
   1c5ca:	9201      	str	r2, [sp, #4]
   1c5cc:	e9d3 8900 	ldrd	r8, r9, [r3]
   1c5d0:	e006      	b.n	1c5e0 <am_util_stdio_vsprintf+0x438>
                                     va_arg(pArgs, int32_t);
   1c5d2:	9b01      	ldr	r3, [sp, #4]
   1c5d4:	1d1a      	adds	r2, r3, #4
   1c5d6:	9201      	str	r2, [sp, #4]
   1c5d8:	681b      	ldr	r3, [r3, #0]
                i64Val = bLongLong ? va_arg(pArgs, int64_t) :
   1c5da:	17da      	asrs	r2, r3, #31
   1c5dc:	4698      	mov	r8, r3
   1c5de:	4691      	mov	r9, r2
   1c5e0:	e9cd 8908 	strd	r8, r9, [sp, #32]

                //
                // Get absolute value
                //
                if ( i64Val < 0 )
   1c5e4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   1c5e8:	2b00      	cmp	r3, #0
   1c5ea:	da0c      	bge.n	1c606 <am_util_stdio_vsprintf+0x45e>
                {
                    ui64Val = -i64Val;          // Get absolute value
   1c5ec:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   1c5f0:	2100      	movs	r1, #0
   1c5f2:	f1d2 0a00 	rsbs	sl, r2, #0
   1c5f6:	eb61 0b03 	sbc.w	fp, r1, r3
   1c5fa:	e9cd ab12 	strd	sl, fp, [sp, #72]	@ 0x48
                    bNeg = true;
   1c5fe:	2301      	movs	r3, #1
   1c600:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
   1c604:	e006      	b.n	1c614 <am_util_stdio_vsprintf+0x46c>
                }
                else
                {
                    ui64Val = i64Val;
   1c606:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   1c60a:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
                    bNeg = false;
   1c60e:	2300      	movs	r3, #0
   1c610:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
                }

                if ( iWidth )
   1c614:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c616:	2b00      	cmp	r3, #0
   1c618:	d04a      	beq.n	1c6b0 <am_util_stdio_vsprintf+0x508>
                {
                    //
                    // We need to pad the beginning of the value.
                    // Compute # of leading chars
                    //
                    iWidth -= ndigits_in_i64(ui64Val);
   1c61a:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
   1c61e:	4610      	mov	r0, r2
   1c620:	4619      	mov	r1, r3
   1c622:	f7ff fb63 	bl	1bcec <ndigits_in_i64>
   1c626:	4602      	mov	r2, r0
   1c628:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c62a:	1a9b      	subs	r3, r3, r2
   1c62c:	9310      	str	r3, [sp, #64]	@ 0x40

                    if ( bNeg )
   1c62e:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
   1c632:	2b00      	cmp	r3, #0
   1c634:	d011      	beq.n	1c65a <am_util_stdio_vsprintf+0x4b2>
                    {
                        --iWidth;
   1c636:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c638:	3b01      	subs	r3, #1
   1c63a:	9310      	str	r3, [sp, #64]	@ 0x40

                        //
                        // Allow for the negative sign
                        //
                        if ( ui8PadChar == '0' )
   1c63c:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   1c640:	2b30      	cmp	r3, #48	@ 0x30
   1c642:	d10a      	bne.n	1c65a <am_util_stdio_vsprintf+0x4b2>
                        {
                            //
                            // Print the neg sign BEFORE the leading zeros
                            //
                            if ( pcBuf )
   1c644:	9b03      	ldr	r3, [sp, #12]
   1c646:	2b00      	cmp	r3, #0
   1c648:	d004      	beq.n	1c654 <am_util_stdio_vsprintf+0x4ac>
                            {
                                *pcBuf++ = '-';
   1c64a:	9b03      	ldr	r3, [sp, #12]
   1c64c:	1c5a      	adds	r2, r3, #1
   1c64e:	9203      	str	r2, [sp, #12]
   1c650:	222d      	movs	r2, #45	@ 0x2d
   1c652:	701a      	strb	r2, [r3, #0]
                            }

                            ++ui32CharCnt;
   1c654:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1c656:	3301      	adds	r3, #1
   1c658:	9311      	str	r3, [sp, #68]	@ 0x44
                        }
                    }

                    iWidth = padbuffer(pcBuf, ui8PadChar, iWidth);
   1c65a:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   1c65e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
   1c660:	4619      	mov	r1, r3
   1c662:	9803      	ldr	r0, [sp, #12]
   1c664:	f7ff fc7f 	bl	1bf66 <padbuffer>
   1c668:	9010      	str	r0, [sp, #64]	@ 0x40
                    pcBuf += pcBuf ? iWidth : 0;
   1c66a:	9b03      	ldr	r3, [sp, #12]
   1c66c:	2b00      	cmp	r3, #0
   1c66e:	d001      	beq.n	1c674 <am_util_stdio_vsprintf+0x4cc>
   1c670:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c672:	e000      	b.n	1c676 <am_util_stdio_vsprintf+0x4ce>
   1c674:	2300      	movs	r3, #0
   1c676:	9a03      	ldr	r2, [sp, #12]
   1c678:	4413      	add	r3, r2
   1c67a:	9303      	str	r3, [sp, #12]
                    ui32CharCnt += iWidth;
   1c67c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1c67e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1c680:	4413      	add	r3, r2
   1c682:	9311      	str	r3, [sp, #68]	@ 0x44
                    iWidth = 0;
   1c684:	2300      	movs	r3, #0
   1c686:	9310      	str	r3, [sp, #64]	@ 0x40

                    if ( bNeg  &&  (ui8PadChar == ' ') )
   1c688:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
   1c68c:	2b00      	cmp	r3, #0
   1c68e:	d01e      	beq.n	1c6ce <am_util_stdio_vsprintf+0x526>
   1c690:	f89d 3037 	ldrb.w	r3, [sp, #55]	@ 0x37
   1c694:	2b20      	cmp	r3, #32
   1c696:	d11a      	bne.n	1c6ce <am_util_stdio_vsprintf+0x526>
                    {
                        //
                        // Print the neg sign AFTER the leading blanks
                        //
                        if ( pcBuf )
   1c698:	9b03      	ldr	r3, [sp, #12]
   1c69a:	2b00      	cmp	r3, #0
   1c69c:	d004      	beq.n	1c6a8 <am_util_stdio_vsprintf+0x500>
                        {
                            *pcBuf++ = '-';
   1c69e:	9b03      	ldr	r3, [sp, #12]
   1c6a0:	1c5a      	adds	r2, r3, #1
   1c6a2:	9203      	str	r2, [sp, #12]
   1c6a4:	222d      	movs	r2, #45	@ 0x2d
   1c6a6:	701a      	strb	r2, [r3, #0]
                        }

                        ++ui32CharCnt;
   1c6a8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1c6aa:	3301      	adds	r3, #1
   1c6ac:	9311      	str	r3, [sp, #68]	@ 0x44
   1c6ae:	e00e      	b.n	1c6ce <am_util_stdio_vsprintf+0x526>
                    }
                }
                else
                {
                    if ( bNeg )
   1c6b0:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
   1c6b4:	2b00      	cmp	r3, #0
   1c6b6:	d00a      	beq.n	1c6ce <am_util_stdio_vsprintf+0x526>
                    {
                        if ( pcBuf )
   1c6b8:	9b03      	ldr	r3, [sp, #12]
   1c6ba:	2b00      	cmp	r3, #0
   1c6bc:	d004      	beq.n	1c6c8 <am_util_stdio_vsprintf+0x520>
                        {
                            *pcBuf++ = '-';
   1c6be:	9b03      	ldr	r3, [sp, #12]
   1c6c0:	1c5a      	adds	r2, r3, #1
   1c6c2:	9203      	str	r2, [sp, #12]
   1c6c4:	222d      	movs	r2, #45	@ 0x2d
   1c6c6:	701a      	strb	r2, [r3, #0]
                        }
                        ++ui32CharCnt;
   1c6c8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1c6ca:	3301      	adds	r3, #1
   1c6cc:	9311      	str	r3, [sp, #68]	@ 0x44
                    }
                }

                iVal = uint64_to_str(ui64Val, pcBuf);
   1c6ce:	9a03      	ldr	r2, [sp, #12]
   1c6d0:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1c6d4:	f7ff fb8c 	bl	1bdf0 <uint64_to_str>
   1c6d8:	900f      	str	r0, [sp, #60]	@ 0x3c

                if ( pcBuf )
   1c6da:	9b03      	ldr	r3, [sp, #12]
   1c6dc:	2b00      	cmp	r3, #0
   1c6de:	d003      	beq.n	1c6e8 <am_util_stdio_vsprintf+0x540>
                {
                    pcBuf += iVal;
   1c6e0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c6e2:	9a03      	ldr	r2, [sp, #12]
   1c6e4:	4413      	add	r3, r2
   1c6e6:	9303      	str	r3, [sp, #12]
                }

                ui32CharCnt += iVal;
   1c6e8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c6ea:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1c6ec:	4413      	add	r3, r2
   1c6ee:	9311      	str	r3, [sp, #68]	@ 0x44
                break;
   1c6f0:	e04c      	b.n	1c78c <am_util_stdio_vsprintf+0x5e4>


            case 'f':
            case 'F':
                if ( pcBuf )
   1c6f2:	9b03      	ldr	r3, [sp, #12]
   1c6f4:	2b00      	cmp	r3, #0
   1c6f6:	d048      	beq.n	1c78a <am_util_stdio_vsprintf+0x5e2>
                {
                    float fValue = va_arg(pArgs, double);
   1c6f8:	9b01      	ldr	r3, [sp, #4]
   1c6fa:	3307      	adds	r3, #7
   1c6fc:	f023 0307 	bic.w	r3, r3, #7
   1c700:	f103 0208 	add.w	r2, r3, #8
   1c704:	9201      	str	r2, [sp, #4]
   1c706:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c70a:	4610      	mov	r0, r2
   1c70c:	4619      	mov	r1, r3
   1c70e:	f7fc fb71 	bl	18df4 <__aeabi_d2f>
   1c712:	4603      	mov	r3, r0
   1c714:	9306      	str	r3, [sp, #24]

                    //
                    // pcBuf is an input (size of buffer) and also an output of ftoa()
                    //
                    *(uint32_t*)pcBuf = 20;
   1c716:	9b03      	ldr	r3, [sp, #12]
   1c718:	2214      	movs	r2, #20
   1c71a:	601a      	str	r2, [r3, #0]

                    iVal = ftoa(fValue, pcBuf, iPrecision);
   1c71c:	990e      	ldr	r1, [sp, #56]	@ 0x38
   1c71e:	9803      	ldr	r0, [sp, #12]
   1c720:	ed9d 0a06 	vldr	s0, [sp, #24]
   1c724:	f7ff fc42 	bl	1bfac <ftoa>
   1c728:	900f      	str	r0, [sp, #60]	@ 0x3c
                    if ( iVal < 0 )
   1c72a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c72c:	2b00      	cmp	r3, #0
   1c72e:	da14      	bge.n	1c75a <am_util_stdio_vsprintf+0x5b2>
                    {
                        uint32_t u32PrntErrVal;
                        if ( iVal == AM_FTOA_ERR_VAL_TOO_SMALL )
   1c730:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c732:	f1b3 3fff 	cmp.w	r3, #4294967295
   1c736:	d102      	bne.n	1c73e <am_util_stdio_vsprintf+0x596>
                        {
                            u32PrntErrVal = (0x00 << 24) | ('0' << 16) |
   1c738:	4b1e      	ldr	r3, [pc, #120]	@ (1c7b4 <am_util_stdio_vsprintf+0x60c>)
   1c73a:	930c      	str	r3, [sp, #48]	@ 0x30
   1c73c:	e008      	b.n	1c750 <am_util_stdio_vsprintf+0x5a8>
                                            ('.' << 8)   | ('0' << 0);  // "0.0"
                        }
                        else if ( iVal == AM_FTOA_ERR_VAL_TOO_LARGE )
   1c73e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c740:	f113 0f02 	cmn.w	r3, #2
   1c744:	d102      	bne.n	1c74c <am_util_stdio_vsprintf+0x5a4>
                        {
                            u32PrntErrVal = (0x00 << 24) | ('#' << 16) |
   1c746:	4b1c      	ldr	r3, [pc, #112]	@ (1c7b8 <am_util_stdio_vsprintf+0x610>)
   1c748:	930c      	str	r3, [sp, #48]	@ 0x30
   1c74a:	e001      	b.n	1c750 <am_util_stdio_vsprintf+0x5a8>
                                            ('.' << 8)   | ('#' << 0);  // "#.#"
                        }
                        else
                        {
                            u32PrntErrVal = (0x00 << 24) | ('?' << 16) |
   1c74c:	4b1b      	ldr	r3, [pc, #108]	@ (1c7bc <am_util_stdio_vsprintf+0x614>)
   1c74e:	930c      	str	r3, [sp, #48]	@ 0x30
                                            ('.' << 8)   | ('?' << 0);  // "?.?"
                        }
                        *(uint32_t*)pcBuf = u32PrntErrVal;
   1c750:	9b03      	ldr	r3, [sp, #12]
   1c752:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
   1c754:	601a      	str	r2, [r3, #0]
                        iVal = 3;
   1c756:	2303      	movs	r3, #3
   1c758:	930f      	str	r3, [sp, #60]	@ 0x3c
                    }
                    ui32CharCnt += iVal;
   1c75a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c75c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1c75e:	4413      	add	r3, r2
   1c760:	9311      	str	r3, [sp, #68]	@ 0x44
                    pcBuf += iVal;
   1c762:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1c764:	9a03      	ldr	r2, [sp, #12]
   1c766:	4413      	add	r3, r2
   1c768:	9303      	str	r3, [sp, #12]
                }
                break;
   1c76a:	e00e      	b.n	1c78a <am_util_stdio_vsprintf+0x5e2>
            // For non-handled specifiers, we'll just print the character.
            // e.g. this will allow the normal printing of a '%' using
            // "%%".
            //
            default:
                if ( pcBuf )
   1c76c:	9b03      	ldr	r3, [sp, #12]
   1c76e:	2b00      	cmp	r3, #0
   1c770:	d005      	beq.n	1c77e <am_util_stdio_vsprintf+0x5d6>
                {
                    *pcBuf++ = *pcFmt;
   1c772:	9b03      	ldr	r3, [sp, #12]
   1c774:	1c5a      	adds	r2, r3, #1
   1c776:	9203      	str	r2, [sp, #12]
   1c778:	9a02      	ldr	r2, [sp, #8]
   1c77a:	7812      	ldrb	r2, [r2, #0]
   1c77c:	701a      	strb	r2, [r3, #0]
                }

                ++ui32CharCnt;
   1c77e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1c780:	3301      	adds	r3, #1
   1c782:	9311      	str	r3, [sp, #68]	@ 0x44
                break;
   1c784:	e002      	b.n	1c78c <am_util_stdio_vsprintf+0x5e4>
                break;
   1c786:	bf00      	nop
   1c788:	e000      	b.n	1c78c <am_util_stdio_vsprintf+0x5e4>
                break;
   1c78a:	bf00      	nop
        } // switch ()

        //
        // Bump the format specification to the next character
        //
        ++pcFmt;
   1c78c:	9b02      	ldr	r3, [sp, #8]
   1c78e:	3301      	adds	r3, #1
   1c790:	9302      	str	r3, [sp, #8]
    while ( *pcFmt != 0x0 )
   1c792:	9b02      	ldr	r3, [sp, #8]
   1c794:	781b      	ldrb	r3, [r3, #0]
   1c796:	2b00      	cmp	r3, #0
   1c798:	f47f ad11 	bne.w	1c1be <am_util_stdio_vsprintf+0x16>
    } // while ()

    //
    // Terminate the string
    //
    if ( pcBuf )
   1c79c:	9b03      	ldr	r3, [sp, #12]
   1c79e:	2b00      	cmp	r3, #0
   1c7a0:	d002      	beq.n	1c7a8 <am_util_stdio_vsprintf+0x600>
    {
        *pcBuf = 0x0;
   1c7a2:	9b03      	ldr	r3, [sp, #12]
   1c7a4:	2200      	movs	r2, #0
   1c7a6:	701a      	strb	r2, [r3, #0]
    }

    return (ui32CharCnt);
   1c7a8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
}
   1c7aa:	4618      	mov	r0, r3
   1c7ac:	b017      	add	sp, #92	@ 0x5c
   1c7ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c7b2:	bf00      	nop
   1c7b4:	00302e30 	.word	0x00302e30
   1c7b8:	00232e23 	.word	0x00232e23
   1c7bc:	003f2e3f 	.word	0x003f2e3f

0001c7c0 <am_util_stdio_printf>:
// A lite version of printf()
//
//*****************************************************************************
uint32_t
am_util_stdio_printf(const char *pcFmt, ...)
{
   1c7c0:	b40f      	push	{r0, r1, r2, r3}
   1c7c2:	b500      	push	{lr}
   1c7c4:	b083      	sub	sp, #12
    uint32_t ui32NumChars;

    if (!g_pfnCharPrint)
   1c7c6:	4b0c      	ldr	r3, [pc, #48]	@ (1c7f8 <am_util_stdio_printf+0x38>)
   1c7c8:	681b      	ldr	r3, [r3, #0]
   1c7ca:	2b00      	cmp	r3, #0
   1c7cc:	d101      	bne.n	1c7d2 <am_util_stdio_printf+0x12>
    {
        return 0;
   1c7ce:	2300      	movs	r3, #0
   1c7d0:	e00c      	b.n	1c7ec <am_util_stdio_printf+0x2c>

    //
    // Convert to the desired string.
    //
    va_list pArgs;
    va_start(pArgs, pcFmt);
   1c7d2:	ab05      	add	r3, sp, #20
   1c7d4:	9300      	str	r3, [sp, #0]
    ui32NumChars = am_util_stdio_vsprintf(g_prfbuf, pcFmt, pArgs);
   1c7d6:	9a00      	ldr	r2, [sp, #0]
   1c7d8:	9904      	ldr	r1, [sp, #16]
   1c7da:	4808      	ldr	r0, [pc, #32]	@ (1c7fc <am_util_stdio_printf+0x3c>)
   1c7dc:	f7ff fce4 	bl	1c1a8 <am_util_stdio_vsprintf>
   1c7e0:	9001      	str	r0, [sp, #4]
    va_end(pArgs);

    //
    // This is where we print the buffer to the configured interface.
    //
    g_pfnCharPrint(g_prfbuf);
   1c7e2:	4b05      	ldr	r3, [pc, #20]	@ (1c7f8 <am_util_stdio_printf+0x38>)
   1c7e4:	681b      	ldr	r3, [r3, #0]
   1c7e6:	4805      	ldr	r0, [pc, #20]	@ (1c7fc <am_util_stdio_printf+0x3c>)
   1c7e8:	4798      	blx	r3

    //
    // return the number of characters printed.
    //
    return ui32NumChars;
   1c7ea:	9b01      	ldr	r3, [sp, #4]
}
   1c7ec:	4618      	mov	r0, r3
   1c7ee:	b003      	add	sp, #12
   1c7f0:	f85d eb04 	ldr.w	lr, [sp], #4
   1c7f4:	b004      	add	sp, #16
   1c7f6:	4770      	bx	lr
   1c7f8:	1002fcf0 	.word	0x1002fcf0
   1c7fc:	1002fcf4 	.word	0x1002fcf4

0001c800 <Reset_Handler>:
Reset_Handler(void)
{
    //
    // Set the vector table pointer.
    //
    __asm("    ldr    r0, =0xE000ED08\n"
   1c800:	4811      	ldr	r0, [pc, #68]	@ (1c848 <zero_loop+0x12>)
   1c802:	4912      	ldr	r1, [pc, #72]	@ (1c84c <zero_loop+0x16>)
   1c804:	6001      	str	r1, [r0, #0]
          "    str    r1, [r0]");

    //
    // Set the stack pointer.
    //
    __asm("    ldr    sp, [r1]");
   1c806:	f8d1 d000 	ldr.w	sp, [r1]
#ifndef NOFPU
    //
    // Enable the FPU.
    //
    __asm("ldr  r0, =0xE000ED88\n"
   1c80a:	4811      	ldr	r0, [pc, #68]	@ (1c850 <zero_loop+0x1a>)
   1c80c:	6801      	ldr	r1, [r0, #0]
   1c80e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
   1c812:	6001      	str	r1, [r0, #0]
   1c814:	f3bf 8f4f 	dsb	sy
   1c818:	f3bf 8f6f 	isb	sy
          "isb\n");
#endif
    //
    // Copy the data segment initializers from flash to SRAM.
    //
    __asm("    ldr     r0, =_init_data\n"
   1c81c:	480d      	ldr	r0, [pc, #52]	@ (1c854 <zero_loop+0x1e>)
   1c81e:	490e      	ldr	r1, [pc, #56]	@ (1c858 <zero_loop+0x22>)
   1c820:	4a0e      	ldr	r2, [pc, #56]	@ (1c85c <zero_loop+0x26>)

0001c822 <copy_loop>:
   1c822:	f850 3b04 	ldr.w	r3, [r0], #4
   1c826:	f841 3b04 	str.w	r3, [r1], #4
   1c82a:	4291      	cmp	r1, r2
   1c82c:	dbf9      	blt.n	1c822 <copy_loop>
          "        cmp     r1, r2\n"
          "        blt     copy_loop\n");
    //
    // Zero fill the bss segment.
    //
    __asm("    ldr     r0, =_sbss\n"
   1c82e:	480c      	ldr	r0, [pc, #48]	@ (1c860 <zero_loop+0x2a>)
   1c830:	490c      	ldr	r1, [pc, #48]	@ (1c864 <zero_loop+0x2e>)
   1c832:	f04f 0200 	mov.w	r2, #0

0001c836 <zero_loop>:
   1c836:	4288      	cmp	r0, r1
   1c838:	bfb8      	it	lt
   1c83a:	f840 2b04 	strlt.w	r2, [r0], #4
   1c83e:	dbfa      	blt.n	1c836 <zero_loop>
          "        blt     zero_loop");

    //
    // Call the application's entry point.
    //
    main();
   1c840:	f7fe ff86 	bl	1b750 <main>

    //
    // If main returns then execute a break point instruction
    //
    __asm("    bkpt     ");
   1c844:	be00      	bkpt	0x0000
}
   1c846:	bf00      	nop
   1c848:	e000ed08 	.word	0xe000ed08
   1c84c:	00018000 	.word	0x00018000
   1c850:	e000ed88 	.word	0xe000ed88
   1c854:	0002892c 	.word	0x0002892c
   1c858:	10001000 	.word	0x10001000
   1c85c:	100017b8 	.word	0x100017b8
   1c860:	100017b8 	.word	0x100017b8
   1c864:	10036eec 	.word	0x10036eec

0001c868 <NMI_Handler>:
NMI_Handler(void)
{
    //
    // Go into an infinite loop.
    //
    while(1)
   1c868:	bf00      	nop
   1c86a:	e7fd      	b.n	1c868 <NMI_Handler>

0001c86c <BusFault_Handler>:
HardFault_Handler(void)
{
    //
    // Go into an infinite loop.
    //
    while(1)
   1c86c:	bf00      	nop
   1c86e:	e7fd      	b.n	1c86c <BusFault_Handler>

0001c870 <DebugMon_Handler>:
am_default_isr(void)
{
    //
    // Go into an infinite loop.
    //
    while(1)
   1c870:	bf00      	nop
   1c872:	e7fd      	b.n	1c870 <DebugMon_Handler>

0001c874 <sprintf>:
   1c874:	b40e      	push	{r1, r2, r3}
   1c876:	b510      	push	{r4, lr}
   1c878:	b09d      	sub	sp, #116	@ 0x74
   1c87a:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
   1c87e:	ab1f      	add	r3, sp, #124	@ 0x7c
   1c880:	9104      	str	r1, [sp, #16]
   1c882:	9107      	str	r1, [sp, #28]
   1c884:	4909      	ldr	r1, [pc, #36]	@ (1c8ac <sprintf+0x38>)
   1c886:	f853 2b04 	ldr.w	r2, [r3], #4
   1c88a:	9002      	str	r0, [sp, #8]
   1c88c:	9006      	str	r0, [sp, #24]
   1c88e:	4c08      	ldr	r4, [pc, #32]	@ (1c8b0 <sprintf+0x3c>)
   1c890:	6808      	ldr	r0, [r1, #0]
   1c892:	9301      	str	r3, [sp, #4]
   1c894:	a902      	add	r1, sp, #8
   1c896:	9405      	str	r4, [sp, #20]
   1c898:	f000 f80e 	bl	1c8b8 <_svfprintf_r>
   1c89c:	9b02      	ldr	r3, [sp, #8]
   1c89e:	2200      	movs	r2, #0
   1c8a0:	701a      	strb	r2, [r3, #0]
   1c8a2:	b01d      	add	sp, #116	@ 0x74
   1c8a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1c8a8:	b003      	add	sp, #12
   1c8aa:	4770      	bx	lr
   1c8ac:	100010e8 	.word	0x100010e8
   1c8b0:	ffff0208 	.word	0xffff0208
   1c8b4:	00000000 	.word	0x00000000

0001c8b8 <_svfprintf_r>:
   1c8b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8bc:	ed2d 8b02 	vpush	{d8}
   1c8c0:	b0d9      	sub	sp, #356	@ 0x164
   1c8c2:	460c      	mov	r4, r1
   1c8c4:	9105      	str	r1, [sp, #20]
   1c8c6:	4691      	mov	r9, r2
   1c8c8:	9309      	str	r3, [sp, #36]	@ 0x24
   1c8ca:	4683      	mov	fp, r0
   1c8cc:	f001 ff9a 	bl	1e804 <_localeconv_r>
   1c8d0:	6803      	ldr	r3, [r0, #0]
   1c8d2:	9316      	str	r3, [sp, #88]	@ 0x58
   1c8d4:	4618      	mov	r0, r3
   1c8d6:	f7fb fcf3 	bl	182c0 <strlen>
   1c8da:	2208      	movs	r2, #8
   1c8dc:	9014      	str	r0, [sp, #80]	@ 0x50
   1c8de:	2100      	movs	r1, #0
   1c8e0:	a828      	add	r0, sp, #160	@ 0xa0
   1c8e2:	f001 ff03 	bl	1e6ec <memset>
   1c8e6:	89a3      	ldrh	r3, [r4, #12]
   1c8e8:	061a      	lsls	r2, r3, #24
   1c8ea:	d503      	bpl.n	1c8f4 <_svfprintf_r+0x3c>
   1c8ec:	6923      	ldr	r3, [r4, #16]
   1c8ee:	2b00      	cmp	r3, #0
   1c8f0:	f000 8792 	beq.w	1d818 <_svfprintf_r+0xf60>
   1c8f4:	ed9f 7b80 	vldr	d7, [pc, #512]	@ 1caf8 <_svfprintf_r+0x240>
   1c8f8:	2300      	movs	r3, #0
   1c8fa:	e9cd 332d 	strd	r3, r3, [sp, #180]	@ 0xb4
   1c8fe:	e9cd 3317 	strd	r3, r3, [sp, #92]	@ 0x5c
   1c902:	e9cd 3319 	strd	r3, r3, [sp, #100]	@ 0x64
   1c906:	ed8d 7b12 	vstr	d7, [sp, #72]	@ 0x48
   1c90a:	aa2f      	add	r2, sp, #188	@ 0xbc
   1c90c:	930f      	str	r3, [sp, #60]	@ 0x3c
   1c90e:	922c      	str	r2, [sp, #176]	@ 0xb0
   1c910:	4690      	mov	r8, r2
   1c912:	9315      	str	r3, [sp, #84]	@ 0x54
   1c914:	9306      	str	r3, [sp, #24]
   1c916:	f8cd b00c 	str.w	fp, [sp, #12]
   1c91a:	464d      	mov	r5, r9
   1c91c:	9f03      	ldr	r7, [sp, #12]
   1c91e:	462e      	mov	r6, r5
   1c920:	4b77      	ldr	r3, [pc, #476]	@ (1cb00 <_svfprintf_r+0x248>)
   1c922:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
   1c926:	f001 ff67 	bl	1e7f8 <__locale_mb_cur_max>
   1c92a:	4603      	mov	r3, r0
   1c92c:	a828      	add	r0, sp, #160	@ 0xa0
   1c92e:	9000      	str	r0, [sp, #0]
   1c930:	4632      	mov	r2, r6
   1c932:	a924      	add	r1, sp, #144	@ 0x90
   1c934:	4638      	mov	r0, r7
   1c936:	47a0      	blx	r4
   1c938:	2800      	cmp	r0, #0
   1c93a:	f000 80a9 	beq.w	1ca90 <_svfprintf_r+0x1d8>
   1c93e:	f2c0 809f 	blt.w	1ca80 <_svfprintf_r+0x1c8>
   1c942:	9a24      	ldr	r2, [sp, #144]	@ 0x90
   1c944:	2a25      	cmp	r2, #37	@ 0x25
   1c946:	4603      	mov	r3, r0
   1c948:	d001      	beq.n	1c94e <_svfprintf_r+0x96>
   1c94a:	441e      	add	r6, r3
   1c94c:	e7e8      	b.n	1c920 <_svfprintf_r+0x68>
   1c94e:	1b77      	subs	r7, r6, r5
   1c950:	4604      	mov	r4, r0
   1c952:	f040 80a0 	bne.w	1ca96 <_svfprintf_r+0x1de>
   1c956:	2300      	movs	r3, #0
   1c958:	f88d 3087 	strb.w	r3, [sp, #135]	@ 0x87
   1c95c:	4699      	mov	r9, r3
   1c95e:	9307      	str	r3, [sp, #28]
   1c960:	f04f 32ff 	mov.w	r2, #4294967295
   1c964:	7873      	ldrb	r3, [r6, #1]
   1c966:	9204      	str	r2, [sp, #16]
   1c968:	1c74      	adds	r4, r6, #1
   1c96a:	3401      	adds	r4, #1
   1c96c:	f1a3 0220 	sub.w	r2, r3, #32
   1c970:	2a5a      	cmp	r2, #90	@ 0x5a
   1c972:	f200 80c7 	bhi.w	1cb04 <_svfprintf_r+0x24c>
   1c976:	e8df f012 	tbh	[pc, r2, lsl #1]
   1c97a:	02f0      	.short	0x02f0
   1c97c:	00c500c5 	.word	0x00c500c5
   1c980:	00c502ec 	.word	0x00c502ec
   1c984:	00c500c5 	.word	0x00c500c5
   1c988:	00c5006a 	.word	0x00c5006a
   1c98c:	025300c5 	.word	0x025300c5
   1c990:	00c50262 	.word	0x00c50262
   1c994:	02fe025e 	.word	0x02fe025e
   1c998:	02fa00c5 	.word	0x02fa00c5
   1c99c:	005b005b 	.word	0x005b005b
   1c9a0:	005b005b 	.word	0x005b005b
   1c9a4:	005b005b 	.word	0x005b005b
   1c9a8:	005b005b 	.word	0x005b005b
   1c9ac:	00c5005b 	.word	0x00c5005b
   1c9b0:	00c500c5 	.word	0x00c500c5
   1c9b4:	00c500c5 	.word	0x00c500c5
   1c9b8:	00c500c5 	.word	0x00c500c5
   1c9bc:	00c50146 	.word	0x00c50146
   1c9c0:	031801d2 	.word	0x031801d2
   1c9c4:	01460146 	.word	0x01460146
   1c9c8:	00c50146 	.word	0x00c50146
   1c9cc:	00c500c5 	.word	0x00c500c5
   1c9d0:	02e800c5 	.word	0x02e800c5
   1c9d4:	00c500c5 	.word	0x00c500c5
   1c9d8:	00c50267 	.word	0x00c50267
   1c9dc:	00c500c5 	.word	0x00c500c5
   1c9e0:	00c501fc 	.word	0x00c501fc
   1c9e4:	00c502d5 	.word	0x00c502d5
   1c9e8:	071000c5 	.word	0x071000c5
   1c9ec:	00c500c5 	.word	0x00c500c5
   1c9f0:	00c500c5 	.word	0x00c500c5
   1c9f4:	00c500c5 	.word	0x00c500c5
   1c9f8:	00c500c5 	.word	0x00c500c5
   1c9fc:	00c50146 	.word	0x00c50146
   1ca00:	022e01d2 	.word	0x022e01d2
   1ca04:	01460146 	.word	0x01460146
   1ca08:	02980146 	.word	0x02980146
   1ca0c:	007f022e 	.word	0x007f022e
   1ca10:	02b100c5 	.word	0x02b100c5
   1ca14:	02a200c5 	.word	0x02a200c5
   1ca18:	02c30704 	.word	0x02c30704
   1ca1c:	00c5007f 	.word	0x00c5007f
   1ca20:	007d01fc 	.word	0x007d01fc
   1ca24:	00c5070b 	.word	0x00c5070b
   1ca28:	073400c5 	.word	0x073400c5
   1ca2c:	007d00c5 	.word	0x007d00c5
   1ca30:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
   1ca34:	2100      	movs	r1, #0
   1ca36:	f814 3b01 	ldrb.w	r3, [r4], #1
   1ca3a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   1ca3e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
   1ca42:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
   1ca46:	2a09      	cmp	r2, #9
   1ca48:	d9f5      	bls.n	1ca36 <_svfprintf_r+0x17e>
   1ca4a:	9107      	str	r1, [sp, #28]
   1ca4c:	e78e      	b.n	1c96c <_svfprintf_r+0xb4>
   1ca4e:	9f03      	ldr	r7, [sp, #12]
   1ca50:	4638      	mov	r0, r7
   1ca52:	f001 fed7 	bl	1e804 <_localeconv_r>
   1ca56:	6843      	ldr	r3, [r0, #4]
   1ca58:	9319      	str	r3, [sp, #100]	@ 0x64
   1ca5a:	4618      	mov	r0, r3
   1ca5c:	f7fb fc30 	bl	182c0 <strlen>
   1ca60:	901a      	str	r0, [sp, #104]	@ 0x68
   1ca62:	4606      	mov	r6, r0
   1ca64:	4638      	mov	r0, r7
   1ca66:	f001 fecd 	bl	1e804 <_localeconv_r>
   1ca6a:	6883      	ldr	r3, [r0, #8]
   1ca6c:	9317      	str	r3, [sp, #92]	@ 0x5c
   1ca6e:	2e00      	cmp	r6, #0
   1ca70:	f040 8620 	bne.w	1d6b4 <_svfprintf_r+0xdfc>
   1ca74:	7823      	ldrb	r3, [r4, #0]
   1ca76:	e778      	b.n	1c96a <_svfprintf_r+0xb2>
   1ca78:	7823      	ldrb	r3, [r4, #0]
   1ca7a:	f049 0920 	orr.w	r9, r9, #32
   1ca7e:	e774      	b.n	1c96a <_svfprintf_r+0xb2>
   1ca80:	2208      	movs	r2, #8
   1ca82:	2100      	movs	r1, #0
   1ca84:	a828      	add	r0, sp, #160	@ 0xa0
   1ca86:	f001 fe31 	bl	1e6ec <memset>
   1ca8a:	2301      	movs	r3, #1
   1ca8c:	441e      	add	r6, r3
   1ca8e:	e747      	b.n	1c920 <_svfprintf_r+0x68>
   1ca90:	1b77      	subs	r7, r6, r5
   1ca92:	4604      	mov	r4, r0
   1ca94:	d011      	beq.n	1caba <_svfprintf_r+0x202>
   1ca96:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
   1ca98:	443b      	add	r3, r7
   1ca9a:	932e      	str	r3, [sp, #184]	@ 0xb8
   1ca9c:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1ca9e:	3301      	adds	r3, #1
   1caa0:	2b07      	cmp	r3, #7
   1caa2:	e9c8 5700 	strd	r5, r7, [r8]
   1caa6:	932d      	str	r3, [sp, #180]	@ 0xb4
   1caa8:	dc1a      	bgt.n	1cae0 <_svfprintf_r+0x228>
   1caaa:	f108 0808 	add.w	r8, r8, #8
   1caae:	9b06      	ldr	r3, [sp, #24]
   1cab0:	443b      	add	r3, r7
   1cab2:	9306      	str	r3, [sp, #24]
   1cab4:	2c00      	cmp	r4, #0
   1cab6:	f47f af4e 	bne.w	1c956 <_svfprintf_r+0x9e>
   1caba:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
   1cabc:	f8dd b00c 	ldr.w	fp, [sp, #12]
   1cac0:	2b00      	cmp	r3, #0
   1cac2:	f041 81f5 	bne.w	1deb0 <_svfprintf_r+0x15f8>
   1cac6:	9b05      	ldr	r3, [sp, #20]
   1cac8:	899b      	ldrh	r3, [r3, #12]
   1caca:	f003 0340 	and.w	r3, r3, #64	@ 0x40
   1cace:	2b00      	cmp	r3, #0
   1cad0:	f041 83d0 	bne.w	1e274 <_svfprintf_r+0x19bc>
   1cad4:	9806      	ldr	r0, [sp, #24]
   1cad6:	b059      	add	sp, #356	@ 0x164
   1cad8:	ecbd 8b02 	vpop	{d8}
   1cadc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cae0:	9905      	ldr	r1, [sp, #20]
   1cae2:	9803      	ldr	r0, [sp, #12]
   1cae4:	aa2c      	add	r2, sp, #176	@ 0xb0
   1cae6:	f003 ff0f 	bl	20908 <__ssprint_r>
   1caea:	2800      	cmp	r0, #0
   1caec:	d1eb      	bne.n	1cac6 <_svfprintf_r+0x20e>
   1caee:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1caf2:	e7dc      	b.n	1caae <_svfprintf_r+0x1f6>
   1caf4:	f3af 8000 	nop.w
	...
   1cb00:	1000121c 	.word	0x1000121c
   1cb04:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1cb08:	2b00      	cmp	r3, #0
   1cb0a:	d0d6      	beq.n	1caba <_svfprintf_r+0x202>
   1cb0c:	2200      	movs	r2, #0
   1cb0e:	f88d 30fc 	strb.w	r3, [sp, #252]	@ 0xfc
   1cb12:	2301      	movs	r3, #1
   1cb14:	f88d 2087 	strb.w	r2, [sp, #135]	@ 0x87
   1cb18:	9302      	str	r3, [sp, #8]
   1cb1a:	9208      	str	r2, [sp, #32]
   1cb1c:	469b      	mov	fp, r3
   1cb1e:	9204      	str	r2, [sp, #16]
   1cb20:	9210      	str	r2, [sp, #64]	@ 0x40
   1cb22:	920c      	str	r2, [sp, #48]	@ 0x30
   1cb24:	920e      	str	r2, [sp, #56]	@ 0x38
   1cb26:	ad3f      	add	r5, sp, #252	@ 0xfc
   1cb28:	f019 0302 	ands.w	r3, r9, #2
   1cb2c:	d002      	beq.n	1cb34 <_svfprintf_r+0x27c>
   1cb2e:	9902      	ldr	r1, [sp, #8]
   1cb30:	3102      	adds	r1, #2
   1cb32:	9102      	str	r1, [sp, #8]
   1cb34:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
   1cb38:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1cb3a:	d105      	bne.n	1cb48 <_svfprintf_r+0x290>
   1cb3c:	9907      	ldr	r1, [sp, #28]
   1cb3e:	9802      	ldr	r0, [sp, #8]
   1cb40:	1a0e      	subs	r6, r1, r0
   1cb42:	2e00      	cmp	r6, #0
   1cb44:	f300 80aa 	bgt.w	1cc9c <_svfprintf_r+0x3e4>
   1cb48:	b182      	cbz	r2, 1cb6c <_svfprintf_r+0x2b4>
   1cb4a:	2201      	movs	r2, #1
   1cb4c:	f8c8 2004 	str.w	r2, [r8, #4]
   1cb50:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
   1cb52:	3201      	adds	r2, #1
   1cb54:	3401      	adds	r4, #1
   1cb56:	f10d 0187 	add.w	r1, sp, #135	@ 0x87
   1cb5a:	2a07      	cmp	r2, #7
   1cb5c:	942e      	str	r4, [sp, #184]	@ 0xb8
   1cb5e:	922d      	str	r2, [sp, #180]	@ 0xb4
   1cb60:	f8c8 1000 	str.w	r1, [r8]
   1cb64:	f300 8405 	bgt.w	1d372 <_svfprintf_r+0xaba>
   1cb68:	f108 0808 	add.w	r8, r8, #8
   1cb6c:	b183      	cbz	r3, 1cb90 <_svfprintf_r+0x2d8>
   1cb6e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1cb70:	aa22      	add	r2, sp, #136	@ 0x88
   1cb72:	3301      	adds	r3, #1
   1cb74:	3402      	adds	r4, #2
   1cb76:	f8c8 2000 	str.w	r2, [r8]
   1cb7a:	2b07      	cmp	r3, #7
   1cb7c:	f04f 0202 	mov.w	r2, #2
   1cb80:	942e      	str	r4, [sp, #184]	@ 0xb8
   1cb82:	932d      	str	r3, [sp, #180]	@ 0xb4
   1cb84:	f8c8 2004 	str.w	r2, [r8, #4]
   1cb88:	f300 83e7 	bgt.w	1d35a <_svfprintf_r+0xaa2>
   1cb8c:	f108 0808 	add.w	r8, r8, #8
   1cb90:	2f80      	cmp	r7, #128	@ 0x80
   1cb92:	f000 82c0 	beq.w	1d116 <_svfprintf_r+0x85e>
   1cb96:	9b04      	ldr	r3, [sp, #16]
   1cb98:	eba3 060b 	sub.w	r6, r3, fp
   1cb9c:	2e00      	cmp	r6, #0
   1cb9e:	f300 82ff 	bgt.w	1d1a0 <_svfprintf_r+0x8e8>
   1cba2:	f419 7f80 	tst.w	r9, #256	@ 0x100
   1cba6:	f040 8219 	bne.w	1cfdc <_svfprintf_r+0x724>
   1cbaa:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1cbac:	f8c8 5000 	str.w	r5, [r8]
   1cbb0:	3301      	adds	r3, #1
   1cbb2:	445c      	add	r4, fp
   1cbb4:	2b07      	cmp	r3, #7
   1cbb6:	f8c8 b004 	str.w	fp, [r8, #4]
   1cbba:	942e      	str	r4, [sp, #184]	@ 0xb8
   1cbbc:	932d      	str	r3, [sp, #180]	@ 0xb4
   1cbbe:	f300 836c 	bgt.w	1d29a <_svfprintf_r+0x9e2>
   1cbc2:	f108 0808 	add.w	r8, r8, #8
   1cbc6:	f019 0f04 	tst.w	r9, #4
   1cbca:	d005      	beq.n	1cbd8 <_svfprintf_r+0x320>
   1cbcc:	9b07      	ldr	r3, [sp, #28]
   1cbce:	9a02      	ldr	r2, [sp, #8]
   1cbd0:	1a9d      	subs	r5, r3, r2
   1cbd2:	2d00      	cmp	r5, #0
   1cbd4:	f300 83dc 	bgt.w	1d390 <_svfprintf_r+0xad8>
   1cbd8:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
   1cbdc:	9902      	ldr	r1, [sp, #8]
   1cbde:	428a      	cmp	r2, r1
   1cbe0:	bfac      	ite	ge
   1cbe2:	189b      	addge	r3, r3, r2
   1cbe4:	185b      	addlt	r3, r3, r1
   1cbe6:	9306      	str	r3, [sp, #24]
   1cbe8:	2c00      	cmp	r4, #0
   1cbea:	f040 8318 	bne.w	1d21e <_svfprintf_r+0x966>
   1cbee:	2300      	movs	r3, #0
   1cbf0:	932d      	str	r3, [sp, #180]	@ 0xb4
   1cbf2:	9b08      	ldr	r3, [sp, #32]
   1cbf4:	b11b      	cbz	r3, 1cbfe <_svfprintf_r+0x346>
   1cbf6:	9908      	ldr	r1, [sp, #32]
   1cbf8:	9803      	ldr	r0, [sp, #12]
   1cbfa:	f002 feaf 	bl	1f95c <_free_r>
   1cbfe:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1cc02:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
   1cc04:	e68a      	b.n	1c91c <_svfprintf_r+0x64>
   1cc06:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1cc0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1cc0c:	3307      	adds	r3, #7
   1cc0e:	f023 0307 	bic.w	r3, r3, #7
   1cc12:	ecb3 7b02 	vldmia	r3!, {d7}
   1cc16:	ec57 6b17 	vmov	r6, r7, d7
   1cc1a:	9309      	str	r3, [sp, #36]	@ 0x24
   1cc1c:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
   1cc20:	931f      	str	r3, [sp, #124]	@ 0x7c
   1cc22:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
   1cc26:	e9dd ab1e 	ldrd	sl, fp, [sp, #120]	@ 0x78
   1cc2a:	4bb1      	ldr	r3, [pc, #708]	@ (1cef0 <_svfprintf_r+0x638>)
   1cc2c:	f04f 32ff 	mov.w	r2, #4294967295
   1cc30:	4650      	mov	r0, sl
   1cc32:	4659      	mov	r1, fp
   1cc34:	ed8d 7b12 	vstr	d7, [sp, #72]	@ 0x48
   1cc38:	f7fc f89e 	bl	18d78 <__aeabi_dcmpun>
   1cc3c:	2800      	cmp	r0, #0
   1cc3e:	f040 8546 	bne.w	1d6ce <_svfprintf_r+0xe16>
   1cc42:	4bab      	ldr	r3, [pc, #684]	@ (1cef0 <_svfprintf_r+0x638>)
   1cc44:	f04f 32ff 	mov.w	r2, #4294967295
   1cc48:	4650      	mov	r0, sl
   1cc4a:	4659      	mov	r1, fp
   1cc4c:	f7fc f876 	bl	18d3c <__aeabi_dcmple>
   1cc50:	2800      	cmp	r0, #0
   1cc52:	f040 853c 	bne.w	1d6ce <_svfprintf_r+0xe16>
   1cc56:	2200      	movs	r2, #0
   1cc58:	2300      	movs	r3, #0
   1cc5a:	4630      	mov	r0, r6
   1cc5c:	4639      	mov	r1, r7
   1cc5e:	f7fc f863 	bl	18d28 <__aeabi_dcmplt>
   1cc62:	2800      	cmp	r0, #0
   1cc64:	f041 8051 	bne.w	1dd0a <_svfprintf_r+0x1452>
   1cc68:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1cc6c:	4da1      	ldr	r5, [pc, #644]	@ (1cef4 <_svfprintf_r+0x63c>)
   1cc6e:	4ba2      	ldr	r3, [pc, #648]	@ (1cef8 <_svfprintf_r+0x640>)
   1cc70:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
   1cc74:	990a      	ldr	r1, [sp, #40]	@ 0x28
   1cc76:	2947      	cmp	r1, #71	@ 0x47
   1cc78:	bfc8      	it	gt
   1cc7a:	461d      	movgt	r5, r3
   1cc7c:	2300      	movs	r3, #0
   1cc7e:	2103      	movs	r1, #3
   1cc80:	9308      	str	r3, [sp, #32]
   1cc82:	9102      	str	r1, [sp, #8]
   1cc84:	468b      	mov	fp, r1
   1cc86:	9304      	str	r3, [sp, #16]
   1cc88:	9310      	str	r3, [sp, #64]	@ 0x40
   1cc8a:	930c      	str	r3, [sp, #48]	@ 0x30
   1cc8c:	930e      	str	r3, [sp, #56]	@ 0x38
   1cc8e:	2a00      	cmp	r2, #0
   1cc90:	f43f af4a 	beq.w	1cb28 <_svfprintf_r+0x270>
   1cc94:	9b02      	ldr	r3, [sp, #8]
   1cc96:	3301      	adds	r3, #1
   1cc98:	9302      	str	r3, [sp, #8]
   1cc9a:	e745      	b.n	1cb28 <_svfprintf_r+0x270>
   1cc9c:	2e10      	cmp	r6, #16
   1cc9e:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
   1cca0:	f341 8281 	ble.w	1e1a6 <_svfprintf_r+0x18ee>
   1cca4:	4895      	ldr	r0, [pc, #596]	@ (1cefc <_svfprintf_r+0x644>)
   1cca6:	951d      	str	r5, [sp, #116]	@ 0x74
   1cca8:	e9cd 371b 	strd	r3, r7, [sp, #108]	@ 0x6c
   1ccac:	4621      	mov	r1, r4
   1ccae:	9d05      	ldr	r5, [sp, #20]
   1ccb0:	9c03      	ldr	r4, [sp, #12]
   1ccb2:	9011      	str	r0, [sp, #68]	@ 0x44
   1ccb4:	f04f 0a10 	mov.w	sl, #16
   1ccb8:	4607      	mov	r7, r0
   1ccba:	e004      	b.n	1ccc6 <_svfprintf_r+0x40e>
   1ccbc:	3e10      	subs	r6, #16
   1ccbe:	2e10      	cmp	r6, #16
   1ccc0:	f108 0808 	add.w	r8, r8, #8
   1ccc4:	dd16      	ble.n	1ccf4 <_svfprintf_r+0x43c>
   1ccc6:	3201      	adds	r2, #1
   1ccc8:	3110      	adds	r1, #16
   1ccca:	2a07      	cmp	r2, #7
   1cccc:	e9c8 7a00 	strd	r7, sl, [r8]
   1ccd0:	e9cd 212d 	strd	r2, r1, [sp, #180]	@ 0xb4
   1ccd4:	ddf2      	ble.n	1ccbc <_svfprintf_r+0x404>
   1ccd6:	aa2c      	add	r2, sp, #176	@ 0xb0
   1ccd8:	4629      	mov	r1, r5
   1ccda:	4620      	mov	r0, r4
   1ccdc:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1cce0:	f003 fe12 	bl	20908 <__ssprint_r>
   1cce4:	2800      	cmp	r0, #0
   1cce6:	f040 86f0 	bne.w	1daca <_svfprintf_r+0x1212>
   1ccea:	3e10      	subs	r6, #16
   1ccec:	2e10      	cmp	r6, #16
   1ccee:	e9dd 212d 	ldrd	r2, r1, [sp, #180]	@ 0xb4
   1ccf2:	dce8      	bgt.n	1ccc6 <_svfprintf_r+0x40e>
   1ccf4:	e9dd 371b 	ldrd	r3, r7, [sp, #108]	@ 0x6c
   1ccf8:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
   1ccfa:	460c      	mov	r4, r1
   1ccfc:	3201      	adds	r2, #1
   1ccfe:	9911      	ldr	r1, [sp, #68]	@ 0x44
   1cd00:	f8c8 1000 	str.w	r1, [r8]
   1cd04:	4434      	add	r4, r6
   1cd06:	2a07      	cmp	r2, #7
   1cd08:	e9cd 242d 	strd	r2, r4, [sp, #180]	@ 0xb4
   1cd0c:	f8c8 6004 	str.w	r6, [r8, #4]
   1cd10:	f300 86ca 	bgt.w	1daa8 <_svfprintf_r+0x11f0>
   1cd14:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1cd18:	f108 0808 	add.w	r8, r8, #8
   1cd1c:	e714      	b.n	1cb48 <_svfprintf_r+0x290>
   1cd1e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
   1cd20:	2b43      	cmp	r3, #67	@ 0x43
   1cd22:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1cd26:	f102 0404 	add.w	r4, r2, #4
   1cd2a:	d003      	beq.n	1cd34 <_svfprintf_r+0x47c>
   1cd2c:	f019 0f10 	tst.w	r9, #16
   1cd30:	f000 855c 	beq.w	1d7ec <_svfprintf_r+0xf34>
   1cd34:	2208      	movs	r2, #8
   1cd36:	2100      	movs	r1, #0
   1cd38:	a82a      	add	r0, sp, #168	@ 0xa8
   1cd3a:	f001 fcd7 	bl	1e6ec <memset>
   1cd3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1cd40:	9803      	ldr	r0, [sp, #12]
   1cd42:	681a      	ldr	r2, [r3, #0]
   1cd44:	ad3f      	add	r5, sp, #252	@ 0xfc
   1cd46:	ab2a      	add	r3, sp, #168	@ 0xa8
   1cd48:	4629      	mov	r1, r5
   1cd4a:	f003 fdab 	bl	208a4 <_wcrtomb_r>
   1cd4e:	f1b0 3fff 	cmp.w	r0, #4294967295
   1cd52:	4683      	mov	fp, r0
   1cd54:	f001 8289 	beq.w	1e26a <_svfprintf_r+0x19b2>
   1cd58:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
   1cd5c:	9302      	str	r3, [sp, #8]
   1cd5e:	2200      	movs	r2, #0
   1cd60:	9409      	str	r4, [sp, #36]	@ 0x24
   1cd62:	f88d 2087 	strb.w	r2, [sp, #135]	@ 0x87
   1cd66:	9208      	str	r2, [sp, #32]
   1cd68:	9204      	str	r2, [sp, #16]
   1cd6a:	9210      	str	r2, [sp, #64]	@ 0x40
   1cd6c:	920c      	str	r2, [sp, #48]	@ 0x30
   1cd6e:	920e      	str	r2, [sp, #56]	@ 0x38
   1cd70:	e6da      	b.n	1cb28 <_svfprintf_r+0x270>
   1cd72:	9e09      	ldr	r6, [sp, #36]	@ 0x24
   1cd74:	f856 5b04 	ldr.w	r5, [r6], #4
   1cd78:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1cd7c:	2300      	movs	r3, #0
   1cd7e:	f88d 3087 	strb.w	r3, [sp, #135]	@ 0x87
   1cd82:	2d00      	cmp	r5, #0
   1cd84:	f000 8557 	beq.w	1d836 <_svfprintf_r+0xf7e>
   1cd88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1cd8a:	2b53      	cmp	r3, #83	@ 0x53
   1cd8c:	f000 86b9 	beq.w	1db02 <_svfprintf_r+0x124a>
   1cd90:	f019 0310 	ands.w	r3, r9, #16
   1cd94:	930e      	str	r3, [sp, #56]	@ 0x38
   1cd96:	f040 86b4 	bne.w	1db02 <_svfprintf_r+0x124a>
   1cd9a:	9b04      	ldr	r3, [sp, #16]
   1cd9c:	1c5a      	adds	r2, r3, #1
   1cd9e:	f001 8092 	beq.w	1dec6 <_svfprintf_r+0x160e>
   1cda2:	990e      	ldr	r1, [sp, #56]	@ 0x38
   1cda4:	461a      	mov	r2, r3
   1cda6:	4628      	mov	r0, r5
   1cda8:	f7fb fa2a 	bl	18200 <memchr>
   1cdac:	9008      	str	r0, [sp, #32]
   1cdae:	2800      	cmp	r0, #0
   1cdb0:	f001 82f8 	beq.w	1e3a4 <_svfprintf_r+0x1aec>
   1cdb4:	9b08      	ldr	r3, [sp, #32]
   1cdb6:	9609      	str	r6, [sp, #36]	@ 0x24
   1cdb8:	eba3 0b05 	sub.w	fp, r3, r5
   1cdbc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   1cdbe:	9304      	str	r3, [sp, #16]
   1cdc0:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
   1cdc4:	9310      	str	r3, [sp, #64]	@ 0x40
   1cdc6:	930c      	str	r3, [sp, #48]	@ 0x30
   1cdc8:	9308      	str	r3, [sp, #32]
   1cdca:	2373      	movs	r3, #115	@ 0x73
   1cdcc:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1cdd0:	9102      	str	r1, [sp, #8]
   1cdd2:	930a      	str	r3, [sp, #40]	@ 0x28
   1cdd4:	e75b      	b.n	1cc8e <_svfprintf_r+0x3d6>
   1cdd6:	f019 0f20 	tst.w	r9, #32
   1cdda:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1cdde:	f000 80ec 	beq.w	1cfba <_svfprintf_r+0x702>
   1cde2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1cde4:	3307      	adds	r3, #7
   1cde6:	f023 0307 	bic.w	r3, r3, #7
   1cdea:	461a      	mov	r2, r3
   1cdec:	6859      	ldr	r1, [r3, #4]
   1cdee:	f852 3b08 	ldr.w	r3, [r2], #8
   1cdf2:	9209      	str	r2, [sp, #36]	@ 0x24
   1cdf4:	460a      	mov	r2, r1
   1cdf6:	2900      	cmp	r1, #0
   1cdf8:	f2c0 8419 	blt.w	1d62e <_svfprintf_r+0xd76>
   1cdfc:	9904      	ldr	r1, [sp, #16]
   1cdfe:	3101      	adds	r1, #1
   1ce00:	f000 829c 	beq.w	1d33c <_svfprintf_r+0xa84>
   1ce04:	ea53 0102 	orrs.w	r1, r3, r2
   1ce08:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
   1ce0c:	f040 8297 	bne.w	1d33e <_svfprintf_r+0xa86>
   1ce10:	9a04      	ldr	r2, [sp, #16]
   1ce12:	2a00      	cmp	r2, #0
   1ce14:	f040 8298 	bne.w	1d348 <_svfprintf_r+0xa90>
   1ce18:	46a1      	mov	r9, r4
   1ce1a:	4693      	mov	fp, r2
   1ce1c:	ad58      	add	r5, sp, #352	@ 0x160
   1ce1e:	e151      	b.n	1d0c4 <_svfprintf_r+0x80c>
   1ce20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1ce22:	f853 2b04 	ldr.w	r2, [r3], #4
   1ce26:	9207      	str	r2, [sp, #28]
   1ce28:	2a00      	cmp	r2, #0
   1ce2a:	f280 8424 	bge.w	1d676 <_svfprintf_r+0xdbe>
   1ce2e:	9a07      	ldr	r2, [sp, #28]
   1ce30:	9309      	str	r3, [sp, #36]	@ 0x24
   1ce32:	4252      	negs	r2, r2
   1ce34:	9207      	str	r2, [sp, #28]
   1ce36:	7823      	ldrb	r3, [r4, #0]
   1ce38:	f049 0904 	orr.w	r9, r9, #4
   1ce3c:	e595      	b.n	1c96a <_svfprintf_r+0xb2>
   1ce3e:	232b      	movs	r3, #43	@ 0x2b
   1ce40:	f88d 3087 	strb.w	r3, [sp, #135]	@ 0x87
   1ce44:	7823      	ldrb	r3, [r4, #0]
   1ce46:	e590      	b.n	1c96a <_svfprintf_r+0xb2>
   1ce48:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1ce4c:	f049 0910 	orr.w	r9, r9, #16
   1ce50:	f019 0220 	ands.w	r2, r9, #32
   1ce54:	f000 83b4 	beq.w	1d5c0 <_svfprintf_r+0xd08>
   1ce58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1ce5a:	3307      	adds	r3, #7
   1ce5c:	f023 0307 	bic.w	r3, r3, #7
   1ce60:	4619      	mov	r1, r3
   1ce62:	685a      	ldr	r2, [r3, #4]
   1ce64:	f851 3b08 	ldr.w	r3, [r1], #8
   1ce68:	9109      	str	r1, [sp, #36]	@ 0x24
   1ce6a:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
   1ce6e:	2100      	movs	r1, #0
   1ce70:	2000      	movs	r0, #0
   1ce72:	9d04      	ldr	r5, [sp, #16]
   1ce74:	f88d 0087 	strb.w	r0, [sp, #135]	@ 0x87
   1ce78:	1c6f      	adds	r7, r5, #1
   1ce7a:	f000 810c 	beq.w	1d096 <_svfprintf_r+0x7de>
   1ce7e:	ea53 0002 	orrs.w	r0, r3, r2
   1ce82:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
   1ce86:	f040 8105 	bne.w	1d094 <_svfprintf_r+0x7dc>
   1ce8a:	2d00      	cmp	r5, #0
   1ce8c:	f040 8627 	bne.w	1dade <_svfprintf_r+0x1226>
   1ce90:	2900      	cmp	r1, #0
   1ce92:	f040 83c8 	bne.w	1d626 <_svfprintf_r+0xd6e>
   1ce96:	f014 0b01 	ands.w	fp, r4, #1
   1ce9a:	f000 83f0 	beq.w	1d67e <_svfprintf_r+0xdc6>
   1ce9e:	2330      	movs	r3, #48	@ 0x30
   1cea0:	f88d 315f 	strb.w	r3, [sp, #351]	@ 0x15f
   1cea4:	f20d 155f 	addw	r5, sp, #351	@ 0x15f
   1cea8:	e10c      	b.n	1d0c4 <_svfprintf_r+0x80c>
   1ceaa:	7823      	ldrb	r3, [r4, #0]
   1ceac:	2b68      	cmp	r3, #104	@ 0x68
   1ceae:	bf03      	ittte	eq
   1ceb0:	7863      	ldrbeq	r3, [r4, #1]
   1ceb2:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
   1ceb6:	3401      	addeq	r4, #1
   1ceb8:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
   1cebc:	e555      	b.n	1c96a <_svfprintf_r+0xb2>
   1cebe:	f019 0f20 	tst.w	r9, #32
   1cec2:	940b      	str	r4, [sp, #44]	@ 0x2c
   1cec4:	f000 83e5 	beq.w	1d692 <_svfprintf_r+0xdda>
   1cec8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1ceca:	9a06      	ldr	r2, [sp, #24]
   1cecc:	681b      	ldr	r3, [r3, #0]
   1cece:	601a      	str	r2, [r3, #0]
   1ced0:	17d2      	asrs	r2, r2, #31
   1ced2:	605a      	str	r2, [r3, #4]
   1ced4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1ced6:	3304      	adds	r3, #4
   1ced8:	9309      	str	r3, [sp, #36]	@ 0x24
   1ceda:	e692      	b.n	1cc02 <_svfprintf_r+0x34a>
   1cedc:	7823      	ldrb	r3, [r4, #0]
   1cede:	2b6c      	cmp	r3, #108	@ 0x6c
   1cee0:	bf03      	ittte	eq
   1cee2:	7863      	ldrbeq	r3, [r4, #1]
   1cee4:	f049 0920 	orreq.w	r9, r9, #32
   1cee8:	3401      	addeq	r4, #1
   1ceea:	f049 0910 	orrne.w	r9, r9, #16
   1ceee:	e53c      	b.n	1c96a <_svfprintf_r+0xb2>
   1cef0:	7fefffff 	.word	0x7fefffff
   1cef4:	0002817c 	.word	0x0002817c
   1cef8:	00028180 	.word	0x00028180
   1cefc:	000281d0 	.word	0x000281d0
   1cf00:	9a09      	ldr	r2, [sp, #36]	@ 0x24
   1cf02:	940b      	str	r4, [sp, #44]	@ 0x2c
   1cf04:	f852 3b04 	ldr.w	r3, [r2], #4
   1cf08:	9209      	str	r2, [sp, #36]	@ 0x24
   1cf0a:	f647 0230 	movw	r2, #30768	@ 0x7830
   1cf0e:	f8ad 2088 	strh.w	r2, [sp, #136]	@ 0x88
   1cf12:	2078      	movs	r0, #120	@ 0x78
   1cf14:	4aa8      	ldr	r2, [pc, #672]	@ (1d1b8 <_svfprintf_r+0x900>)
   1cf16:	9215      	str	r2, [sp, #84]	@ 0x54
   1cf18:	f049 0402 	orr.w	r4, r9, #2
   1cf1c:	2200      	movs	r2, #0
   1cf1e:	2102      	movs	r1, #2
   1cf20:	900a      	str	r0, [sp, #40]	@ 0x28
   1cf22:	e7a5      	b.n	1ce70 <_svfprintf_r+0x5b8>
   1cf24:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1cf28:	f049 0410 	orr.w	r4, r9, #16
   1cf2c:	f014 0220 	ands.w	r2, r4, #32
   1cf30:	f000 8355 	beq.w	1d5de <_svfprintf_r+0xd26>
   1cf34:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1cf36:	3307      	adds	r3, #7
   1cf38:	f023 0307 	bic.w	r3, r3, #7
   1cf3c:	4619      	mov	r1, r3
   1cf3e:	685a      	ldr	r2, [r3, #4]
   1cf40:	f851 3b08 	ldr.w	r3, [r1], #8
   1cf44:	9109      	str	r1, [sp, #36]	@ 0x24
   1cf46:	2101      	movs	r1, #1
   1cf48:	e792      	b.n	1ce70 <_svfprintf_r+0x5b8>
   1cf4a:	7823      	ldrb	r3, [r4, #0]
   1cf4c:	f049 0908 	orr.w	r9, r9, #8
   1cf50:	e50b      	b.n	1c96a <_svfprintf_r+0xb2>
   1cf52:	7823      	ldrb	r3, [r4, #0]
   1cf54:	f049 0901 	orr.w	r9, r9, #1
   1cf58:	e507      	b.n	1c96a <_svfprintf_r+0xb2>
   1cf5a:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1cf5e:	7823      	ldrb	r3, [r4, #0]
   1cf60:	2a00      	cmp	r2, #0
   1cf62:	f47f ad02 	bne.w	1c96a <_svfprintf_r+0xb2>
   1cf66:	2220      	movs	r2, #32
   1cf68:	f88d 2087 	strb.w	r2, [sp, #135]	@ 0x87
   1cf6c:	e4fd      	b.n	1c96a <_svfprintf_r+0xb2>
   1cf6e:	7823      	ldrb	r3, [r4, #0]
   1cf70:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
   1cf74:	e4f9      	b.n	1c96a <_svfprintf_r+0xb2>
   1cf76:	4621      	mov	r1, r4
   1cf78:	f811 3b01 	ldrb.w	r3, [r1], #1
   1cf7c:	2b2a      	cmp	r3, #42	@ 0x2a
   1cf7e:	f001 8234 	beq.w	1e3ea <_svfprintf_r+0x1b32>
   1cf82:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
   1cf86:	2a09      	cmp	r2, #9
   1cf88:	460c      	mov	r4, r1
   1cf8a:	bf98      	it	ls
   1cf8c:	2100      	movls	r1, #0
   1cf8e:	f201 813b 	bhi.w	1e208 <_svfprintf_r+0x1950>
   1cf92:	f814 3b01 	ldrb.w	r3, [r4], #1
   1cf96:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   1cf9a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
   1cf9e:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
   1cfa2:	2a09      	cmp	r2, #9
   1cfa4:	d9f5      	bls.n	1cf92 <_svfprintf_r+0x6da>
   1cfa6:	9104      	str	r1, [sp, #16]
   1cfa8:	e4e0      	b.n	1c96c <_svfprintf_r+0xb4>
   1cfaa:	f049 0910 	orr.w	r9, r9, #16
   1cfae:	f019 0f20 	tst.w	r9, #32
   1cfb2:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1cfb6:	f47f af14 	bne.w	1cde2 <_svfprintf_r+0x52a>
   1cfba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
   1cfbc:	f019 0f10 	tst.w	r9, #16
   1cfc0:	f852 3b04 	ldr.w	r3, [r2], #4
   1cfc4:	9209      	str	r2, [sp, #36]	@ 0x24
   1cfc6:	f040 8360 	bne.w	1d68a <_svfprintf_r+0xdd2>
   1cfca:	f019 0f40 	tst.w	r9, #64	@ 0x40
   1cfce:	f000 8358 	beq.w	1d682 <_svfprintf_r+0xdca>
   1cfd2:	f343 32c0 	sbfx	r2, r3, #15, #1
   1cfd6:	4611      	mov	r1, r2
   1cfd8:	b21b      	sxth	r3, r3
   1cfda:	e70c      	b.n	1cdf6 <_svfprintf_r+0x53e>
   1cfdc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1cfde:	2b65      	cmp	r3, #101	@ 0x65
   1cfe0:	f340 8166 	ble.w	1d2b0 <_svfprintf_r+0x9f8>
   1cfe4:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1cfe8:	2200      	movs	r2, #0
   1cfea:	2300      	movs	r3, #0
   1cfec:	f7fb fe92 	bl	18d14 <__aeabi_dcmpeq>
   1cff0:	2800      	cmp	r0, #0
   1cff2:	f000 8211 	beq.w	1d418 <_svfprintf_r+0xb60>
   1cff6:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1cff8:	4a70      	ldr	r2, [pc, #448]	@ (1d1bc <_svfprintf_r+0x904>)
   1cffa:	f8c8 2000 	str.w	r2, [r8]
   1cffe:	3301      	adds	r3, #1
   1d000:	3401      	adds	r4, #1
   1d002:	2201      	movs	r2, #1
   1d004:	2b07      	cmp	r3, #7
   1d006:	942e      	str	r4, [sp, #184]	@ 0xb8
   1d008:	932d      	str	r3, [sp, #180]	@ 0xb4
   1d00a:	f8c8 2004 	str.w	r2, [r8, #4]
   1d00e:	f300 856b 	bgt.w	1dae8 <_svfprintf_r+0x1230>
   1d012:	f108 0808 	add.w	r8, r8, #8
   1d016:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
   1d018:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
   1d01a:	4293      	cmp	r3, r2
   1d01c:	f280 8326 	bge.w	1d66c <_svfprintf_r+0xdb4>
   1d020:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   1d022:	9a16      	ldr	r2, [sp, #88]	@ 0x58
   1d024:	441c      	add	r4, r3
   1d026:	e9c8 2300 	strd	r2, r3, [r8]
   1d02a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d02c:	942e      	str	r4, [sp, #184]	@ 0xb8
   1d02e:	3301      	adds	r3, #1
   1d030:	2b07      	cmp	r3, #7
   1d032:	932d      	str	r3, [sp, #180]	@ 0xb4
   1d034:	f300 83e4 	bgt.w	1d800 <_svfprintf_r+0xf48>
   1d038:	f108 0808 	add.w	r8, r8, #8
   1d03c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1d03e:	1e5d      	subs	r5, r3, #1
   1d040:	2d00      	cmp	r5, #0
   1d042:	f77f adc0 	ble.w	1cbc6 <_svfprintf_r+0x30e>
   1d046:	2d10      	cmp	r5, #16
   1d048:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d04a:	f340 85ad 	ble.w	1dba8 <_svfprintf_r+0x12f0>
   1d04e:	4f5c      	ldr	r7, [pc, #368]	@ (1d1c0 <_svfprintf_r+0x908>)
   1d050:	f8dd b00c 	ldr.w	fp, [sp, #12]
   1d054:	f8dd a014 	ldr.w	sl, [sp, #20]
   1d058:	9711      	str	r7, [sp, #68]	@ 0x44
   1d05a:	2610      	movs	r6, #16
   1d05c:	e005      	b.n	1d06a <_svfprintf_r+0x7b2>
   1d05e:	f108 0808 	add.w	r8, r8, #8
   1d062:	3d10      	subs	r5, #16
   1d064:	2d10      	cmp	r5, #16
   1d066:	f340 85a1 	ble.w	1dbac <_svfprintf_r+0x12f4>
   1d06a:	3301      	adds	r3, #1
   1d06c:	3410      	adds	r4, #16
   1d06e:	2b07      	cmp	r3, #7
   1d070:	e9c8 7600 	strd	r7, r6, [r8]
   1d074:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1d078:	ddf1      	ble.n	1d05e <_svfprintf_r+0x7a6>
   1d07a:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d07c:	4651      	mov	r1, sl
   1d07e:	4658      	mov	r0, fp
   1d080:	f003 fc42 	bl	20908 <__ssprint_r>
   1d084:	2800      	cmp	r0, #0
   1d086:	f040 82c0 	bne.w	1d60a <_svfprintf_r+0xd52>
   1d08a:	e9dd 342d 	ldrd	r3, r4, [sp, #180]	@ 0xb4
   1d08e:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1d092:	e7e6      	b.n	1d062 <_svfprintf_r+0x7aa>
   1d094:	464c      	mov	r4, r9
   1d096:	2901      	cmp	r1, #1
   1d098:	f000 8151 	beq.w	1d33e <_svfprintf_r+0xa86>
   1d09c:	2902      	cmp	r1, #2
   1d09e:	ad58      	add	r5, sp, #352	@ 0x160
   1d0a0:	d11e      	bne.n	1d0e0 <_svfprintf_r+0x828>
   1d0a2:	9815      	ldr	r0, [sp, #84]	@ 0x54
   1d0a4:	f003 010f 	and.w	r1, r3, #15
   1d0a8:	091b      	lsrs	r3, r3, #4
   1d0aa:	5c41      	ldrb	r1, [r0, r1]
   1d0ac:	f805 1d01 	strb.w	r1, [r5, #-1]!
   1d0b0:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
   1d0b4:	0912      	lsrs	r2, r2, #4
   1d0b6:	ea53 0102 	orrs.w	r1, r3, r2
   1d0ba:	d1f3      	bne.n	1d0a4 <_svfprintf_r+0x7ec>
   1d0bc:	ab58      	add	r3, sp, #352	@ 0x160
   1d0be:	46a1      	mov	r9, r4
   1d0c0:	eba3 0b05 	sub.w	fp, r3, r5
   1d0c4:	9904      	ldr	r1, [sp, #16]
   1d0c6:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1d0ca:	4559      	cmp	r1, fp
   1d0cc:	f04f 0300 	mov.w	r3, #0
   1d0d0:	bfb8      	it	lt
   1d0d2:	4659      	movlt	r1, fp
   1d0d4:	9308      	str	r3, [sp, #32]
   1d0d6:	9102      	str	r1, [sp, #8]
   1d0d8:	9310      	str	r3, [sp, #64]	@ 0x40
   1d0da:	930c      	str	r3, [sp, #48]	@ 0x30
   1d0dc:	930e      	str	r3, [sp, #56]	@ 0x38
   1d0de:	e5d6      	b.n	1cc8e <_svfprintf_r+0x3d6>
   1d0e0:	f003 0107 	and.w	r1, r3, #7
   1d0e4:	08db      	lsrs	r3, r3, #3
   1d0e6:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
   1d0ea:	08d2      	lsrs	r2, r2, #3
   1d0ec:	3130      	adds	r1, #48	@ 0x30
   1d0ee:	ea53 0602 	orrs.w	r6, r3, r2
   1d0f2:	4628      	mov	r0, r5
   1d0f4:	f805 1d01 	strb.w	r1, [r5, #-1]!
   1d0f8:	d1f2      	bne.n	1d0e0 <_svfprintf_r+0x828>
   1d0fa:	07e6      	lsls	r6, r4, #31
   1d0fc:	d5de      	bpl.n	1d0bc <_svfprintf_r+0x804>
   1d0fe:	2930      	cmp	r1, #48	@ 0x30
   1d100:	d0dc      	beq.n	1d0bc <_svfprintf_r+0x804>
   1d102:	2330      	movs	r3, #48	@ 0x30
   1d104:	3802      	subs	r0, #2
   1d106:	f805 3c01 	strb.w	r3, [r5, #-1]
   1d10a:	ab58      	add	r3, sp, #352	@ 0x160
   1d10c:	46a1      	mov	r9, r4
   1d10e:	eba3 0b00 	sub.w	fp, r3, r0
   1d112:	4605      	mov	r5, r0
   1d114:	e7d6      	b.n	1d0c4 <_svfprintf_r+0x80c>
   1d116:	9b07      	ldr	r3, [sp, #28]
   1d118:	9a02      	ldr	r2, [sp, #8]
   1d11a:	1a9e      	subs	r6, r3, r2
   1d11c:	2e00      	cmp	r6, #0
   1d11e:	f77f ad3a 	ble.w	1cb96 <_svfprintf_r+0x2de>
   1d122:	2e10      	cmp	r6, #16
   1d124:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d126:	f341 80aa 	ble.w	1e27e <_svfprintf_r+0x19c6>
   1d12a:	4825      	ldr	r0, [pc, #148]	@ (1d1c0 <_svfprintf_r+0x908>)
   1d12c:	f8dd a00c 	ldr.w	sl, [sp, #12]
   1d130:	9011      	str	r0, [sp, #68]	@ 0x44
   1d132:	4621      	mov	r1, r4
   1d134:	2710      	movs	r7, #16
   1d136:	461a      	mov	r2, r3
   1d138:	4604      	mov	r4, r0
   1d13a:	e004      	b.n	1d146 <_svfprintf_r+0x88e>
   1d13c:	3e10      	subs	r6, #16
   1d13e:	2e10      	cmp	r6, #16
   1d140:	f108 0808 	add.w	r8, r8, #8
   1d144:	dd16      	ble.n	1d174 <_svfprintf_r+0x8bc>
   1d146:	3201      	adds	r2, #1
   1d148:	3110      	adds	r1, #16
   1d14a:	2a07      	cmp	r2, #7
   1d14c:	e9c8 4700 	strd	r4, r7, [r8]
   1d150:	e9cd 212d 	strd	r2, r1, [sp, #180]	@ 0xb4
   1d154:	ddf2      	ble.n	1d13c <_svfprintf_r+0x884>
   1d156:	9905      	ldr	r1, [sp, #20]
   1d158:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d15a:	4650      	mov	r0, sl
   1d15c:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1d160:	f003 fbd2 	bl	20908 <__ssprint_r>
   1d164:	2800      	cmp	r0, #0
   1d166:	f040 84b2 	bne.w	1dace <_svfprintf_r+0x1216>
   1d16a:	3e10      	subs	r6, #16
   1d16c:	2e10      	cmp	r6, #16
   1d16e:	e9dd 212d 	ldrd	r2, r1, [sp, #180]	@ 0xb4
   1d172:	dce8      	bgt.n	1d146 <_svfprintf_r+0x88e>
   1d174:	460c      	mov	r4, r1
   1d176:	4613      	mov	r3, r2
   1d178:	3301      	adds	r3, #1
   1d17a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1d17c:	f8c8 2000 	str.w	r2, [r8]
   1d180:	4434      	add	r4, r6
   1d182:	2b07      	cmp	r3, #7
   1d184:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1d188:	f8c8 6004 	str.w	r6, [r8, #4]
   1d18c:	f300 851c 	bgt.w	1dbc8 <_svfprintf_r+0x1310>
   1d190:	9b04      	ldr	r3, [sp, #16]
   1d192:	eba3 060b 	sub.w	r6, r3, fp
   1d196:	2e00      	cmp	r6, #0
   1d198:	f108 0808 	add.w	r8, r8, #8
   1d19c:	f77f ad01 	ble.w	1cba2 <_svfprintf_r+0x2ea>
   1d1a0:	4a07      	ldr	r2, [pc, #28]	@ (1d1c0 <_svfprintf_r+0x908>)
   1d1a2:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d1a4:	9211      	str	r2, [sp, #68]	@ 0x44
   1d1a6:	2e10      	cmp	r6, #16
   1d1a8:	dd2a      	ble.n	1d200 <_svfprintf_r+0x948>
   1d1aa:	4622      	mov	r2, r4
   1d1ac:	9f03      	ldr	r7, [sp, #12]
   1d1ae:	9c05      	ldr	r4, [sp, #20]
   1d1b0:	f04f 0a10 	mov.w	sl, #16
   1d1b4:	e00b      	b.n	1d1ce <_svfprintf_r+0x916>
   1d1b6:	bf00      	nop
   1d1b8:	0002818c 	.word	0x0002818c
   1d1bc:	000281bc 	.word	0x000281bc
   1d1c0:	000281c0 	.word	0x000281c0
   1d1c4:	3e10      	subs	r6, #16
   1d1c6:	2e10      	cmp	r6, #16
   1d1c8:	f108 0808 	add.w	r8, r8, #8
   1d1cc:	dd17      	ble.n	1d1fe <_svfprintf_r+0x946>
   1d1ce:	3301      	adds	r3, #1
   1d1d0:	498e      	ldr	r1, [pc, #568]	@ (1d40c <_svfprintf_r+0xb54>)
   1d1d2:	3210      	adds	r2, #16
   1d1d4:	2b07      	cmp	r3, #7
   1d1d6:	e9c8 1a00 	strd	r1, sl, [r8]
   1d1da:	e9cd 322d 	strd	r3, r2, [sp, #180]	@ 0xb4
   1d1de:	ddf1      	ble.n	1d1c4 <_svfprintf_r+0x90c>
   1d1e0:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d1e2:	4621      	mov	r1, r4
   1d1e4:	4638      	mov	r0, r7
   1d1e6:	f003 fb8f 	bl	20908 <__ssprint_r>
   1d1ea:	2800      	cmp	r0, #0
   1d1ec:	f040 820c 	bne.w	1d608 <_svfprintf_r+0xd50>
   1d1f0:	3e10      	subs	r6, #16
   1d1f2:	2e10      	cmp	r6, #16
   1d1f4:	e9dd 322d 	ldrd	r3, r2, [sp, #180]	@ 0xb4
   1d1f8:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1d1fc:	dce7      	bgt.n	1d1ce <_svfprintf_r+0x916>
   1d1fe:	4614      	mov	r4, r2
   1d200:	3301      	adds	r3, #1
   1d202:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1d204:	f8c8 2000 	str.w	r2, [r8]
   1d208:	4434      	add	r4, r6
   1d20a:	2b07      	cmp	r3, #7
   1d20c:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1d210:	f8c8 6004 	str.w	r6, [r8, #4]
   1d214:	f300 81c7 	bgt.w	1d5a6 <_svfprintf_r+0xcee>
   1d218:	f108 0808 	add.w	r8, r8, #8
   1d21c:	e4c1      	b.n	1cba2 <_svfprintf_r+0x2ea>
   1d21e:	9905      	ldr	r1, [sp, #20]
   1d220:	9803      	ldr	r0, [sp, #12]
   1d222:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d224:	f003 fb70 	bl	20908 <__ssprint_r>
   1d228:	2800      	cmp	r0, #0
   1d22a:	f43f ace0 	beq.w	1cbee <_svfprintf_r+0x336>
   1d22e:	f8dd b00c 	ldr.w	fp, [sp, #12]
   1d232:	e1ea      	b.n	1d60a <_svfprintf_r+0xd52>
   1d234:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d236:	4976      	ldr	r1, [pc, #472]	@ (1d410 <_svfprintf_r+0xb58>)
   1d238:	f8c8 1000 	str.w	r1, [r8]
   1d23c:	3301      	adds	r3, #1
   1d23e:	3401      	adds	r4, #1
   1d240:	2101      	movs	r1, #1
   1d242:	2b07      	cmp	r3, #7
   1d244:	942e      	str	r4, [sp, #184]	@ 0xb8
   1d246:	932d      	str	r3, [sp, #180]	@ 0xb4
   1d248:	f8c8 1004 	str.w	r1, [r8, #4]
   1d24c:	f300 8573 	bgt.w	1dd36 <_svfprintf_r+0x147e>
   1d250:	f108 0808 	add.w	r8, r8, #8
   1d254:	2a00      	cmp	r2, #0
   1d256:	f040 84e5 	bne.w	1dc24 <_svfprintf_r+0x136c>
   1d25a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
   1d25c:	f009 0301 	and.w	r3, r9, #1
   1d260:	4313      	orrs	r3, r2
   1d262:	f43f acb0 	beq.w	1cbc6 <_svfprintf_r+0x30e>
   1d266:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   1d268:	9a16      	ldr	r2, [sp, #88]	@ 0x58
   1d26a:	441c      	add	r4, r3
   1d26c:	e9c8 2300 	strd	r2, r3, [r8]
   1d270:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d272:	942e      	str	r4, [sp, #184]	@ 0xb8
   1d274:	3301      	adds	r3, #1
   1d276:	2b07      	cmp	r3, #7
   1d278:	932d      	str	r3, [sp, #180]	@ 0xb4
   1d27a:	f300 8643 	bgt.w	1df04 <_svfprintf_r+0x164c>
   1d27e:	f108 0808 	add.w	r8, r8, #8
   1d282:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
   1d284:	f8c8 5000 	str.w	r5, [r8]
   1d288:	3301      	adds	r3, #1
   1d28a:	4414      	add	r4, r2
   1d28c:	2b07      	cmp	r3, #7
   1d28e:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1d292:	f8c8 2004 	str.w	r2, [r8, #4]
   1d296:	f77f ac94 	ble.w	1cbc2 <_svfprintf_r+0x30a>
   1d29a:	9905      	ldr	r1, [sp, #20]
   1d29c:	9803      	ldr	r0, [sp, #12]
   1d29e:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d2a0:	f003 fb32 	bl	20908 <__ssprint_r>
   1d2a4:	2800      	cmp	r0, #0
   1d2a6:	d1c2      	bne.n	1d22e <_svfprintf_r+0x976>
   1d2a8:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1d2aa:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1d2ae:	e48a      	b.n	1cbc6 <_svfprintf_r+0x30e>
   1d2b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1d2b2:	9e2d      	ldr	r6, [sp, #180]	@ 0xb4
   1d2b4:	2b01      	cmp	r3, #1
   1d2b6:	f104 0401 	add.w	r4, r4, #1
   1d2ba:	f106 0601 	add.w	r6, r6, #1
   1d2be:	f108 0708 	add.w	r7, r8, #8
   1d2c2:	f340 8129 	ble.w	1d518 <_svfprintf_r+0xc60>
   1d2c6:	2301      	movs	r3, #1
   1d2c8:	2e07      	cmp	r6, #7
   1d2ca:	e9cd 642d 	strd	r6, r4, [sp, #180]	@ 0xb4
   1d2ce:	f8c8 5000 	str.w	r5, [r8]
   1d2d2:	f8c8 3004 	str.w	r3, [r8, #4]
   1d2d6:	f300 81b1 	bgt.w	1d63c <_svfprintf_r+0xd84>
   1d2da:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   1d2dc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
   1d2de:	3601      	adds	r6, #1
   1d2e0:	441c      	add	r4, r3
   1d2e2:	2e07      	cmp	r6, #7
   1d2e4:	e9c7 2300 	strd	r2, r3, [r7]
   1d2e8:	e9cd 642d 	strd	r6, r4, [sp, #180]	@ 0xb4
   1d2ec:	f300 81b2 	bgt.w	1d654 <_svfprintf_r+0xd9c>
   1d2f0:	3708      	adds	r7, #8
   1d2f2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1d2f4:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1d2f8:	f103 38ff 	add.w	r8, r3, #4294967295
   1d2fc:	2200      	movs	r2, #0
   1d2fe:	2300      	movs	r3, #0
   1d300:	f7fb fd08 	bl	18d14 <__aeabi_dcmpeq>
   1d304:	2800      	cmp	r0, #0
   1d306:	f040 8121 	bne.w	1d54c <_svfprintf_r+0xc94>
   1d30a:	3601      	adds	r6, #1
   1d30c:	3501      	adds	r5, #1
   1d30e:	4444      	add	r4, r8
   1d310:	2e07      	cmp	r6, #7
   1d312:	e9cd 642d 	strd	r6, r4, [sp, #180]	@ 0xb4
   1d316:	603d      	str	r5, [r7, #0]
   1d318:	f8c7 8004 	str.w	r8, [r7, #4]
   1d31c:	f300 810a 	bgt.w	1d534 <_svfprintf_r+0xc7c>
   1d320:	3708      	adds	r7, #8
   1d322:	9b18      	ldr	r3, [sp, #96]	@ 0x60
   1d324:	607b      	str	r3, [r7, #4]
   1d326:	3601      	adds	r6, #1
   1d328:	441c      	add	r4, r3
   1d32a:	2e07      	cmp	r6, #7
   1d32c:	ab26      	add	r3, sp, #152	@ 0x98
   1d32e:	e9cd 642d 	strd	r6, r4, [sp, #180]	@ 0xb4
   1d332:	603b      	str	r3, [r7, #0]
   1d334:	dcb1      	bgt.n	1d29a <_svfprintf_r+0x9e2>
   1d336:	f107 0808 	add.w	r8, r7, #8
   1d33a:	e444      	b.n	1cbc6 <_svfprintf_r+0x30e>
   1d33c:	464c      	mov	r4, r9
   1d33e:	2b0a      	cmp	r3, #10
   1d340:	f172 0100 	sbcs.w	r1, r2, #0
   1d344:	f080 8353 	bcs.w	1d9ee <_svfprintf_r+0x1136>
   1d348:	3330      	adds	r3, #48	@ 0x30
   1d34a:	f88d 315f 	strb.w	r3, [sp, #351]	@ 0x15f
   1d34e:	46a1      	mov	r9, r4
   1d350:	f04f 0b01 	mov.w	fp, #1
   1d354:	f20d 155f 	addw	r5, sp, #351	@ 0x15f
   1d358:	e6b4      	b.n	1d0c4 <_svfprintf_r+0x80c>
   1d35a:	9905      	ldr	r1, [sp, #20]
   1d35c:	9803      	ldr	r0, [sp, #12]
   1d35e:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d360:	f003 fad2 	bl	20908 <__ssprint_r>
   1d364:	2800      	cmp	r0, #0
   1d366:	f47f af62 	bne.w	1d22e <_svfprintf_r+0x976>
   1d36a:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1d36c:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1d370:	e40e      	b.n	1cb90 <_svfprintf_r+0x2d8>
   1d372:	9905      	ldr	r1, [sp, #20]
   1d374:	9803      	ldr	r0, [sp, #12]
   1d376:	9311      	str	r3, [sp, #68]	@ 0x44
   1d378:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d37a:	f003 fac5 	bl	20908 <__ssprint_r>
   1d37e:	2800      	cmp	r0, #0
   1d380:	f47f af55 	bne.w	1d22e <_svfprintf_r+0x976>
   1d384:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1d386:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1d388:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1d38c:	f7ff bbee 	b.w	1cb6c <_svfprintf_r+0x2b4>
   1d390:	2d10      	cmp	r5, #16
   1d392:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d394:	f340 873c 	ble.w	1e210 <_svfprintf_r+0x1958>
   1d398:	4f1e      	ldr	r7, [pc, #120]	@ (1d414 <_svfprintf_r+0xb5c>)
   1d39a:	f8dd 900c 	ldr.w	r9, [sp, #12]
   1d39e:	f8dd a014 	ldr.w	sl, [sp, #20]
   1d3a2:	9711      	str	r7, [sp, #68]	@ 0x44
   1d3a4:	2610      	movs	r6, #16
   1d3a6:	e004      	b.n	1d3b2 <_svfprintf_r+0xafa>
   1d3a8:	3d10      	subs	r5, #16
   1d3aa:	2d10      	cmp	r5, #16
   1d3ac:	f108 0808 	add.w	r8, r8, #8
   1d3b0:	dd16      	ble.n	1d3e0 <_svfprintf_r+0xb28>
   1d3b2:	3301      	adds	r3, #1
   1d3b4:	3410      	adds	r4, #16
   1d3b6:	2b07      	cmp	r3, #7
   1d3b8:	e9c8 7600 	strd	r7, r6, [r8]
   1d3bc:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1d3c0:	ddf2      	ble.n	1d3a8 <_svfprintf_r+0xaf0>
   1d3c2:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d3c4:	4651      	mov	r1, sl
   1d3c6:	4648      	mov	r0, r9
   1d3c8:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1d3cc:	f003 fa9c 	bl	20908 <__ssprint_r>
   1d3d0:	2800      	cmp	r0, #0
   1d3d2:	f040 83e7 	bne.w	1dba4 <_svfprintf_r+0x12ec>
   1d3d6:	3d10      	subs	r5, #16
   1d3d8:	2d10      	cmp	r5, #16
   1d3da:	e9dd 342d 	ldrd	r3, r4, [sp, #180]	@ 0xb4
   1d3de:	dce8      	bgt.n	1d3b2 <_svfprintf_r+0xafa>
   1d3e0:	3301      	adds	r3, #1
   1d3e2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1d3e4:	442c      	add	r4, r5
   1d3e6:	2b07      	cmp	r3, #7
   1d3e8:	e9c8 2500 	strd	r2, r5, [r8]
   1d3ec:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1d3f0:	f77f abf2 	ble.w	1cbd8 <_svfprintf_r+0x320>
   1d3f4:	9905      	ldr	r1, [sp, #20]
   1d3f6:	9803      	ldr	r0, [sp, #12]
   1d3f8:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d3fa:	f003 fa85 	bl	20908 <__ssprint_r>
   1d3fe:	2800      	cmp	r0, #0
   1d400:	f47f af15 	bne.w	1d22e <_svfprintf_r+0x976>
   1d404:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1d406:	f7ff bbe7 	b.w	1cbd8 <_svfprintf_r+0x320>
   1d40a:	bf00      	nop
   1d40c:	000281c0 	.word	0x000281c0
   1d410:	000281bc 	.word	0x000281bc
   1d414:	000281d0 	.word	0x000281d0
   1d418:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
   1d41a:	2a00      	cmp	r2, #0
   1d41c:	f77f af0a 	ble.w	1d234 <_svfprintf_r+0x97c>
   1d420:	e9dd 730e 	ldrd	r7, r3, [sp, #56]	@ 0x38
   1d424:	429f      	cmp	r7, r3
   1d426:	bfa8      	it	ge
   1d428:	461f      	movge	r7, r3
   1d42a:	2f00      	cmp	r7, #0
   1d42c:	eb05 0b03 	add.w	fp, r5, r3
   1d430:	dd0b      	ble.n	1d44a <_svfprintf_r+0xb92>
   1d432:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d434:	3301      	adds	r3, #1
   1d436:	443c      	add	r4, r7
   1d438:	2b07      	cmp	r3, #7
   1d43a:	e9c8 5700 	strd	r5, r7, [r8]
   1d43e:	942e      	str	r4, [sp, #184]	@ 0xb8
   1d440:	932d      	str	r3, [sp, #180]	@ 0xb4
   1d442:	f300 8644 	bgt.w	1e0ce <_svfprintf_r+0x1816>
   1d446:	f108 0808 	add.w	r8, r8, #8
   1d44a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
   1d44c:	2f00      	cmp	r7, #0
   1d44e:	bfa8      	it	ge
   1d450:	1bf6      	subge	r6, r6, r7
   1d452:	2e00      	cmp	r6, #0
   1d454:	f300 8200 	bgt.w	1d858 <_svfprintf_r+0xfa0>
   1d458:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   1d45a:	f419 6f80 	tst.w	r9, #1024	@ 0x400
   1d45e:	442b      	add	r3, r5
   1d460:	469a      	mov	sl, r3
   1d462:	f040 8221 	bne.w	1d8a8 <_svfprintf_r+0xff0>
   1d466:	9d23      	ldr	r5, [sp, #140]	@ 0x8c
   1d468:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1d46a:	429d      	cmp	r5, r3
   1d46c:	db03      	blt.n	1d476 <_svfprintf_r+0xbbe>
   1d46e:	f019 0f01 	tst.w	r9, #1
   1d472:	f000 846e 	beq.w	1dd52 <_svfprintf_r+0x149a>
   1d476:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   1d478:	9a16      	ldr	r2, [sp, #88]	@ 0x58
   1d47a:	441c      	add	r4, r3
   1d47c:	e9c8 2300 	strd	r2, r3, [r8]
   1d480:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d482:	942e      	str	r4, [sp, #184]	@ 0xb8
   1d484:	3301      	adds	r3, #1
   1d486:	2b07      	cmp	r3, #7
   1d488:	932d      	str	r3, [sp, #180]	@ 0xb4
   1d48a:	f300 867e 	bgt.w	1e18a <_svfprintf_r+0x18d2>
   1d48e:	f108 0808 	add.w	r8, r8, #8
   1d492:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1d494:	ebab 060a 	sub.w	r6, fp, sl
   1d498:	1b5d      	subs	r5, r3, r5
   1d49a:	42ae      	cmp	r6, r5
   1d49c:	bfa8      	it	ge
   1d49e:	462e      	movge	r6, r5
   1d4a0:	2e00      	cmp	r6, #0
   1d4a2:	dd0d      	ble.n	1d4c0 <_svfprintf_r+0xc08>
   1d4a4:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d4a6:	f8c8 a000 	str.w	sl, [r8]
   1d4aa:	3301      	adds	r3, #1
   1d4ac:	4434      	add	r4, r6
   1d4ae:	2b07      	cmp	r3, #7
   1d4b0:	f8c8 6004 	str.w	r6, [r8, #4]
   1d4b4:	942e      	str	r4, [sp, #184]	@ 0xb8
   1d4b6:	932d      	str	r3, [sp, #180]	@ 0xb4
   1d4b8:	f300 8679 	bgt.w	1e1ae <_svfprintf_r+0x18f6>
   1d4bc:	f108 0808 	add.w	r8, r8, #8
   1d4c0:	2e00      	cmp	r6, #0
   1d4c2:	bfa8      	it	ge
   1d4c4:	1bad      	subge	r5, r5, r6
   1d4c6:	2d00      	cmp	r5, #0
   1d4c8:	f77f ab7d 	ble.w	1cbc6 <_svfprintf_r+0x30e>
   1d4cc:	2d10      	cmp	r5, #16
   1d4ce:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d4d0:	f340 836a 	ble.w	1dba8 <_svfprintf_r+0x12f0>
   1d4d4:	4fad      	ldr	r7, [pc, #692]	@ (1d78c <_svfprintf_r+0xed4>)
   1d4d6:	f8dd b00c 	ldr.w	fp, [sp, #12]
   1d4da:	f8dd a014 	ldr.w	sl, [sp, #20]
   1d4de:	9711      	str	r7, [sp, #68]	@ 0x44
   1d4e0:	2610      	movs	r6, #16
   1d4e2:	e005      	b.n	1d4f0 <_svfprintf_r+0xc38>
   1d4e4:	f108 0808 	add.w	r8, r8, #8
   1d4e8:	3d10      	subs	r5, #16
   1d4ea:	2d10      	cmp	r5, #16
   1d4ec:	f340 835e 	ble.w	1dbac <_svfprintf_r+0x12f4>
   1d4f0:	3301      	adds	r3, #1
   1d4f2:	3410      	adds	r4, #16
   1d4f4:	2b07      	cmp	r3, #7
   1d4f6:	e9c8 7600 	strd	r7, r6, [r8]
   1d4fa:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1d4fe:	ddf1      	ble.n	1d4e4 <_svfprintf_r+0xc2c>
   1d500:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d502:	4651      	mov	r1, sl
   1d504:	4658      	mov	r0, fp
   1d506:	f003 f9ff 	bl	20908 <__ssprint_r>
   1d50a:	2800      	cmp	r0, #0
   1d50c:	d17d      	bne.n	1d60a <_svfprintf_r+0xd52>
   1d50e:	e9dd 342d 	ldrd	r3, r4, [sp, #180]	@ 0xb4
   1d512:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1d516:	e7e7      	b.n	1d4e8 <_svfprintf_r+0xc30>
   1d518:	f019 0f01 	tst.w	r9, #1
   1d51c:	f47f aed3 	bne.w	1d2c6 <_svfprintf_r+0xa0e>
   1d520:	2301      	movs	r3, #1
   1d522:	2e07      	cmp	r6, #7
   1d524:	e9cd 642d 	strd	r6, r4, [sp, #180]	@ 0xb4
   1d528:	f8c8 5000 	str.w	r5, [r8]
   1d52c:	f8c8 3004 	str.w	r3, [r8, #4]
   1d530:	f77f aef7 	ble.w	1d322 <_svfprintf_r+0xa6a>
   1d534:	9905      	ldr	r1, [sp, #20]
   1d536:	9803      	ldr	r0, [sp, #12]
   1d538:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d53a:	f003 f9e5 	bl	20908 <__ssprint_r>
   1d53e:	2800      	cmp	r0, #0
   1d540:	f47f ae75 	bne.w	1d22e <_svfprintf_r+0x976>
   1d544:	e9dd 642d 	ldrd	r6, r4, [sp, #180]	@ 0xb4
   1d548:	af2f      	add	r7, sp, #188	@ 0xbc
   1d54a:	e6ea      	b.n	1d322 <_svfprintf_r+0xa6a>
   1d54c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1d54e:	2b01      	cmp	r3, #1
   1d550:	f77f aee7 	ble.w	1d322 <_svfprintf_r+0xa6a>
   1d554:	2b11      	cmp	r3, #17
   1d556:	4b8d      	ldr	r3, [pc, #564]	@ (1d78c <_svfprintf_r+0xed4>)
   1d558:	9311      	str	r3, [sp, #68]	@ 0x44
   1d55a:	f340 8357 	ble.w	1dc0c <_svfprintf_r+0x1354>
   1d55e:	f8cd 9010 	str.w	r9, [sp, #16]
   1d562:	f8dd a00c 	ldr.w	sl, [sp, #12]
   1d566:	f8dd b014 	ldr.w	fp, [sp, #20]
   1d56a:	2510      	movs	r5, #16
   1d56c:	4699      	mov	r9, r3
   1d56e:	e006      	b.n	1d57e <_svfprintf_r+0xcc6>
   1d570:	3708      	adds	r7, #8
   1d572:	f1a8 0810 	sub.w	r8, r8, #16
   1d576:	f1b8 0f10 	cmp.w	r8, #16
   1d57a:	f340 8345 	ble.w	1dc08 <_svfprintf_r+0x1350>
   1d57e:	3601      	adds	r6, #1
   1d580:	3410      	adds	r4, #16
   1d582:	2e07      	cmp	r6, #7
   1d584:	e9c7 9500 	strd	r9, r5, [r7]
   1d588:	e9cd 642d 	strd	r6, r4, [sp, #180]	@ 0xb4
   1d58c:	ddf0      	ble.n	1d570 <_svfprintf_r+0xcb8>
   1d58e:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d590:	4659      	mov	r1, fp
   1d592:	4650      	mov	r0, sl
   1d594:	f003 f9b8 	bl	20908 <__ssprint_r>
   1d598:	2800      	cmp	r0, #0
   1d59a:	f040 8298 	bne.w	1dace <_svfprintf_r+0x1216>
   1d59e:	e9dd 642d 	ldrd	r6, r4, [sp, #180]	@ 0xb4
   1d5a2:	af2f      	add	r7, sp, #188	@ 0xbc
   1d5a4:	e7e5      	b.n	1d572 <_svfprintf_r+0xcba>
   1d5a6:	9905      	ldr	r1, [sp, #20]
   1d5a8:	9803      	ldr	r0, [sp, #12]
   1d5aa:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d5ac:	f003 f9ac 	bl	20908 <__ssprint_r>
   1d5b0:	2800      	cmp	r0, #0
   1d5b2:	f47f ae3c 	bne.w	1d22e <_svfprintf_r+0x976>
   1d5b6:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1d5b8:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1d5bc:	f7ff baf1 	b.w	1cba2 <_svfprintf_r+0x2ea>
   1d5c0:	9909      	ldr	r1, [sp, #36]	@ 0x24
   1d5c2:	f851 3b04 	ldr.w	r3, [r1], #4
   1d5c6:	9109      	str	r1, [sp, #36]	@ 0x24
   1d5c8:	f019 0110 	ands.w	r1, r9, #16
   1d5cc:	f47f ac4d 	bne.w	1ce6a <_svfprintf_r+0x5b2>
   1d5d0:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
   1d5d4:	f000 8362 	beq.w	1dc9c <_svfprintf_r+0x13e4>
   1d5d8:	b29b      	uxth	r3, r3
   1d5da:	460a      	mov	r2, r1
   1d5dc:	e445      	b.n	1ce6a <_svfprintf_r+0x5b2>
   1d5de:	9909      	ldr	r1, [sp, #36]	@ 0x24
   1d5e0:	f851 3b04 	ldr.w	r3, [r1], #4
   1d5e4:	9109      	str	r1, [sp, #36]	@ 0x24
   1d5e6:	f014 0110 	ands.w	r1, r4, #16
   1d5ea:	d10b      	bne.n	1d604 <_svfprintf_r+0xd4c>
   1d5ec:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
   1d5f0:	d003      	beq.n	1d5fa <_svfprintf_r+0xd42>
   1d5f2:	460a      	mov	r2, r1
   1d5f4:	b29b      	uxth	r3, r3
   1d5f6:	2101      	movs	r1, #1
   1d5f8:	e43a      	b.n	1ce70 <_svfprintf_r+0x5b8>
   1d5fa:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
   1d5fe:	bf1c      	itt	ne
   1d600:	b2db      	uxtbne	r3, r3
   1d602:	4602      	movne	r2, r0
   1d604:	2101      	movs	r1, #1
   1d606:	e433      	b.n	1ce70 <_svfprintf_r+0x5b8>
   1d608:	46bb      	mov	fp, r7
   1d60a:	9b08      	ldr	r3, [sp, #32]
   1d60c:	2b00      	cmp	r3, #0
   1d60e:	f43f aa5a 	beq.w	1cac6 <_svfprintf_r+0x20e>
   1d612:	9908      	ldr	r1, [sp, #32]
   1d614:	4658      	mov	r0, fp
   1d616:	f002 f9a1 	bl	1f95c <_free_r>
   1d61a:	9b05      	ldr	r3, [sp, #20]
   1d61c:	899b      	ldrh	r3, [r3, #12]
   1d61e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
   1d622:	f7ff ba54 	b.w	1cace <_svfprintf_r+0x216>
   1d626:	f8dd b010 	ldr.w	fp, [sp, #16]
   1d62a:	ad58      	add	r5, sp, #352	@ 0x160
   1d62c:	e54a      	b.n	1d0c4 <_svfprintf_r+0x80c>
   1d62e:	425b      	negs	r3, r3
   1d630:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
   1d634:	464c      	mov	r4, r9
   1d636:	202d      	movs	r0, #45	@ 0x2d
   1d638:	2101      	movs	r1, #1
   1d63a:	e41a      	b.n	1ce72 <_svfprintf_r+0x5ba>
   1d63c:	9905      	ldr	r1, [sp, #20]
   1d63e:	9803      	ldr	r0, [sp, #12]
   1d640:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d642:	f003 f961 	bl	20908 <__ssprint_r>
   1d646:	2800      	cmp	r0, #0
   1d648:	f47f adf1 	bne.w	1d22e <_svfprintf_r+0x976>
   1d64c:	e9dd 642d 	ldrd	r6, r4, [sp, #180]	@ 0xb4
   1d650:	af2f      	add	r7, sp, #188	@ 0xbc
   1d652:	e642      	b.n	1d2da <_svfprintf_r+0xa22>
   1d654:	9905      	ldr	r1, [sp, #20]
   1d656:	9803      	ldr	r0, [sp, #12]
   1d658:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d65a:	f003 f955 	bl	20908 <__ssprint_r>
   1d65e:	2800      	cmp	r0, #0
   1d660:	f47f ade5 	bne.w	1d22e <_svfprintf_r+0x976>
   1d664:	e9dd 642d 	ldrd	r6, r4, [sp, #180]	@ 0xb4
   1d668:	af2f      	add	r7, sp, #188	@ 0xbc
   1d66a:	e642      	b.n	1d2f2 <_svfprintf_r+0xa3a>
   1d66c:	f019 0f01 	tst.w	r9, #1
   1d670:	f43f aaa9 	beq.w	1cbc6 <_svfprintf_r+0x30e>
   1d674:	e4d4      	b.n	1d020 <_svfprintf_r+0x768>
   1d676:	9309      	str	r3, [sp, #36]	@ 0x24
   1d678:	7823      	ldrb	r3, [r4, #0]
   1d67a:	f7ff b976 	b.w	1c96a <_svfprintf_r+0xb2>
   1d67e:	ad58      	add	r5, sp, #352	@ 0x160
   1d680:	e520      	b.n	1d0c4 <_svfprintf_r+0x80c>
   1d682:	f419 7f00 	tst.w	r9, #512	@ 0x200
   1d686:	f040 8373 	bne.w	1dd70 <_svfprintf_r+0x14b8>
   1d68a:	17da      	asrs	r2, r3, #31
   1d68c:	4611      	mov	r1, r2
   1d68e:	f7ff bbb2 	b.w	1cdf6 <_svfprintf_r+0x53e>
   1d692:	f019 0f10 	tst.w	r9, #16
   1d696:	f040 82b1 	bne.w	1dbfc <_svfprintf_r+0x1344>
   1d69a:	f019 0f40 	tst.w	r9, #64	@ 0x40
   1d69e:	f040 8361 	bne.w	1dd64 <_svfprintf_r+0x14ac>
   1d6a2:	f419 7f00 	tst.w	r9, #512	@ 0x200
   1d6a6:	f000 82a9 	beq.w	1dbfc <_svfprintf_r+0x1344>
   1d6aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1d6ac:	9a06      	ldr	r2, [sp, #24]
   1d6ae:	681b      	ldr	r3, [r3, #0]
   1d6b0:	701a      	strb	r2, [r3, #0]
   1d6b2:	e40f      	b.n	1ced4 <_svfprintf_r+0x61c>
   1d6b4:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
   1d6b6:	7823      	ldrb	r3, [r4, #0]
   1d6b8:	2a00      	cmp	r2, #0
   1d6ba:	f43f a956 	beq.w	1c96a <_svfprintf_r+0xb2>
   1d6be:	7812      	ldrb	r2, [r2, #0]
   1d6c0:	2a00      	cmp	r2, #0
   1d6c2:	f43f a952 	beq.w	1c96a <_svfprintf_r+0xb2>
   1d6c6:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
   1d6ca:	f7ff b94e 	b.w	1c96a <_svfprintf_r+0xb2>
   1d6ce:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1d6d2:	4602      	mov	r2, r0
   1d6d4:	460b      	mov	r3, r1
   1d6d6:	f7fb fb4f 	bl	18d78 <__aeabi_dcmpun>
   1d6da:	2800      	cmp	r0, #0
   1d6dc:	f040 8618 	bne.w	1e310 <_svfprintf_r+0x1a58>
   1d6e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1d6e2:	2b61      	cmp	r3, #97	@ 0x61
   1d6e4:	f000 8508 	beq.w	1e0f8 <_svfprintf_r+0x1840>
   1d6e8:	2b41      	cmp	r3, #65	@ 0x41
   1d6ea:	f000 858b 	beq.w	1e204 <_svfprintf_r+0x194c>
   1d6ee:	9b04      	ldr	r3, [sp, #16]
   1d6f0:	3301      	adds	r3, #1
   1d6f2:	f000 8415 	beq.w	1df20 <_svfprintf_r+0x1668>
   1d6f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1d6f8:	f023 0320 	bic.w	r3, r3, #32
   1d6fc:	2b47      	cmp	r3, #71	@ 0x47
   1d6fe:	d104      	bne.n	1d70a <_svfprintf_r+0xe52>
   1d700:	9b04      	ldr	r3, [sp, #16]
   1d702:	2b00      	cmp	r3, #0
   1d704:	bf08      	it	eq
   1d706:	2301      	moveq	r3, #1
   1d708:	9304      	str	r3, [sp, #16]
   1d70a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1d70e:	f449 7280 	orr.w	r2, r9, #256	@ 0x100
   1d712:	2900      	cmp	r1, #0
   1d714:	9211      	str	r2, [sp, #68]	@ 0x44
   1d716:	f2c0 8529 	blt.w	1e16c <_svfprintf_r+0x18b4>
   1d71a:	2300      	movs	r3, #0
   1d71c:	ec41 0b18 	vmov	d8, r0, r1
   1d720:	f8cd 9008 	str.w	r9, [sp, #8]
   1d724:	931b      	str	r3, [sp, #108]	@ 0x6c
   1d726:	9308      	str	r3, [sp, #32]
   1d728:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1d72a:	3b41      	subs	r3, #65	@ 0x41
   1d72c:	2b25      	cmp	r3, #37	@ 0x25
   1d72e:	f200 8327 	bhi.w	1dd80 <_svfprintf_r+0x14c8>
   1d732:	e8df f013 	tbh	[pc, r3, lsl #1]
   1d736:	0400      	.short	0x0400
   1d738:	03250325 	.word	0x03250325
   1d73c:	03f90325 	.word	0x03f90325
   1d740:	032503fd 	.word	0x032503fd
   1d744:	03250325 	.word	0x03250325
   1d748:	03250325 	.word	0x03250325
   1d74c:	03250325 	.word	0x03250325
   1d750:	03250325 	.word	0x03250325
   1d754:	03250325 	.word	0x03250325
   1d758:	03250325 	.word	0x03250325
   1d75c:	03250325 	.word	0x03250325
   1d760:	03250325 	.word	0x03250325
   1d764:	03250325 	.word	0x03250325
   1d768:	03250325 	.word	0x03250325
   1d76c:	03250325 	.word	0x03250325
   1d770:	03250325 	.word	0x03250325
   1d774:	03250325 	.word	0x03250325
   1d778:	03250325 	.word	0x03250325
   1d77c:	03f90325 	.word	0x03f90325
   1d780:	03fd      	.short	0x03fd
   1d782:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1d786:	f7ff bb63 	b.w	1ce50 <_svfprintf_r+0x598>
   1d78a:	bf00      	nop
   1d78c:	000281c0 	.word	0x000281c0
   1d790:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1d794:	464c      	mov	r4, r9
   1d796:	f7ff bbc9 	b.w	1cf2c <_svfprintf_r+0x674>
   1d79a:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1d79e:	4bbd      	ldr	r3, [pc, #756]	@ (1da94 <_svfprintf_r+0x11dc>)
   1d7a0:	9315      	str	r3, [sp, #84]	@ 0x54
   1d7a2:	f019 0220 	ands.w	r2, r9, #32
   1d7a6:	f000 8108 	beq.w	1d9ba <_svfprintf_r+0x1102>
   1d7aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1d7ac:	3307      	adds	r3, #7
   1d7ae:	f023 0307 	bic.w	r3, r3, #7
   1d7b2:	4619      	mov	r1, r3
   1d7b4:	685a      	ldr	r2, [r3, #4]
   1d7b6:	f851 3b08 	ldr.w	r3, [r1], #8
   1d7ba:	9109      	str	r1, [sp, #36]	@ 0x24
   1d7bc:	f019 0f01 	tst.w	r9, #1
   1d7c0:	d00a      	beq.n	1d7d8 <_svfprintf_r+0xf20>
   1d7c2:	ea53 0102 	orrs.w	r1, r3, r2
   1d7c6:	d007      	beq.n	1d7d8 <_svfprintf_r+0xf20>
   1d7c8:	990a      	ldr	r1, [sp, #40]	@ 0x28
   1d7ca:	f88d 1089 	strb.w	r1, [sp, #137]	@ 0x89
   1d7ce:	2130      	movs	r1, #48	@ 0x30
   1d7d0:	f049 0902 	orr.w	r9, r9, #2
   1d7d4:	f88d 1088 	strb.w	r1, [sp, #136]	@ 0x88
   1d7d8:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
   1d7dc:	2102      	movs	r1, #2
   1d7de:	f7ff bb47 	b.w	1ce70 <_svfprintf_r+0x5b8>
   1d7e2:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
   1d7e6:	4bac      	ldr	r3, [pc, #688]	@ (1da98 <_svfprintf_r+0x11e0>)
   1d7e8:	9315      	str	r3, [sp, #84]	@ 0x54
   1d7ea:	e7da      	b.n	1d7a2 <_svfprintf_r+0xeea>
   1d7ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1d7ee:	681b      	ldr	r3, [r3, #0]
   1d7f0:	f88d 30fc 	strb.w	r3, [sp, #252]	@ 0xfc
   1d7f4:	2301      	movs	r3, #1
   1d7f6:	9302      	str	r3, [sp, #8]
   1d7f8:	469b      	mov	fp, r3
   1d7fa:	ad3f      	add	r5, sp, #252	@ 0xfc
   1d7fc:	f7ff baaf 	b.w	1cd5e <_svfprintf_r+0x4a6>
   1d800:	9905      	ldr	r1, [sp, #20]
   1d802:	9803      	ldr	r0, [sp, #12]
   1d804:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d806:	f003 f87f 	bl	20908 <__ssprint_r>
   1d80a:	2800      	cmp	r0, #0
   1d80c:	f47f ad0f 	bne.w	1d22e <_svfprintf_r+0x976>
   1d810:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1d812:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1d816:	e411      	b.n	1d03c <_svfprintf_r+0x784>
   1d818:	2140      	movs	r1, #64	@ 0x40
   1d81a:	4658      	mov	r0, fp
   1d81c:	f002 f99c 	bl	1fb58 <_malloc_r>
   1d820:	9b05      	ldr	r3, [sp, #20]
   1d822:	6018      	str	r0, [r3, #0]
   1d824:	6118      	str	r0, [r3, #16]
   1d826:	2800      	cmp	r0, #0
   1d828:	f000 861c 	beq.w	1e464 <_svfprintf_r+0x1bac>
   1d82c:	9a05      	ldr	r2, [sp, #20]
   1d82e:	2340      	movs	r3, #64	@ 0x40
   1d830:	6153      	str	r3, [r2, #20]
   1d832:	f7ff b85f 	b.w	1c8f4 <_svfprintf_r+0x3c>
   1d836:	9b04      	ldr	r3, [sp, #16]
   1d838:	9508      	str	r5, [sp, #32]
   1d83a:	2b06      	cmp	r3, #6
   1d83c:	4629      	mov	r1, r5
   1d83e:	bf28      	it	cs
   1d840:	2306      	movcs	r3, #6
   1d842:	9504      	str	r5, [sp, #16]
   1d844:	462a      	mov	r2, r5
   1d846:	9302      	str	r3, [sp, #8]
   1d848:	4d94      	ldr	r5, [pc, #592]	@ (1da9c <_svfprintf_r+0x11e4>)
   1d84a:	9609      	str	r6, [sp, #36]	@ 0x24
   1d84c:	469b      	mov	fp, r3
   1d84e:	9110      	str	r1, [sp, #64]	@ 0x40
   1d850:	910c      	str	r1, [sp, #48]	@ 0x30
   1d852:	910e      	str	r1, [sp, #56]	@ 0x38
   1d854:	f7ff ba1b 	b.w	1cc8e <_svfprintf_r+0x3d6>
   1d858:	2e10      	cmp	r6, #16
   1d85a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1d85c:	f340 85f3 	ble.w	1e446 <_svfprintf_r+0x1b8e>
   1d860:	488f      	ldr	r0, [pc, #572]	@ (1daa0 <_svfprintf_r+0x11e8>)
   1d862:	f8dd a00c 	ldr.w	sl, [sp, #12]
   1d866:	9011      	str	r0, [sp, #68]	@ 0x44
   1d868:	4642      	mov	r2, r8
   1d86a:	4621      	mov	r1, r4
   1d86c:	46a8      	mov	r8, r5
   1d86e:	9c05      	ldr	r4, [sp, #20]
   1d870:	2710      	movs	r7, #16
   1d872:	4605      	mov	r5, r0
   1d874:	e004      	b.n	1d880 <_svfprintf_r+0xfc8>
   1d876:	3208      	adds	r2, #8
   1d878:	3e10      	subs	r6, #16
   1d87a:	2e10      	cmp	r6, #16
   1d87c:	f340 8223 	ble.w	1dcc6 <_svfprintf_r+0x140e>
   1d880:	3301      	adds	r3, #1
   1d882:	3110      	adds	r1, #16
   1d884:	2b07      	cmp	r3, #7
   1d886:	e9c2 5700 	strd	r5, r7, [r2]
   1d88a:	e9cd 312d 	strd	r3, r1, [sp, #180]	@ 0xb4
   1d88e:	ddf2      	ble.n	1d876 <_svfprintf_r+0xfbe>
   1d890:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d892:	4621      	mov	r1, r4
   1d894:	4650      	mov	r0, sl
   1d896:	f003 f837 	bl	20908 <__ssprint_r>
   1d89a:	2800      	cmp	r0, #0
   1d89c:	f040 8117 	bne.w	1dace <_svfprintf_r+0x1216>
   1d8a0:	e9dd 312d 	ldrd	r3, r1, [sp, #180]	@ 0xb4
   1d8a4:	aa2f      	add	r2, sp, #188	@ 0xbc
   1d8a6:	e7e7      	b.n	1d878 <_svfprintf_r+0xfc0>
   1d8a8:	4621      	mov	r1, r4
   1d8aa:	461c      	mov	r4, r3
   1d8ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
   1d8ae:	f8cd b010 	str.w	fp, [sp, #16]
   1d8b2:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
   1d8b6:	4642      	mov	r2, r8
   1d8b8:	4f79      	ldr	r7, [pc, #484]	@ (1daa0 <_svfprintf_r+0x11e8>)
   1d8ba:	f8dd 9040 	ldr.w	r9, [sp, #64]	@ 0x40
   1d8be:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
   1d8c2:	f8dd a05c 	ldr.w	sl, [sp, #92]	@ 0x5c
   1d8c6:	f8dd b00c 	ldr.w	fp, [sp, #12]
   1d8ca:	b383      	cbz	r3, 1d92e <_svfprintf_r+0x1076>
   1d8cc:	f1b9 0f00 	cmp.w	r9, #0
   1d8d0:	f000 80ff 	beq.w	1dad2 <_svfprintf_r+0x121a>
   1d8d4:	f109 39ff 	add.w	r9, r9, #4294967295
   1d8d8:	982d      	ldr	r0, [sp, #180]	@ 0xb4
   1d8da:	9b19      	ldr	r3, [sp, #100]	@ 0x64
   1d8dc:	3001      	adds	r0, #1
   1d8de:	4441      	add	r1, r8
   1d8e0:	2807      	cmp	r0, #7
   1d8e2:	e9c2 3800 	strd	r3, r8, [r2]
   1d8e6:	912e      	str	r1, [sp, #184]	@ 0xb8
   1d8e8:	902d      	str	r0, [sp, #180]	@ 0xb4
   1d8ea:	dc75      	bgt.n	1d9d8 <_svfprintf_r+0x1120>
   1d8ec:	3208      	adds	r2, #8
   1d8ee:	9b04      	ldr	r3, [sp, #16]
   1d8f0:	f89a 0000 	ldrb.w	r0, [sl]
   1d8f4:	1b1e      	subs	r6, r3, r4
   1d8f6:	4286      	cmp	r6, r0
   1d8f8:	bfa8      	it	ge
   1d8fa:	4606      	movge	r6, r0
   1d8fc:	2e00      	cmp	r6, #0
   1d8fe:	dd0c      	ble.n	1d91a <_svfprintf_r+0x1062>
   1d900:	982d      	ldr	r0, [sp, #180]	@ 0xb4
   1d902:	3001      	adds	r0, #1
   1d904:	4431      	add	r1, r6
   1d906:	2807      	cmp	r0, #7
   1d908:	e9c2 4600 	strd	r4, r6, [r2]
   1d90c:	912e      	str	r1, [sp, #184]	@ 0xb8
   1d90e:	902d      	str	r0, [sp, #180]	@ 0xb4
   1d910:	f300 8167 	bgt.w	1dbe2 <_svfprintf_r+0x132a>
   1d914:	f89a 0000 	ldrb.w	r0, [sl]
   1d918:	3208      	adds	r2, #8
   1d91a:	2e00      	cmp	r6, #0
   1d91c:	bfac      	ite	ge
   1d91e:	1b85      	subge	r5, r0, r6
   1d920:	4605      	movlt	r5, r0
   1d922:	2d00      	cmp	r5, #0
   1d924:	dc13      	bgt.n	1d94e <_svfprintf_r+0x1096>
   1d926:	4404      	add	r4, r0
   1d928:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
   1d92a:	2b00      	cmp	r3, #0
   1d92c:	d1ce      	bne.n	1d8cc <_svfprintf_r+0x1014>
   1d92e:	f1b9 0f00 	cmp.w	r9, #0
   1d932:	d1cf      	bne.n	1d8d4 <_svfprintf_r+0x101c>
   1d934:	f8dd b010 	ldr.w	fp, [sp, #16]
   1d938:	f8cd a05c 	str.w	sl, [sp, #92]	@ 0x5c
   1d93c:	46a2      	mov	sl, r4
   1d93e:	45da      	cmp	sl, fp
   1d940:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
   1d944:	4690      	mov	r8, r2
   1d946:	460c      	mov	r4, r1
   1d948:	bf28      	it	cs
   1d94a:	46da      	movcs	sl, fp
   1d94c:	e58b      	b.n	1d466 <_svfprintf_r+0xbae>
   1d94e:	2d10      	cmp	r5, #16
   1d950:	982d      	ldr	r0, [sp, #180]	@ 0xb4
   1d952:	f340 8547 	ble.w	1e3e4 <_svfprintf_r+0x1b2c>
   1d956:	4623      	mov	r3, r4
   1d958:	463e      	mov	r6, r7
   1d95a:	462c      	mov	r4, r5
   1d95c:	461d      	mov	r5, r3
   1d95e:	e004      	b.n	1d96a <_svfprintf_r+0x10b2>
   1d960:	3c10      	subs	r4, #16
   1d962:	2c10      	cmp	r4, #16
   1d964:	f102 0208 	add.w	r2, r2, #8
   1d968:	dd16      	ble.n	1d998 <_svfprintf_r+0x10e0>
   1d96a:	3001      	adds	r0, #1
   1d96c:	3110      	adds	r1, #16
   1d96e:	2310      	movs	r3, #16
   1d970:	2807      	cmp	r0, #7
   1d972:	e9cd 012d 	strd	r0, r1, [sp, #180]	@ 0xb4
   1d976:	6017      	str	r7, [r2, #0]
   1d978:	6053      	str	r3, [r2, #4]
   1d97a:	ddf1      	ble.n	1d960 <_svfprintf_r+0x10a8>
   1d97c:	9905      	ldr	r1, [sp, #20]
   1d97e:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d980:	4658      	mov	r0, fp
   1d982:	f002 ffc1 	bl	20908 <__ssprint_r>
   1d986:	2800      	cmp	r0, #0
   1d988:	f47f ae3f 	bne.w	1d60a <_svfprintf_r+0xd52>
   1d98c:	3c10      	subs	r4, #16
   1d98e:	2c10      	cmp	r4, #16
   1d990:	e9dd 012d 	ldrd	r0, r1, [sp, #180]	@ 0xb4
   1d994:	aa2f      	add	r2, sp, #188	@ 0xbc
   1d996:	dce8      	bgt.n	1d96a <_svfprintf_r+0x10b2>
   1d998:	462b      	mov	r3, r5
   1d99a:	4625      	mov	r5, r4
   1d99c:	461c      	mov	r4, r3
   1d99e:	3001      	adds	r0, #1
   1d9a0:	4429      	add	r1, r5
   1d9a2:	2807      	cmp	r0, #7
   1d9a4:	e9cd 012d 	strd	r0, r1, [sp, #180]	@ 0xb4
   1d9a8:	6016      	str	r6, [r2, #0]
   1d9aa:	6055      	str	r5, [r2, #4]
   1d9ac:	f300 8381 	bgt.w	1e0b2 <_svfprintf_r+0x17fa>
   1d9b0:	f89a 0000 	ldrb.w	r0, [sl]
   1d9b4:	3208      	adds	r2, #8
   1d9b6:	4404      	add	r4, r0
   1d9b8:	e7b6      	b.n	1d928 <_svfprintf_r+0x1070>
   1d9ba:	9909      	ldr	r1, [sp, #36]	@ 0x24
   1d9bc:	f851 3b04 	ldr.w	r3, [r1], #4
   1d9c0:	9109      	str	r1, [sp, #36]	@ 0x24
   1d9c2:	f019 0110 	ands.w	r1, r9, #16
   1d9c6:	f47f aef9 	bne.w	1d7bc <_svfprintf_r+0xf04>
   1d9ca:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
   1d9ce:	f000 815f 	beq.w	1dc90 <_svfprintf_r+0x13d8>
   1d9d2:	b29b      	uxth	r3, r3
   1d9d4:	460a      	mov	r2, r1
   1d9d6:	e6f1      	b.n	1d7bc <_svfprintf_r+0xf04>
   1d9d8:	9905      	ldr	r1, [sp, #20]
   1d9da:	aa2c      	add	r2, sp, #176	@ 0xb0
   1d9dc:	4658      	mov	r0, fp
   1d9de:	f002 ff93 	bl	20908 <__ssprint_r>
   1d9e2:	2800      	cmp	r0, #0
   1d9e4:	f47f ae11 	bne.w	1d60a <_svfprintf_r+0xd52>
   1d9e8:	992e      	ldr	r1, [sp, #184]	@ 0xb8
   1d9ea:	aa2f      	add	r2, sp, #188	@ 0xbc
   1d9ec:	e77f      	b.n	1d8ee <_svfprintf_r+0x1036>
   1d9ee:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
   1d9f2:	2100      	movs	r1, #0
   1d9f4:	f8cd 8020 	str.w	r8, [sp, #32]
   1d9f8:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 1daa4 <_svfprintf_r+0x11ec>
   1d9fc:	f8dd 805c 	ldr.w	r8, [sp, #92]	@ 0x5c
   1da00:	9402      	str	r4, [sp, #8]
   1da02:	ad58      	add	r5, sp, #352	@ 0x160
   1da04:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
   1da08:	2705      	movs	r7, #5
   1da0a:	468c      	mov	ip, r1
   1da0c:	465e      	mov	r6, fp
   1da0e:	e005      	b.n	1da1c <_svfprintf_r+0x1164>
   1da10:	2b0a      	cmp	r3, #10
   1da12:	f172 0200 	sbcs.w	r2, r2, #0
   1da16:	d333      	bcc.n	1da80 <_svfprintf_r+0x11c8>
   1da18:	465b      	mov	r3, fp
   1da1a:	4622      	mov	r2, r4
   1da1c:	1899      	adds	r1, r3, r2
   1da1e:	f141 0100 	adc.w	r1, r1, #0
   1da22:	fba9 0401 	umull	r0, r4, r9, r1
   1da26:	f024 0003 	bic.w	r0, r4, #3
   1da2a:	eb00 0094 	add.w	r0, r0, r4, lsr #2
   1da2e:	1a09      	subs	r1, r1, r0
   1da30:	1a58      	subs	r0, r3, r1
   1da32:	f162 0e00 	sbc.w	lr, r2, #0
   1da36:	fb0a f400 	mul.w	r4, sl, r0
   1da3a:	fba0 b009 	umull	fp, r0, r0, r9
   1da3e:	fb09 440e 	mla	r4, r9, lr, r4
   1da42:	f00b 0e01 	and.w	lr, fp, #1
   1da46:	4404      	add	r4, r0
   1da48:	fbae 0e07 	umull	r0, lr, lr, r7
   1da4c:	1840      	adds	r0, r0, r1
   1da4e:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
   1da52:	3030      	adds	r0, #48	@ 0x30
   1da54:	f805 0c01 	strb.w	r0, [r5, #-1]
   1da58:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
   1da5c:	f10c 0c01 	add.w	ip, ip, #1
   1da60:	3d01      	subs	r5, #1
   1da62:	0864      	lsrs	r4, r4, #1
   1da64:	2e00      	cmp	r6, #0
   1da66:	d0d3      	beq.n	1da10 <_svfprintf_r+0x1158>
   1da68:	f898 1000 	ldrb.w	r1, [r8]
   1da6c:	458c      	cmp	ip, r1
   1da6e:	d1cf      	bne.n	1da10 <_svfprintf_r+0x1158>
   1da70:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
   1da74:	d0cc      	beq.n	1da10 <_svfprintf_r+0x1158>
   1da76:	2b0a      	cmp	r3, #10
   1da78:	f172 0200 	sbcs.w	r2, r2, #0
   1da7c:	f080 8136 	bcs.w	1dcec <_svfprintf_r+0x1434>
   1da80:	f8cd 805c 	str.w	r8, [sp, #92]	@ 0x5c
   1da84:	9c02      	ldr	r4, [sp, #8]
   1da86:	f8dd 8020 	ldr.w	r8, [sp, #32]
   1da8a:	f8cd c03c 	str.w	ip, [sp, #60]	@ 0x3c
   1da8e:	f7ff bb15 	b.w	1d0bc <_svfprintf_r+0x804>
   1da92:	bf00      	nop
   1da94:	000281a0 	.word	0x000281a0
   1da98:	0002818c 	.word	0x0002818c
   1da9c:	000281b4 	.word	0x000281b4
   1daa0:	000281c0 	.word	0x000281c0
   1daa4:	cccccccd 	.word	0xcccccccd
   1daa8:	9905      	ldr	r1, [sp, #20]
   1daaa:	9803      	ldr	r0, [sp, #12]
   1daac:	9311      	str	r3, [sp, #68]	@ 0x44
   1daae:	aa2c      	add	r2, sp, #176	@ 0xb0
   1dab0:	f002 ff2a 	bl	20908 <__ssprint_r>
   1dab4:	2800      	cmp	r0, #0
   1dab6:	f47f abba 	bne.w	1d22e <_svfprintf_r+0x976>
   1daba:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1dabe:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1dac0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1dac2:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1dac6:	f7ff b83f 	b.w	1cb48 <_svfprintf_r+0x290>
   1daca:	46a3      	mov	fp, r4
   1dacc:	e59d      	b.n	1d60a <_svfprintf_r+0xd52>
   1dace:	46d3      	mov	fp, sl
   1dad0:	e59b      	b.n	1d60a <_svfprintf_r+0xd52>
   1dad2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
   1dad4:	3b01      	subs	r3, #1
   1dad6:	f10a 3aff 	add.w	sl, sl, #4294967295
   1dada:	930c      	str	r3, [sp, #48]	@ 0x30
   1dadc:	e6fc      	b.n	1d8d8 <_svfprintf_r+0x1020>
   1dade:	2901      	cmp	r1, #1
   1dae0:	464c      	mov	r4, r9
   1dae2:	f47f aadb 	bne.w	1d09c <_svfprintf_r+0x7e4>
   1dae6:	e42f      	b.n	1d348 <_svfprintf_r+0xa90>
   1dae8:	9905      	ldr	r1, [sp, #20]
   1daea:	9803      	ldr	r0, [sp, #12]
   1daec:	aa2c      	add	r2, sp, #176	@ 0xb0
   1daee:	f002 ff0b 	bl	20908 <__ssprint_r>
   1daf2:	2800      	cmp	r0, #0
   1daf4:	f47f ab9b 	bne.w	1d22e <_svfprintf_r+0x976>
   1daf8:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1dafa:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1dafe:	f7ff ba8a 	b.w	1d016 <_svfprintf_r+0x75e>
   1db02:	af2a      	add	r7, sp, #168	@ 0xa8
   1db04:	2208      	movs	r2, #8
   1db06:	2100      	movs	r1, #0
   1db08:	4638      	mov	r0, r7
   1db0a:	9525      	str	r5, [sp, #148]	@ 0x94
   1db0c:	f000 fdee 	bl	1e6ec <memset>
   1db10:	9b04      	ldr	r3, [sp, #16]
   1db12:	1c58      	adds	r0, r3, #1
   1db14:	f000 80c9 	beq.w	1dcaa <_svfprintf_r+0x13f2>
   1db18:	2400      	movs	r4, #0
   1db1a:	f8cd 9008 	str.w	r9, [sp, #8]
   1db1e:	46a3      	mov	fp, r4
   1db20:	f8dd 900c 	ldr.w	r9, [sp, #12]
   1db24:	469a      	mov	sl, r3
   1db26:	e00c      	b.n	1db42 <_svfprintf_r+0x128a>
   1db28:	a93f      	add	r1, sp, #252	@ 0xfc
   1db2a:	4648      	mov	r0, r9
   1db2c:	f002 feba 	bl	208a4 <_wcrtomb_r>
   1db30:	1c41      	adds	r1, r0, #1
   1db32:	4458      	add	r0, fp
   1db34:	f000 8399 	beq.w	1e26a <_svfprintf_r+0x19b2>
   1db38:	4550      	cmp	r0, sl
   1db3a:	dc08      	bgt.n	1db4e <_svfprintf_r+0x1296>
   1db3c:	f000 844c 	beq.w	1e3d8 <_svfprintf_r+0x1b20>
   1db40:	4683      	mov	fp, r0
   1db42:	9a25      	ldr	r2, [sp, #148]	@ 0x94
   1db44:	5912      	ldr	r2, [r2, r4]
   1db46:	463b      	mov	r3, r7
   1db48:	3404      	adds	r4, #4
   1db4a:	2a00      	cmp	r2, #0
   1db4c:	d1ec      	bne.n	1db28 <_svfprintf_r+0x1270>
   1db4e:	f8dd 9008 	ldr.w	r9, [sp, #8]
   1db52:	f1bb 0f00 	cmp.w	fp, #0
   1db56:	f000 80dd 	beq.w	1dd14 <_svfprintf_r+0x145c>
   1db5a:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
   1db5e:	f300 81b9 	bgt.w	1ded4 <_svfprintf_r+0x161c>
   1db62:	2300      	movs	r3, #0
   1db64:	9308      	str	r3, [sp, #32]
   1db66:	ad3f      	add	r5, sp, #252	@ 0xfc
   1db68:	2208      	movs	r2, #8
   1db6a:	2100      	movs	r1, #0
   1db6c:	4638      	mov	r0, r7
   1db6e:	f000 fdbd 	bl	1e6ec <memset>
   1db72:	9803      	ldr	r0, [sp, #12]
   1db74:	9700      	str	r7, [sp, #0]
   1db76:	465b      	mov	r3, fp
   1db78:	aa25      	add	r2, sp, #148	@ 0x94
   1db7a:	4629      	mov	r1, r5
   1db7c:	f002 feb8 	bl	208f0 <_wcsrtombs_r>
   1db80:	4583      	cmp	fp, r0
   1db82:	f040 8466 	bne.w	1e452 <_svfprintf_r+0x1b9a>
   1db86:	2300      	movs	r3, #0
   1db88:	f805 300b 	strb.w	r3, [r5, fp]
   1db8c:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
   1db90:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1db94:	9609      	str	r6, [sp, #36]	@ 0x24
   1db96:	9304      	str	r3, [sp, #16]
   1db98:	9102      	str	r1, [sp, #8]
   1db9a:	9310      	str	r3, [sp, #64]	@ 0x40
   1db9c:	930c      	str	r3, [sp, #48]	@ 0x30
   1db9e:	930e      	str	r3, [sp, #56]	@ 0x38
   1dba0:	f7ff b875 	b.w	1cc8e <_svfprintf_r+0x3d6>
   1dba4:	46cb      	mov	fp, r9
   1dba6:	e530      	b.n	1d60a <_svfprintf_r+0xd52>
   1dba8:	4a74      	ldr	r2, [pc, #464]	@ (1dd7c <_svfprintf_r+0x14c4>)
   1dbaa:	9211      	str	r2, [sp, #68]	@ 0x44
   1dbac:	3301      	adds	r3, #1
   1dbae:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1dbb0:	f8c8 2000 	str.w	r2, [r8]
   1dbb4:	442c      	add	r4, r5
   1dbb6:	2b07      	cmp	r3, #7
   1dbb8:	f8c8 5004 	str.w	r5, [r8, #4]
   1dbbc:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1dbc0:	f77e afff 	ble.w	1cbc2 <_svfprintf_r+0x30a>
   1dbc4:	f7ff bb69 	b.w	1d29a <_svfprintf_r+0x9e2>
   1dbc8:	9905      	ldr	r1, [sp, #20]
   1dbca:	9803      	ldr	r0, [sp, #12]
   1dbcc:	aa2c      	add	r2, sp, #176	@ 0xb0
   1dbce:	f002 fe9b 	bl	20908 <__ssprint_r>
   1dbd2:	2800      	cmp	r0, #0
   1dbd4:	f47f ab2b 	bne.w	1d22e <_svfprintf_r+0x976>
   1dbd8:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1dbda:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1dbde:	f7fe bfda 	b.w	1cb96 <_svfprintf_r+0x2de>
   1dbe2:	9905      	ldr	r1, [sp, #20]
   1dbe4:	aa2c      	add	r2, sp, #176	@ 0xb0
   1dbe6:	4658      	mov	r0, fp
   1dbe8:	f002 fe8e 	bl	20908 <__ssprint_r>
   1dbec:	2800      	cmp	r0, #0
   1dbee:	f47f ad0c 	bne.w	1d60a <_svfprintf_r+0xd52>
   1dbf2:	f89a 0000 	ldrb.w	r0, [sl]
   1dbf6:	992e      	ldr	r1, [sp, #184]	@ 0xb8
   1dbf8:	aa2f      	add	r2, sp, #188	@ 0xbc
   1dbfa:	e68e      	b.n	1d91a <_svfprintf_r+0x1062>
   1dbfc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1dbfe:	9a06      	ldr	r2, [sp, #24]
   1dc00:	681b      	ldr	r3, [r3, #0]
   1dc02:	601a      	str	r2, [r3, #0]
   1dc04:	f7ff b966 	b.w	1ced4 <_svfprintf_r+0x61c>
   1dc08:	f8dd 9010 	ldr.w	r9, [sp, #16]
   1dc0c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   1dc0e:	603b      	str	r3, [r7, #0]
   1dc10:	3601      	adds	r6, #1
   1dc12:	4444      	add	r4, r8
   1dc14:	2e07      	cmp	r6, #7
   1dc16:	e9cd 642d 	strd	r6, r4, [sp, #180]	@ 0xb4
   1dc1a:	f8c7 8004 	str.w	r8, [r7, #4]
   1dc1e:	f77f ab7f 	ble.w	1d320 <_svfprintf_r+0xa68>
   1dc22:	e487      	b.n	1d534 <_svfprintf_r+0xc7c>
   1dc24:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   1dc26:	9916      	ldr	r1, [sp, #88]	@ 0x58
   1dc28:	441c      	add	r4, r3
   1dc2a:	e9c8 1300 	strd	r1, r3, [r8]
   1dc2e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
   1dc30:	942e      	str	r4, [sp, #184]	@ 0xb8
   1dc32:	3301      	adds	r3, #1
   1dc34:	2b07      	cmp	r3, #7
   1dc36:	932d      	str	r3, [sp, #180]	@ 0xb4
   1dc38:	f300 8164 	bgt.w	1df04 <_svfprintf_r+0x164c>
   1dc3c:	f108 0808 	add.w	r8, r8, #8
   1dc40:	2a00      	cmp	r2, #0
   1dc42:	f6bf ab1e 	bge.w	1d282 <_svfprintf_r+0x9ca>
   1dc46:	4256      	negs	r6, r2
   1dc48:	3210      	adds	r2, #16
   1dc4a:	4a4c      	ldr	r2, [pc, #304]	@ (1dd7c <_svfprintf_r+0x14c4>)
   1dc4c:	9211      	str	r2, [sp, #68]	@ 0x44
   1dc4e:	f280 82f2 	bge.w	1e236 <_svfprintf_r+0x197e>
   1dc52:	46aa      	mov	sl, r5
   1dc54:	2710      	movs	r7, #16
   1dc56:	4615      	mov	r5, r2
   1dc58:	e005      	b.n	1dc66 <_svfprintf_r+0x13ae>
   1dc5a:	f108 0808 	add.w	r8, r8, #8
   1dc5e:	3e10      	subs	r6, #16
   1dc60:	2e10      	cmp	r6, #16
   1dc62:	f340 82e7 	ble.w	1e234 <_svfprintf_r+0x197c>
   1dc66:	3301      	adds	r3, #1
   1dc68:	3410      	adds	r4, #16
   1dc6a:	2b07      	cmp	r3, #7
   1dc6c:	e9c8 5700 	strd	r5, r7, [r8]
   1dc70:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1dc74:	ddf1      	ble.n	1dc5a <_svfprintf_r+0x13a2>
   1dc76:	9905      	ldr	r1, [sp, #20]
   1dc78:	9803      	ldr	r0, [sp, #12]
   1dc7a:	aa2c      	add	r2, sp, #176	@ 0xb0
   1dc7c:	f002 fe44 	bl	20908 <__ssprint_r>
   1dc80:	2800      	cmp	r0, #0
   1dc82:	f47f aad4 	bne.w	1d22e <_svfprintf_r+0x976>
   1dc86:	e9dd 342d 	ldrd	r3, r4, [sp, #180]	@ 0xb4
   1dc8a:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1dc8e:	e7e6      	b.n	1dc5e <_svfprintf_r+0x13a6>
   1dc90:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
   1dc94:	bf1c      	itt	ne
   1dc96:	b2db      	uxtbne	r3, r3
   1dc98:	4602      	movne	r2, r0
   1dc9a:	e58f      	b.n	1d7bc <_svfprintf_r+0xf04>
   1dc9c:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
   1dca0:	bf1c      	itt	ne
   1dca2:	b2db      	uxtbne	r3, r3
   1dca4:	4602      	movne	r2, r0
   1dca6:	f7ff b8e0 	b.w	1ce6a <_svfprintf_r+0x5b2>
   1dcaa:	2300      	movs	r3, #0
   1dcac:	9803      	ldr	r0, [sp, #12]
   1dcae:	9700      	str	r7, [sp, #0]
   1dcb0:	aa25      	add	r2, sp, #148	@ 0x94
   1dcb2:	4619      	mov	r1, r3
   1dcb4:	f002 fe1c 	bl	208f0 <_wcsrtombs_r>
   1dcb8:	f1b0 3fff 	cmp.w	r0, #4294967295
   1dcbc:	4683      	mov	fp, r0
   1dcbe:	f000 82d4 	beq.w	1e26a <_svfprintf_r+0x19b2>
   1dcc2:	9525      	str	r5, [sp, #148]	@ 0x94
   1dcc4:	e745      	b.n	1db52 <_svfprintf_r+0x129a>
   1dcc6:	4645      	mov	r5, r8
   1dcc8:	460c      	mov	r4, r1
   1dcca:	4690      	mov	r8, r2
   1dccc:	3301      	adds	r3, #1
   1dcce:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1dcd0:	f8c8 2000 	str.w	r2, [r8]
   1dcd4:	4434      	add	r4, r6
   1dcd6:	2b07      	cmp	r3, #7
   1dcd8:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1dcdc:	f8c8 6004 	str.w	r6, [r8, #4]
   1dce0:	f300 8103 	bgt.w	1deea <_svfprintf_r+0x1632>
   1dce4:	f108 0808 	add.w	r8, r8, #8
   1dce8:	f7ff bbb6 	b.w	1d458 <_svfprintf_r+0xba0>
   1dcec:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
   1dcee:	9919      	ldr	r1, [sp, #100]	@ 0x64
   1dcf0:	1aed      	subs	r5, r5, r3
   1dcf2:	461a      	mov	r2, r3
   1dcf4:	4628      	mov	r0, r5
   1dcf6:	f000 fd4b 	bl	1e790 <strncpy>
   1dcfa:	f898 3001 	ldrb.w	r3, [r8, #1]
   1dcfe:	b10b      	cbz	r3, 1dd04 <_svfprintf_r+0x144c>
   1dd00:	f108 0801 	add.w	r8, r8, #1
   1dd04:	f04f 0c00 	mov.w	ip, #0
   1dd08:	e686      	b.n	1da18 <_svfprintf_r+0x1160>
   1dd0a:	222d      	movs	r2, #45	@ 0x2d
   1dd0c:	f88d 2087 	strb.w	r2, [sp, #135]	@ 0x87
   1dd10:	f7fe bfac 	b.w	1cc6c <_svfprintf_r+0x3b4>
   1dd14:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1dd18:	9609      	str	r6, [sp, #36]	@ 0x24
   1dd1a:	f8cd b008 	str.w	fp, [sp, #8]
   1dd1e:	f8cd b010 	str.w	fp, [sp, #16]
   1dd22:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
   1dd26:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
   1dd2a:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
   1dd2e:	f8cd b020 	str.w	fp, [sp, #32]
   1dd32:	f7fe bfac 	b.w	1cc8e <_svfprintf_r+0x3d6>
   1dd36:	9905      	ldr	r1, [sp, #20]
   1dd38:	9803      	ldr	r0, [sp, #12]
   1dd3a:	aa2c      	add	r2, sp, #176	@ 0xb0
   1dd3c:	f002 fde4 	bl	20908 <__ssprint_r>
   1dd40:	2800      	cmp	r0, #0
   1dd42:	f47f aa74 	bne.w	1d22e <_svfprintf_r+0x976>
   1dd46:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
   1dd48:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1dd4a:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1dd4e:	f7ff ba81 	b.w	1d254 <_svfprintf_r+0x99c>
   1dd52:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1dd54:	ebab 060a 	sub.w	r6, fp, sl
   1dd58:	1b5d      	subs	r5, r3, r5
   1dd5a:	42ae      	cmp	r6, r5
   1dd5c:	bfa8      	it	ge
   1dd5e:	462e      	movge	r6, r5
   1dd60:	f7ff bbae 	b.w	1d4c0 <_svfprintf_r+0xc08>
   1dd64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1dd66:	9a06      	ldr	r2, [sp, #24]
   1dd68:	681b      	ldr	r3, [r3, #0]
   1dd6a:	801a      	strh	r2, [r3, #0]
   1dd6c:	f7ff b8b2 	b.w	1ced4 <_svfprintf_r+0x61c>
   1dd70:	f343 12c0 	sbfx	r2, r3, #7, #1
   1dd74:	4611      	mov	r1, r2
   1dd76:	b25b      	sxtb	r3, r3
   1dd78:	f7ff b83d 	b.w	1cdf6 <_svfprintf_r+0x53e>
   1dd7c:	000281c0 	.word	0x000281c0
   1dd80:	9e04      	ldr	r6, [sp, #16]
   1dd82:	2102      	movs	r1, #2
   1dd84:	ab2a      	add	r3, sp, #168	@ 0xa8
   1dd86:	9301      	str	r3, [sp, #4]
   1dd88:	ab25      	add	r3, sp, #148	@ 0x94
   1dd8a:	9300      	str	r3, [sp, #0]
   1dd8c:	9803      	ldr	r0, [sp, #12]
   1dd8e:	eeb0 0a48 	vmov.f32	s0, s16
   1dd92:	eef0 0a68 	vmov.f32	s1, s17
   1dd96:	ab23      	add	r3, sp, #140	@ 0x8c
   1dd98:	4632      	mov	r2, r6
   1dd9a:	f000 fe5d 	bl	1ea58 <_dtoa_r>
   1dd9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1dda0:	2b67      	cmp	r3, #103	@ 0x67
   1dda2:	4605      	mov	r5, r0
   1dda4:	f000 813f 	beq.w	1e026 <_svfprintf_r+0x176e>
   1dda8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1ddaa:	2b47      	cmp	r3, #71	@ 0x47
   1ddac:	f000 813b 	beq.w	1e026 <_svfprintf_r+0x176e>
   1ddb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1ddb2:	f023 0720 	bic.w	r7, r3, #32
   1ddb6:	2f46      	cmp	r7, #70	@ 0x46
   1ddb8:	eb00 0406 	add.w	r4, r0, r6
   1ddbc:	d105      	bne.n	1ddca <_svfprintf_r+0x1512>
   1ddbe:	7803      	ldrb	r3, [r0, #0]
   1ddc0:	2b30      	cmp	r3, #48	@ 0x30
   1ddc2:	f000 82fc 	beq.w	1e3be <_svfprintf_r+0x1b06>
   1ddc6:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
   1ddc8:	4434      	add	r4, r6
   1ddca:	ec51 0b18 	vmov	r0, r1, d8
   1ddce:	2200      	movs	r2, #0
   1ddd0:	2300      	movs	r3, #0
   1ddd2:	f7fa ff9f 	bl	18d14 <__aeabi_dcmpeq>
   1ddd6:	2800      	cmp	r0, #0
   1ddd8:	f000 8143 	beq.w	1e062 <_svfprintf_r+0x17aa>
   1dddc:	4623      	mov	r3, r4
   1ddde:	1b5b      	subs	r3, r3, r5
   1dde0:	930f      	str	r3, [sp, #60]	@ 0x3c
   1dde2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
   1dde4:	920e      	str	r2, [sp, #56]	@ 0x38
   1dde6:	2f47      	cmp	r7, #71	@ 0x47
   1dde8:	f000 8125 	beq.w	1e036 <_svfprintf_r+0x177e>
   1ddec:	2f46      	cmp	r7, #70	@ 0x46
   1ddee:	f000 81ee 	beq.w	1e1ce <_svfprintf_r+0x1916>
   1ddf2:	990a      	ldr	r1, [sp, #40]	@ 0x28
   1ddf4:	1e53      	subs	r3, r2, #1
   1ddf6:	2961      	cmp	r1, #97	@ 0x61
   1ddf8:	9323      	str	r3, [sp, #140]	@ 0x8c
   1ddfa:	f000 8322 	beq.w	1e442 <_svfprintf_r+0x1b8a>
   1ddfe:	2941      	cmp	r1, #65	@ 0x41
   1de00:	f040 8124 	bne.w	1e04c <_svfprintf_r+0x1794>
   1de04:	2150      	movs	r1, #80	@ 0x50
   1de06:	2001      	movs	r0, #1
   1de08:	2b00      	cmp	r3, #0
   1de0a:	bfb6      	itet	lt
   1de0c:	f1c2 0301 	rsblt	r3, r2, #1
   1de10:	222b      	movge	r2, #43	@ 0x2b
   1de12:	222d      	movlt	r2, #45	@ 0x2d
   1de14:	2b09      	cmp	r3, #9
   1de16:	f88d 1098 	strb.w	r1, [sp, #152]	@ 0x98
   1de1a:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
   1de1e:	f340 8232 	ble.w	1e286 <_svfprintf_r+0x19ce>
   1de22:	f10d 04af 	add.w	r4, sp, #175	@ 0xaf
   1de26:	4eb0      	ldr	r6, [pc, #704]	@ (1e0e8 <_svfprintf_r+0x1830>)
   1de28:	4622      	mov	r2, r4
   1de2a:	4610      	mov	r0, r2
   1de2c:	fba6 1203 	umull	r1, r2, r6, r3
   1de30:	08d2      	lsrs	r2, r2, #3
   1de32:	eb02 0182 	add.w	r1, r2, r2, lsl #2
   1de36:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
   1de3a:	3130      	adds	r1, #48	@ 0x30
   1de3c:	f800 1c01 	strb.w	r1, [r0, #-1]
   1de40:	4619      	mov	r1, r3
   1de42:	2963      	cmp	r1, #99	@ 0x63
   1de44:	4613      	mov	r3, r2
   1de46:	f100 32ff 	add.w	r2, r0, #4294967295
   1de4a:	dcee      	bgt.n	1de2a <_svfprintf_r+0x1572>
   1de4c:	3330      	adds	r3, #48	@ 0x30
   1de4e:	f802 3c01 	strb.w	r3, [r2, #-1]
   1de52:	1e83      	subs	r3, r0, #2
   1de54:	42a3      	cmp	r3, r4
   1de56:	f080 82f9 	bcs.w	1e44c <_svfprintf_r+0x1b94>
   1de5a:	f10d 0299 	add.w	r2, sp, #153	@ 0x99
   1de5e:	f813 1b01 	ldrb.w	r1, [r3], #1
   1de62:	f802 1f01 	strb.w	r1, [r2, #1]!
   1de66:	42a3      	cmp	r3, r4
   1de68:	d1f9      	bne.n	1de5e <_svfprintf_r+0x15a6>
   1de6a:	ab58      	add	r3, sp, #352	@ 0x160
   1de6c:	1a18      	subs	r0, r3, r0
   1de6e:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
   1de72:	9318      	str	r3, [sp, #96]	@ 0x60
   1de74:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1de76:	9a18      	ldr	r2, [sp, #96]	@ 0x60
   1de78:	2b01      	cmp	r3, #1
   1de7a:	eb03 0b02 	add.w	fp, r3, r2
   1de7e:	f340 8235 	ble.w	1e2ec <_svfprintf_r+0x1a34>
   1de82:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   1de84:	449b      	add	fp, r3
   1de86:	9b02      	ldr	r3, [sp, #8]
   1de88:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
   1de8c:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
   1de90:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
   1de94:	2300      	movs	r3, #0
   1de96:	9310      	str	r3, [sp, #64]	@ 0x40
   1de98:	9202      	str	r2, [sp, #8]
   1de9a:	930c      	str	r3, [sp, #48]	@ 0x30
   1de9c:	930e      	str	r3, [sp, #56]	@ 0x38
   1de9e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
   1dea0:	2b00      	cmp	r3, #0
   1dea2:	f040 80d7 	bne.w	1e054 <_svfprintf_r+0x179c>
   1dea6:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1deaa:	9304      	str	r3, [sp, #16]
   1deac:	f7fe beef 	b.w	1cc8e <_svfprintf_r+0x3d6>
   1deb0:	9c05      	ldr	r4, [sp, #20]
   1deb2:	aa2c      	add	r2, sp, #176	@ 0xb0
   1deb4:	4621      	mov	r1, r4
   1deb6:	4658      	mov	r0, fp
   1deb8:	f002 fd26 	bl	20908 <__ssprint_r>
   1debc:	89a3      	ldrh	r3, [r4, #12]
   1debe:	f003 0340 	and.w	r3, r3, #64	@ 0x40
   1dec2:	f7fe be04 	b.w	1cace <_svfprintf_r+0x216>
   1dec6:	4628      	mov	r0, r5
   1dec8:	9609      	str	r6, [sp, #36]	@ 0x24
   1deca:	f7fa f9f9 	bl	182c0 <strlen>
   1dece:	4683      	mov	fp, r0
   1ded0:	f7fe bf74 	b.w	1cdbc <_svfprintf_r+0x504>
   1ded4:	9803      	ldr	r0, [sp, #12]
   1ded6:	f10b 0101 	add.w	r1, fp, #1
   1deda:	f001 fe3d 	bl	1fb58 <_malloc_r>
   1dede:	4605      	mov	r5, r0
   1dee0:	2800      	cmp	r0, #0
   1dee2:	f000 81c2 	beq.w	1e26a <_svfprintf_r+0x19b2>
   1dee6:	9008      	str	r0, [sp, #32]
   1dee8:	e63e      	b.n	1db68 <_svfprintf_r+0x12b0>
   1deea:	9905      	ldr	r1, [sp, #20]
   1deec:	9803      	ldr	r0, [sp, #12]
   1deee:	aa2c      	add	r2, sp, #176	@ 0xb0
   1def0:	f002 fd0a 	bl	20908 <__ssprint_r>
   1def4:	2800      	cmp	r0, #0
   1def6:	f47f a99a 	bne.w	1d22e <_svfprintf_r+0x976>
   1defa:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1defc:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1df00:	f7ff baaa 	b.w	1d458 <_svfprintf_r+0xba0>
   1df04:	9905      	ldr	r1, [sp, #20]
   1df06:	9803      	ldr	r0, [sp, #12]
   1df08:	aa2c      	add	r2, sp, #176	@ 0xb0
   1df0a:	f002 fcfd 	bl	20908 <__ssprint_r>
   1df0e:	2800      	cmp	r0, #0
   1df10:	f47f a98d 	bne.w	1d22e <_svfprintf_r+0x976>
   1df14:	e9dd 342d 	ldrd	r3, r4, [sp, #180]	@ 0xb4
   1df18:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
   1df1a:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1df1e:	e68f      	b.n	1dc40 <_svfprintf_r+0x1388>
   1df20:	2306      	movs	r3, #6
   1df22:	9304      	str	r3, [sp, #16]
   1df24:	f7ff bbf1 	b.w	1d70a <_svfprintf_r+0xe52>
   1df28:	9b04      	ldr	r3, [sp, #16]
   1df2a:	2102      	movs	r1, #2
   1df2c:	1c5e      	adds	r6, r3, #1
   1df2e:	e729      	b.n	1dd84 <_svfprintf_r+0x14cc>
   1df30:	9e04      	ldr	r6, [sp, #16]
   1df32:	2103      	movs	r1, #3
   1df34:	e726      	b.n	1dd84 <_svfprintf_r+0x14cc>
   1df36:	a823      	add	r0, sp, #140	@ 0x8c
   1df38:	eeb0 0a48 	vmov.f32	s0, s16
   1df3c:	eef0 0a68 	vmov.f32	s1, s17
   1df40:	f000 fcc0 	bl	1e8c4 <frexp>
   1df44:	2200      	movs	r2, #0
   1df46:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
   1df4a:	ec51 0b10 	vmov	r0, r1, d0
   1df4e:	f7fa fc79 	bl	18844 <__aeabi_dmul>
   1df52:	4602      	mov	r2, r0
   1df54:	460b      	mov	r3, r1
   1df56:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
   1df5a:	2200      	movs	r2, #0
   1df5c:	2300      	movs	r3, #0
   1df5e:	f7fa fed9 	bl	18d14 <__aeabi_dcmpeq>
   1df62:	2800      	cmp	r0, #0
   1df64:	f040 81c7 	bne.w	1e2f6 <_svfprintf_r+0x1a3e>
   1df68:	4b60      	ldr	r3, [pc, #384]	@ (1e0ec <_svfprintf_r+0x1834>)
   1df6a:	930e      	str	r3, [sp, #56]	@ 0x38
   1df6c:	9b04      	ldr	r3, [sp, #16]
   1df6e:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
   1df72:	f103 39ff 	add.w	r9, r3, #4294967295
   1df76:	462e      	mov	r6, r5
   1df78:	9510      	str	r5, [sp, #64]	@ 0x40
   1df7a:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
   1df7e:	464d      	mov	r5, r9
   1df80:	e9dd 890c 	ldrd	r8, r9, [sp, #48]	@ 0x30
   1df84:	e005      	b.n	1df92 <_svfprintf_r+0x16da>
   1df86:	2200      	movs	r2, #0
   1df88:	2300      	movs	r3, #0
   1df8a:	f7fa fec3 	bl	18d14 <__aeabi_dcmpeq>
   1df8e:	b9f0      	cbnz	r0, 1dfce <_svfprintf_r+0x1716>
   1df90:	463d      	mov	r5, r7
   1df92:	4b57      	ldr	r3, [pc, #348]	@ (1e0f0 <_svfprintf_r+0x1838>)
   1df94:	2200      	movs	r2, #0
   1df96:	4640      	mov	r0, r8
   1df98:	4649      	mov	r1, r9
   1df9a:	f7fa fc53 	bl	18844 <__aeabi_dmul>
   1df9e:	4689      	mov	r9, r1
   1dfa0:	4680      	mov	r8, r0
   1dfa2:	f7fa feff 	bl	18da4 <__aeabi_d2iz>
   1dfa6:	4604      	mov	r4, r0
   1dfa8:	f7fa fbe2 	bl	18770 <__aeabi_i2d>
   1dfac:	460b      	mov	r3, r1
   1dfae:	4602      	mov	r2, r0
   1dfb0:	4649      	mov	r1, r9
   1dfb2:	4640      	mov	r0, r8
   1dfb4:	f7fa fa8e 	bl	184d4 <__aeabi_dsub>
   1dfb8:	f81b 3004 	ldrb.w	r3, [fp, r4]
   1dfbc:	46b2      	mov	sl, r6
   1dfbe:	f806 3b01 	strb.w	r3, [r6], #1
   1dfc2:	1c6b      	adds	r3, r5, #1
   1dfc4:	f105 37ff 	add.w	r7, r5, #4294967295
   1dfc8:	4680      	mov	r8, r0
   1dfca:	4689      	mov	r9, r1
   1dfcc:	d1db      	bne.n	1df86 <_svfprintf_r+0x16ce>
   1dfce:	46cb      	mov	fp, r9
   1dfd0:	4657      	mov	r7, sl
   1dfd2:	46c2      	mov	sl, r8
   1dfd4:	4b47      	ldr	r3, [pc, #284]	@ (1e0f4 <_svfprintf_r+0x183c>)
   1dfd6:	f8dd 803c 	ldr.w	r8, [sp, #60]	@ 0x3c
   1dfda:	2200      	movs	r2, #0
   1dfdc:	4650      	mov	r0, sl
   1dfde:	4659      	mov	r1, fp
   1dfe0:	46a9      	mov	r9, r5
   1dfe2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
   1dfe4:	f7fa febe 	bl	18d64 <__aeabi_dcmpgt>
   1dfe8:	2800      	cmp	r0, #0
   1dfea:	f040 815a 	bne.w	1e2a2 <_svfprintf_r+0x19ea>
   1dfee:	4b41      	ldr	r3, [pc, #260]	@ (1e0f4 <_svfprintf_r+0x183c>)
   1dff0:	4650      	mov	r0, sl
   1dff2:	4659      	mov	r1, fp
   1dff4:	2200      	movs	r2, #0
   1dff6:	f7fa fe8d 	bl	18d14 <__aeabi_dcmpeq>
   1dffa:	b110      	cbz	r0, 1e002 <_svfprintf_r+0x174a>
   1dffc:	07e2      	lsls	r2, r4, #31
   1dffe:	f100 8150 	bmi.w	1e2a2 <_svfprintf_r+0x19ea>
   1e002:	f1b9 0f00 	cmp.w	r9, #0
   1e006:	f2c0 8166 	blt.w	1e2d6 <_svfprintf_r+0x1a1e>
   1e00a:	f109 0301 	add.w	r3, r9, #1
   1e00e:	4433      	add	r3, r6
   1e010:	2230      	movs	r2, #48	@ 0x30
   1e012:	f806 2b01 	strb.w	r2, [r6], #1
   1e016:	42b3      	cmp	r3, r6
   1e018:	d1fb      	bne.n	1e012 <_svfprintf_r+0x175a>
   1e01a:	1b5b      	subs	r3, r3, r5
   1e01c:	930f      	str	r3, [sp, #60]	@ 0x3c
   1e01e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1e020:	f023 0720 	bic.w	r7, r3, #32
   1e024:	e6dd      	b.n	1dde2 <_svfprintf_r+0x152a>
   1e026:	9b02      	ldr	r3, [sp, #8]
   1e028:	07db      	lsls	r3, r3, #31
   1e02a:	f100 8100 	bmi.w	1e22e <_svfprintf_r+0x1976>
   1e02e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
   1e030:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
   1e032:	1b5b      	subs	r3, r3, r5
   1e034:	930f      	str	r3, [sp, #60]	@ 0x3c
   1e036:	1cd3      	adds	r3, r2, #3
   1e038:	920e      	str	r2, [sp, #56]	@ 0x38
   1e03a:	db02      	blt.n	1e042 <_svfprintf_r+0x178a>
   1e03c:	9b04      	ldr	r3, [sp, #16]
   1e03e:	4293      	cmp	r3, r2
   1e040:	da1b      	bge.n	1e07a <_svfprintf_r+0x17c2>
   1e042:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1e044:	3b02      	subs	r3, #2
   1e046:	930a      	str	r3, [sp, #40]	@ 0x28
   1e048:	1e53      	subs	r3, r2, #1
   1e04a:	9323      	str	r3, [sp, #140]	@ 0x8c
   1e04c:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
   1e050:	2000      	movs	r0, #0
   1e052:	e6d9      	b.n	1de08 <_svfprintf_r+0x1550>
   1e054:	222d      	movs	r2, #45	@ 0x2d
   1e056:	2300      	movs	r3, #0
   1e058:	f88d 2087 	strb.w	r2, [sp, #135]	@ 0x87
   1e05c:	9304      	str	r3, [sp, #16]
   1e05e:	f7fe be19 	b.w	1cc94 <_svfprintf_r+0x3dc>
   1e062:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
   1e064:	42a3      	cmp	r3, r4
   1e066:	f4bf aeba 	bcs.w	1ddde <_svfprintf_r+0x1526>
   1e06a:	2130      	movs	r1, #48	@ 0x30
   1e06c:	1c5a      	adds	r2, r3, #1
   1e06e:	922a      	str	r2, [sp, #168]	@ 0xa8
   1e070:	7019      	strb	r1, [r3, #0]
   1e072:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
   1e074:	429c      	cmp	r4, r3
   1e076:	d8f9      	bhi.n	1e06c <_svfprintf_r+0x17b4>
   1e078:	e6b1      	b.n	1ddde <_svfprintf_r+0x1526>
   1e07a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
   1e07c:	428a      	cmp	r2, r1
   1e07e:	f2c0 80cb 	blt.w	1e218 <_svfprintf_r+0x1960>
   1e082:	9b02      	ldr	r3, [sp, #8]
   1e084:	07de      	lsls	r6, r3, #31
   1e086:	f140 818b 	bpl.w	1e3a0 <_svfprintf_r+0x1ae8>
   1e08a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   1e08c:	eb02 0b03 	add.w	fp, r2, r3
   1e090:	9b02      	ldr	r3, [sp, #8]
   1e092:	055c      	lsls	r4, r3, #21
   1e094:	d502      	bpl.n	1e09c <_svfprintf_r+0x17e4>
   1e096:	2a00      	cmp	r2, #0
   1e098:	f300 8154 	bgt.w	1e344 <_svfprintf_r+0x1a8c>
   1e09c:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
   1e0a0:	9302      	str	r3, [sp, #8]
   1e0a2:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
   1e0a6:	2367      	movs	r3, #103	@ 0x67
   1e0a8:	930a      	str	r3, [sp, #40]	@ 0x28
   1e0aa:	2300      	movs	r3, #0
   1e0ac:	9310      	str	r3, [sp, #64]	@ 0x40
   1e0ae:	930c      	str	r3, [sp, #48]	@ 0x30
   1e0b0:	e6f5      	b.n	1de9e <_svfprintf_r+0x15e6>
   1e0b2:	9905      	ldr	r1, [sp, #20]
   1e0b4:	aa2c      	add	r2, sp, #176	@ 0xb0
   1e0b6:	4658      	mov	r0, fp
   1e0b8:	f002 fc26 	bl	20908 <__ssprint_r>
   1e0bc:	2800      	cmp	r0, #0
   1e0be:	f47f aaa4 	bne.w	1d60a <_svfprintf_r+0xd52>
   1e0c2:	f89a 0000 	ldrb.w	r0, [sl]
   1e0c6:	992e      	ldr	r1, [sp, #184]	@ 0xb8
   1e0c8:	aa2f      	add	r2, sp, #188	@ 0xbc
   1e0ca:	4404      	add	r4, r0
   1e0cc:	e42c      	b.n	1d928 <_svfprintf_r+0x1070>
   1e0ce:	9905      	ldr	r1, [sp, #20]
   1e0d0:	9803      	ldr	r0, [sp, #12]
   1e0d2:	aa2c      	add	r2, sp, #176	@ 0xb0
   1e0d4:	f002 fc18 	bl	20908 <__ssprint_r>
   1e0d8:	2800      	cmp	r0, #0
   1e0da:	f47f a8a8 	bne.w	1d22e <_svfprintf_r+0x976>
   1e0de:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1e0e0:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1e0e4:	f7ff b9b1 	b.w	1d44a <_svfprintf_r+0xb92>
   1e0e8:	cccccccd 	.word	0xcccccccd
   1e0ec:	000281a0 	.word	0x000281a0
   1e0f0:	40300000 	.word	0x40300000
   1e0f4:	3fe00000 	.word	0x3fe00000
   1e0f8:	2378      	movs	r3, #120	@ 0x78
   1e0fa:	f88d 3089 	strb.w	r3, [sp, #137]	@ 0x89
   1e0fe:	2330      	movs	r3, #48	@ 0x30
   1e100:	f88d 3088 	strb.w	r3, [sp, #136]	@ 0x88
   1e104:	f049 0302 	orr.w	r3, r9, #2
   1e108:	9302      	str	r3, [sp, #8]
   1e10a:	9b04      	ldr	r3, [sp, #16]
   1e10c:	2b63      	cmp	r3, #99	@ 0x63
   1e10e:	f300 80e4 	bgt.w	1e2da <_svfprintf_r+0x1a22>
   1e112:	2300      	movs	r3, #0
   1e114:	9308      	str	r3, [sp, #32]
   1e116:	ad3f      	add	r5, sp, #252	@ 0xfc
   1e118:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
   1e11c:	9311      	str	r3, [sp, #68]	@ 0x44
   1e11e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
   1e120:	2b00      	cmp	r3, #0
   1e122:	db27      	blt.n	1e174 <_svfprintf_r+0x18bc>
   1e124:	ed9d 8b12 	vldr	d8, [sp, #72]	@ 0x48
   1e128:	2300      	movs	r3, #0
   1e12a:	931b      	str	r3, [sp, #108]	@ 0x6c
   1e12c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1e12e:	2b61      	cmp	r3, #97	@ 0x61
   1e130:	f47f aafa 	bne.w	1d728 <_svfprintf_r+0xe70>
   1e134:	eeb0 0a48 	vmov.f32	s0, s16
   1e138:	eef0 0a68 	vmov.f32	s1, s17
   1e13c:	a823      	add	r0, sp, #140	@ 0x8c
   1e13e:	f000 fbc1 	bl	1e8c4 <frexp>
   1e142:	2200      	movs	r2, #0
   1e144:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
   1e148:	ec51 0b10 	vmov	r0, r1, d0
   1e14c:	f7fa fb7a 	bl	18844 <__aeabi_dmul>
   1e150:	4602      	mov	r2, r0
   1e152:	460b      	mov	r3, r1
   1e154:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
   1e158:	2200      	movs	r2, #0
   1e15a:	2300      	movs	r3, #0
   1e15c:	f7fa fdda 	bl	18d14 <__aeabi_dcmpeq>
   1e160:	2800      	cmp	r0, #0
   1e162:	f040 80c8 	bne.w	1e2f6 <_svfprintf_r+0x1a3e>
   1e166:	4bab      	ldr	r3, [pc, #684]	@ (1e414 <_svfprintf_r+0x1b5c>)
   1e168:	930e      	str	r3, [sp, #56]	@ 0x38
   1e16a:	e6ff      	b.n	1df6c <_svfprintf_r+0x16b4>
   1e16c:	2300      	movs	r3, #0
   1e16e:	f8cd 9008 	str.w	r9, [sp, #8]
   1e172:	9308      	str	r3, [sp, #32]
   1e174:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
   1e178:	ee08 3a10 	vmov	s16, r3
   1e17c:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
   1e180:	ee08 3a90 	vmov	s17, r3
   1e184:	232d      	movs	r3, #45	@ 0x2d
   1e186:	931b      	str	r3, [sp, #108]	@ 0x6c
   1e188:	e7d0      	b.n	1e12c <_svfprintf_r+0x1874>
   1e18a:	9905      	ldr	r1, [sp, #20]
   1e18c:	9803      	ldr	r0, [sp, #12]
   1e18e:	aa2c      	add	r2, sp, #176	@ 0xb0
   1e190:	f002 fbba 	bl	20908 <__ssprint_r>
   1e194:	2800      	cmp	r0, #0
   1e196:	f47f a84a 	bne.w	1d22e <_svfprintf_r+0x976>
   1e19a:	9d23      	ldr	r5, [sp, #140]	@ 0x8c
   1e19c:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1e19e:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1e1a2:	f7ff b976 	b.w	1d492 <_svfprintf_r+0xbda>
   1e1a6:	499c      	ldr	r1, [pc, #624]	@ (1e418 <_svfprintf_r+0x1b60>)
   1e1a8:	9111      	str	r1, [sp, #68]	@ 0x44
   1e1aa:	f7fe bda7 	b.w	1ccfc <_svfprintf_r+0x444>
   1e1ae:	9905      	ldr	r1, [sp, #20]
   1e1b0:	9803      	ldr	r0, [sp, #12]
   1e1b2:	aa2c      	add	r2, sp, #176	@ 0xb0
   1e1b4:	f002 fba8 	bl	20908 <__ssprint_r>
   1e1b8:	2800      	cmp	r0, #0
   1e1ba:	f47f a838 	bne.w	1d22e <_svfprintf_r+0x976>
   1e1be:	9d23      	ldr	r5, [sp, #140]	@ 0x8c
   1e1c0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1e1c2:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
   1e1c4:	1b5d      	subs	r5, r3, r5
   1e1c6:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1e1ca:	f7ff b979 	b.w	1d4c0 <_svfprintf_r+0xc08>
   1e1ce:	9b02      	ldr	r3, [sp, #8]
   1e1d0:	990e      	ldr	r1, [sp, #56]	@ 0x38
   1e1d2:	9a04      	ldr	r2, [sp, #16]
   1e1d4:	f003 0301 	and.w	r3, r3, #1
   1e1d8:	2900      	cmp	r1, #0
   1e1da:	ea43 0302 	orr.w	r3, r3, r2
   1e1de:	f340 810f 	ble.w	1e400 <_svfprintf_r+0x1b48>
   1e1e2:	2b00      	cmp	r3, #0
   1e1e4:	f040 80d5 	bne.w	1e392 <_svfprintf_r+0x1ada>
   1e1e8:	2366      	movs	r3, #102	@ 0x66
   1e1ea:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
   1e1ee:	930a      	str	r3, [sp, #40]	@ 0x28
   1e1f0:	9b02      	ldr	r3, [sp, #8]
   1e1f2:	055a      	lsls	r2, r3, #21
   1e1f4:	f100 80a8 	bmi.w	1e348 <_svfprintf_r+0x1a90>
   1e1f8:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
   1e1fc:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
   1e200:	9302      	str	r3, [sp, #8]
   1e202:	e752      	b.n	1e0aa <_svfprintf_r+0x17f2>
   1e204:	2358      	movs	r3, #88	@ 0x58
   1e206:	e778      	b.n	1e0fa <_svfprintf_r+0x1842>
   1e208:	2200      	movs	r2, #0
   1e20a:	9204      	str	r2, [sp, #16]
   1e20c:	f7fe bbae 	b.w	1c96c <_svfprintf_r+0xb4>
   1e210:	4a81      	ldr	r2, [pc, #516]	@ (1e418 <_svfprintf_r+0x1b60>)
   1e212:	9211      	str	r2, [sp, #68]	@ 0x44
   1e214:	f7ff b8e4 	b.w	1d3e0 <_svfprintf_r+0xb28>
   1e218:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1e21a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
   1e21c:	eb03 0b02 	add.w	fp, r3, r2
   1e220:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   1e222:	2b00      	cmp	r3, #0
   1e224:	f340 8083 	ble.w	1e32e <_svfprintf_r+0x1a76>
   1e228:	2367      	movs	r3, #103	@ 0x67
   1e22a:	930a      	str	r3, [sp, #40]	@ 0x28
   1e22c:	e7e0      	b.n	1e1f0 <_svfprintf_r+0x1938>
   1e22e:	19ac      	adds	r4, r5, r6
   1e230:	2747      	movs	r7, #71	@ 0x47
   1e232:	e5ca      	b.n	1ddca <_svfprintf_r+0x1512>
   1e234:	4655      	mov	r5, sl
   1e236:	3301      	adds	r3, #1
   1e238:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1e23a:	f8c8 2000 	str.w	r2, [r8]
   1e23e:	4434      	add	r4, r6
   1e240:	2b07      	cmp	r3, #7
   1e242:	e9cd 342d 	strd	r3, r4, [sp, #180]	@ 0xb4
   1e246:	f8c8 6004 	str.w	r6, [r8, #4]
   1e24a:	f77f a818 	ble.w	1d27e <_svfprintf_r+0x9c6>
   1e24e:	9905      	ldr	r1, [sp, #20]
   1e250:	9803      	ldr	r0, [sp, #12]
   1e252:	aa2c      	add	r2, sp, #176	@ 0xb0
   1e254:	f002 fb58 	bl	20908 <__ssprint_r>
   1e258:	2800      	cmp	r0, #0
   1e25a:	f47e afe8 	bne.w	1d22e <_svfprintf_r+0x976>
   1e25e:	e9dd 342d 	ldrd	r3, r4, [sp, #180]	@ 0xb4
   1e262:	f10d 08bc 	add.w	r8, sp, #188	@ 0xbc
   1e266:	f7ff b80c 	b.w	1d282 <_svfprintf_r+0x9ca>
   1e26a:	9a05      	ldr	r2, [sp, #20]
   1e26c:	8993      	ldrh	r3, [r2, #12]
   1e26e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   1e272:	8193      	strh	r3, [r2, #12]
   1e274:	f04f 33ff 	mov.w	r3, #4294967295
   1e278:	9306      	str	r3, [sp, #24]
   1e27a:	f7fe bc2b 	b.w	1cad4 <_svfprintf_r+0x21c>
   1e27e:	4a67      	ldr	r2, [pc, #412]	@ (1e41c <_svfprintf_r+0x1b64>)
   1e280:	9211      	str	r2, [sp, #68]	@ 0x44
   1e282:	f7fe bf79 	b.w	1d178 <_svfprintf_r+0x8c0>
   1e286:	2800      	cmp	r0, #0
   1e288:	d13f      	bne.n	1e30a <_svfprintf_r+0x1a52>
   1e28a:	2230      	movs	r2, #48	@ 0x30
   1e28c:	f88d 209a 	strb.w	r2, [sp, #154]	@ 0x9a
   1e290:	f10d 029b 	add.w	r2, sp, #155	@ 0x9b
   1e294:	3330      	adds	r3, #48	@ 0x30
   1e296:	f802 3b01 	strb.w	r3, [r2], #1
   1e29a:	ab26      	add	r3, sp, #152	@ 0x98
   1e29c:	1ad3      	subs	r3, r2, r3
   1e29e:	9318      	str	r3, [sp, #96]	@ 0x60
   1e2a0:	e5e8      	b.n	1de74 <_svfprintf_r+0x15bc>
   1e2a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   1e2a4:	972a      	str	r7, [sp, #168]	@ 0xa8
   1e2a6:	7bd9      	ldrb	r1, [r3, #15]
   1e2a8:	f816 2c01 	ldrb.w	r2, [r6, #-1]
   1e2ac:	428a      	cmp	r2, r1
   1e2ae:	4633      	mov	r3, r6
   1e2b0:	d109      	bne.n	1e2c6 <_svfprintf_r+0x1a0e>
   1e2b2:	2030      	movs	r0, #48	@ 0x30
   1e2b4:	f803 0c01 	strb.w	r0, [r3, #-1]
   1e2b8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
   1e2ba:	1e5a      	subs	r2, r3, #1
   1e2bc:	922a      	str	r2, [sp, #168]	@ 0xa8
   1e2be:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   1e2c2:	4291      	cmp	r1, r2
   1e2c4:	d0f6      	beq.n	1e2b4 <_svfprintf_r+0x19fc>
   1e2c6:	2a39      	cmp	r2, #57	@ 0x39
   1e2c8:	bf0b      	itete	eq
   1e2ca:	9a0e      	ldreq	r2, [sp, #56]	@ 0x38
   1e2cc:	3201      	addne	r2, #1
   1e2ce:	7a92      	ldrbeq	r2, [r2, #10]
   1e2d0:	b2d2      	uxtbne	r2, r2
   1e2d2:	f803 2c01 	strb.w	r2, [r3, #-1]
   1e2d6:	4633      	mov	r3, r6
   1e2d8:	e69f      	b.n	1e01a <_svfprintf_r+0x1762>
   1e2da:	9803      	ldr	r0, [sp, #12]
   1e2dc:	1c59      	adds	r1, r3, #1
   1e2de:	f001 fc3b 	bl	1fb58 <_malloc_r>
   1e2e2:	4605      	mov	r5, r0
   1e2e4:	2800      	cmp	r0, #0
   1e2e6:	d0c0      	beq.n	1e26a <_svfprintf_r+0x19b2>
   1e2e8:	9008      	str	r0, [sp, #32]
   1e2ea:	e715      	b.n	1e118 <_svfprintf_r+0x1860>
   1e2ec:	9b02      	ldr	r3, [sp, #8]
   1e2ee:	07df      	lsls	r7, r3, #31
   1e2f0:	f57f adc9 	bpl.w	1de86 <_svfprintf_r+0x15ce>
   1e2f4:	e5c5      	b.n	1de82 <_svfprintf_r+0x15ca>
   1e2f6:	4b4a      	ldr	r3, [pc, #296]	@ (1e420 <_svfprintf_r+0x1b68>)
   1e2f8:	4a46      	ldr	r2, [pc, #280]	@ (1e414 <_svfprintf_r+0x1b5c>)
   1e2fa:	990a      	ldr	r1, [sp, #40]	@ 0x28
   1e2fc:	2961      	cmp	r1, #97	@ 0x61
   1e2fe:	bf18      	it	ne
   1e300:	461a      	movne	r2, r3
   1e302:	2301      	movs	r3, #1
   1e304:	920e      	str	r2, [sp, #56]	@ 0x38
   1e306:	9323      	str	r3, [sp, #140]	@ 0x8c
   1e308:	e630      	b.n	1df6c <_svfprintf_r+0x16b4>
   1e30a:	f10d 029a 	add.w	r2, sp, #154	@ 0x9a
   1e30e:	e7c1      	b.n	1e294 <_svfprintf_r+0x19dc>
   1e310:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
   1e312:	4d44      	ldr	r5, [pc, #272]	@ (1e424 <_svfprintf_r+0x1b6c>)
   1e314:	2b00      	cmp	r3, #0
   1e316:	bfb4      	ite	lt
   1e318:	222d      	movlt	r2, #45	@ 0x2d
   1e31a:	f89d 2087 	ldrbge.w	r2, [sp, #135]	@ 0x87
   1e31e:	4b42      	ldr	r3, [pc, #264]	@ (1e428 <_svfprintf_r+0x1b70>)
   1e320:	bfb8      	it	lt
   1e322:	f88d 2087 	strblt.w	r2, [sp, #135]	@ 0x87
   1e326:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
   1e32a:	f7fe bca3 	b.w	1cc74 <_svfprintf_r+0x3bc>
   1e32e:	f1c3 0301 	rsb	r3, r3, #1
   1e332:	449b      	add	fp, r3
   1e334:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
   1e338:	9302      	str	r3, [sp, #8]
   1e33a:	2367      	movs	r3, #103	@ 0x67
   1e33c:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
   1e340:	930a      	str	r3, [sp, #40]	@ 0x28
   1e342:	e6b2      	b.n	1e0aa <_svfprintf_r+0x17f2>
   1e344:	2367      	movs	r3, #103	@ 0x67
   1e346:	930a      	str	r3, [sp, #40]	@ 0x28
   1e348:	9917      	ldr	r1, [sp, #92]	@ 0x5c
   1e34a:	780b      	ldrb	r3, [r1, #0]
   1e34c:	2bff      	cmp	r3, #255	@ 0xff
   1e34e:	f000 808d 	beq.w	1e46c <_svfprintf_r+0x1bb4>
   1e352:	2400      	movs	r4, #0
   1e354:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
   1e356:	4620      	mov	r0, r4
   1e358:	e003      	b.n	1e362 <_svfprintf_r+0x1aaa>
   1e35a:	3001      	adds	r0, #1
   1e35c:	3101      	adds	r1, #1
   1e35e:	2bff      	cmp	r3, #255	@ 0xff
   1e360:	d008      	beq.n	1e374 <_svfprintf_r+0x1abc>
   1e362:	4293      	cmp	r3, r2
   1e364:	da06      	bge.n	1e374 <_svfprintf_r+0x1abc>
   1e366:	1ad2      	subs	r2, r2, r3
   1e368:	784b      	ldrb	r3, [r1, #1]
   1e36a:	2b00      	cmp	r3, #0
   1e36c:	d1f5      	bne.n	1e35a <_svfprintf_r+0x1aa2>
   1e36e:	780b      	ldrb	r3, [r1, #0]
   1e370:	3401      	adds	r4, #1
   1e372:	e7f4      	b.n	1e35e <_svfprintf_r+0x1aa6>
   1e374:	9117      	str	r1, [sp, #92]	@ 0x5c
   1e376:	900c      	str	r0, [sp, #48]	@ 0x30
   1e378:	9410      	str	r4, [sp, #64]	@ 0x40
   1e37a:	920e      	str	r2, [sp, #56]	@ 0x38
   1e37c:	e9dd 3910 	ldrd	r3, r9, [sp, #64]	@ 0x40
   1e380:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
   1e382:	4413      	add	r3, r2
   1e384:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
   1e386:	fb02 bb03 	mla	fp, r2, r3, fp
   1e38a:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
   1e38e:	9302      	str	r3, [sp, #8]
   1e390:	e585      	b.n	1de9e <_svfprintf_r+0x15e6>
   1e392:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   1e394:	18cf      	adds	r7, r1, r3
   1e396:	443a      	add	r2, r7
   1e398:	2366      	movs	r3, #102	@ 0x66
   1e39a:	4693      	mov	fp, r2
   1e39c:	930a      	str	r3, [sp, #40]	@ 0x28
   1e39e:	e727      	b.n	1e1f0 <_svfprintf_r+0x1938>
   1e3a0:	4693      	mov	fp, r2
   1e3a2:	e675      	b.n	1e090 <_svfprintf_r+0x17d8>
   1e3a4:	9b04      	ldr	r3, [sp, #16]
   1e3a6:	9302      	str	r3, [sp, #8]
   1e3a8:	469b      	mov	fp, r3
   1e3aa:	2373      	movs	r3, #115	@ 0x73
   1e3ac:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1e3b0:	9609      	str	r6, [sp, #36]	@ 0x24
   1e3b2:	9004      	str	r0, [sp, #16]
   1e3b4:	9010      	str	r0, [sp, #64]	@ 0x40
   1e3b6:	900c      	str	r0, [sp, #48]	@ 0x30
   1e3b8:	930a      	str	r3, [sp, #40]	@ 0x28
   1e3ba:	f7fe bc68 	b.w	1cc8e <_svfprintf_r+0x3d6>
   1e3be:	ec51 0b18 	vmov	r0, r1, d8
   1e3c2:	2200      	movs	r2, #0
   1e3c4:	2300      	movs	r3, #0
   1e3c6:	f7fa fca5 	bl	18d14 <__aeabi_dcmpeq>
   1e3ca:	2800      	cmp	r0, #0
   1e3cc:	f47f acfb 	bne.w	1ddc6 <_svfprintf_r+0x150e>
   1e3d0:	f1c6 0601 	rsb	r6, r6, #1
   1e3d4:	9623      	str	r6, [sp, #140]	@ 0x8c
   1e3d6:	e4f7      	b.n	1ddc8 <_svfprintf_r+0x1510>
   1e3d8:	f8dd 9008 	ldr.w	r9, [sp, #8]
   1e3dc:	f8dd b010 	ldr.w	fp, [sp, #16]
   1e3e0:	f7ff bbb7 	b.w	1db52 <_svfprintf_r+0x129a>
   1e3e4:	4e0d      	ldr	r6, [pc, #52]	@ (1e41c <_svfprintf_r+0x1b64>)
   1e3e6:	f7ff bada 	b.w	1d99e <_svfprintf_r+0x10e6>
   1e3ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
   1e3ec:	7863      	ldrb	r3, [r4, #1]
   1e3ee:	460c      	mov	r4, r1
   1e3f0:	f852 1b04 	ldr.w	r1, [r2], #4
   1e3f4:	9209      	str	r2, [sp, #36]	@ 0x24
   1e3f6:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
   1e3fa:	9104      	str	r1, [sp, #16]
   1e3fc:	f7fe bab5 	b.w	1c96a <_svfprintf_r+0xb2>
   1e400:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
   1e404:	b993      	cbnz	r3, 1e42c <_svfprintf_r+0x1b74>
   1e406:	2301      	movs	r3, #1
   1e408:	2266      	movs	r2, #102	@ 0x66
   1e40a:	9302      	str	r3, [sp, #8]
   1e40c:	920a      	str	r2, [sp, #40]	@ 0x28
   1e40e:	469b      	mov	fp, r3
   1e410:	e64b      	b.n	1e0aa <_svfprintf_r+0x17f2>
   1e412:	bf00      	nop
   1e414:	0002818c 	.word	0x0002818c
   1e418:	000281d0 	.word	0x000281d0
   1e41c:	000281c0 	.word	0x000281c0
   1e420:	000281a0 	.word	0x000281a0
   1e424:	00028184 	.word	0x00028184
   1e428:	00028188 	.word	0x00028188
   1e42c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   1e42e:	1c5f      	adds	r7, r3, #1
   1e430:	9b04      	ldr	r3, [sp, #16]
   1e432:	443b      	add	r3, r7
   1e434:	469b      	mov	fp, r3
   1e436:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   1e43a:	9302      	str	r3, [sp, #8]
   1e43c:	2366      	movs	r3, #102	@ 0x66
   1e43e:	930a      	str	r3, [sp, #40]	@ 0x28
   1e440:	e633      	b.n	1e0aa <_svfprintf_r+0x17f2>
   1e442:	2170      	movs	r1, #112	@ 0x70
   1e444:	e4df      	b.n	1de06 <_svfprintf_r+0x154e>
   1e446:	4a0b      	ldr	r2, [pc, #44]	@ (1e474 <_svfprintf_r+0x1bbc>)
   1e448:	9211      	str	r2, [sp, #68]	@ 0x44
   1e44a:	e43f      	b.n	1dccc <_svfprintf_r+0x1414>
   1e44c:	2302      	movs	r3, #2
   1e44e:	9318      	str	r3, [sp, #96]	@ 0x60
   1e450:	e510      	b.n	1de74 <_svfprintf_r+0x15bc>
   1e452:	9a05      	ldr	r2, [sp, #20]
   1e454:	f8dd b00c 	ldr.w	fp, [sp, #12]
   1e458:	8993      	ldrh	r3, [r2, #12]
   1e45a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   1e45e:	8193      	strh	r3, [r2, #12]
   1e460:	f7ff b8d3 	b.w	1d60a <_svfprintf_r+0xd52>
   1e464:	230c      	movs	r3, #12
   1e466:	f8cb 3000 	str.w	r3, [fp]
   1e46a:	e703      	b.n	1e274 <_svfprintf_r+0x19bc>
   1e46c:	2300      	movs	r3, #0
   1e46e:	9310      	str	r3, [sp, #64]	@ 0x40
   1e470:	930c      	str	r3, [sp, #48]	@ 0x30
   1e472:	e783      	b.n	1e37c <_svfprintf_r+0x1ac4>
   1e474:	000281c0 	.word	0x000281c0

0001e478 <stdio_exit_handler>:
   1e478:	4a02      	ldr	r2, [pc, #8]	@ (1e484 <stdio_exit_handler+0xc>)
   1e47a:	4903      	ldr	r1, [pc, #12]	@ (1e488 <stdio_exit_handler+0x10>)
   1e47c:	4803      	ldr	r0, [pc, #12]	@ (1e48c <stdio_exit_handler+0x14>)
   1e47e:	f000 b8c9 	b.w	1e614 <_fwalk_sglue>
   1e482:	bf00      	nop
   1e484:	10001210 	.word	0x10001210
   1e488:	00020a11 	.word	0x00020a11
   1e48c:	100010f0 	.word	0x100010f0

0001e490 <cleanup_stdio>:
   1e490:	4b0c      	ldr	r3, [pc, #48]	@ (1e4c4 <cleanup_stdio+0x34>)
   1e492:	6841      	ldr	r1, [r0, #4]
   1e494:	4299      	cmp	r1, r3
   1e496:	b510      	push	{r4, lr}
   1e498:	4604      	mov	r4, r0
   1e49a:	d001      	beq.n	1e4a0 <cleanup_stdio+0x10>
   1e49c:	f002 fab8 	bl	20a10 <_fclose_r>
   1e4a0:	68a1      	ldr	r1, [r4, #8]
   1e4a2:	4b09      	ldr	r3, [pc, #36]	@ (1e4c8 <cleanup_stdio+0x38>)
   1e4a4:	4299      	cmp	r1, r3
   1e4a6:	d002      	beq.n	1e4ae <cleanup_stdio+0x1e>
   1e4a8:	4620      	mov	r0, r4
   1e4aa:	f002 fab1 	bl	20a10 <_fclose_r>
   1e4ae:	68e1      	ldr	r1, [r4, #12]
   1e4b0:	4b06      	ldr	r3, [pc, #24]	@ (1e4cc <cleanup_stdio+0x3c>)
   1e4b2:	4299      	cmp	r1, r3
   1e4b4:	d004      	beq.n	1e4c0 <cleanup_stdio+0x30>
   1e4b6:	4620      	mov	r0, r4
   1e4b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1e4bc:	f002 baa8 	b.w	20a10 <_fclose_r>
   1e4c0:	bd10      	pop	{r4, pc}
   1e4c2:	bf00      	nop
   1e4c4:	100300f8 	.word	0x100300f8
   1e4c8:	10030160 	.word	0x10030160
   1e4cc:	100301c8 	.word	0x100301c8

0001e4d0 <global_stdio_init.part.0>:
   1e4d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e4d4:	4c31      	ldr	r4, [pc, #196]	@ (1e59c <global_stdio_init.part.0+0xcc>)
   1e4d6:	4b32      	ldr	r3, [pc, #200]	@ (1e5a0 <global_stdio_init.part.0+0xd0>)
   1e4d8:	4832      	ldr	r0, [pc, #200]	@ (1e5a4 <global_stdio_init.part.0+0xd4>)
   1e4da:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 1e5b8 <global_stdio_init.part.0+0xe8>
   1e4de:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 1e5bc <global_stdio_init.part.0+0xec>
   1e4e2:	4f31      	ldr	r7, [pc, #196]	@ (1e5a8 <global_stdio_init.part.0+0xd8>)
   1e4e4:	6018      	str	r0, [r3, #0]
   1e4e6:	2500      	movs	r5, #0
   1e4e8:	4629      	mov	r1, r5
   1e4ea:	2304      	movs	r3, #4
   1e4ec:	2208      	movs	r2, #8
   1e4ee:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
   1e4f2:	4e2e      	ldr	r6, [pc, #184]	@ (1e5ac <global_stdio_init.part.0+0xdc>)
   1e4f4:	60e3      	str	r3, [r4, #12]
   1e4f6:	e9c4 5500 	strd	r5, r5, [r4]
   1e4fa:	e9c4 5504 	strd	r5, r5, [r4, #16]
   1e4fe:	60a5      	str	r5, [r4, #8]
   1e500:	6665      	str	r5, [r4, #100]	@ 0x64
   1e502:	61a5      	str	r5, [r4, #24]
   1e504:	f000 f8f2 	bl	1e6ec <memset>
   1e508:	f104 0058 	add.w	r0, r4, #88	@ 0x58
   1e50c:	e9c4 4907 	strd	r4, r9, [r4, #28]
   1e510:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
   1e514:	62e6      	str	r6, [r4, #44]	@ 0x2c
   1e516:	f000 f9cd 	bl	1e8b4 <__retarget_lock_init_recursive>
   1e51a:	4629      	mov	r1, r5
   1e51c:	4b24      	ldr	r3, [pc, #144]	@ (1e5b0 <global_stdio_init.part.0+0xe0>)
   1e51e:	6763      	str	r3, [r4, #116]	@ 0x74
   1e520:	2208      	movs	r2, #8
   1e522:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
   1e526:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
   1e52a:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
   1e52e:	6725      	str	r5, [r4, #112]	@ 0x70
   1e530:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
   1e534:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
   1e538:	f000 f8d8 	bl	1e6ec <memset>
   1e53c:	f104 0368 	add.w	r3, r4, #104	@ 0x68
   1e540:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
   1e544:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
   1e548:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
   1e54c:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
   1e550:	f000 f9b0 	bl	1e8b4 <__retarget_lock_init_recursive>
   1e554:	4b17      	ldr	r3, [pc, #92]	@ (1e5b4 <global_stdio_init.part.0+0xe4>)
   1e556:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
   1e55a:	4629      	mov	r1, r5
   1e55c:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
   1e560:	2208      	movs	r2, #8
   1e562:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
   1e566:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
   1e56a:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
   1e56e:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
   1e572:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
   1e576:	f000 f8b9 	bl	1e6ec <memset>
   1e57a:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
   1e57e:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
   1e582:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
   1e586:	f504 7094 	add.w	r0, r4, #296	@ 0x128
   1e58a:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
   1e58e:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
   1e592:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e596:	f000 b98d 	b.w	1e8b4 <__retarget_lock_init_recursive>
   1e59a:	bf00      	nop
   1e59c:	100300f8 	.word	0x100300f8
   1e5a0:	10030230 	.word	0x10030230
   1e5a4:	0001e479 	.word	0x0001e479
   1e5a8:	0001e6c1 	.word	0x0001e6c1
   1e5ac:	0001e6e5 	.word	0x0001e6e5
   1e5b0:	00010009 	.word	0x00010009
   1e5b4:	00020012 	.word	0x00020012
   1e5b8:	0001e65d 	.word	0x0001e65d
   1e5bc:	0001e681 	.word	0x0001e681

0001e5c0 <__sinit>:
   1e5c0:	b510      	push	{r4, lr}
   1e5c2:	4604      	mov	r4, r0
   1e5c4:	480a      	ldr	r0, [pc, #40]	@ (1e5f0 <__sinit+0x30>)
   1e5c6:	f000 f979 	bl	1e8bc <__retarget_lock_acquire_recursive>
   1e5ca:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   1e5cc:	b923      	cbnz	r3, 1e5d8 <__sinit+0x18>
   1e5ce:	4b09      	ldr	r3, [pc, #36]	@ (1e5f4 <__sinit+0x34>)
   1e5d0:	4a09      	ldr	r2, [pc, #36]	@ (1e5f8 <__sinit+0x38>)
   1e5d2:	681b      	ldr	r3, [r3, #0]
   1e5d4:	6362      	str	r2, [r4, #52]	@ 0x34
   1e5d6:	b123      	cbz	r3, 1e5e2 <__sinit+0x22>
   1e5d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1e5dc:	4804      	ldr	r0, [pc, #16]	@ (1e5f0 <__sinit+0x30>)
   1e5de:	f000 b96f 	b.w	1e8c0 <__retarget_lock_release_recursive>
   1e5e2:	f7ff ff75 	bl	1e4d0 <global_stdio_init.part.0>
   1e5e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1e5ea:	4801      	ldr	r0, [pc, #4]	@ (1e5f0 <__sinit+0x30>)
   1e5ec:	f000 b968 	b.w	1e8c0 <__retarget_lock_release_recursive>
   1e5f0:	1003023c 	.word	0x1003023c
   1e5f4:	10030230 	.word	0x10030230
   1e5f8:	0001e491 	.word	0x0001e491

0001e5fc <__sfp_lock_acquire>:
   1e5fc:	4801      	ldr	r0, [pc, #4]	@ (1e604 <__sfp_lock_acquire+0x8>)
   1e5fe:	f000 b95d 	b.w	1e8bc <__retarget_lock_acquire_recursive>
   1e602:	bf00      	nop
   1e604:	1003023c 	.word	0x1003023c

0001e608 <__sfp_lock_release>:
   1e608:	4801      	ldr	r0, [pc, #4]	@ (1e610 <__sfp_lock_release+0x8>)
   1e60a:	f000 b959 	b.w	1e8c0 <__retarget_lock_release_recursive>
   1e60e:	bf00      	nop
   1e610:	1003023c 	.word	0x1003023c

0001e614 <_fwalk_sglue>:
   1e614:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e618:	4680      	mov	r8, r0
   1e61a:	460f      	mov	r7, r1
   1e61c:	4616      	mov	r6, r2
   1e61e:	f04f 0900 	mov.w	r9, #0
   1e622:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
   1e626:	3d01      	subs	r5, #1
   1e628:	d411      	bmi.n	1e64e <_fwalk_sglue+0x3a>
   1e62a:	89a3      	ldrh	r3, [r4, #12]
   1e62c:	2b01      	cmp	r3, #1
   1e62e:	f105 35ff 	add.w	r5, r5, #4294967295
   1e632:	d908      	bls.n	1e646 <_fwalk_sglue+0x32>
   1e634:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   1e638:	3301      	adds	r3, #1
   1e63a:	4621      	mov	r1, r4
   1e63c:	d003      	beq.n	1e646 <_fwalk_sglue+0x32>
   1e63e:	4640      	mov	r0, r8
   1e640:	47b8      	blx	r7
   1e642:	ea49 0900 	orr.w	r9, r9, r0
   1e646:	1c6b      	adds	r3, r5, #1
   1e648:	f104 0468 	add.w	r4, r4, #104	@ 0x68
   1e64c:	d1ed      	bne.n	1e62a <_fwalk_sglue+0x16>
   1e64e:	6836      	ldr	r6, [r6, #0]
   1e650:	2e00      	cmp	r6, #0
   1e652:	d1e6      	bne.n	1e622 <_fwalk_sglue+0xe>
   1e654:	4648      	mov	r0, r9
   1e656:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e65a:	bf00      	nop

0001e65c <__sread>:
   1e65c:	b510      	push	{r4, lr}
   1e65e:	460c      	mov	r4, r1
   1e660:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1e664:	f000 f8fa 	bl	1e85c <_read_r>
   1e668:	2800      	cmp	r0, #0
   1e66a:	db03      	blt.n	1e674 <__sread+0x18>
   1e66c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1e66e:	4403      	add	r3, r0
   1e670:	6523      	str	r3, [r4, #80]	@ 0x50
   1e672:	bd10      	pop	{r4, pc}
   1e674:	89a3      	ldrh	r3, [r4, #12]
   1e676:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
   1e67a:	81a3      	strh	r3, [r4, #12]
   1e67c:	bd10      	pop	{r4, pc}
   1e67e:	bf00      	nop

0001e680 <__swrite>:
   1e680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e684:	460c      	mov	r4, r1
   1e686:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   1e68a:	461f      	mov	r7, r3
   1e68c:	05cb      	lsls	r3, r1, #23
   1e68e:	4605      	mov	r5, r0
   1e690:	4616      	mov	r6, r2
   1e692:	d40b      	bmi.n	1e6ac <__swrite+0x2c>
   1e694:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
   1e698:	81a1      	strh	r1, [r4, #12]
   1e69a:	463b      	mov	r3, r7
   1e69c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1e6a0:	4632      	mov	r2, r6
   1e6a2:	4628      	mov	r0, r5
   1e6a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1e6a8:	f000 b8ee 	b.w	1e888 <_write_r>
   1e6ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1e6b0:	2302      	movs	r3, #2
   1e6b2:	2200      	movs	r2, #0
   1e6b4:	f000 f8bc 	bl	1e830 <_lseek_r>
   1e6b8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   1e6bc:	e7ea      	b.n	1e694 <__swrite+0x14>
   1e6be:	bf00      	nop

0001e6c0 <__sseek>:
   1e6c0:	b510      	push	{r4, lr}
   1e6c2:	460c      	mov	r4, r1
   1e6c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1e6c8:	f000 f8b2 	bl	1e830 <_lseek_r>
   1e6cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1e6d0:	1c42      	adds	r2, r0, #1
   1e6d2:	bf0e      	itee	eq
   1e6d4:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
   1e6d8:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
   1e6dc:	6520      	strne	r0, [r4, #80]	@ 0x50
   1e6de:	81a3      	strh	r3, [r4, #12]
   1e6e0:	bd10      	pop	{r4, pc}
   1e6e2:	bf00      	nop

0001e6e4 <__sclose>:
   1e6e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1e6e8:	f000 b890 	b.w	1e80c <_close_r>

0001e6ec <memset>:
   1e6ec:	0783      	lsls	r3, r0, #30
   1e6ee:	b530      	push	{r4, r5, lr}
   1e6f0:	d047      	beq.n	1e782 <memset+0x96>
   1e6f2:	1e54      	subs	r4, r2, #1
   1e6f4:	2a00      	cmp	r2, #0
   1e6f6:	d03e      	beq.n	1e776 <memset+0x8a>
   1e6f8:	b2ca      	uxtb	r2, r1
   1e6fa:	4603      	mov	r3, r0
   1e6fc:	e001      	b.n	1e702 <memset+0x16>
   1e6fe:	3c01      	subs	r4, #1
   1e700:	d339      	bcc.n	1e776 <memset+0x8a>
   1e702:	f803 2b01 	strb.w	r2, [r3], #1
   1e706:	079d      	lsls	r5, r3, #30
   1e708:	d1f9      	bne.n	1e6fe <memset+0x12>
   1e70a:	2c03      	cmp	r4, #3
   1e70c:	d92c      	bls.n	1e768 <memset+0x7c>
   1e70e:	b2cd      	uxtb	r5, r1
   1e710:	eb05 2505 	add.w	r5, r5, r5, lsl #8
   1e714:	2c0f      	cmp	r4, #15
   1e716:	eb05 4505 	add.w	r5, r5, r5, lsl #16
   1e71a:	d935      	bls.n	1e788 <memset+0x9c>
   1e71c:	f1a4 0210 	sub.w	r2, r4, #16
   1e720:	f022 0c0f 	bic.w	ip, r2, #15
   1e724:	f103 0e10 	add.w	lr, r3, #16
   1e728:	44e6      	add	lr, ip
   1e72a:	ea4f 1c12 	mov.w	ip, r2, lsr #4
   1e72e:	461a      	mov	r2, r3
   1e730:	6015      	str	r5, [r2, #0]
   1e732:	6055      	str	r5, [r2, #4]
   1e734:	6095      	str	r5, [r2, #8]
   1e736:	60d5      	str	r5, [r2, #12]
   1e738:	3210      	adds	r2, #16
   1e73a:	4572      	cmp	r2, lr
   1e73c:	d1f8      	bne.n	1e730 <memset+0x44>
   1e73e:	f10c 0201 	add.w	r2, ip, #1
   1e742:	f014 0f0c 	tst.w	r4, #12
   1e746:	eb03 1202 	add.w	r2, r3, r2, lsl #4
   1e74a:	f004 0c0f 	and.w	ip, r4, #15
   1e74e:	d013      	beq.n	1e778 <memset+0x8c>
   1e750:	f1ac 0304 	sub.w	r3, ip, #4
   1e754:	f023 0303 	bic.w	r3, r3, #3
   1e758:	3304      	adds	r3, #4
   1e75a:	4413      	add	r3, r2
   1e75c:	f842 5b04 	str.w	r5, [r2], #4
   1e760:	429a      	cmp	r2, r3
   1e762:	d1fb      	bne.n	1e75c <memset+0x70>
   1e764:	f00c 0403 	and.w	r4, ip, #3
   1e768:	b12c      	cbz	r4, 1e776 <memset+0x8a>
   1e76a:	b2c9      	uxtb	r1, r1
   1e76c:	441c      	add	r4, r3
   1e76e:	f803 1b01 	strb.w	r1, [r3], #1
   1e772:	429c      	cmp	r4, r3
   1e774:	d1fb      	bne.n	1e76e <memset+0x82>
   1e776:	bd30      	pop	{r4, r5, pc}
   1e778:	4664      	mov	r4, ip
   1e77a:	4613      	mov	r3, r2
   1e77c:	2c00      	cmp	r4, #0
   1e77e:	d1f4      	bne.n	1e76a <memset+0x7e>
   1e780:	e7f9      	b.n	1e776 <memset+0x8a>
   1e782:	4603      	mov	r3, r0
   1e784:	4614      	mov	r4, r2
   1e786:	e7c0      	b.n	1e70a <memset+0x1e>
   1e788:	461a      	mov	r2, r3
   1e78a:	46a4      	mov	ip, r4
   1e78c:	e7e0      	b.n	1e750 <memset+0x64>
   1e78e:	bf00      	nop

0001e790 <strncpy>:
   1e790:	ea40 0301 	orr.w	r3, r0, r1
   1e794:	079b      	lsls	r3, r3, #30
   1e796:	b510      	push	{r4, lr}
   1e798:	d101      	bne.n	1e79e <strncpy+0xe>
   1e79a:	2a03      	cmp	r2, #3
   1e79c:	d817      	bhi.n	1e7ce <strncpy+0x3e>
   1e79e:	4684      	mov	ip, r0
   1e7a0:	f101 3eff 	add.w	lr, r1, #4294967295
   1e7a4:	e007      	b.n	1e7b6 <strncpy+0x26>
   1e7a6:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
   1e7aa:	f803 1b01 	strb.w	r1, [r3], #1
   1e7ae:	1e54      	subs	r4, r2, #1
   1e7b0:	b129      	cbz	r1, 1e7be <strncpy+0x2e>
   1e7b2:	469c      	mov	ip, r3
   1e7b4:	4622      	mov	r2, r4
   1e7b6:	4663      	mov	r3, ip
   1e7b8:	2a00      	cmp	r2, #0
   1e7ba:	d1f4      	bne.n	1e7a6 <strncpy+0x16>
   1e7bc:	bd10      	pop	{r4, pc}
   1e7be:	4494      	add	ip, r2
   1e7c0:	2c00      	cmp	r4, #0
   1e7c2:	d0fb      	beq.n	1e7bc <strncpy+0x2c>
   1e7c4:	f803 1b01 	strb.w	r1, [r3], #1
   1e7c8:	4563      	cmp	r3, ip
   1e7ca:	d1fb      	bne.n	1e7c4 <strncpy+0x34>
   1e7cc:	bd10      	pop	{r4, pc}
   1e7ce:	468e      	mov	lr, r1
   1e7d0:	4684      	mov	ip, r0
   1e7d2:	f8de 4000 	ldr.w	r4, [lr]
   1e7d6:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
   1e7da:	ea23 0304 	bic.w	r3, r3, r4
   1e7de:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
   1e7e2:	4671      	mov	r1, lr
   1e7e4:	f10e 0e04 	add.w	lr, lr, #4
   1e7e8:	d1da      	bne.n	1e7a0 <strncpy+0x10>
   1e7ea:	3a04      	subs	r2, #4
   1e7ec:	2a03      	cmp	r2, #3
   1e7ee:	f84c 4b04 	str.w	r4, [ip], #4
   1e7f2:	d8ee      	bhi.n	1e7d2 <strncpy+0x42>
   1e7f4:	4671      	mov	r1, lr
   1e7f6:	e7d3      	b.n	1e7a0 <strncpy+0x10>

0001e7f8 <__locale_mb_cur_max>:
   1e7f8:	4b01      	ldr	r3, [pc, #4]	@ (1e800 <__locale_mb_cur_max+0x8>)
   1e7fa:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
   1e7fe:	4770      	bx	lr
   1e800:	1000121c 	.word	0x1000121c

0001e804 <_localeconv_r>:
   1e804:	4800      	ldr	r0, [pc, #0]	@ (1e808 <_localeconv_r+0x4>)
   1e806:	4770      	bx	lr
   1e808:	1000130c 	.word	0x1000130c

0001e80c <_close_r>:
   1e80c:	b538      	push	{r3, r4, r5, lr}
   1e80e:	4d07      	ldr	r5, [pc, #28]	@ (1e82c <_close_r+0x20>)
   1e810:	2200      	movs	r2, #0
   1e812:	4604      	mov	r4, r0
   1e814:	4608      	mov	r0, r1
   1e816:	602a      	str	r2, [r5, #0]
   1e818:	f004 f938 	bl	22a8c <_close>
   1e81c:	1c43      	adds	r3, r0, #1
   1e81e:	d000      	beq.n	1e822 <_close_r+0x16>
   1e820:	bd38      	pop	{r3, r4, r5, pc}
   1e822:	682b      	ldr	r3, [r5, #0]
   1e824:	2b00      	cmp	r3, #0
   1e826:	d0fb      	beq.n	1e820 <_close_r+0x14>
   1e828:	6023      	str	r3, [r4, #0]
   1e82a:	bd38      	pop	{r3, r4, r5, pc}
   1e82c:	10030234 	.word	0x10030234

0001e830 <_lseek_r>:
   1e830:	b538      	push	{r3, r4, r5, lr}
   1e832:	460c      	mov	r4, r1
   1e834:	4d08      	ldr	r5, [pc, #32]	@ (1e858 <_lseek_r+0x28>)
   1e836:	4684      	mov	ip, r0
   1e838:	4611      	mov	r1, r2
   1e83a:	4620      	mov	r0, r4
   1e83c:	461a      	mov	r2, r3
   1e83e:	2300      	movs	r3, #0
   1e840:	602b      	str	r3, [r5, #0]
   1e842:	4664      	mov	r4, ip
   1e844:	f004 f94a 	bl	22adc <_lseek>
   1e848:	1c43      	adds	r3, r0, #1
   1e84a:	d000      	beq.n	1e84e <_lseek_r+0x1e>
   1e84c:	bd38      	pop	{r3, r4, r5, pc}
   1e84e:	682b      	ldr	r3, [r5, #0]
   1e850:	2b00      	cmp	r3, #0
   1e852:	d0fb      	beq.n	1e84c <_lseek_r+0x1c>
   1e854:	6023      	str	r3, [r4, #0]
   1e856:	bd38      	pop	{r3, r4, r5, pc}
   1e858:	10030234 	.word	0x10030234

0001e85c <_read_r>:
   1e85c:	b538      	push	{r3, r4, r5, lr}
   1e85e:	460c      	mov	r4, r1
   1e860:	4d08      	ldr	r5, [pc, #32]	@ (1e884 <_read_r+0x28>)
   1e862:	4684      	mov	ip, r0
   1e864:	4611      	mov	r1, r2
   1e866:	4620      	mov	r0, r4
   1e868:	461a      	mov	r2, r3
   1e86a:	2300      	movs	r3, #0
   1e86c:	602b      	str	r3, [r5, #0]
   1e86e:	4664      	mov	r4, ip
   1e870:	f004 f93c 	bl	22aec <_read>
   1e874:	1c43      	adds	r3, r0, #1
   1e876:	d000      	beq.n	1e87a <_read_r+0x1e>
   1e878:	bd38      	pop	{r3, r4, r5, pc}
   1e87a:	682b      	ldr	r3, [r5, #0]
   1e87c:	2b00      	cmp	r3, #0
   1e87e:	d0fb      	beq.n	1e878 <_read_r+0x1c>
   1e880:	6023      	str	r3, [r4, #0]
   1e882:	bd38      	pop	{r3, r4, r5, pc}
   1e884:	10030234 	.word	0x10030234

0001e888 <_write_r>:
   1e888:	b538      	push	{r3, r4, r5, lr}
   1e88a:	460c      	mov	r4, r1
   1e88c:	4d08      	ldr	r5, [pc, #32]	@ (1e8b0 <_write_r+0x28>)
   1e88e:	4684      	mov	ip, r0
   1e890:	4611      	mov	r1, r2
   1e892:	4620      	mov	r0, r4
   1e894:	461a      	mov	r2, r3
   1e896:	2300      	movs	r3, #0
   1e898:	602b      	str	r3, [r5, #0]
   1e89a:	4664      	mov	r4, ip
   1e89c:	f004 f93c 	bl	22b18 <_write>
   1e8a0:	1c43      	adds	r3, r0, #1
   1e8a2:	d000      	beq.n	1e8a6 <_write_r+0x1e>
   1e8a4:	bd38      	pop	{r3, r4, r5, pc}
   1e8a6:	682b      	ldr	r3, [r5, #0]
   1e8a8:	2b00      	cmp	r3, #0
   1e8aa:	d0fb      	beq.n	1e8a4 <_write_r+0x1c>
   1e8ac:	6023      	str	r3, [r4, #0]
   1e8ae:	bd38      	pop	{r3, r4, r5, pc}
   1e8b0:	10030234 	.word	0x10030234

0001e8b4 <__retarget_lock_init_recursive>:
   1e8b4:	4770      	bx	lr
   1e8b6:	bf00      	nop

0001e8b8 <__retarget_lock_close_recursive>:
   1e8b8:	4770      	bx	lr
   1e8ba:	bf00      	nop

0001e8bc <__retarget_lock_acquire_recursive>:
   1e8bc:	4770      	bx	lr
   1e8be:	bf00      	nop

0001e8c0 <__retarget_lock_release_recursive>:
   1e8c0:	4770      	bx	lr
   1e8c2:	bf00      	nop

0001e8c4 <frexp>:
   1e8c4:	ec53 2b10 	vmov	r2, r3, d0
   1e8c8:	b570      	push	{r4, r5, r6, lr}
   1e8ca:	4e15      	ldr	r6, [pc, #84]	@ (1e920 <frexp+0x5c>)
   1e8cc:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
   1e8d0:	2500      	movs	r5, #0
   1e8d2:	42b1      	cmp	r1, r6
   1e8d4:	4604      	mov	r4, r0
   1e8d6:	6005      	str	r5, [r0, #0]
   1e8d8:	d81f      	bhi.n	1e91a <frexp+0x56>
   1e8da:	4616      	mov	r6, r2
   1e8dc:	430e      	orrs	r6, r1
   1e8de:	d01c      	beq.n	1e91a <frexp+0x56>
   1e8e0:	4e10      	ldr	r6, [pc, #64]	@ (1e924 <frexp+0x60>)
   1e8e2:	401e      	ands	r6, r3
   1e8e4:	4618      	mov	r0, r3
   1e8e6:	b95e      	cbnz	r6, 1e900 <frexp+0x3c>
   1e8e8:	4610      	mov	r0, r2
   1e8ea:	4619      	mov	r1, r3
   1e8ec:	2200      	movs	r2, #0
   1e8ee:	4b0e      	ldr	r3, [pc, #56]	@ (1e928 <frexp+0x64>)
   1e8f0:	f7f9 ffa8 	bl	18844 <__aeabi_dmul>
   1e8f4:	f06f 0535 	mvn.w	r5, #53	@ 0x35
   1e8f8:	4602      	mov	r2, r0
   1e8fa:	4608      	mov	r0, r1
   1e8fc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
   1e900:	f020 40ff 	bic.w	r0, r0, #2139095040	@ 0x7f800000
   1e904:	1509      	asrs	r1, r1, #20
   1e906:	f420 00e0 	bic.w	r0, r0, #7340032	@ 0x700000
   1e90a:	f2a1 31fe 	subw	r1, r1, #1022	@ 0x3fe
   1e90e:	f040 537f 	orr.w	r3, r0, #1069547520	@ 0x3fc00000
   1e912:	4429      	add	r1, r5
   1e914:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
   1e918:	6021      	str	r1, [r4, #0]
   1e91a:	ec43 2b10 	vmov	d0, r2, r3
   1e91e:	bd70      	pop	{r4, r5, r6, pc}
   1e920:	7fefffff 	.word	0x7fefffff
   1e924:	7ff00000 	.word	0x7ff00000
   1e928:	43500000 	.word	0x43500000

0001e92c <quorem>:
   1e92c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e930:	6903      	ldr	r3, [r0, #16]
   1e932:	690c      	ldr	r4, [r1, #16]
   1e934:	42a3      	cmp	r3, r4
   1e936:	b083      	sub	sp, #12
   1e938:	f2c0 808a 	blt.w	1ea50 <quorem+0x124>
   1e93c:	3c01      	subs	r4, #1
   1e93e:	f101 0514 	add.w	r5, r1, #20
   1e942:	f100 0814 	add.w	r8, r0, #20
   1e946:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
   1e94a:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   1e94e:	3301      	adds	r3, #1
   1e950:	429a      	cmp	r2, r3
   1e952:	468e      	mov	lr, r1
   1e954:	4681      	mov	r9, r0
   1e956:	ea4f 0184 	mov.w	r1, r4, lsl #2
   1e95a:	eb05 0784 	add.w	r7, r5, r4, lsl #2
   1e95e:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
   1e962:	fbb2 f6f3 	udiv	r6, r2, r3
   1e966:	d33a      	bcc.n	1e9de <quorem+0xb2>
   1e968:	e9cd 1500 	strd	r1, r5, [sp]
   1e96c:	2200      	movs	r2, #0
   1e96e:	46ac      	mov	ip, r5
   1e970:	4640      	mov	r0, r8
   1e972:	4613      	mov	r3, r2
   1e974:	f85c 1b04 	ldr.w	r1, [ip], #4
   1e978:	6805      	ldr	r5, [r0, #0]
   1e97a:	fa1f fb81 	uxth.w	fp, r1
   1e97e:	fb06 220b 	mla	r2, r6, fp, r2
   1e982:	0c09      	lsrs	r1, r1, #16
   1e984:	ea4f 4b12 	mov.w	fp, r2, lsr #16
   1e988:	fb06 bb01 	mla	fp, r6, r1, fp
   1e98c:	b292      	uxth	r2, r2
   1e98e:	b2a9      	uxth	r1, r5
   1e990:	1a89      	subs	r1, r1, r2
   1e992:	4419      	add	r1, r3
   1e994:	fa1f f38b 	uxth.w	r3, fp
   1e998:	ebc3 4321 	rsb	r3, r3, r1, asr #16
   1e99c:	eb03 4315 	add.w	r3, r3, r5, lsr #16
   1e9a0:	b289      	uxth	r1, r1
   1e9a2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
   1e9a6:	4567      	cmp	r7, ip
   1e9a8:	f840 1b04 	str.w	r1, [r0], #4
   1e9ac:	ea4f 421b 	mov.w	r2, fp, lsr #16
   1e9b0:	ea4f 4323 	mov.w	r3, r3, asr #16
   1e9b4:	d2de      	bcs.n	1e974 <quorem+0x48>
   1e9b6:	e9dd 1500 	ldrd	r1, r5, [sp]
   1e9ba:	f858 3001 	ldr.w	r3, [r8, r1]
   1e9be:	b973      	cbnz	r3, 1e9de <quorem+0xb2>
   1e9c0:	f1aa 0a04 	sub.w	sl, sl, #4
   1e9c4:	45d0      	cmp	r8, sl
   1e9c6:	d304      	bcc.n	1e9d2 <quorem+0xa6>
   1e9c8:	e007      	b.n	1e9da <quorem+0xae>
   1e9ca:	45d0      	cmp	r8, sl
   1e9cc:	f104 34ff 	add.w	r4, r4, #4294967295
   1e9d0:	d203      	bcs.n	1e9da <quorem+0xae>
   1e9d2:	f85a 3904 	ldr.w	r3, [sl], #-4
   1e9d6:	2b00      	cmp	r3, #0
   1e9d8:	d0f7      	beq.n	1e9ca <quorem+0x9e>
   1e9da:	f8c9 4010 	str.w	r4, [r9, #16]
   1e9de:	4671      	mov	r1, lr
   1e9e0:	4648      	mov	r0, r9
   1e9e2:	f001 fe1d 	bl	20620 <__mcmp>
   1e9e6:	2800      	cmp	r0, #0
   1e9e8:	db2e      	blt.n	1ea48 <quorem+0x11c>
   1e9ea:	4641      	mov	r1, r8
   1e9ec:	2200      	movs	r2, #0
   1e9ee:	f855 0b04 	ldr.w	r0, [r5], #4
   1e9f2:	f8d1 c000 	ldr.w	ip, [r1]
   1e9f6:	fa1f fe80 	uxth.w	lr, r0
   1e9fa:	fa1f f38c 	uxth.w	r3, ip
   1e9fe:	eba3 030e 	sub.w	r3, r3, lr
   1ea02:	4413      	add	r3, r2
   1ea04:	0c02      	lsrs	r2, r0, #16
   1ea06:	ebc2 4223 	rsb	r2, r2, r3, asr #16
   1ea0a:	eb02 421c 	add.w	r2, r2, ip, lsr #16
   1ea0e:	b29b      	uxth	r3, r3
   1ea10:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   1ea14:	42af      	cmp	r7, r5
   1ea16:	f841 3b04 	str.w	r3, [r1], #4
   1ea1a:	ea4f 4222 	mov.w	r2, r2, asr #16
   1ea1e:	d2e6      	bcs.n	1e9ee <quorem+0xc2>
   1ea20:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   1ea24:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   1ea28:	b96a      	cbnz	r2, 1ea46 <quorem+0x11a>
   1ea2a:	3b04      	subs	r3, #4
   1ea2c:	4598      	cmp	r8, r3
   1ea2e:	d304      	bcc.n	1ea3a <quorem+0x10e>
   1ea30:	e007      	b.n	1ea42 <quorem+0x116>
   1ea32:	4598      	cmp	r8, r3
   1ea34:	f104 34ff 	add.w	r4, r4, #4294967295
   1ea38:	d203      	bcs.n	1ea42 <quorem+0x116>
   1ea3a:	f853 2904 	ldr.w	r2, [r3], #-4
   1ea3e:	2a00      	cmp	r2, #0
   1ea40:	d0f7      	beq.n	1ea32 <quorem+0x106>
   1ea42:	f8c9 4010 	str.w	r4, [r9, #16]
   1ea46:	3601      	adds	r6, #1
   1ea48:	4630      	mov	r0, r6
   1ea4a:	b003      	add	sp, #12
   1ea4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea50:	2000      	movs	r0, #0
   1ea52:	b003      	add	sp, #12
   1ea54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ea58 <_dtoa_r>:
   1ea58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea5c:	b09f      	sub	sp, #124	@ 0x7c
   1ea5e:	ed8d 0b04 	vstr	d0, [sp, #16]
   1ea62:	9100      	str	r1, [sp, #0]
   1ea64:	6b81      	ldr	r1, [r0, #56]	@ 0x38
   1ea66:	9d28      	ldr	r5, [sp, #160]	@ 0xa0
   1ea68:	9002      	str	r0, [sp, #8]
   1ea6a:	ec57 6b10 	vmov	r6, r7, d0
   1ea6e:	920a      	str	r2, [sp, #40]	@ 0x28
   1ea70:	9308      	str	r3, [sp, #32]
   1ea72:	b149      	cbz	r1, 1ea88 <_dtoa_r+0x30>
   1ea74:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
   1ea76:	604a      	str	r2, [r1, #4]
   1ea78:	2301      	movs	r3, #1
   1ea7a:	4093      	lsls	r3, r2
   1ea7c:	4604      	mov	r4, r0
   1ea7e:	608b      	str	r3, [r1, #8]
   1ea80:	f001 fb6c 	bl	2015c <_Bfree>
   1ea84:	2300      	movs	r3, #0
   1ea86:	63a3      	str	r3, [r4, #56]	@ 0x38
   1ea88:	f1b7 0900 	subs.w	r9, r7, #0
   1ea8c:	bfb4      	ite	lt
   1ea8e:	2301      	movlt	r3, #1
   1ea90:	2300      	movge	r3, #0
   1ea92:	602b      	str	r3, [r5, #0]
   1ea94:	4b76      	ldr	r3, [pc, #472]	@ (1ec70 <_dtoa_r+0x218>)
   1ea96:	bfbc      	itt	lt
   1ea98:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
   1ea9c:	f8cd 9014 	strlt.w	r9, [sp, #20]
   1eaa0:	ea33 0309 	bics.w	r3, r3, r9
   1eaa4:	f000 80a8 	beq.w	1ebf8 <_dtoa_r+0x1a0>
   1eaa8:	ed9d 7b04 	vldr	d7, [sp, #16]
   1eaac:	2200      	movs	r2, #0
   1eaae:	ec51 0b17 	vmov	r0, r1, d7
   1eab2:	2300      	movs	r3, #0
   1eab4:	ed8d 7b06 	vstr	d7, [sp, #24]
   1eab8:	f7fa f92c 	bl	18d14 <__aeabi_dcmpeq>
   1eabc:	4680      	mov	r8, r0
   1eabe:	b168      	cbz	r0, 1eadc <_dtoa_r+0x84>
   1eac0:	9a08      	ldr	r2, [sp, #32]
   1eac2:	2301      	movs	r3, #1
   1eac4:	6013      	str	r3, [r2, #0]
   1eac6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
   1eac8:	b113      	cbz	r3, 1ead0 <_dtoa_r+0x78>
   1eaca:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
   1eacc:	4b69      	ldr	r3, [pc, #420]	@ (1ec74 <_dtoa_r+0x21c>)
   1eace:	6013      	str	r3, [r2, #0]
   1ead0:	4b69      	ldr	r3, [pc, #420]	@ (1ec78 <_dtoa_r+0x220>)
   1ead2:	9303      	str	r3, [sp, #12]
   1ead4:	9803      	ldr	r0, [sp, #12]
   1ead6:	b01f      	add	sp, #124	@ 0x7c
   1ead8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eadc:	ed9d 0b06 	vldr	d0, [sp, #24]
   1eae0:	9802      	ldr	r0, [sp, #8]
   1eae2:	aa1c      	add	r2, sp, #112	@ 0x70
   1eae4:	a91d      	add	r1, sp, #116	@ 0x74
   1eae6:	f001 fe6f 	bl	207c8 <__d2b>
   1eaea:	ea5f 5519 	movs.w	r5, r9, lsr #20
   1eaee:	4682      	mov	sl, r0
   1eaf0:	f040 8098 	bne.w	1ec24 <_dtoa_r+0x1cc>
   1eaf4:	e9dd 851c 	ldrd	r8, r5, [sp, #112]	@ 0x70
   1eaf8:	4445      	add	r5, r8
   1eafa:	f205 4332 	addw	r3, r5, #1074	@ 0x432
   1eafe:	2b20      	cmp	r3, #32
   1eb00:	f340 8384 	ble.w	1f20c <_dtoa_r+0x7b4>
   1eb04:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
   1eb08:	fa09 f903 	lsl.w	r9, r9, r3
   1eb0c:	f205 4312 	addw	r3, r5, #1042	@ 0x412
   1eb10:	fa26 f303 	lsr.w	r3, r6, r3
   1eb14:	ea49 0003 	orr.w	r0, r9, r3
   1eb18:	f7f9 fe1a 	bl	18750 <__aeabi_ui2d>
   1eb1c:	2301      	movs	r3, #1
   1eb1e:	3d01      	subs	r5, #1
   1eb20:	9311      	str	r3, [sp, #68]	@ 0x44
   1eb22:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
   1eb26:	4b55      	ldr	r3, [pc, #340]	@ (1ec7c <_dtoa_r+0x224>)
   1eb28:	2200      	movs	r2, #0
   1eb2a:	f7f9 fcd3 	bl	184d4 <__aeabi_dsub>
   1eb2e:	a34a      	add	r3, pc, #296	@ (adr r3, 1ec58 <_dtoa_r+0x200>)
   1eb30:	e9d3 2300 	ldrd	r2, r3, [r3]
   1eb34:	f7f9 fe86 	bl	18844 <__aeabi_dmul>
   1eb38:	a349      	add	r3, pc, #292	@ (adr r3, 1ec60 <_dtoa_r+0x208>)
   1eb3a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1eb3e:	f7f9 fccb 	bl	184d8 <__adddf3>
   1eb42:	4606      	mov	r6, r0
   1eb44:	4628      	mov	r0, r5
   1eb46:	460f      	mov	r7, r1
   1eb48:	f7f9 fe12 	bl	18770 <__aeabi_i2d>
   1eb4c:	a346      	add	r3, pc, #280	@ (adr r3, 1ec68 <_dtoa_r+0x210>)
   1eb4e:	e9d3 2300 	ldrd	r2, r3, [r3]
   1eb52:	f7f9 fe77 	bl	18844 <__aeabi_dmul>
   1eb56:	4602      	mov	r2, r0
   1eb58:	460b      	mov	r3, r1
   1eb5a:	4630      	mov	r0, r6
   1eb5c:	4639      	mov	r1, r7
   1eb5e:	f7f9 fcbb 	bl	184d8 <__adddf3>
   1eb62:	4606      	mov	r6, r0
   1eb64:	460f      	mov	r7, r1
   1eb66:	f7fa f91d 	bl	18da4 <__aeabi_d2iz>
   1eb6a:	2200      	movs	r2, #0
   1eb6c:	4683      	mov	fp, r0
   1eb6e:	2300      	movs	r3, #0
   1eb70:	4630      	mov	r0, r6
   1eb72:	4639      	mov	r1, r7
   1eb74:	f7fa f8d8 	bl	18d28 <__aeabi_dcmplt>
   1eb78:	2800      	cmp	r0, #0
   1eb7a:	f040 831b 	bne.w	1f1b4 <_dtoa_r+0x75c>
   1eb7e:	eba8 0805 	sub.w	r8, r8, r5
   1eb82:	f1bb 0f16 	cmp.w	fp, #22
   1eb86:	f108 34ff 	add.w	r4, r8, #4294967295
   1eb8a:	f200 818d 	bhi.w	1eea8 <_dtoa_r+0x450>
   1eb8e:	4d3c      	ldr	r5, [pc, #240]	@ (1ec80 <_dtoa_r+0x228>)
   1eb90:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
   1eb94:	e9d5 2300 	ldrd	r2, r3, [r5]
   1eb98:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
   1eb9c:	f7fa f8c4 	bl	18d28 <__aeabi_dcmplt>
   1eba0:	2800      	cmp	r0, #0
   1eba2:	d073      	beq.n	1ec8c <_dtoa_r+0x234>
   1eba4:	2300      	movs	r3, #0
   1eba6:	2c00      	cmp	r4, #0
   1eba8:	f10b 3bff 	add.w	fp, fp, #4294967295
   1ebac:	9310      	str	r3, [sp, #64]	@ 0x40
   1ebae:	f2c0 8180 	blt.w	1eeb2 <_dtoa_r+0x45a>
   1ebb2:	2300      	movs	r3, #0
   1ebb4:	930b      	str	r3, [sp, #44]	@ 0x2c
   1ebb6:	f1bb 0f00 	cmp.w	fp, #0
   1ebba:	da6d      	bge.n	1ec98 <_dtoa_r+0x240>
   1ebbc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1ebbe:	eba3 030b 	sub.w	r3, r3, fp
   1ebc2:	930b      	str	r3, [sp, #44]	@ 0x2c
   1ebc4:	f1cb 0300 	rsb	r3, fp, #0
   1ebc8:	e9cd b30e 	strd	fp, r3, [sp, #56]	@ 0x38
   1ebcc:	9b00      	ldr	r3, [sp, #0]
   1ebce:	2b09      	cmp	r3, #9
   1ebd0:	f04f 0b00 	mov.w	fp, #0
   1ebd4:	d868      	bhi.n	1eca8 <_dtoa_r+0x250>
   1ebd6:	2b05      	cmp	r3, #5
   1ebd8:	f340 831d 	ble.w	1f216 <_dtoa_r+0x7be>
   1ebdc:	3b04      	subs	r3, #4
   1ebde:	9300      	str	r3, [sp, #0]
   1ebe0:	2500      	movs	r5, #0
   1ebe2:	9b00      	ldr	r3, [sp, #0]
   1ebe4:	3b02      	subs	r3, #2
   1ebe6:	2b03      	cmp	r3, #3
   1ebe8:	f200 8624 	bhi.w	1f834 <_dtoa_r+0xddc>
   1ebec:	e8df f013 	tbh	[pc, r3, lsl #1]
   1ebf0:	045d0460 	.word	0x045d0460
   1ebf4:	04390455 	.word	0x04390455
   1ebf8:	9a08      	ldr	r2, [sp, #32]
   1ebfa:	f3c9 0913 	ubfx	r9, r9, #0, #20
   1ebfe:	f242 730f 	movw	r3, #9999	@ 0x270f
   1ec02:	ea59 0906 	orrs.w	r9, r9, r6
   1ec06:	6013      	str	r3, [r2, #0]
   1ec08:	d11c      	bne.n	1ec44 <_dtoa_r+0x1ec>
   1ec0a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
   1ec0c:	2b00      	cmp	r3, #0
   1ec0e:	f000 862c 	beq.w	1f86a <_dtoa_r+0xe12>
   1ec12:	4b1c      	ldr	r3, [pc, #112]	@ (1ec84 <_dtoa_r+0x22c>)
   1ec14:	9303      	str	r3, [sp, #12]
   1ec16:	3308      	adds	r3, #8
   1ec18:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
   1ec1a:	9803      	ldr	r0, [sp, #12]
   1ec1c:	6013      	str	r3, [r2, #0]
   1ec1e:	b01f      	add	sp, #124	@ 0x7c
   1ec20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ec24:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
   1ec28:	f3c2 0313 	ubfx	r3, r2, #0, #20
   1ec2c:	4608      	mov	r0, r1
   1ec2e:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
   1ec32:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
   1ec36:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
   1ec3a:	f8dd 8070 	ldr.w	r8, [sp, #112]	@ 0x70
   1ec3e:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
   1ec42:	e770      	b.n	1eb26 <_dtoa_r+0xce>
   1ec44:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
   1ec46:	2b00      	cmp	r3, #0
   1ec48:	f040 83e8 	bne.w	1f41c <_dtoa_r+0x9c4>
   1ec4c:	4b0e      	ldr	r3, [pc, #56]	@ (1ec88 <_dtoa_r+0x230>)
   1ec4e:	9303      	str	r3, [sp, #12]
   1ec50:	e740      	b.n	1ead4 <_dtoa_r+0x7c>
   1ec52:	bf00      	nop
   1ec54:	f3af 8000 	nop.w
   1ec58:	636f4361 	.word	0x636f4361
   1ec5c:	3fd287a7 	.word	0x3fd287a7
   1ec60:	8b60c8b3 	.word	0x8b60c8b3
   1ec64:	3fc68a28 	.word	0x3fc68a28
   1ec68:	509f79fb 	.word	0x509f79fb
   1ec6c:	3fd34413 	.word	0x3fd34413
   1ec70:	7ff00000 	.word	0x7ff00000
   1ec74:	000281bd 	.word	0x000281bd
   1ec78:	000281bc 	.word	0x000281bc
   1ec7c:	3ff80000 	.word	0x3ff80000
   1ec80:	00028338 	.word	0x00028338
   1ec84:	00028228 	.word	0x00028228
   1ec88:	00028234 	.word	0x00028234
   1ec8c:	f1b8 0f00 	cmp.w	r8, #0
   1ec90:	f340 845d 	ble.w	1f54e <_dtoa_r+0xaf6>
   1ec94:	9010      	str	r0, [sp, #64]	@ 0x40
   1ec96:	900b      	str	r0, [sp, #44]	@ 0x2c
   1ec98:	2300      	movs	r3, #0
   1ec9a:	930f      	str	r3, [sp, #60]	@ 0x3c
   1ec9c:	9b00      	ldr	r3, [sp, #0]
   1ec9e:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
   1eca2:	2b09      	cmp	r3, #9
   1eca4:	445c      	add	r4, fp
   1eca6:	d996      	bls.n	1ebd6 <_dtoa_r+0x17e>
   1eca8:	2300      	movs	r3, #0
   1ecaa:	f04f 32ff 	mov.w	r2, #4294967295
   1ecae:	e9cd 2309 	strd	r2, r3, [sp, #36]	@ 0x24
   1ecb2:	2501      	movs	r5, #1
   1ecb4:	9300      	str	r3, [sp, #0]
   1ecb6:	950c      	str	r5, [sp, #48]	@ 0x30
   1ecb8:	9b02      	ldr	r3, [sp, #8]
   1ecba:	2100      	movs	r1, #0
   1ecbc:	63d9      	str	r1, [r3, #60]	@ 0x3c
   1ecbe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1ecc0:	9318      	str	r3, [sp, #96]	@ 0x60
   1ecc2:	9802      	ldr	r0, [sp, #8]
   1ecc4:	f001 fa24 	bl	20110 <_Balloc>
   1ecc8:	9003      	str	r0, [sp, #12]
   1ecca:	2800      	cmp	r0, #0
   1eccc:	f000 85bb 	beq.w	1f846 <_dtoa_r+0xdee>
   1ecd0:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
   1ecd4:	639a      	str	r2, [r3, #56]	@ 0x38
   1ecd6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1ecd8:	2b0e      	cmp	r3, #14
   1ecda:	f200 8114 	bhi.w	1ef06 <_dtoa_r+0x4ae>
   1ecde:	2d00      	cmp	r5, #0
   1ece0:	f000 8111 	beq.w	1ef06 <_dtoa_r+0x4ae>
   1ece4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
   1ece6:	2a00      	cmp	r2, #0
   1ece8:	f340 8438 	ble.w	1f55c <_dtoa_r+0xb04>
   1ecec:	4db1      	ldr	r5, [pc, #708]	@ (1efb4 <_dtoa_r+0x55c>)
   1ecee:	f002 030f 	and.w	r3, r2, #15
   1ecf2:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
   1ecf6:	1115      	asrs	r5, r2, #4
   1ecf8:	05d2      	lsls	r2, r2, #23
   1ecfa:	e9d3 8900 	ldrd	r8, r9, [r3]
   1ecfe:	f140 83f8 	bpl.w	1f4f2 <_dtoa_r+0xa9a>
   1ed02:	4bad      	ldr	r3, [pc, #692]	@ (1efb8 <_dtoa_r+0x560>)
   1ed04:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
   1ed08:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   1ed0c:	f7f9 fec4 	bl	18a98 <__aeabi_ddiv>
   1ed10:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
   1ed14:	f005 050f 	and.w	r5, r5, #15
   1ed18:	2703      	movs	r7, #3
   1ed1a:	b17d      	cbz	r5, 1ed3c <_dtoa_r+0x2e4>
   1ed1c:	4ea6      	ldr	r6, [pc, #664]	@ (1efb8 <_dtoa_r+0x560>)
   1ed1e:	07eb      	lsls	r3, r5, #31
   1ed20:	d508      	bpl.n	1ed34 <_dtoa_r+0x2dc>
   1ed22:	4640      	mov	r0, r8
   1ed24:	4649      	mov	r1, r9
   1ed26:	e9d6 2300 	ldrd	r2, r3, [r6]
   1ed2a:	f7f9 fd8b 	bl	18844 <__aeabi_dmul>
   1ed2e:	3701      	adds	r7, #1
   1ed30:	4680      	mov	r8, r0
   1ed32:	4689      	mov	r9, r1
   1ed34:	106d      	asrs	r5, r5, #1
   1ed36:	f106 0608 	add.w	r6, r6, #8
   1ed3a:	d1f0      	bne.n	1ed1e <_dtoa_r+0x2c6>
   1ed3c:	4642      	mov	r2, r8
   1ed3e:	464b      	mov	r3, r9
   1ed40:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
   1ed44:	f7f9 fea8 	bl	18a98 <__aeabi_ddiv>
   1ed48:	4680      	mov	r8, r0
   1ed4a:	4689      	mov	r9, r1
   1ed4c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1ed4e:	b143      	cbz	r3, 1ed62 <_dtoa_r+0x30a>
   1ed50:	4b9a      	ldr	r3, [pc, #616]	@ (1efbc <_dtoa_r+0x564>)
   1ed52:	2200      	movs	r2, #0
   1ed54:	4640      	mov	r0, r8
   1ed56:	4649      	mov	r1, r9
   1ed58:	f7f9 ffe6 	bl	18d28 <__aeabi_dcmplt>
   1ed5c:	2800      	cmp	r0, #0
   1ed5e:	f040 84f0 	bne.w	1f742 <_dtoa_r+0xcea>
   1ed62:	4638      	mov	r0, r7
   1ed64:	f7f9 fd04 	bl	18770 <__aeabi_i2d>
   1ed68:	4642      	mov	r2, r8
   1ed6a:	464b      	mov	r3, r9
   1ed6c:	f7f9 fd6a 	bl	18844 <__aeabi_dmul>
   1ed70:	4b93      	ldr	r3, [pc, #588]	@ (1efc0 <_dtoa_r+0x568>)
   1ed72:	2200      	movs	r2, #0
   1ed74:	f7f9 fbb0 	bl	184d8 <__adddf3>
   1ed78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1ed7a:	4606      	mov	r6, r0
   1ed7c:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
   1ed80:	2b00      	cmp	r3, #0
   1ed82:	f000 80a9 	beq.w	1eed8 <_dtoa_r+0x480>
   1ed86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   1ed88:	9319      	str	r3, [sp, #100]	@ 0x64
   1ed8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1ed8c:	9312      	str	r3, [sp, #72]	@ 0x48
   1ed8e:	9b03      	ldr	r3, [sp, #12]
   1ed90:	4d88      	ldr	r5, [pc, #544]	@ (1efb4 <_dtoa_r+0x55c>)
   1ed92:	4649      	mov	r1, r9
   1ed94:	4640      	mov	r0, r8
   1ed96:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
   1ed9a:	1c5e      	adds	r6, r3, #1
   1ed9c:	f7fa f802 	bl	18da4 <__aeabi_d2iz>
   1eda0:	9912      	ldr	r1, [sp, #72]	@ 0x48
   1eda2:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
   1eda6:	ed13 7b02 	vldr	d7, [r3, #-8]
   1edaa:	4607      	mov	r7, r0
   1edac:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
   1edb0:	f7f9 fcde 	bl	18770 <__aeabi_i2d>
   1edb4:	4602      	mov	r2, r0
   1edb6:	460b      	mov	r3, r1
   1edb8:	4640      	mov	r0, r8
   1edba:	4649      	mov	r1, r9
   1edbc:	f7f9 fb8a 	bl	184d4 <__aeabi_dsub>
   1edc0:	4689      	mov	r9, r1
   1edc2:	990c      	ldr	r1, [sp, #48]	@ 0x30
   1edc4:	3730      	adds	r7, #48	@ 0x30
   1edc6:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	@ 0x58
   1edca:	4680      	mov	r8, r0
   1edcc:	b2ff      	uxtb	r7, r7
   1edce:	2900      	cmp	r1, #0
   1edd0:	f000 8452 	beq.w	1f678 <_dtoa_r+0xc20>
   1edd4:	497b      	ldr	r1, [pc, #492]	@ (1efc4 <_dtoa_r+0x56c>)
   1edd6:	2000      	movs	r0, #0
   1edd8:	f7f9 fe5e 	bl	18a98 <__aeabi_ddiv>
   1eddc:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
   1ede0:	f7f9 fb78 	bl	184d4 <__aeabi_dsub>
   1ede4:	9d03      	ldr	r5, [sp, #12]
   1ede6:	4602      	mov	r2, r0
   1ede8:	460b      	mov	r3, r1
   1edea:	e9cd 2314 	strd	r2, r3, [sp, #80]	@ 0x50
   1edee:	702f      	strb	r7, [r5, #0]
   1edf0:	4642      	mov	r2, r8
   1edf2:	464b      	mov	r3, r9
   1edf4:	f7f9 ffb6 	bl	18d64 <__aeabi_dcmpgt>
   1edf8:	2800      	cmp	r0, #0
   1edfa:	f040 8496 	bne.w	1f72a <_dtoa_r+0xcd2>
   1edfe:	e9cd b41a 	strd	fp, r4, [sp, #104]	@ 0x68
   1ee02:	f8cd a058 	str.w	sl, [sp, #88]	@ 0x58
   1ee06:	9d12      	ldr	r5, [sp, #72]	@ 0x48
   1ee08:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	@ 0x50
   1ee0c:	2700      	movs	r7, #0
   1ee0e:	e02a      	b.n	1ee66 <_dtoa_r+0x40e>
   1ee10:	3701      	adds	r7, #1
   1ee12:	42af      	cmp	r7, r5
   1ee14:	f280 84dd 	bge.w	1f7d2 <_dtoa_r+0xd7a>
   1ee18:	4b6b      	ldr	r3, [pc, #428]	@ (1efc8 <_dtoa_r+0x570>)
   1ee1a:	4650      	mov	r0, sl
   1ee1c:	4659      	mov	r1, fp
   1ee1e:	2200      	movs	r2, #0
   1ee20:	f7f9 fd10 	bl	18844 <__aeabi_dmul>
   1ee24:	4b68      	ldr	r3, [pc, #416]	@ (1efc8 <_dtoa_r+0x570>)
   1ee26:	2200      	movs	r2, #0
   1ee28:	4682      	mov	sl, r0
   1ee2a:	468b      	mov	fp, r1
   1ee2c:	4640      	mov	r0, r8
   1ee2e:	4649      	mov	r1, r9
   1ee30:	f7f9 fd08 	bl	18844 <__aeabi_dmul>
   1ee34:	4689      	mov	r9, r1
   1ee36:	4680      	mov	r8, r0
   1ee38:	f7f9 ffb4 	bl	18da4 <__aeabi_d2iz>
   1ee3c:	4604      	mov	r4, r0
   1ee3e:	f7f9 fc97 	bl	18770 <__aeabi_i2d>
   1ee42:	4602      	mov	r2, r0
   1ee44:	460b      	mov	r3, r1
   1ee46:	4640      	mov	r0, r8
   1ee48:	4649      	mov	r1, r9
   1ee4a:	f7f9 fb43 	bl	184d4 <__aeabi_dsub>
   1ee4e:	3430      	adds	r4, #48	@ 0x30
   1ee50:	f806 4b01 	strb.w	r4, [r6], #1
   1ee54:	4652      	mov	r2, sl
   1ee56:	465b      	mov	r3, fp
   1ee58:	4680      	mov	r8, r0
   1ee5a:	4689      	mov	r9, r1
   1ee5c:	f7f9 ff64 	bl	18d28 <__aeabi_dcmplt>
   1ee60:	2800      	cmp	r0, #0
   1ee62:	f040 84b3 	bne.w	1f7cc <_dtoa_r+0xd74>
   1ee66:	4642      	mov	r2, r8
   1ee68:	464b      	mov	r3, r9
   1ee6a:	4954      	ldr	r1, [pc, #336]	@ (1efbc <_dtoa_r+0x564>)
   1ee6c:	2000      	movs	r0, #0
   1ee6e:	f7f9 fb31 	bl	184d4 <__aeabi_dsub>
   1ee72:	4652      	mov	r2, sl
   1ee74:	465b      	mov	r3, fp
   1ee76:	f7f9 ff57 	bl	18d28 <__aeabi_dcmplt>
   1ee7a:	2800      	cmp	r0, #0
   1ee7c:	d0c8      	beq.n	1ee10 <_dtoa_r+0x3b8>
   1ee7e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
   1ee80:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
   1ee84:	9a03      	ldr	r2, [sp, #12]
   1ee86:	4637      	mov	r7, r6
   1ee88:	f103 0801 	add.w	r8, r3, #1
   1ee8c:	e002      	b.n	1ee94 <_dtoa_r+0x43c>
   1ee8e:	4297      	cmp	r7, r2
   1ee90:	f000 847b 	beq.w	1f78a <_dtoa_r+0xd32>
   1ee94:	463e      	mov	r6, r7
   1ee96:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
   1ee9a:	2b39      	cmp	r3, #57	@ 0x39
   1ee9c:	d0f7      	beq.n	1ee8e <_dtoa_r+0x436>
   1ee9e:	3301      	adds	r3, #1
   1eea0:	b2db      	uxtb	r3, r3
   1eea2:	703b      	strb	r3, [r7, #0]
   1eea4:	4645      	mov	r5, r8
   1eea6:	e174      	b.n	1f192 <_dtoa_r+0x73a>
   1eea8:	2301      	movs	r3, #1
   1eeaa:	2c00      	cmp	r4, #0
   1eeac:	9310      	str	r3, [sp, #64]	@ 0x40
   1eeae:	f6bf ae80 	bge.w	1ebb2 <_dtoa_r+0x15a>
   1eeb2:	f1c8 0301 	rsb	r3, r8, #1
   1eeb6:	930b      	str	r3, [sp, #44]	@ 0x2c
   1eeb8:	2400      	movs	r4, #0
   1eeba:	e67c      	b.n	1ebb6 <_dtoa_r+0x15e>
   1eebc:	4638      	mov	r0, r7
   1eebe:	f7f9 fc57 	bl	18770 <__aeabi_i2d>
   1eec2:	4642      	mov	r2, r8
   1eec4:	464b      	mov	r3, r9
   1eec6:	f7f9 fcbd 	bl	18844 <__aeabi_dmul>
   1eeca:	4b3d      	ldr	r3, [pc, #244]	@ (1efc0 <_dtoa_r+0x568>)
   1eecc:	2200      	movs	r2, #0
   1eece:	f7f9 fb03 	bl	184d8 <__adddf3>
   1eed2:	4606      	mov	r6, r0
   1eed4:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
   1eed8:	4b3c      	ldr	r3, [pc, #240]	@ (1efcc <_dtoa_r+0x574>)
   1eeda:	4640      	mov	r0, r8
   1eedc:	4649      	mov	r1, r9
   1eede:	2200      	movs	r2, #0
   1eee0:	f7f9 faf8 	bl	184d4 <__aeabi_dsub>
   1eee4:	4632      	mov	r2, r6
   1eee6:	463b      	mov	r3, r7
   1eee8:	4680      	mov	r8, r0
   1eeea:	4689      	mov	r9, r1
   1eeec:	f7f9 ff3a 	bl	18d64 <__aeabi_dcmpgt>
   1eef0:	2800      	cmp	r0, #0
   1eef2:	f040 8459 	bne.w	1f7a8 <_dtoa_r+0xd50>
   1eef6:	4640      	mov	r0, r8
   1eef8:	4649      	mov	r1, r9
   1eefa:	4632      	mov	r2, r6
   1eefc:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
   1ef00:	f7f9 ff12 	bl	18d28 <__aeabi_dcmplt>
   1ef04:	bb28      	cbnz	r0, 1ef52 <_dtoa_r+0x4fa>
   1ef06:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
   1ef08:	2b00      	cmp	r3, #0
   1ef0a:	f2c0 8091 	blt.w	1f030 <_dtoa_r+0x5d8>
   1ef0e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
   1ef10:	2a0e      	cmp	r2, #14
   1ef12:	f300 808d 	bgt.w	1f030 <_dtoa_r+0x5d8>
   1ef16:	4d27      	ldr	r5, [pc, #156]	@ (1efb4 <_dtoa_r+0x55c>)
   1ef18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   1ef1a:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
   1ef1e:	ed95 7b00 	vldr	d7, [r5]
   1ef22:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1ef24:	2b00      	cmp	r3, #0
   1ef26:	ed8d 7b00 	vstr	d7, [sp]
   1ef2a:	da19      	bge.n	1ef60 <_dtoa_r+0x508>
   1ef2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1ef2e:	2b00      	cmp	r3, #0
   1ef30:	dc16      	bgt.n	1ef60 <_dtoa_r+0x508>
   1ef32:	d10e      	bne.n	1ef52 <_dtoa_r+0x4fa>
   1ef34:	4b25      	ldr	r3, [pc, #148]	@ (1efcc <_dtoa_r+0x574>)
   1ef36:	2200      	movs	r2, #0
   1ef38:	e9dd 0100 	ldrd	r0, r1, [sp]
   1ef3c:	f7f9 fc82 	bl	18844 <__aeabi_dmul>
   1ef40:	4602      	mov	r2, r0
   1ef42:	460b      	mov	r3, r1
   1ef44:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
   1ef48:	f7f9 fef8 	bl	18d3c <__aeabi_dcmple>
   1ef4c:	2800      	cmp	r0, #0
   1ef4e:	f000 842b 	beq.w	1f7a8 <_dtoa_r+0xd50>
   1ef52:	f04f 0900 	mov.w	r9, #0
   1ef56:	9e03      	ldr	r6, [sp, #12]
   1ef58:	464f      	mov	r7, r9
   1ef5a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1ef5c:	43dd      	mvns	r5, r3
   1ef5e:	e224      	b.n	1f3aa <_dtoa_r+0x952>
   1ef60:	e9dd 4500 	ldrd	r4, r5, [sp]
   1ef64:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
   1ef68:	4622      	mov	r2, r4
   1ef6a:	462b      	mov	r3, r5
   1ef6c:	4640      	mov	r0, r8
   1ef6e:	4649      	mov	r1, r9
   1ef70:	f7f9 fd92 	bl	18a98 <__aeabi_ddiv>
   1ef74:	f7f9 ff16 	bl	18da4 <__aeabi_d2iz>
   1ef78:	4606      	mov	r6, r0
   1ef7a:	f7f9 fbf9 	bl	18770 <__aeabi_i2d>
   1ef7e:	4622      	mov	r2, r4
   1ef80:	462b      	mov	r3, r5
   1ef82:	f7f9 fc5f 	bl	18844 <__aeabi_dmul>
   1ef86:	9f03      	ldr	r7, [sp, #12]
   1ef88:	460b      	mov	r3, r1
   1ef8a:	4602      	mov	r2, r0
   1ef8c:	4649      	mov	r1, r9
   1ef8e:	4640      	mov	r0, r8
   1ef90:	f7f9 faa0 	bl	184d4 <__aeabi_dsub>
   1ef94:	f106 0330 	add.w	r3, r6, #48	@ 0x30
   1ef98:	f807 3b01 	strb.w	r3, [r7], #1
   1ef9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1ef9e:	2b01      	cmp	r3, #1
   1efa0:	f000 8310 	beq.w	1f5c4 <_dtoa_r+0xb6c>
   1efa4:	2501      	movs	r5, #1
   1efa6:	f8cd a010 	str.w	sl, [sp, #16]
   1efaa:	4699      	mov	r9, r3
   1efac:	e9dd ab00 	ldrd	sl, fp, [sp]
   1efb0:	46a8      	mov	r8, r5
   1efb2:	e02b      	b.n	1f00c <_dtoa_r+0x5b4>
   1efb4:	00028338 	.word	0x00028338
   1efb8:	00028310 	.word	0x00028310
   1efbc:	3ff00000 	.word	0x3ff00000
   1efc0:	401c0000 	.word	0x401c0000
   1efc4:	3fe00000 	.word	0x3fe00000
   1efc8:	40240000 	.word	0x40240000
   1efcc:	40140000 	.word	0x40140000
   1efd0:	4652      	mov	r2, sl
   1efd2:	465b      	mov	r3, fp
   1efd4:	4620      	mov	r0, r4
   1efd6:	4629      	mov	r1, r5
   1efd8:	f7f9 fd5e 	bl	18a98 <__aeabi_ddiv>
   1efdc:	f7f9 fee2 	bl	18da4 <__aeabi_d2iz>
   1efe0:	4606      	mov	r6, r0
   1efe2:	f7f9 fbc5 	bl	18770 <__aeabi_i2d>
   1efe6:	4652      	mov	r2, sl
   1efe8:	465b      	mov	r3, fp
   1efea:	f7f9 fc2b 	bl	18844 <__aeabi_dmul>
   1efee:	f108 0801 	add.w	r8, r8, #1
   1eff2:	460b      	mov	r3, r1
   1eff4:	4602      	mov	r2, r0
   1eff6:	4629      	mov	r1, r5
   1eff8:	4620      	mov	r0, r4
   1effa:	f7f9 fa6b 	bl	184d4 <__aeabi_dsub>
   1effe:	f106 0330 	add.w	r3, r6, #48	@ 0x30
   1f002:	45c8      	cmp	r8, r9
   1f004:	f807 3b01 	strb.w	r3, [r7], #1
   1f008:	f000 82da 	beq.w	1f5c0 <_dtoa_r+0xb68>
   1f00c:	4bb9      	ldr	r3, [pc, #740]	@ (1f2f4 <_dtoa_r+0x89c>)
   1f00e:	2200      	movs	r2, #0
   1f010:	f7f9 fc18 	bl	18844 <__aeabi_dmul>
   1f014:	2200      	movs	r2, #0
   1f016:	2300      	movs	r3, #0
   1f018:	4604      	mov	r4, r0
   1f01a:	460d      	mov	r5, r1
   1f01c:	f7f9 fe7a 	bl	18d14 <__aeabi_dcmpeq>
   1f020:	2800      	cmp	r0, #0
   1f022:	d0d5      	beq.n	1efd0 <_dtoa_r+0x578>
   1f024:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
   1f026:	f8dd a010 	ldr.w	sl, [sp, #16]
   1f02a:	3501      	adds	r5, #1
   1f02c:	463e      	mov	r6, r7
   1f02e:	e0b0      	b.n	1f192 <_dtoa_r+0x73a>
   1f030:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
   1f032:	2a00      	cmp	r2, #0
   1f034:	f040 80d2 	bne.w	1f1dc <_dtoa_r+0x784>
   1f038:	2300      	movs	r3, #0
   1f03a:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
   1f03c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
   1f03e:	930c      	str	r3, [sp, #48]	@ 0x30
   1f040:	461f      	mov	r7, r3
   1f042:	b155      	cbz	r5, 1f05a <_dtoa_r+0x602>
   1f044:	2c00      	cmp	r4, #0
   1f046:	dd08      	ble.n	1f05a <_dtoa_r+0x602>
   1f048:	42a5      	cmp	r5, r4
   1f04a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1f04c:	462b      	mov	r3, r5
   1f04e:	bfa8      	it	ge
   1f050:	4623      	movge	r3, r4
   1f052:	1ad2      	subs	r2, r2, r3
   1f054:	920b      	str	r2, [sp, #44]	@ 0x2c
   1f056:	1aed      	subs	r5, r5, r3
   1f058:	1ae4      	subs	r4, r4, r3
   1f05a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1f05c:	b153      	cbz	r3, 1f074 <_dtoa_r+0x61c>
   1f05e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
   1f060:	b113      	cbz	r3, 1f068 <_dtoa_r+0x610>
   1f062:	2e00      	cmp	r6, #0
   1f064:	f040 82e7 	bne.w	1f636 <_dtoa_r+0xbde>
   1f068:	4651      	mov	r1, sl
   1f06a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
   1f06c:	9802      	ldr	r0, [sp, #8]
   1f06e:	f001 fa05 	bl	2047c <__pow5mult>
   1f072:	4682      	mov	sl, r0
   1f074:	9802      	ldr	r0, [sp, #8]
   1f076:	2101      	movs	r1, #1
   1f078:	f001 f91c 	bl	202b4 <__i2b>
   1f07c:	4681      	mov	r9, r0
   1f07e:	f1bb 0f00 	cmp.w	fp, #0
   1f082:	f040 81b6 	bne.w	1f3f2 <_dtoa_r+0x99a>
   1f086:	9b00      	ldr	r3, [sp, #0]
   1f088:	2b01      	cmp	r3, #1
   1f08a:	f340 81cc 	ble.w	1f426 <_dtoa_r+0x9ce>
   1f08e:	2001      	movs	r0, #1
   1f090:	4420      	add	r0, r4
   1f092:	f010 001f 	ands.w	r0, r0, #31
   1f096:	f000 809a 	beq.w	1f1ce <_dtoa_r+0x776>
   1f09a:	f1c0 0320 	rsb	r3, r0, #32
   1f09e:	2b04      	cmp	r3, #4
   1f0a0:	f340 81da 	ble.w	1f458 <_dtoa_r+0xa00>
   1f0a4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1f0a6:	f1c0 001c 	rsb	r0, r0, #28
   1f0aa:	4403      	add	r3, r0
   1f0ac:	930b      	str	r3, [sp, #44]	@ 0x2c
   1f0ae:	4405      	add	r5, r0
   1f0b0:	4404      	add	r4, r0
   1f0b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1f0b4:	2b00      	cmp	r3, #0
   1f0b6:	dd05      	ble.n	1f0c4 <_dtoa_r+0x66c>
   1f0b8:	4651      	mov	r1, sl
   1f0ba:	9802      	ldr	r0, [sp, #8]
   1f0bc:	461a      	mov	r2, r3
   1f0be:	f001 fa37 	bl	20530 <__lshift>
   1f0c2:	4682      	mov	sl, r0
   1f0c4:	2c00      	cmp	r4, #0
   1f0c6:	dd05      	ble.n	1f0d4 <_dtoa_r+0x67c>
   1f0c8:	4649      	mov	r1, r9
   1f0ca:	9802      	ldr	r0, [sp, #8]
   1f0cc:	4622      	mov	r2, r4
   1f0ce:	f001 fa2f 	bl	20530 <__lshift>
   1f0d2:	4681      	mov	r9, r0
   1f0d4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
   1f0d6:	2b00      	cmp	r3, #0
   1f0d8:	f040 8170 	bne.w	1f3bc <_dtoa_r+0x964>
   1f0dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1f0de:	2b00      	cmp	r3, #0
   1f0e0:	f340 8148 	ble.w	1f374 <_dtoa_r+0x91c>
   1f0e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
   1f0e6:	2b00      	cmp	r3, #0
   1f0e8:	f040 80a4 	bne.w	1f234 <_dtoa_r+0x7dc>
   1f0ec:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
   1f0ee:	3501      	adds	r5, #1
   1f0f0:	f8dd 800c 	ldr.w	r8, [sp, #12]
   1f0f4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
   1f0f6:	f8dd b008 	ldr.w	fp, [sp, #8]
   1f0fa:	2601      	movs	r6, #1
   1f0fc:	e007      	b.n	1f10e <_dtoa_r+0x6b6>
   1f0fe:	4651      	mov	r1, sl
   1f100:	2300      	movs	r3, #0
   1f102:	220a      	movs	r2, #10
   1f104:	4658      	mov	r0, fp
   1f106:	f001 f833 	bl	20170 <__multadd>
   1f10a:	3601      	adds	r6, #1
   1f10c:	4682      	mov	sl, r0
   1f10e:	4649      	mov	r1, r9
   1f110:	4650      	mov	r0, sl
   1f112:	f7ff fc0b 	bl	1e92c <quorem>
   1f116:	42a6      	cmp	r6, r4
   1f118:	f100 0330 	add.w	r3, r0, #48	@ 0x30
   1f11c:	f808 3b01 	strb.w	r3, [r8], #1
   1f120:	dbed      	blt.n	1f0fe <_dtoa_r+0x6a6>
   1f122:	9a09      	ldr	r2, [sp, #36]	@ 0x24
   1f124:	2a00      	cmp	r2, #0
   1f126:	bfc8      	it	gt
   1f128:	4616      	movgt	r6, r2
   1f12a:	9a03      	ldr	r2, [sp, #12]
   1f12c:	bfd8      	it	le
   1f12e:	2601      	movle	r6, #1
   1f130:	eb02 0b06 	add.w	fp, r2, r6
   1f134:	2400      	movs	r4, #0
   1f136:	4651      	mov	r1, sl
   1f138:	2201      	movs	r2, #1
   1f13a:	9802      	ldr	r0, [sp, #8]
   1f13c:	9300      	str	r3, [sp, #0]
   1f13e:	f001 f9f7 	bl	20530 <__lshift>
   1f142:	4649      	mov	r1, r9
   1f144:	4682      	mov	sl, r0
   1f146:	f001 fa6b 	bl	20620 <__mcmp>
   1f14a:	2800      	cmp	r0, #0
   1f14c:	f340 81e2 	ble.w	1f514 <_dtoa_r+0xabc>
   1f150:	9a03      	ldr	r2, [sp, #12]
   1f152:	e002      	b.n	1f15a <_dtoa_r+0x702>
   1f154:	455a      	cmp	r2, fp
   1f156:	f000 81e8 	beq.w	1f52a <_dtoa_r+0xad2>
   1f15a:	465e      	mov	r6, fp
   1f15c:	f10b 3bff 	add.w	fp, fp, #4294967295
   1f160:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   1f164:	2b39      	cmp	r3, #57	@ 0x39
   1f166:	d0f5      	beq.n	1f154 <_dtoa_r+0x6fc>
   1f168:	3301      	adds	r3, #1
   1f16a:	f88b 3000 	strb.w	r3, [fp]
   1f16e:	f8dd 8008 	ldr.w	r8, [sp, #8]
   1f172:	4649      	mov	r1, r9
   1f174:	4640      	mov	r0, r8
   1f176:	f000 fff1 	bl	2015c <_Bfree>
   1f17a:	b157      	cbz	r7, 1f192 <_dtoa_r+0x73a>
   1f17c:	b12c      	cbz	r4, 1f18a <_dtoa_r+0x732>
   1f17e:	42bc      	cmp	r4, r7
   1f180:	d003      	beq.n	1f18a <_dtoa_r+0x732>
   1f182:	4621      	mov	r1, r4
   1f184:	4640      	mov	r0, r8
   1f186:	f000 ffe9 	bl	2015c <_Bfree>
   1f18a:	9802      	ldr	r0, [sp, #8]
   1f18c:	4639      	mov	r1, r7
   1f18e:	f000 ffe5 	bl	2015c <_Bfree>
   1f192:	9802      	ldr	r0, [sp, #8]
   1f194:	4651      	mov	r1, sl
   1f196:	f000 ffe1 	bl	2015c <_Bfree>
   1f19a:	2300      	movs	r3, #0
   1f19c:	7033      	strb	r3, [r6, #0]
   1f19e:	9b08      	ldr	r3, [sp, #32]
   1f1a0:	601d      	str	r5, [r3, #0]
   1f1a2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
   1f1a4:	2b00      	cmp	r3, #0
   1f1a6:	f43f ac95 	beq.w	1ead4 <_dtoa_r+0x7c>
   1f1aa:	9803      	ldr	r0, [sp, #12]
   1f1ac:	601e      	str	r6, [r3, #0]
   1f1ae:	b01f      	add	sp, #124	@ 0x7c
   1f1b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1b4:	4658      	mov	r0, fp
   1f1b6:	f7f9 fadb 	bl	18770 <__aeabi_i2d>
   1f1ba:	4632      	mov	r2, r6
   1f1bc:	463b      	mov	r3, r7
   1f1be:	f7f9 fda9 	bl	18d14 <__aeabi_dcmpeq>
   1f1c2:	2800      	cmp	r0, #0
   1f1c4:	f47f acdb 	bne.w	1eb7e <_dtoa_r+0x126>
   1f1c8:	f10b 3bff 	add.w	fp, fp, #4294967295
   1f1cc:	e4d7      	b.n	1eb7e <_dtoa_r+0x126>
   1f1ce:	231c      	movs	r3, #28
   1f1d0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1f1d2:	441a      	add	r2, r3
   1f1d4:	920b      	str	r2, [sp, #44]	@ 0x2c
   1f1d6:	441d      	add	r5, r3
   1f1d8:	441c      	add	r4, r3
   1f1da:	e76a      	b.n	1f0b2 <_dtoa_r+0x65a>
   1f1dc:	9a00      	ldr	r2, [sp, #0]
   1f1de:	2a01      	cmp	r2, #1
   1f1e0:	f340 81a8 	ble.w	1f534 <_dtoa_r+0xadc>
   1f1e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1f1e6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
   1f1e8:	1e5e      	subs	r6, r3, #1
   1f1ea:	42b2      	cmp	r2, r6
   1f1ec:	f2c0 816a 	blt.w	1f4c4 <_dtoa_r+0xa6c>
   1f1f0:	2b00      	cmp	r3, #0
   1f1f2:	eba2 0606 	sub.w	r6, r2, r6
   1f1f6:	f280 82dd 	bge.w	1f7b4 <_dtoa_r+0xd5c>
   1f1fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1f1fc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
   1f1fe:	1a9d      	subs	r5, r3, r2
   1f200:	9802      	ldr	r0, [sp, #8]
   1f202:	2101      	movs	r1, #1
   1f204:	f001 f856 	bl	202b4 <__i2b>
   1f208:	4607      	mov	r7, r0
   1f20a:	e71a      	b.n	1f042 <_dtoa_r+0x5ea>
   1f20c:	f1c3 0320 	rsb	r3, r3, #32
   1f210:	fa06 f003 	lsl.w	r0, r6, r3
   1f214:	e480      	b.n	1eb18 <_dtoa_r+0xc0>
   1f216:	2501      	movs	r5, #1
   1f218:	e4e3      	b.n	1ebe2 <_dtoa_r+0x18a>
   1f21a:	4639      	mov	r1, r7
   1f21c:	2300      	movs	r3, #0
   1f21e:	9802      	ldr	r0, [sp, #8]
   1f220:	220a      	movs	r2, #10
   1f222:	f000 ffa5 	bl	20170 <__multadd>
   1f226:	9b18      	ldr	r3, [sp, #96]	@ 0x60
   1f228:	2b00      	cmp	r3, #0
   1f22a:	4607      	mov	r7, r0
   1f22c:	f340 82ef 	ble.w	1f80e <_dtoa_r+0xdb6>
   1f230:	960e      	str	r6, [sp, #56]	@ 0x38
   1f232:	9309      	str	r3, [sp, #36]	@ 0x24
   1f234:	2d00      	cmp	r5, #0
   1f236:	f300 813e 	bgt.w	1f4b6 <_dtoa_r+0xa5e>
   1f23a:	f1bb 0f00 	cmp.w	fp, #0
   1f23e:	f040 81de 	bne.w	1f5fe <_dtoa_r+0xba6>
   1f242:	46b8      	mov	r8, r7
   1f244:	9e03      	ldr	r6, [sp, #12]
   1f246:	9c09      	ldr	r4, [sp, #36]	@ 0x24
   1f248:	1e73      	subs	r3, r6, #1
   1f24a:	441c      	add	r4, r3
   1f24c:	9b04      	ldr	r3, [sp, #16]
   1f24e:	f003 0301 	and.w	r3, r3, #1
   1f252:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
   1f256:	9c02      	ldr	r4, [sp, #8]
   1f258:	4649      	mov	r1, r9
   1f25a:	4650      	mov	r0, sl
   1f25c:	f7ff fb66 	bl	1e92c <quorem>
   1f260:	4639      	mov	r1, r7
   1f262:	4683      	mov	fp, r0
   1f264:	4650      	mov	r0, sl
   1f266:	f001 f9db 	bl	20620 <__mcmp>
   1f26a:	4642      	mov	r2, r8
   1f26c:	4649      	mov	r1, r9
   1f26e:	4605      	mov	r5, r0
   1f270:	4620      	mov	r0, r4
   1f272:	f001 f9f7 	bl	20664 <__mdiff>
   1f276:	68c2      	ldr	r2, [r0, #12]
   1f278:	4601      	mov	r1, r0
   1f27a:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
   1f27e:	2a00      	cmp	r2, #0
   1f280:	d13a      	bne.n	1f2f8 <_dtoa_r+0x8a0>
   1f282:	e9cd 0309 	strd	r0, r3, [sp, #36]	@ 0x24
   1f286:	4650      	mov	r0, sl
   1f288:	f001 f9ca 	bl	20620 <__mcmp>
   1f28c:	9909      	ldr	r1, [sp, #36]	@ 0x24
   1f28e:	9006      	str	r0, [sp, #24]
   1f290:	4620      	mov	r0, r4
   1f292:	f000 ff63 	bl	2015c <_Bfree>
   1f296:	9a06      	ldr	r2, [sp, #24]
   1f298:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1f29a:	2a00      	cmp	r2, #0
   1f29c:	d15a      	bne.n	1f354 <_dtoa_r+0x8fc>
   1f29e:	9a00      	ldr	r2, [sp, #0]
   1f2a0:	b91a      	cbnz	r2, 1f2aa <_dtoa_r+0x852>
   1f2a2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
   1f2a4:	2a00      	cmp	r2, #0
   1f2a6:	f000 829a 	beq.w	1f7de <_dtoa_r+0xd86>
   1f2aa:	2d00      	cmp	r5, #0
   1f2ac:	db45      	blt.n	1f33a <_dtoa_r+0x8e2>
   1f2ae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1f2b0:	46b3      	mov	fp, r6
   1f2b2:	42b2      	cmp	r2, r6
   1f2b4:	f80b 3b01 	strb.w	r3, [fp], #1
   1f2b8:	f000 81b8 	beq.w	1f62c <_dtoa_r+0xbd4>
   1f2bc:	4651      	mov	r1, sl
   1f2be:	2300      	movs	r3, #0
   1f2c0:	220a      	movs	r2, #10
   1f2c2:	4620      	mov	r0, r4
   1f2c4:	f000 ff54 	bl	20170 <__multadd>
   1f2c8:	4547      	cmp	r7, r8
   1f2ca:	4682      	mov	sl, r0
   1f2cc:	4639      	mov	r1, r7
   1f2ce:	f04f 0300 	mov.w	r3, #0
   1f2d2:	f04f 020a 	mov.w	r2, #10
   1f2d6:	4620      	mov	r0, r4
   1f2d8:	d036      	beq.n	1f348 <_dtoa_r+0x8f0>
   1f2da:	f000 ff49 	bl	20170 <__multadd>
   1f2de:	4641      	mov	r1, r8
   1f2e0:	4607      	mov	r7, r0
   1f2e2:	2300      	movs	r3, #0
   1f2e4:	220a      	movs	r2, #10
   1f2e6:	4620      	mov	r0, r4
   1f2e8:	f000 ff42 	bl	20170 <__multadd>
   1f2ec:	465e      	mov	r6, fp
   1f2ee:	4680      	mov	r8, r0
   1f2f0:	e7b2      	b.n	1f258 <_dtoa_r+0x800>
   1f2f2:	bf00      	nop
   1f2f4:	40240000 	.word	0x40240000
   1f2f8:	9802      	ldr	r0, [sp, #8]
   1f2fa:	9306      	str	r3, [sp, #24]
   1f2fc:	f000 ff2e 	bl	2015c <_Bfree>
   1f300:	2d00      	cmp	r5, #0
   1f302:	9b06      	ldr	r3, [sp, #24]
   1f304:	db06      	blt.n	1f314 <_dtoa_r+0x8bc>
   1f306:	9a04      	ldr	r2, [sp, #16]
   1f308:	9900      	ldr	r1, [sp, #0]
   1f30a:	f002 0201 	and.w	r2, r2, #1
   1f30e:	430d      	orrs	r5, r1
   1f310:	432a      	orrs	r2, r5
   1f312:	d12a      	bne.n	1f36a <_dtoa_r+0x912>
   1f314:	4651      	mov	r1, sl
   1f316:	2201      	movs	r2, #1
   1f318:	9802      	ldr	r0, [sp, #8]
   1f31a:	9300      	str	r3, [sp, #0]
   1f31c:	f001 f908 	bl	20530 <__lshift>
   1f320:	4649      	mov	r1, r9
   1f322:	4682      	mov	sl, r0
   1f324:	f001 f97c 	bl	20620 <__mcmp>
   1f328:	2800      	cmp	r0, #0
   1f32a:	9b00      	ldr	r3, [sp, #0]
   1f32c:	f340 80e7 	ble.w	1f4fe <_dtoa_r+0xaa6>
   1f330:	2b39      	cmp	r3, #57	@ 0x39
   1f332:	f000 822f 	beq.w	1f794 <_dtoa_r+0xd3c>
   1f336:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
   1f33a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
   1f33c:	f806 3b01 	strb.w	r3, [r6], #1
   1f340:	463c      	mov	r4, r7
   1f342:	3501      	adds	r5, #1
   1f344:	4647      	mov	r7, r8
   1f346:	e712      	b.n	1f16e <_dtoa_r+0x716>
   1f348:	f000 ff12 	bl	20170 <__multadd>
   1f34c:	465e      	mov	r6, fp
   1f34e:	4607      	mov	r7, r0
   1f350:	4680      	mov	r8, r0
   1f352:	e781      	b.n	1f258 <_dtoa_r+0x800>
   1f354:	2d00      	cmp	r5, #0
   1f356:	f2c0 827d 	blt.w	1f854 <_dtoa_r+0xdfc>
   1f35a:	9900      	ldr	r1, [sp, #0]
   1f35c:	430d      	orrs	r5, r1
   1f35e:	990c      	ldr	r1, [sp, #48]	@ 0x30
   1f360:	430d      	orrs	r5, r1
   1f362:	f000 8277 	beq.w	1f854 <_dtoa_r+0xdfc>
   1f366:	2a00      	cmp	r2, #0
   1f368:	dda1      	ble.n	1f2ae <_dtoa_r+0x856>
   1f36a:	2b39      	cmp	r3, #57	@ 0x39
   1f36c:	f000 8212 	beq.w	1f794 <_dtoa_r+0xd3c>
   1f370:	3301      	adds	r3, #1
   1f372:	e7e2      	b.n	1f33a <_dtoa_r+0x8e2>
   1f374:	9b00      	ldr	r3, [sp, #0]
   1f376:	2b02      	cmp	r3, #2
   1f378:	f77f aeb4 	ble.w	1f0e4 <_dtoa_r+0x68c>
   1f37c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1f37e:	2b00      	cmp	r3, #0
   1f380:	f040 811c 	bne.w	1f5bc <_dtoa_r+0xb64>
   1f384:	4649      	mov	r1, r9
   1f386:	2205      	movs	r2, #5
   1f388:	9802      	ldr	r0, [sp, #8]
   1f38a:	f000 fef1 	bl	20170 <__multadd>
   1f38e:	4601      	mov	r1, r0
   1f390:	4681      	mov	r9, r0
   1f392:	4650      	mov	r0, sl
   1f394:	f001 f944 	bl	20620 <__mcmp>
   1f398:	2800      	cmp	r0, #0
   1f39a:	f340 810f 	ble.w	1f5bc <_dtoa_r+0xb64>
   1f39e:	9e03      	ldr	r6, [sp, #12]
   1f3a0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
   1f3a2:	2331      	movs	r3, #49	@ 0x31
   1f3a4:	f806 3b01 	strb.w	r3, [r6], #1
   1f3a8:	3501      	adds	r5, #1
   1f3aa:	9802      	ldr	r0, [sp, #8]
   1f3ac:	4649      	mov	r1, r9
   1f3ae:	3501      	adds	r5, #1
   1f3b0:	f000 fed4 	bl	2015c <_Bfree>
   1f3b4:	2f00      	cmp	r7, #0
   1f3b6:	f47f aee8 	bne.w	1f18a <_dtoa_r+0x732>
   1f3ba:	e6ea      	b.n	1f192 <_dtoa_r+0x73a>
   1f3bc:	4649      	mov	r1, r9
   1f3be:	4650      	mov	r0, sl
   1f3c0:	f001 f92e 	bl	20620 <__mcmp>
   1f3c4:	2800      	cmp	r0, #0
   1f3c6:	f6bf ae89 	bge.w	1f0dc <_dtoa_r+0x684>
   1f3ca:	4651      	mov	r1, sl
   1f3cc:	2300      	movs	r3, #0
   1f3ce:	9802      	ldr	r0, [sp, #8]
   1f3d0:	220a      	movs	r2, #10
   1f3d2:	f000 fecd 	bl	20170 <__multadd>
   1f3d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   1f3d8:	1e5e      	subs	r6, r3, #1
   1f3da:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
   1f3dc:	4682      	mov	sl, r0
   1f3de:	2b00      	cmp	r3, #0
   1f3e0:	f47f af1b 	bne.w	1f21a <_dtoa_r+0x7c2>
   1f3e4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
   1f3e6:	2b00      	cmp	r3, #0
   1f3e8:	f340 81ff 	ble.w	1f7ea <_dtoa_r+0xd92>
   1f3ec:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
   1f3ee:	9309      	str	r3, [sp, #36]	@ 0x24
   1f3f0:	e67e      	b.n	1f0f0 <_dtoa_r+0x698>
   1f3f2:	4601      	mov	r1, r0
   1f3f4:	465a      	mov	r2, fp
   1f3f6:	9802      	ldr	r0, [sp, #8]
   1f3f8:	f001 f840 	bl	2047c <__pow5mult>
   1f3fc:	9b00      	ldr	r3, [sp, #0]
   1f3fe:	2b01      	cmp	r3, #1
   1f400:	4681      	mov	r9, r0
   1f402:	dd6b      	ble.n	1f4dc <_dtoa_r+0xa84>
   1f404:	f04f 0b00 	mov.w	fp, #0
   1f408:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1f40c:	eb09 0383 	add.w	r3, r9, r3, lsl #2
   1f410:	6918      	ldr	r0, [r3, #16]
   1f412:	f000 fefd 	bl	20210 <__hi0bits>
   1f416:	f1c0 0020 	rsb	r0, r0, #32
   1f41a:	e639      	b.n	1f090 <_dtoa_r+0x638>
   1f41c:	4b92      	ldr	r3, [pc, #584]	@ (1f668 <_dtoa_r+0xc10>)
   1f41e:	9303      	str	r3, [sp, #12]
   1f420:	3303      	adds	r3, #3
   1f422:	f7ff bbf9 	b.w	1ec18 <_dtoa_r+0x1c0>
   1f426:	9b04      	ldr	r3, [sp, #16]
   1f428:	2b00      	cmp	r3, #0
   1f42a:	f47f ae30 	bne.w	1f08e <_dtoa_r+0x636>
   1f42e:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   1f432:	f3c2 0313 	ubfx	r3, r2, #0, #20
   1f436:	2b00      	cmp	r3, #0
   1f438:	f47f ae29 	bne.w	1f08e <_dtoa_r+0x636>
   1f43c:	4b8b      	ldr	r3, [pc, #556]	@ (1f66c <_dtoa_r+0xc14>)
   1f43e:	4013      	ands	r3, r2
   1f440:	b123      	cbz	r3, 1f44c <_dtoa_r+0x9f4>
   1f442:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   1f444:	3301      	adds	r3, #1
   1f446:	930b      	str	r3, [sp, #44]	@ 0x2c
   1f448:	3401      	adds	r4, #1
   1f44a:	2301      	movs	r3, #1
   1f44c:	f1bb 0f00 	cmp.w	fp, #0
   1f450:	f040 81ae 	bne.w	1f7b0 <_dtoa_r+0xd58>
   1f454:	469b      	mov	fp, r3
   1f456:	e61a      	b.n	1f08e <_dtoa_r+0x636>
   1f458:	f43f ae2b 	beq.w	1f0b2 <_dtoa_r+0x65a>
   1f45c:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
   1f460:	e6b6      	b.n	1f1d0 <_dtoa_r+0x778>
   1f462:	2301      	movs	r3, #1
   1f464:	930c      	str	r3, [sp, #48]	@ 0x30
   1f466:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1f468:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
   1f46a:	4413      	add	r3, r2
   1f46c:	9318      	str	r3, [sp, #96]	@ 0x60
   1f46e:	3301      	adds	r3, #1
   1f470:	2b01      	cmp	r3, #1
   1f472:	461e      	mov	r6, r3
   1f474:	9309      	str	r3, [sp, #36]	@ 0x24
   1f476:	bfb8      	it	lt
   1f478:	2601      	movlt	r6, #1
   1f47a:	2e17      	cmp	r6, #23
   1f47c:	f340 81d5 	ble.w	1f82a <_dtoa_r+0xdd2>
   1f480:	2201      	movs	r2, #1
   1f482:	2304      	movs	r3, #4
   1f484:	005b      	lsls	r3, r3, #1
   1f486:	f103 0014 	add.w	r0, r3, #20
   1f48a:	42b0      	cmp	r0, r6
   1f48c:	4611      	mov	r1, r2
   1f48e:	f102 0201 	add.w	r2, r2, #1
   1f492:	d9f7      	bls.n	1f484 <_dtoa_r+0xa2c>
   1f494:	9b02      	ldr	r3, [sp, #8]
   1f496:	63d9      	str	r1, [r3, #60]	@ 0x3c
   1f498:	e413      	b.n	1ecc2 <_dtoa_r+0x26a>
   1f49a:	2301      	movs	r3, #1
   1f49c:	930c      	str	r3, [sp, #48]	@ 0x30
   1f49e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
   1f4a0:	2e00      	cmp	r6, #0
   1f4a2:	dd32      	ble.n	1f50a <_dtoa_r+0xab2>
   1f4a4:	9618      	str	r6, [sp, #96]	@ 0x60
   1f4a6:	9609      	str	r6, [sp, #36]	@ 0x24
   1f4a8:	e7e7      	b.n	1f47a <_dtoa_r+0xa22>
   1f4aa:	2300      	movs	r3, #0
   1f4ac:	930c      	str	r3, [sp, #48]	@ 0x30
   1f4ae:	e7da      	b.n	1f466 <_dtoa_r+0xa0e>
   1f4b0:	2300      	movs	r3, #0
   1f4b2:	930c      	str	r3, [sp, #48]	@ 0x30
   1f4b4:	e7f3      	b.n	1f49e <_dtoa_r+0xa46>
   1f4b6:	4639      	mov	r1, r7
   1f4b8:	9802      	ldr	r0, [sp, #8]
   1f4ba:	462a      	mov	r2, r5
   1f4bc:	f001 f838 	bl	20530 <__lshift>
   1f4c0:	4607      	mov	r7, r0
   1f4c2:	e6ba      	b.n	1f23a <_dtoa_r+0x7e2>
   1f4c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1f4c6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1f4c8:	960f      	str	r6, [sp, #60]	@ 0x3c
   1f4ca:	1af3      	subs	r3, r6, r3
   1f4cc:	449b      	add	fp, r3
   1f4ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1f4d0:	4615      	mov	r5, r2
   1f4d2:	441a      	add	r2, r3
   1f4d4:	441c      	add	r4, r3
   1f4d6:	920b      	str	r2, [sp, #44]	@ 0x2c
   1f4d8:	2600      	movs	r6, #0
   1f4da:	e691      	b.n	1f200 <_dtoa_r+0x7a8>
   1f4dc:	9b04      	ldr	r3, [sp, #16]
   1f4de:	2b00      	cmp	r3, #0
   1f4e0:	d190      	bne.n	1f404 <_dtoa_r+0x9ac>
   1f4e2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1f4e6:	f3c1 0313 	ubfx	r3, r1, #0, #20
   1f4ea:	460a      	mov	r2, r1
   1f4ec:	2b00      	cmp	r3, #0
   1f4ee:	d189      	bne.n	1f404 <_dtoa_r+0x9ac>
   1f4f0:	e7a4      	b.n	1f43c <_dtoa_r+0x9e4>
   1f4f2:	ed9d 7b06 	vldr	d7, [sp, #24]
   1f4f6:	2702      	movs	r7, #2
   1f4f8:	ed8d 7b12 	vstr	d7, [sp, #72]	@ 0x48
   1f4fc:	e40d      	b.n	1ed1a <_dtoa_r+0x2c2>
   1f4fe:	f47f af1c 	bne.w	1f33a <_dtoa_r+0x8e2>
   1f502:	07da      	lsls	r2, r3, #31
   1f504:	f57f af19 	bpl.w	1f33a <_dtoa_r+0x8e2>
   1f508:	e712      	b.n	1f330 <_dtoa_r+0x8d8>
   1f50a:	2301      	movs	r3, #1
   1f50c:	e9cd 3309 	strd	r3, r3, [sp, #36]	@ 0x24
   1f510:	f7ff bbd2 	b.w	1ecb8 <_dtoa_r+0x260>
   1f514:	d103      	bne.n	1f51e <_dtoa_r+0xac6>
   1f516:	9b00      	ldr	r3, [sp, #0]
   1f518:	07db      	lsls	r3, r3, #31
   1f51a:	f53f ae19 	bmi.w	1f150 <_dtoa_r+0x6f8>
   1f51e:	465e      	mov	r6, fp
   1f520:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   1f524:	2b30      	cmp	r3, #48	@ 0x30
   1f526:	d0fa      	beq.n	1f51e <_dtoa_r+0xac6>
   1f528:	e621      	b.n	1f16e <_dtoa_r+0x716>
   1f52a:	9a03      	ldr	r2, [sp, #12]
   1f52c:	2331      	movs	r3, #49	@ 0x31
   1f52e:	3501      	adds	r5, #1
   1f530:	7013      	strb	r3, [r2, #0]
   1f532:	e61c      	b.n	1f16e <_dtoa_r+0x716>
   1f534:	9a11      	ldr	r2, [sp, #68]	@ 0x44
   1f536:	2a00      	cmp	r2, #0
   1f538:	f000 80fa 	beq.w	1f730 <_dtoa_r+0xcd8>
   1f53c:	f203 4333 	addw	r3, r3, #1075	@ 0x433
   1f540:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1f542:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
   1f544:	4615      	mov	r5, r2
   1f546:	441a      	add	r2, r3
   1f548:	441c      	add	r4, r3
   1f54a:	920b      	str	r2, [sp, #44]	@ 0x2c
   1f54c:	e658      	b.n	1f200 <_dtoa_r+0x7a8>
   1f54e:	f1c8 0301 	rsb	r3, r8, #1
   1f552:	4604      	mov	r4, r0
   1f554:	930b      	str	r3, [sp, #44]	@ 0x2c
   1f556:	9010      	str	r0, [sp, #64]	@ 0x40
   1f558:	f7ff bb9e 	b.w	1ec98 <_dtoa_r+0x240>
   1f55c:	f000 80ec 	beq.w	1f738 <_dtoa_r+0xce0>
   1f560:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   1f562:	4d43      	ldr	r5, [pc, #268]	@ (1f670 <_dtoa_r+0xc18>)
   1f564:	425e      	negs	r6, r3
   1f566:	f006 030f 	and.w	r3, r6, #15
   1f56a:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
   1f56e:	e9d3 2300 	ldrd	r2, r3, [r3]
   1f572:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
   1f576:	f7f9 f965 	bl	18844 <__aeabi_dmul>
   1f57a:	1135      	asrs	r5, r6, #4
   1f57c:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
   1f580:	f000 814e 	beq.w	1f820 <_dtoa_r+0xdc8>
   1f584:	4e3b      	ldr	r6, [pc, #236]	@ (1f674 <_dtoa_r+0xc1c>)
   1f586:	2300      	movs	r3, #0
   1f588:	2702      	movs	r7, #2
   1f58a:	4680      	mov	r8, r0
   1f58c:	4689      	mov	r9, r1
   1f58e:	07e8      	lsls	r0, r5, #31
   1f590:	d509      	bpl.n	1f5a6 <_dtoa_r+0xb4e>
   1f592:	e9d6 2300 	ldrd	r2, r3, [r6]
   1f596:	4640      	mov	r0, r8
   1f598:	4649      	mov	r1, r9
   1f59a:	f7f9 f953 	bl	18844 <__aeabi_dmul>
   1f59e:	3701      	adds	r7, #1
   1f5a0:	4680      	mov	r8, r0
   1f5a2:	4689      	mov	r9, r1
   1f5a4:	2301      	movs	r3, #1
   1f5a6:	106d      	asrs	r5, r5, #1
   1f5a8:	f106 0608 	add.w	r6, r6, #8
   1f5ac:	d1ef      	bne.n	1f58e <_dtoa_r+0xb36>
   1f5ae:	2b00      	cmp	r3, #0
   1f5b0:	f47f abcc 	bne.w	1ed4c <_dtoa_r+0x2f4>
   1f5b4:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
   1f5b8:	f7ff bbc8 	b.w	1ed4c <_dtoa_r+0x2f4>
   1f5bc:	9e03      	ldr	r6, [sp, #12]
   1f5be:	e4cc      	b.n	1ef5a <_dtoa_r+0x502>
   1f5c0:	f8dd a010 	ldr.w	sl, [sp, #16]
   1f5c4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
   1f5c6:	4602      	mov	r2, r0
   1f5c8:	460b      	mov	r3, r1
   1f5ca:	f7f8 ff85 	bl	184d8 <__adddf3>
   1f5ce:	4602      	mov	r2, r0
   1f5d0:	460b      	mov	r3, r1
   1f5d2:	e9cd 2304 	strd	r2, r3, [sp, #16]
   1f5d6:	3501      	adds	r5, #1
   1f5d8:	e9dd 2300 	ldrd	r2, r3, [sp]
   1f5dc:	46a8      	mov	r8, r5
   1f5de:	f7f9 fbc1 	bl	18d64 <__aeabi_dcmpgt>
   1f5e2:	b940      	cbnz	r0, 1f5f6 <_dtoa_r+0xb9e>
   1f5e4:	e9dd 2300 	ldrd	r2, r3, [sp]
   1f5e8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1f5ec:	f7f9 fb92 	bl	18d14 <__aeabi_dcmpeq>
   1f5f0:	b118      	cbz	r0, 1f5fa <_dtoa_r+0xba2>
   1f5f2:	07f1      	lsls	r1, r6, #31
   1f5f4:	d501      	bpl.n	1f5fa <_dtoa_r+0xba2>
   1f5f6:	9a03      	ldr	r2, [sp, #12]
   1f5f8:	e44c      	b.n	1ee94 <_dtoa_r+0x43c>
   1f5fa:	463e      	mov	r6, r7
   1f5fc:	e5c9      	b.n	1f192 <_dtoa_r+0x73a>
   1f5fe:	6879      	ldr	r1, [r7, #4]
   1f600:	9802      	ldr	r0, [sp, #8]
   1f602:	f000 fd85 	bl	20110 <_Balloc>
   1f606:	4605      	mov	r5, r0
   1f608:	2800      	cmp	r0, #0
   1f60a:	f000 8127 	beq.w	1f85c <_dtoa_r+0xe04>
   1f60e:	693b      	ldr	r3, [r7, #16]
   1f610:	3302      	adds	r3, #2
   1f612:	009a      	lsls	r2, r3, #2
   1f614:	f107 010c 	add.w	r1, r7, #12
   1f618:	300c      	adds	r0, #12
   1f61a:	f7f8 febd 	bl	18398 <memcpy>
   1f61e:	9802      	ldr	r0, [sp, #8]
   1f620:	4629      	mov	r1, r5
   1f622:	2201      	movs	r2, #1
   1f624:	f000 ff84 	bl	20530 <__lshift>
   1f628:	4680      	mov	r8, r0
   1f62a:	e60b      	b.n	1f244 <_dtoa_r+0x7ec>
   1f62c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
   1f62e:	463c      	mov	r4, r7
   1f630:	3501      	adds	r5, #1
   1f632:	4647      	mov	r7, r8
   1f634:	e57f      	b.n	1f136 <_dtoa_r+0x6de>
   1f636:	f8dd 8008 	ldr.w	r8, [sp, #8]
   1f63a:	4639      	mov	r1, r7
   1f63c:	4632      	mov	r2, r6
   1f63e:	4640      	mov	r0, r8
   1f640:	f000 ff1c 	bl	2047c <__pow5mult>
   1f644:	4652      	mov	r2, sl
   1f646:	4601      	mov	r1, r0
   1f648:	4607      	mov	r7, r0
   1f64a:	4640      	mov	r0, r8
   1f64c:	f000 fe60 	bl	20310 <__multiply>
   1f650:	4651      	mov	r1, sl
   1f652:	4682      	mov	sl, r0
   1f654:	4640      	mov	r0, r8
   1f656:	f000 fd81 	bl	2015c <_Bfree>
   1f65a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   1f65c:	1b9b      	subs	r3, r3, r6
   1f65e:	930f      	str	r3, [sp, #60]	@ 0x3c
   1f660:	f43f ad08 	beq.w	1f074 <_dtoa_r+0x61c>
   1f664:	e500      	b.n	1f068 <_dtoa_r+0x610>
   1f666:	bf00      	nop
   1f668:	00028234 	.word	0x00028234
   1f66c:	7ff00000 	.word	0x7ff00000
   1f670:	00028338 	.word	0x00028338
   1f674:	00028310 	.word	0x00028310
   1f678:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
   1f67c:	f7f9 f8e2 	bl	18844 <__aeabi_dmul>
   1f680:	9b03      	ldr	r3, [sp, #12]
   1f682:	701f      	strb	r7, [r3, #0]
   1f684:	9b12      	ldr	r3, [sp, #72]	@ 0x48
   1f686:	2b01      	cmp	r3, #1
   1f688:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
   1f68c:	f000 80c6 	beq.w	1f81c <_dtoa_r+0xdc4>
   1f690:	9f12      	ldr	r7, [sp, #72]	@ 0x48
   1f692:	9b03      	ldr	r3, [sp, #12]
   1f694:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
   1f698:	441f      	add	r7, r3
   1f69a:	4b7c      	ldr	r3, [pc, #496]	@ (1f88c <_dtoa_r+0xe34>)
   1f69c:	2200      	movs	r2, #0
   1f69e:	4640      	mov	r0, r8
   1f6a0:	4649      	mov	r1, r9
   1f6a2:	f7f9 f8cf 	bl	18844 <__aeabi_dmul>
   1f6a6:	4689      	mov	r9, r1
   1f6a8:	4680      	mov	r8, r0
   1f6aa:	f7f9 fb7b 	bl	18da4 <__aeabi_d2iz>
   1f6ae:	4683      	mov	fp, r0
   1f6b0:	f7f9 f85e 	bl	18770 <__aeabi_i2d>
   1f6b4:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
   1f6b8:	4602      	mov	r2, r0
   1f6ba:	460b      	mov	r3, r1
   1f6bc:	4640      	mov	r0, r8
   1f6be:	4649      	mov	r1, r9
   1f6c0:	f7f8 ff08 	bl	184d4 <__aeabi_dsub>
   1f6c4:	f806 bb01 	strb.w	fp, [r6], #1
   1f6c8:	42b7      	cmp	r7, r6
   1f6ca:	4680      	mov	r8, r0
   1f6cc:	4689      	mov	r9, r1
   1f6ce:	d1e4      	bne.n	1f69a <_dtoa_r+0xc42>
   1f6d0:	f8dd b044 	ldr.w	fp, [sp, #68]	@ 0x44
   1f6d4:	4b6e      	ldr	r3, [pc, #440]	@ (1f890 <_dtoa_r+0xe38>)
   1f6d6:	2200      	movs	r2, #0
   1f6d8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
   1f6dc:	f7f8 fefc 	bl	184d8 <__adddf3>
   1f6e0:	4602      	mov	r2, r0
   1f6e2:	460b      	mov	r3, r1
   1f6e4:	4640      	mov	r0, r8
   1f6e6:	4649      	mov	r1, r9
   1f6e8:	f7f9 fb3c 	bl	18d64 <__aeabi_dcmpgt>
   1f6ec:	2800      	cmp	r0, #0
   1f6ee:	d167      	bne.n	1f7c0 <_dtoa_r+0xd68>
   1f6f0:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
   1f6f4:	4966      	ldr	r1, [pc, #408]	@ (1f890 <_dtoa_r+0xe38>)
   1f6f6:	2000      	movs	r0, #0
   1f6f8:	f7f8 feec 	bl	184d4 <__aeabi_dsub>
   1f6fc:	4602      	mov	r2, r0
   1f6fe:	460b      	mov	r3, r1
   1f700:	4640      	mov	r0, r8
   1f702:	4649      	mov	r1, r9
   1f704:	f7f9 fb10 	bl	18d28 <__aeabi_dcmplt>
   1f708:	b948      	cbnz	r0, 1f71e <_dtoa_r+0xcc6>
   1f70a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
   1f70c:	2b00      	cmp	r3, #0
   1f70e:	f6ff ac93 	blt.w	1f038 <_dtoa_r+0x5e0>
   1f712:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   1f714:	2b0e      	cmp	r3, #14
   1f716:	f73f ac8f 	bgt.w	1f038 <_dtoa_r+0x5e0>
   1f71a:	f7ff bbfd 	b.w	1ef18 <_dtoa_r+0x4c0>
   1f71e:	463e      	mov	r6, r7
   1f720:	3f01      	subs	r7, #1
   1f722:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   1f726:	2b30      	cmp	r3, #48	@ 0x30
   1f728:	d0f9      	beq.n	1f71e <_dtoa_r+0xcc6>
   1f72a:	9d19      	ldr	r5, [sp, #100]	@ 0x64
   1f72c:	3501      	adds	r5, #1
   1f72e:	e530      	b.n	1f192 <_dtoa_r+0x73a>
   1f730:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
   1f732:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
   1f736:	e703      	b.n	1f540 <_dtoa_r+0xae8>
   1f738:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
   1f73c:	2702      	movs	r7, #2
   1f73e:	f7ff bb05 	b.w	1ed4c <_dtoa_r+0x2f4>
   1f742:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   1f744:	2b00      	cmp	r3, #0
   1f746:	f43f abb9 	beq.w	1eebc <_dtoa_r+0x464>
   1f74a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
   1f74c:	2b00      	cmp	r3, #0
   1f74e:	f77f abda 	ble.w	1ef06 <_dtoa_r+0x4ae>
   1f752:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
   1f754:	9312      	str	r3, [sp, #72]	@ 0x48
   1f756:	3a01      	subs	r2, #1
   1f758:	4b4c      	ldr	r3, [pc, #304]	@ (1f88c <_dtoa_r+0xe34>)
   1f75a:	9219      	str	r2, [sp, #100]	@ 0x64
   1f75c:	4640      	mov	r0, r8
   1f75e:	2200      	movs	r2, #0
   1f760:	4649      	mov	r1, r9
   1f762:	f7f9 f86f 	bl	18844 <__aeabi_dmul>
   1f766:	4680      	mov	r8, r0
   1f768:	4689      	mov	r9, r1
   1f76a:	1c78      	adds	r0, r7, #1
   1f76c:	f7f9 f800 	bl	18770 <__aeabi_i2d>
   1f770:	4642      	mov	r2, r8
   1f772:	464b      	mov	r3, r9
   1f774:	f7f9 f866 	bl	18844 <__aeabi_dmul>
   1f778:	4b46      	ldr	r3, [pc, #280]	@ (1f894 <_dtoa_r+0xe3c>)
   1f77a:	2200      	movs	r2, #0
   1f77c:	f7f8 feac 	bl	184d8 <__adddf3>
   1f780:	4606      	mov	r6, r0
   1f782:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
   1f786:	f7ff bb02 	b.w	1ed8e <_dtoa_r+0x336>
   1f78a:	f108 0801 	add.w	r8, r8, #1
   1f78e:	2331      	movs	r3, #49	@ 0x31
   1f790:	f7ff bb87 	b.w	1eea2 <_dtoa_r+0x44a>
   1f794:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
   1f796:	9a03      	ldr	r2, [sp, #12]
   1f798:	46b3      	mov	fp, r6
   1f79a:	2339      	movs	r3, #57	@ 0x39
   1f79c:	463c      	mov	r4, r7
   1f79e:	f80b 3b01 	strb.w	r3, [fp], #1
   1f7a2:	3501      	adds	r5, #1
   1f7a4:	4647      	mov	r7, r8
   1f7a6:	e4d8      	b.n	1f15a <_dtoa_r+0x702>
   1f7a8:	f04f 0900 	mov.w	r9, #0
   1f7ac:	464f      	mov	r7, r9
   1f7ae:	e5f6      	b.n	1f39e <_dtoa_r+0x946>
   1f7b0:	469b      	mov	fp, r3
   1f7b2:	e629      	b.n	1f408 <_dtoa_r+0x9b0>
   1f7b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
   1f7b6:	4615      	mov	r5, r2
   1f7b8:	441a      	add	r2, r3
   1f7ba:	441c      	add	r4, r3
   1f7bc:	920b      	str	r2, [sp, #44]	@ 0x2c
   1f7be:	e51f      	b.n	1f200 <_dtoa_r+0x7a8>
   1f7c0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
   1f7c2:	9a03      	ldr	r2, [sp, #12]
   1f7c4:	f103 0801 	add.w	r8, r3, #1
   1f7c8:	f7ff bb64 	b.w	1ee94 <_dtoa_r+0x43c>
   1f7cc:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
   1f7d0:	e7ab      	b.n	1f72a <_dtoa_r+0xcd2>
   1f7d2:	e9dd b41a 	ldrd	fp, r4, [sp, #104]	@ 0x68
   1f7d6:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
   1f7da:	f7ff bb94 	b.w	1ef06 <_dtoa_r+0x4ae>
   1f7de:	2b39      	cmp	r3, #57	@ 0x39
   1f7e0:	d0d8      	beq.n	1f794 <_dtoa_r+0xd3c>
   1f7e2:	2d00      	cmp	r5, #0
   1f7e4:	f73f ada7 	bgt.w	1f336 <_dtoa_r+0x8de>
   1f7e8:	e5a7      	b.n	1f33a <_dtoa_r+0x8e2>
   1f7ea:	9b00      	ldr	r3, [sp, #0]
   1f7ec:	2b02      	cmp	r3, #2
   1f7ee:	dc0a      	bgt.n	1f806 <_dtoa_r+0xdae>
   1f7f0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
   1f7f2:	9309      	str	r3, [sp, #36]	@ 0x24
   1f7f4:	4649      	mov	r1, r9
   1f7f6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
   1f7f8:	f7ff f898 	bl	1e92c <quorem>
   1f7fc:	9a03      	ldr	r2, [sp, #12]
   1f7fe:	f100 0330 	add.w	r3, r0, #48	@ 0x30
   1f802:	7013      	strb	r3, [r2, #0]
   1f804:	e48d      	b.n	1f122 <_dtoa_r+0x6ca>
   1f806:	9b18      	ldr	r3, [sp, #96]	@ 0x60
   1f808:	9309      	str	r3, [sp, #36]	@ 0x24
   1f80a:	960e      	str	r6, [sp, #56]	@ 0x38
   1f80c:	e5b6      	b.n	1f37c <_dtoa_r+0x924>
   1f80e:	9b00      	ldr	r3, [sp, #0]
   1f810:	2b02      	cmp	r3, #2
   1f812:	dcf8      	bgt.n	1f806 <_dtoa_r+0xdae>
   1f814:	9b18      	ldr	r3, [sp, #96]	@ 0x60
   1f816:	960e      	str	r6, [sp, #56]	@ 0x38
   1f818:	9309      	str	r3, [sp, #36]	@ 0x24
   1f81a:	e50b      	b.n	1f234 <_dtoa_r+0x7dc>
   1f81c:	4637      	mov	r7, r6
   1f81e:	e759      	b.n	1f6d4 <_dtoa_r+0xc7c>
   1f820:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
   1f824:	2702      	movs	r7, #2
   1f826:	f7ff ba91 	b.w	1ed4c <_dtoa_r+0x2f4>
   1f82a:	9b02      	ldr	r3, [sp, #8]
   1f82c:	2100      	movs	r1, #0
   1f82e:	63d9      	str	r1, [r3, #60]	@ 0x3c
   1f830:	f7ff ba47 	b.w	1ecc2 <_dtoa_r+0x26a>
   1f834:	9b02      	ldr	r3, [sp, #8]
   1f836:	2500      	movs	r5, #0
   1f838:	63dd      	str	r5, [r3, #60]	@ 0x3c
   1f83a:	4629      	mov	r1, r5
   1f83c:	4618      	mov	r0, r3
   1f83e:	f000 fc67 	bl	20110 <_Balloc>
   1f842:	9003      	str	r0, [sp, #12]
   1f844:	b9a8      	cbnz	r0, 1f872 <_dtoa_r+0xe1a>
   1f846:	4b14      	ldr	r3, [pc, #80]	@ (1f898 <_dtoa_r+0xe40>)
   1f848:	4814      	ldr	r0, [pc, #80]	@ (1f89c <_dtoa_r+0xe44>)
   1f84a:	2200      	movs	r2, #0
   1f84c:	f240 11af 	movw	r1, #431	@ 0x1af
   1f850:	f001 faaa 	bl	20da8 <__assert_func>
   1f854:	2a00      	cmp	r2, #0
   1f856:	f77f ad70 	ble.w	1f33a <_dtoa_r+0x8e2>
   1f85a:	e55b      	b.n	1f314 <_dtoa_r+0x8bc>
   1f85c:	4b0e      	ldr	r3, [pc, #56]	@ (1f898 <_dtoa_r+0xe40>)
   1f85e:	480f      	ldr	r0, [pc, #60]	@ (1f89c <_dtoa_r+0xe44>)
   1f860:	462a      	mov	r2, r5
   1f862:	f240 21ef 	movw	r1, #751	@ 0x2ef
   1f866:	f001 fa9f 	bl	20da8 <__assert_func>
   1f86a:	4b0d      	ldr	r3, [pc, #52]	@ (1f8a0 <_dtoa_r+0xe48>)
   1f86c:	9303      	str	r3, [sp, #12]
   1f86e:	f7ff b931 	b.w	1ead4 <_dtoa_r+0x7c>
   1f872:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
   1f876:	639a      	str	r2, [r3, #56]	@ 0x38
   1f878:	f04f 33ff 	mov.w	r3, #4294967295
   1f87c:	2201      	movs	r2, #1
   1f87e:	950a      	str	r5, [sp, #40]	@ 0x28
   1f880:	9318      	str	r3, [sp, #96]	@ 0x60
   1f882:	920c      	str	r2, [sp, #48]	@ 0x30
   1f884:	9309      	str	r3, [sp, #36]	@ 0x24
   1f886:	f7ff bb3e 	b.w	1ef06 <_dtoa_r+0x4ae>
   1f88a:	bf00      	nop
   1f88c:	40240000 	.word	0x40240000
   1f890:	3fe00000 	.word	0x3fe00000
   1f894:	401c0000 	.word	0x401c0000
   1f898:	00028238 	.word	0x00028238
   1f89c:	0002824c 	.word	0x0002824c
   1f8a0:	00028228 	.word	0x00028228

0001f8a4 <_malloc_trim_r>:
   1f8a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1f8a8:	4606      	mov	r6, r0
   1f8aa:	2008      	movs	r0, #8
   1f8ac:	4689      	mov	r9, r1
   1f8ae:	f001 fa6d 	bl	20d8c <sysconf>
   1f8b2:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 1f958 <_malloc_trim_r+0xb4>
   1f8b6:	4605      	mov	r5, r0
   1f8b8:	4630      	mov	r0, r6
   1f8ba:	f000 fc1d 	bl	200f8 <__malloc_lock>
   1f8be:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1f8c2:	685f      	ldr	r7, [r3, #4]
   1f8c4:	f027 0703 	bic.w	r7, r7, #3
   1f8c8:	f1a7 0411 	sub.w	r4, r7, #17
   1f8cc:	eba4 0409 	sub.w	r4, r4, r9
   1f8d0:	442c      	add	r4, r5
   1f8d2:	fbb4 f4f5 	udiv	r4, r4, r5
   1f8d6:	3c01      	subs	r4, #1
   1f8d8:	fb05 f404 	mul.w	r4, r5, r4
   1f8dc:	42a5      	cmp	r5, r4
   1f8de:	dc08      	bgt.n	1f8f2 <_malloc_trim_r+0x4e>
   1f8e0:	2100      	movs	r1, #0
   1f8e2:	4630      	mov	r0, r6
   1f8e4:	f001 fa3a 	bl	20d5c <_sbrk_r>
   1f8e8:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1f8ec:	443b      	add	r3, r7
   1f8ee:	4298      	cmp	r0, r3
   1f8f0:	d005      	beq.n	1f8fe <_malloc_trim_r+0x5a>
   1f8f2:	4630      	mov	r0, r6
   1f8f4:	f000 fc06 	bl	20104 <__malloc_unlock>
   1f8f8:	2000      	movs	r0, #0
   1f8fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1f8fe:	4261      	negs	r1, r4
   1f900:	4630      	mov	r0, r6
   1f902:	f001 fa2b 	bl	20d5c <_sbrk_r>
   1f906:	3001      	adds	r0, #1
   1f908:	d00f      	beq.n	1f92a <_malloc_trim_r+0x86>
   1f90a:	4a11      	ldr	r2, [pc, #68]	@ (1f950 <_malloc_trim_r+0xac>)
   1f90c:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1f910:	1b3f      	subs	r7, r7, r4
   1f912:	f047 0701 	orr.w	r7, r7, #1
   1f916:	605f      	str	r7, [r3, #4]
   1f918:	6813      	ldr	r3, [r2, #0]
   1f91a:	4630      	mov	r0, r6
   1f91c:	1b1b      	subs	r3, r3, r4
   1f91e:	6013      	str	r3, [r2, #0]
   1f920:	f000 fbf0 	bl	20104 <__malloc_unlock>
   1f924:	2001      	movs	r0, #1
   1f926:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1f92a:	2100      	movs	r1, #0
   1f92c:	4630      	mov	r0, r6
   1f92e:	f001 fa15 	bl	20d5c <_sbrk_r>
   1f932:	f8d8 2008 	ldr.w	r2, [r8, #8]
   1f936:	1a83      	subs	r3, r0, r2
   1f938:	2b0f      	cmp	r3, #15
   1f93a:	ddda      	ble.n	1f8f2 <_malloc_trim_r+0x4e>
   1f93c:	f043 0301 	orr.w	r3, r3, #1
   1f940:	6053      	str	r3, [r2, #4]
   1f942:	4b04      	ldr	r3, [pc, #16]	@ (1f954 <_malloc_trim_r+0xb0>)
   1f944:	4902      	ldr	r1, [pc, #8]	@ (1f950 <_malloc_trim_r+0xac>)
   1f946:	681b      	ldr	r3, [r3, #0]
   1f948:	1ac0      	subs	r0, r0, r3
   1f94a:	6008      	str	r0, [r1, #0]
   1f94c:	e7d1      	b.n	1f8f2 <_malloc_trim_r+0x4e>
   1f94e:	bf00      	nop
   1f950:	10030240 	.word	0x10030240
   1f954:	10001388 	.word	0x10001388
   1f958:	10001390 	.word	0x10001390

0001f95c <_free_r>:
   1f95c:	2900      	cmp	r1, #0
   1f95e:	d07c      	beq.n	1fa5a <_free_r+0xfe>
   1f960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f964:	460c      	mov	r4, r1
   1f966:	4680      	mov	r8, r0
   1f968:	f000 fbc6 	bl	200f8 <__malloc_lock>
   1f96c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   1f970:	4f76      	ldr	r7, [pc, #472]	@ (1fb4c <_free_r+0x1f0>)
   1f972:	f1a4 0508 	sub.w	r5, r4, #8
   1f976:	f023 0101 	bic.w	r1, r3, #1
   1f97a:	1868      	adds	r0, r5, r1
   1f97c:	68be      	ldr	r6, [r7, #8]
   1f97e:	6842      	ldr	r2, [r0, #4]
   1f980:	4286      	cmp	r6, r0
   1f982:	f022 0203 	bic.w	r2, r2, #3
   1f986:	f000 8083 	beq.w	1fa90 <_free_r+0x134>
   1f98a:	07de      	lsls	r6, r3, #31
   1f98c:	6042      	str	r2, [r0, #4]
   1f98e:	eb00 0c02 	add.w	ip, r0, r2
   1f992:	d433      	bmi.n	1f9fc <_free_r+0xa0>
   1f994:	f854 4c08 	ldr.w	r4, [r4, #-8]
   1f998:	f8dc 3004 	ldr.w	r3, [ip, #4]
   1f99c:	1b2d      	subs	r5, r5, r4
   1f99e:	4421      	add	r1, r4
   1f9a0:	68ac      	ldr	r4, [r5, #8]
   1f9a2:	f107 0c08 	add.w	ip, r7, #8
   1f9a6:	4564      	cmp	r4, ip
   1f9a8:	f003 0301 	and.w	r3, r3, #1
   1f9ac:	d064      	beq.n	1fa78 <_free_r+0x11c>
   1f9ae:	f8d5 e00c 	ldr.w	lr, [r5, #12]
   1f9b2:	f8c4 e00c 	str.w	lr, [r4, #12]
   1f9b6:	f8ce 4008 	str.w	r4, [lr, #8]
   1f9ba:	2b00      	cmp	r3, #0
   1f9bc:	f000 8081 	beq.w	1fac2 <_free_r+0x166>
   1f9c0:	f041 0301 	orr.w	r3, r1, #1
   1f9c4:	606b      	str	r3, [r5, #4]
   1f9c6:	6001      	str	r1, [r0, #0]
   1f9c8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
   1f9cc:	d222      	bcs.n	1fa14 <_free_r+0xb8>
   1f9ce:	6878      	ldr	r0, [r7, #4]
   1f9d0:	08cb      	lsrs	r3, r1, #3
   1f9d2:	2201      	movs	r2, #1
   1f9d4:	0949      	lsrs	r1, r1, #5
   1f9d6:	3301      	adds	r3, #1
   1f9d8:	408a      	lsls	r2, r1
   1f9da:	4302      	orrs	r2, r0
   1f9dc:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
   1f9e0:	607a      	str	r2, [r7, #4]
   1f9e2:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
   1f9e6:	3a08      	subs	r2, #8
   1f9e8:	e9c5 1202 	strd	r1, r2, [r5, #8]
   1f9ec:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
   1f9f0:	60cd      	str	r5, [r1, #12]
   1f9f2:	4640      	mov	r0, r8
   1f9f4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1f9f8:	f000 bb84 	b.w	20104 <__malloc_unlock>
   1f9fc:	f8dc 3004 	ldr.w	r3, [ip, #4]
   1fa00:	07db      	lsls	r3, r3, #31
   1fa02:	d52b      	bpl.n	1fa5c <_free_r+0x100>
   1fa04:	f041 0301 	orr.w	r3, r1, #1
   1fa08:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
   1fa0c:	f844 3c04 	str.w	r3, [r4, #-4]
   1fa10:	6001      	str	r1, [r0, #0]
   1fa12:	d3dc      	bcc.n	1f9ce <_free_r+0x72>
   1fa14:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
   1fa18:	ea4f 2351 	mov.w	r3, r1, lsr #9
   1fa1c:	d253      	bcs.n	1fac6 <_free_r+0x16a>
   1fa1e:	098b      	lsrs	r3, r1, #6
   1fa20:	f103 0039 	add.w	r0, r3, #57	@ 0x39
   1fa24:	f103 0238 	add.w	r2, r3, #56	@ 0x38
   1fa28:	00c3      	lsls	r3, r0, #3
   1fa2a:	18f8      	adds	r0, r7, r3
   1fa2c:	58fb      	ldr	r3, [r7, r3]
   1fa2e:	3808      	subs	r0, #8
   1fa30:	4298      	cmp	r0, r3
   1fa32:	d103      	bne.n	1fa3c <_free_r+0xe0>
   1fa34:	e063      	b.n	1fafe <_free_r+0x1a2>
   1fa36:	689b      	ldr	r3, [r3, #8]
   1fa38:	4298      	cmp	r0, r3
   1fa3a:	d004      	beq.n	1fa46 <_free_r+0xea>
   1fa3c:	685a      	ldr	r2, [r3, #4]
   1fa3e:	f022 0203 	bic.w	r2, r2, #3
   1fa42:	428a      	cmp	r2, r1
   1fa44:	d8f7      	bhi.n	1fa36 <_free_r+0xda>
   1fa46:	68d8      	ldr	r0, [r3, #12]
   1fa48:	e9c5 3002 	strd	r3, r0, [r5, #8]
   1fa4c:	6085      	str	r5, [r0, #8]
   1fa4e:	60dd      	str	r5, [r3, #12]
   1fa50:	4640      	mov	r0, r8
   1fa52:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1fa56:	f000 bb55 	b.w	20104 <__malloc_unlock>
   1fa5a:	4770      	bx	lr
   1fa5c:	4411      	add	r1, r2
   1fa5e:	f107 0c08 	add.w	ip, r7, #8
   1fa62:	6883      	ldr	r3, [r0, #8]
   1fa64:	4563      	cmp	r3, ip
   1fa66:	d03f      	beq.n	1fae8 <_free_r+0x18c>
   1fa68:	68c2      	ldr	r2, [r0, #12]
   1fa6a:	60da      	str	r2, [r3, #12]
   1fa6c:	6093      	str	r3, [r2, #8]
   1fa6e:	f041 0301 	orr.w	r3, r1, #1
   1fa72:	606b      	str	r3, [r5, #4]
   1fa74:	5069      	str	r1, [r5, r1]
   1fa76:	e7a7      	b.n	1f9c8 <_free_r+0x6c>
   1fa78:	2b00      	cmp	r3, #0
   1fa7a:	d161      	bne.n	1fb40 <_free_r+0x1e4>
   1fa7c:	440a      	add	r2, r1
   1fa7e:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
   1fa82:	60cb      	str	r3, [r1, #12]
   1fa84:	6099      	str	r1, [r3, #8]
   1fa86:	f042 0301 	orr.w	r3, r2, #1
   1fa8a:	606b      	str	r3, [r5, #4]
   1fa8c:	50aa      	str	r2, [r5, r2]
   1fa8e:	e7b0      	b.n	1f9f2 <_free_r+0x96>
   1fa90:	07db      	lsls	r3, r3, #31
   1fa92:	440a      	add	r2, r1
   1fa94:	d407      	bmi.n	1faa6 <_free_r+0x14a>
   1fa96:	f854 3c08 	ldr.w	r3, [r4, #-8]
   1fa9a:	1aed      	subs	r5, r5, r3
   1fa9c:	441a      	add	r2, r3
   1fa9e:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
   1faa2:	60cb      	str	r3, [r1, #12]
   1faa4:	6099      	str	r1, [r3, #8]
   1faa6:	f042 0301 	orr.w	r3, r2, #1
   1faaa:	606b      	str	r3, [r5, #4]
   1faac:	4b28      	ldr	r3, [pc, #160]	@ (1fb50 <_free_r+0x1f4>)
   1faae:	60bd      	str	r5, [r7, #8]
   1fab0:	681b      	ldr	r3, [r3, #0]
   1fab2:	4293      	cmp	r3, r2
   1fab4:	d89d      	bhi.n	1f9f2 <_free_r+0x96>
   1fab6:	4b27      	ldr	r3, [pc, #156]	@ (1fb54 <_free_r+0x1f8>)
   1fab8:	4640      	mov	r0, r8
   1faba:	6819      	ldr	r1, [r3, #0]
   1fabc:	f7ff fef2 	bl	1f8a4 <_malloc_trim_r>
   1fac0:	e797      	b.n	1f9f2 <_free_r+0x96>
   1fac2:	4411      	add	r1, r2
   1fac4:	e7cd      	b.n	1fa62 <_free_r+0x106>
   1fac6:	2b14      	cmp	r3, #20
   1fac8:	d908      	bls.n	1fadc <_free_r+0x180>
   1faca:	2b54      	cmp	r3, #84	@ 0x54
   1facc:	d81f      	bhi.n	1fb0e <_free_r+0x1b2>
   1face:	0b0b      	lsrs	r3, r1, #12
   1fad0:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
   1fad4:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
   1fad8:	00c3      	lsls	r3, r0, #3
   1fada:	e7a6      	b.n	1fa2a <_free_r+0xce>
   1fadc:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
   1fae0:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
   1fae4:	00c3      	lsls	r3, r0, #3
   1fae6:	e7a0      	b.n	1fa2a <_free_r+0xce>
   1fae8:	f041 0301 	orr.w	r3, r1, #1
   1faec:	613d      	str	r5, [r7, #16]
   1faee:	617d      	str	r5, [r7, #20]
   1faf0:	f8c5 c008 	str.w	ip, [r5, #8]
   1faf4:	f8c5 c00c 	str.w	ip, [r5, #12]
   1faf8:	606b      	str	r3, [r5, #4]
   1fafa:	5069      	str	r1, [r5, r1]
   1fafc:	e779      	b.n	1f9f2 <_free_r+0x96>
   1fafe:	6879      	ldr	r1, [r7, #4]
   1fb00:	1092      	asrs	r2, r2, #2
   1fb02:	2401      	movs	r4, #1
   1fb04:	fa04 f202 	lsl.w	r2, r4, r2
   1fb08:	430a      	orrs	r2, r1
   1fb0a:	607a      	str	r2, [r7, #4]
   1fb0c:	e79c      	b.n	1fa48 <_free_r+0xec>
   1fb0e:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
   1fb12:	d806      	bhi.n	1fb22 <_free_r+0x1c6>
   1fb14:	0bcb      	lsrs	r3, r1, #15
   1fb16:	f103 0078 	add.w	r0, r3, #120	@ 0x78
   1fb1a:	f103 0277 	add.w	r2, r3, #119	@ 0x77
   1fb1e:	00c3      	lsls	r3, r0, #3
   1fb20:	e783      	b.n	1fa2a <_free_r+0xce>
   1fb22:	f240 5254 	movw	r2, #1364	@ 0x554
   1fb26:	4293      	cmp	r3, r2
   1fb28:	d806      	bhi.n	1fb38 <_free_r+0x1dc>
   1fb2a:	0c8b      	lsrs	r3, r1, #18
   1fb2c:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
   1fb30:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
   1fb34:	00c3      	lsls	r3, r0, #3
   1fb36:	e778      	b.n	1fa2a <_free_r+0xce>
   1fb38:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
   1fb3c:	227e      	movs	r2, #126	@ 0x7e
   1fb3e:	e774      	b.n	1fa2a <_free_r+0xce>
   1fb40:	f041 0301 	orr.w	r3, r1, #1
   1fb44:	606b      	str	r3, [r5, #4]
   1fb46:	6001      	str	r1, [r0, #0]
   1fb48:	e753      	b.n	1f9f2 <_free_r+0x96>
   1fb4a:	bf00      	nop
   1fb4c:	10001390 	.word	0x10001390
   1fb50:	1000138c 	.word	0x1000138c
   1fb54:	10030270 	.word	0x10030270

0001fb58 <_malloc_r>:
   1fb58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb5c:	f101 050b 	add.w	r5, r1, #11
   1fb60:	2d16      	cmp	r5, #22
   1fb62:	b085      	sub	sp, #20
   1fb64:	4606      	mov	r6, r0
   1fb66:	d824      	bhi.n	1fbb2 <_malloc_r+0x5a>
   1fb68:	2910      	cmp	r1, #16
   1fb6a:	f200 80b1 	bhi.w	1fcd0 <_malloc_r+0x178>
   1fb6e:	f000 fac3 	bl	200f8 <__malloc_lock>
   1fb72:	2510      	movs	r5, #16
   1fb74:	2318      	movs	r3, #24
   1fb76:	f04f 0c02 	mov.w	ip, #2
   1fb7a:	4fba      	ldr	r7, [pc, #744]	@ (1fe64 <_malloc_r+0x30c>)
   1fb7c:	443b      	add	r3, r7
   1fb7e:	f1a3 0208 	sub.w	r2, r3, #8
   1fb82:	685c      	ldr	r4, [r3, #4]
   1fb84:	4294      	cmp	r4, r2
   1fb86:	f000 8122 	beq.w	1fdce <_malloc_r+0x276>
   1fb8a:	6863      	ldr	r3, [r4, #4]
   1fb8c:	68e2      	ldr	r2, [r4, #12]
   1fb8e:	68a1      	ldr	r1, [r4, #8]
   1fb90:	f023 0303 	bic.w	r3, r3, #3
   1fb94:	60ca      	str	r2, [r1, #12]
   1fb96:	4423      	add	r3, r4
   1fb98:	4630      	mov	r0, r6
   1fb9a:	6091      	str	r1, [r2, #8]
   1fb9c:	685a      	ldr	r2, [r3, #4]
   1fb9e:	f042 0201 	orr.w	r2, r2, #1
   1fba2:	605a      	str	r2, [r3, #4]
   1fba4:	3408      	adds	r4, #8
   1fba6:	f000 faad 	bl	20104 <__malloc_unlock>
   1fbaa:	4620      	mov	r0, r4
   1fbac:	b005      	add	sp, #20
   1fbae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fbb2:	f035 0507 	bics.w	r5, r5, #7
   1fbb6:	f100 808b 	bmi.w	1fcd0 <_malloc_r+0x178>
   1fbba:	42a9      	cmp	r1, r5
   1fbbc:	f200 8088 	bhi.w	1fcd0 <_malloc_r+0x178>
   1fbc0:	f000 fa9a 	bl	200f8 <__malloc_lock>
   1fbc4:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
   1fbc8:	f0c0 8173 	bcc.w	1feb2 <_malloc_r+0x35a>
   1fbcc:	0a6b      	lsrs	r3, r5, #9
   1fbce:	f000 8083 	beq.w	1fcd8 <_malloc_r+0x180>
   1fbd2:	2b04      	cmp	r3, #4
   1fbd4:	f200 8122 	bhi.w	1fe1c <_malloc_r+0x2c4>
   1fbd8:	09ab      	lsrs	r3, r5, #6
   1fbda:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
   1fbde:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
   1fbe2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
   1fbe6:	4f9f      	ldr	r7, [pc, #636]	@ (1fe64 <_malloc_r+0x30c>)
   1fbe8:	443b      	add	r3, r7
   1fbea:	f1a3 0008 	sub.w	r0, r3, #8
   1fbee:	685c      	ldr	r4, [r3, #4]
   1fbf0:	42a0      	cmp	r0, r4
   1fbf2:	d107      	bne.n	1fc04 <_malloc_r+0xac>
   1fbf4:	e00d      	b.n	1fc12 <_malloc_r+0xba>
   1fbf6:	2a00      	cmp	r2, #0
   1fbf8:	68e1      	ldr	r1, [r4, #12]
   1fbfa:	f280 80e2 	bge.w	1fdc2 <_malloc_r+0x26a>
   1fbfe:	4288      	cmp	r0, r1
   1fc00:	d007      	beq.n	1fc12 <_malloc_r+0xba>
   1fc02:	460c      	mov	r4, r1
   1fc04:	6863      	ldr	r3, [r4, #4]
   1fc06:	f023 0303 	bic.w	r3, r3, #3
   1fc0a:	1b5a      	subs	r2, r3, r5
   1fc0c:	2a0f      	cmp	r2, #15
   1fc0e:	ddf2      	ble.n	1fbf6 <_malloc_r+0x9e>
   1fc10:	46f4      	mov	ip, lr
   1fc12:	f8df 8264 	ldr.w	r8, [pc, #612]	@ 1fe78 <_malloc_r+0x320>
   1fc16:	693c      	ldr	r4, [r7, #16]
   1fc18:	4544      	cmp	r4, r8
   1fc1a:	f000 80bf 	beq.w	1fd9c <_malloc_r+0x244>
   1fc1e:	6863      	ldr	r3, [r4, #4]
   1fc20:	f023 0903 	bic.w	r9, r3, #3
   1fc24:	eba9 0305 	sub.w	r3, r9, r5
   1fc28:	2b0f      	cmp	r3, #15
   1fc2a:	f300 8147 	bgt.w	1febc <_malloc_r+0x364>
   1fc2e:	2b00      	cmp	r3, #0
   1fc30:	e9c7 8804 	strd	r8, r8, [r7, #16]
   1fc34:	f280 8131 	bge.w	1fe9a <_malloc_r+0x342>
   1fc38:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
   1fc3c:	f8d7 e004 	ldr.w	lr, [r7, #4]
   1fc40:	f080 80cc 	bcs.w	1fddc <_malloc_r+0x284>
   1fc44:	ea4f 01d9 	mov.w	r1, r9, lsr #3
   1fc48:	3101      	adds	r1, #1
   1fc4a:	ea4f 1959 	mov.w	r9, r9, lsr #5
   1fc4e:	2301      	movs	r3, #1
   1fc50:	fa03 f309 	lsl.w	r3, r3, r9
   1fc54:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
   1fc58:	60a2      	str	r2, [r4, #8]
   1fc5a:	ea4e 0e03 	orr.w	lr, lr, r3
   1fc5e:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
   1fc62:	3b08      	subs	r3, #8
   1fc64:	60e3      	str	r3, [r4, #12]
   1fc66:	f8c7 e004 	str.w	lr, [r7, #4]
   1fc6a:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
   1fc6e:	60d4      	str	r4, [r2, #12]
   1fc70:	ea4f 03ac 	mov.w	r3, ip, asr #2
   1fc74:	2001      	movs	r0, #1
   1fc76:	4098      	lsls	r0, r3
   1fc78:	4570      	cmp	r0, lr
   1fc7a:	d834      	bhi.n	1fce6 <_malloc_r+0x18e>
   1fc7c:	ea10 0f0e 	tst.w	r0, lr
   1fc80:	d107      	bne.n	1fc92 <_malloc_r+0x13a>
   1fc82:	f02c 0c03 	bic.w	ip, ip, #3
   1fc86:	0040      	lsls	r0, r0, #1
   1fc88:	ea10 0f0e 	tst.w	r0, lr
   1fc8c:	f10c 0c04 	add.w	ip, ip, #4
   1fc90:	d0f9      	beq.n	1fc86 <_malloc_r+0x12e>
   1fc92:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
   1fc96:	4652      	mov	r2, sl
   1fc98:	46e1      	mov	r9, ip
   1fc9a:	68d1      	ldr	r1, [r2, #12]
   1fc9c:	e00e      	b.n	1fcbc <_malloc_r+0x164>
   1fc9e:	684b      	ldr	r3, [r1, #4]
   1fca0:	f023 0303 	bic.w	r3, r3, #3
   1fca4:	eba3 0e05 	sub.w	lr, r3, r5
   1fca8:	f1be 0f0f 	cmp.w	lr, #15
   1fcac:	460c      	mov	r4, r1
   1fcae:	68c9      	ldr	r1, [r1, #12]
   1fcb0:	f300 80c1 	bgt.w	1fe36 <_malloc_r+0x2de>
   1fcb4:	f1be 0f00 	cmp.w	lr, #0
   1fcb8:	f280 80e2 	bge.w	1fe80 <_malloc_r+0x328>
   1fcbc:	428a      	cmp	r2, r1
   1fcbe:	d1ee      	bne.n	1fc9e <_malloc_r+0x146>
   1fcc0:	f109 0901 	add.w	r9, r9, #1
   1fcc4:	f019 0f03 	tst.w	r9, #3
   1fcc8:	f102 0208 	add.w	r2, r2, #8
   1fccc:	d1e5      	bne.n	1fc9a <_malloc_r+0x142>
   1fcce:	e121      	b.n	1ff14 <_malloc_r+0x3bc>
   1fcd0:	230c      	movs	r3, #12
   1fcd2:	6033      	str	r3, [r6, #0]
   1fcd4:	2400      	movs	r4, #0
   1fcd6:	e768      	b.n	1fbaa <_malloc_r+0x52>
   1fcd8:	f44f 7300 	mov.w	r3, #512	@ 0x200
   1fcdc:	f04f 0c40 	mov.w	ip, #64	@ 0x40
   1fce0:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
   1fce4:	e77f      	b.n	1fbe6 <_malloc_r+0x8e>
   1fce6:	68bc      	ldr	r4, [r7, #8]
   1fce8:	6863      	ldr	r3, [r4, #4]
   1fcea:	f023 0903 	bic.w	r9, r3, #3
   1fcee:	45a9      	cmp	r9, r5
   1fcf0:	d303      	bcc.n	1fcfa <_malloc_r+0x1a2>
   1fcf2:	eba9 0305 	sub.w	r3, r9, r5
   1fcf6:	2b0f      	cmp	r3, #15
   1fcf8:	dc53      	bgt.n	1fda2 <_malloc_r+0x24a>
   1fcfa:	4b5b      	ldr	r3, [pc, #364]	@ (1fe68 <_malloc_r+0x310>)
   1fcfc:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 1fe7c <_malloc_r+0x324>
   1fd00:	681b      	ldr	r3, [r3, #0]
   1fd02:	2008      	movs	r0, #8
   1fd04:	f103 0810 	add.w	r8, r3, #16
   1fd08:	f001 f840 	bl	20d8c <sysconf>
   1fd0c:	f8db 3000 	ldr.w	r3, [fp]
   1fd10:	9001      	str	r0, [sp, #4]
   1fd12:	3301      	adds	r3, #1
   1fd14:	44a8      	add	r8, r5
   1fd16:	eb04 0209 	add.w	r2, r4, r9
   1fd1a:	d005      	beq.n	1fd28 <_malloc_r+0x1d0>
   1fd1c:	f108 38ff 	add.w	r8, r8, #4294967295
   1fd20:	4480      	add	r8, r0
   1fd22:	4243      	negs	r3, r0
   1fd24:	ea03 0808 	and.w	r8, r3, r8
   1fd28:	4641      	mov	r1, r8
   1fd2a:	4630      	mov	r0, r6
   1fd2c:	9202      	str	r2, [sp, #8]
   1fd2e:	f001 f815 	bl	20d5c <_sbrk_r>
   1fd32:	f1b0 3fff 	cmp.w	r0, #4294967295
   1fd36:	9a02      	ldr	r2, [sp, #8]
   1fd38:	4682      	mov	sl, r0
   1fd3a:	f000 80dc 	beq.w	1fef6 <_malloc_r+0x39e>
   1fd3e:	4282      	cmp	r2, r0
   1fd40:	f200 80d7 	bhi.w	1fef2 <_malloc_r+0x39a>
   1fd44:	4b49      	ldr	r3, [pc, #292]	@ (1fe6c <_malloc_r+0x314>)
   1fd46:	9901      	ldr	r1, [sp, #4]
   1fd48:	6818      	ldr	r0, [r3, #0]
   1fd4a:	4440      	add	r0, r8
   1fd4c:	f101 31ff 	add.w	r1, r1, #4294967295
   1fd50:	6018      	str	r0, [r3, #0]
   1fd52:	4684      	mov	ip, r0
   1fd54:	f040 80fc 	bne.w	1ff50 <_malloc_r+0x3f8>
   1fd58:	ea1a 0f01 	tst.w	sl, r1
   1fd5c:	f040 80f8 	bne.w	1ff50 <_malloc_r+0x3f8>
   1fd60:	f8d7 a008 	ldr.w	sl, [r7, #8]
   1fd64:	44c8      	add	r8, r9
   1fd66:	f048 0201 	orr.w	r2, r8, #1
   1fd6a:	f8ca 2004 	str.w	r2, [sl, #4]
   1fd6e:	4b40      	ldr	r3, [pc, #256]	@ (1fe70 <_malloc_r+0x318>)
   1fd70:	6819      	ldr	r1, [r3, #0]
   1fd72:	4281      	cmp	r1, r0
   1fd74:	bf38      	it	cc
   1fd76:	6018      	strcc	r0, [r3, #0]
   1fd78:	4b3e      	ldr	r3, [pc, #248]	@ (1fe74 <_malloc_r+0x31c>)
   1fd7a:	6819      	ldr	r1, [r3, #0]
   1fd7c:	4281      	cmp	r1, r0
   1fd7e:	bf38      	it	cc
   1fd80:	6018      	strcc	r0, [r3, #0]
   1fd82:	4654      	mov	r4, sl
   1fd84:	f022 0803 	bic.w	r8, r2, #3
   1fd88:	45a8      	cmp	r8, r5
   1fd8a:	eba8 0305 	sub.w	r3, r8, r5
   1fd8e:	d301      	bcc.n	1fd94 <_malloc_r+0x23c>
   1fd90:	2b0f      	cmp	r3, #15
   1fd92:	dc06      	bgt.n	1fda2 <_malloc_r+0x24a>
   1fd94:	4630      	mov	r0, r6
   1fd96:	f000 f9b5 	bl	20104 <__malloc_unlock>
   1fd9a:	e79b      	b.n	1fcd4 <_malloc_r+0x17c>
   1fd9c:	f8d7 e004 	ldr.w	lr, [r7, #4]
   1fda0:	e766      	b.n	1fc70 <_malloc_r+0x118>
   1fda2:	1962      	adds	r2, r4, r5
   1fda4:	f043 0301 	orr.w	r3, r3, #1
   1fda8:	f045 0501 	orr.w	r5, r5, #1
   1fdac:	6065      	str	r5, [r4, #4]
   1fdae:	4630      	mov	r0, r6
   1fdb0:	60ba      	str	r2, [r7, #8]
   1fdb2:	6053      	str	r3, [r2, #4]
   1fdb4:	f000 f9a6 	bl	20104 <__malloc_unlock>
   1fdb8:	3408      	adds	r4, #8
   1fdba:	4620      	mov	r0, r4
   1fdbc:	b005      	add	sp, #20
   1fdbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fdc2:	68a2      	ldr	r2, [r4, #8]
   1fdc4:	4423      	add	r3, r4
   1fdc6:	60d1      	str	r1, [r2, #12]
   1fdc8:	4630      	mov	r0, r6
   1fdca:	608a      	str	r2, [r1, #8]
   1fdcc:	e6e6      	b.n	1fb9c <_malloc_r+0x44>
   1fdce:	68dc      	ldr	r4, [r3, #12]
   1fdd0:	42a3      	cmp	r3, r4
   1fdd2:	f47f aeda 	bne.w	1fb8a <_malloc_r+0x32>
   1fdd6:	f10c 0c02 	add.w	ip, ip, #2
   1fdda:	e71a      	b.n	1fc12 <_malloc_r+0xba>
   1fddc:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
   1fde0:	ea4f 2259 	mov.w	r2, r9, lsr #9
   1fde4:	d37e      	bcc.n	1fee4 <_malloc_r+0x38c>
   1fde6:	2a14      	cmp	r2, #20
   1fde8:	f200 8115 	bhi.w	20016 <_malloc_r+0x4be>
   1fdec:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
   1fdf0:	00db      	lsls	r3, r3, #3
   1fdf2:	325b      	adds	r2, #91	@ 0x5b
   1fdf4:	18f9      	adds	r1, r7, r3
   1fdf6:	58fb      	ldr	r3, [r7, r3]
   1fdf8:	3908      	subs	r1, #8
   1fdfa:	4299      	cmp	r1, r3
   1fdfc:	d103      	bne.n	1fe06 <_malloc_r+0x2ae>
   1fdfe:	e0f0      	b.n	1ffe2 <_malloc_r+0x48a>
   1fe00:	689b      	ldr	r3, [r3, #8]
   1fe02:	4299      	cmp	r1, r3
   1fe04:	d004      	beq.n	1fe10 <_malloc_r+0x2b8>
   1fe06:	685a      	ldr	r2, [r3, #4]
   1fe08:	f022 0203 	bic.w	r2, r2, #3
   1fe0c:	454a      	cmp	r2, r9
   1fe0e:	d8f7      	bhi.n	1fe00 <_malloc_r+0x2a8>
   1fe10:	68d9      	ldr	r1, [r3, #12]
   1fe12:	e9c4 3102 	strd	r3, r1, [r4, #8]
   1fe16:	608c      	str	r4, [r1, #8]
   1fe18:	60dc      	str	r4, [r3, #12]
   1fe1a:	e729      	b.n	1fc70 <_malloc_r+0x118>
   1fe1c:	2b14      	cmp	r3, #20
   1fe1e:	d96d      	bls.n	1fefc <_malloc_r+0x3a4>
   1fe20:	2b54      	cmp	r3, #84	@ 0x54
   1fe22:	f200 8101 	bhi.w	20028 <_malloc_r+0x4d0>
   1fe26:	0b2b      	lsrs	r3, r5, #12
   1fe28:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
   1fe2c:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
   1fe30:	ea4f 03cc 	mov.w	r3, ip, lsl #3
   1fe34:	e6d7      	b.n	1fbe6 <_malloc_r+0x8e>
   1fe36:	4630      	mov	r0, r6
   1fe38:	68a6      	ldr	r6, [r4, #8]
   1fe3a:	1962      	adds	r2, r4, r5
   1fe3c:	f045 0501 	orr.w	r5, r5, #1
   1fe40:	6065      	str	r5, [r4, #4]
   1fe42:	60f1      	str	r1, [r6, #12]
   1fe44:	608e      	str	r6, [r1, #8]
   1fe46:	f04e 0101 	orr.w	r1, lr, #1
   1fe4a:	e9c7 2204 	strd	r2, r2, [r7, #16]
   1fe4e:	f8c2 8008 	str.w	r8, [r2, #8]
   1fe52:	f8c2 800c 	str.w	r8, [r2, #12]
   1fe56:	6051      	str	r1, [r2, #4]
   1fe58:	f844 e003 	str.w	lr, [r4, r3]
   1fe5c:	f000 f952 	bl	20104 <__malloc_unlock>
   1fe60:	3408      	adds	r4, #8
   1fe62:	e6a2      	b.n	1fbaa <_malloc_r+0x52>
   1fe64:	10001390 	.word	0x10001390
   1fe68:	10030270 	.word	0x10030270
   1fe6c:	10030240 	.word	0x10030240
   1fe70:	1003026c 	.word	0x1003026c
   1fe74:	10030268 	.word	0x10030268
   1fe78:	10001398 	.word	0x10001398
   1fe7c:	10001388 	.word	0x10001388
   1fe80:	4423      	add	r3, r4
   1fe82:	4630      	mov	r0, r6
   1fe84:	685a      	ldr	r2, [r3, #4]
   1fe86:	f042 0201 	orr.w	r2, r2, #1
   1fe8a:	605a      	str	r2, [r3, #4]
   1fe8c:	f854 3f08 	ldr.w	r3, [r4, #8]!
   1fe90:	60d9      	str	r1, [r3, #12]
   1fe92:	608b      	str	r3, [r1, #8]
   1fe94:	f000 f936 	bl	20104 <__malloc_unlock>
   1fe98:	e687      	b.n	1fbaa <_malloc_r+0x52>
   1fe9a:	44a1      	add	r9, r4
   1fe9c:	4630      	mov	r0, r6
   1fe9e:	f8d9 3004 	ldr.w	r3, [r9, #4]
   1fea2:	f043 0301 	orr.w	r3, r3, #1
   1fea6:	f8c9 3004 	str.w	r3, [r9, #4]
   1feaa:	3408      	adds	r4, #8
   1feac:	f000 f92a 	bl	20104 <__malloc_unlock>
   1feb0:	e67b      	b.n	1fbaa <_malloc_r+0x52>
   1feb2:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   1feb6:	f105 0308 	add.w	r3, r5, #8
   1feba:	e65e      	b.n	1fb7a <_malloc_r+0x22>
   1febc:	1962      	adds	r2, r4, r5
   1febe:	f043 0101 	orr.w	r1, r3, #1
   1fec2:	f045 0501 	orr.w	r5, r5, #1
   1fec6:	6065      	str	r5, [r4, #4]
   1fec8:	4630      	mov	r0, r6
   1feca:	e9c7 2204 	strd	r2, r2, [r7, #16]
   1fece:	f8c2 8008 	str.w	r8, [r2, #8]
   1fed2:	f8c2 800c 	str.w	r8, [r2, #12]
   1fed6:	6051      	str	r1, [r2, #4]
   1fed8:	f844 3009 	str.w	r3, [r4, r9]
   1fedc:	f000 f912 	bl	20104 <__malloc_unlock>
   1fee0:	3408      	adds	r4, #8
   1fee2:	e662      	b.n	1fbaa <_malloc_r+0x52>
   1fee4:	ea4f 1299 	mov.w	r2, r9, lsr #6
   1fee8:	f102 0339 	add.w	r3, r2, #57	@ 0x39
   1feec:	00db      	lsls	r3, r3, #3
   1feee:	3238      	adds	r2, #56	@ 0x38
   1fef0:	e780      	b.n	1fdf4 <_malloc_r+0x29c>
   1fef2:	42bc      	cmp	r4, r7
   1fef4:	d024      	beq.n	1ff40 <_malloc_r+0x3e8>
   1fef6:	68bc      	ldr	r4, [r7, #8]
   1fef8:	6862      	ldr	r2, [r4, #4]
   1fefa:	e743      	b.n	1fd84 <_malloc_r+0x22c>
   1fefc:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
   1ff00:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
   1ff04:	ea4f 03cc 	mov.w	r3, ip, lsl #3
   1ff08:	e66d      	b.n	1fbe6 <_malloc_r+0x8e>
   1ff0a:	f85a 3908 	ldr.w	r3, [sl], #-8
   1ff0e:	4553      	cmp	r3, sl
   1ff10:	f040 80d8 	bne.w	200c4 <_malloc_r+0x56c>
   1ff14:	f01c 0f03 	tst.w	ip, #3
   1ff18:	f10c 3cff 	add.w	ip, ip, #4294967295
   1ff1c:	d1f5      	bne.n	1ff0a <_malloc_r+0x3b2>
   1ff1e:	687b      	ldr	r3, [r7, #4]
   1ff20:	ea23 0300 	bic.w	r3, r3, r0
   1ff24:	607b      	str	r3, [r7, #4]
   1ff26:	0040      	lsls	r0, r0, #1
   1ff28:	4298      	cmp	r0, r3
   1ff2a:	f63f aedc 	bhi.w	1fce6 <_malloc_r+0x18e>
   1ff2e:	b918      	cbnz	r0, 1ff38 <_malloc_r+0x3e0>
   1ff30:	e6d9      	b.n	1fce6 <_malloc_r+0x18e>
   1ff32:	0040      	lsls	r0, r0, #1
   1ff34:	f109 0904 	add.w	r9, r9, #4
   1ff38:	4218      	tst	r0, r3
   1ff3a:	d0fa      	beq.n	1ff32 <_malloc_r+0x3da>
   1ff3c:	46cc      	mov	ip, r9
   1ff3e:	e6a8      	b.n	1fc92 <_malloc_r+0x13a>
   1ff40:	4b61      	ldr	r3, [pc, #388]	@ (200c8 <_malloc_r+0x570>)
   1ff42:	9901      	ldr	r1, [sp, #4]
   1ff44:	6818      	ldr	r0, [r3, #0]
   1ff46:	eb08 0c00 	add.w	ip, r8, r0
   1ff4a:	3901      	subs	r1, #1
   1ff4c:	f8c3 c000 	str.w	ip, [r3]
   1ff50:	f8db 0000 	ldr.w	r0, [fp]
   1ff54:	3001      	adds	r0, #1
   1ff56:	bf1b      	ittet	ne
   1ff58:	ebaa 0202 	subne.w	r2, sl, r2
   1ff5c:	4462      	addne	r2, ip
   1ff5e:	f8cb a000 	streq.w	sl, [fp]
   1ff62:	601a      	strne	r2, [r3, #0]
   1ff64:	f01a 0207 	ands.w	r2, sl, #7
   1ff68:	e9cd 2302 	strd	r2, r3, [sp, #8]
   1ff6c:	d042      	beq.n	1fff4 <_malloc_r+0x49c>
   1ff6e:	f1c2 0208 	rsb	r2, r2, #8
   1ff72:	9b01      	ldr	r3, [sp, #4]
   1ff74:	4492      	add	sl, r2
   1ff76:	44d0      	add	r8, sl
   1ff78:	4413      	add	r3, r2
   1ff7a:	ea08 0001 	and.w	r0, r8, r1
   1ff7e:	1a1a      	subs	r2, r3, r0
   1ff80:	ea02 0b01 	and.w	fp, r2, r1
   1ff84:	4659      	mov	r1, fp
   1ff86:	4630      	mov	r0, r6
   1ff88:	f000 fee8 	bl	20d5c <_sbrk_r>
   1ff8c:	1c42      	adds	r2, r0, #1
   1ff8e:	9b03      	ldr	r3, [sp, #12]
   1ff90:	d07a      	beq.n	20088 <_malloc_r+0x530>
   1ff92:	eba0 000a 	sub.w	r0, r0, sl
   1ff96:	eb00 080b 	add.w	r8, r0, fp
   1ff9a:	6818      	ldr	r0, [r3, #0]
   1ff9c:	f8c7 a008 	str.w	sl, [r7, #8]
   1ffa0:	f048 0201 	orr.w	r2, r8, #1
   1ffa4:	4458      	add	r0, fp
   1ffa6:	42bc      	cmp	r4, r7
   1ffa8:	f8ca 2004 	str.w	r2, [sl, #4]
   1ffac:	6018      	str	r0, [r3, #0]
   1ffae:	f43f aede 	beq.w	1fd6e <_malloc_r+0x216>
   1ffb2:	f1b9 0f0f 	cmp.w	r9, #15
   1ffb6:	d942      	bls.n	2003e <_malloc_r+0x4e6>
   1ffb8:	6861      	ldr	r1, [r4, #4]
   1ffba:	f1a9 020c 	sub.w	r2, r9, #12
   1ffbe:	f022 0207 	bic.w	r2, r2, #7
   1ffc2:	f001 0101 	and.w	r1, r1, #1
   1ffc6:	4311      	orrs	r1, r2
   1ffc8:	6061      	str	r1, [r4, #4]
   1ffca:	18a1      	adds	r1, r4, r2
   1ffcc:	f04f 0c05 	mov.w	ip, #5
   1ffd0:	2a0f      	cmp	r2, #15
   1ffd2:	f8c1 c004 	str.w	ip, [r1, #4]
   1ffd6:	f8c1 c008 	str.w	ip, [r1, #8]
   1ffda:	d84a      	bhi.n	20072 <_malloc_r+0x51a>
   1ffdc:	f8da 2004 	ldr.w	r2, [sl, #4]
   1ffe0:	e6c5      	b.n	1fd6e <_malloc_r+0x216>
   1ffe2:	1092      	asrs	r2, r2, #2
   1ffe4:	2001      	movs	r0, #1
   1ffe6:	fa00 f202 	lsl.w	r2, r0, r2
   1ffea:	ea4e 0e02 	orr.w	lr, lr, r2
   1ffee:	f8c7 e004 	str.w	lr, [r7, #4]
   1fff2:	e70e      	b.n	1fe12 <_malloc_r+0x2ba>
   1fff4:	9b01      	ldr	r3, [sp, #4]
   1fff6:	eb0a 0208 	add.w	r2, sl, r8
   1fffa:	400a      	ands	r2, r1
   1fffc:	1a9a      	subs	r2, r3, r2
   1fffe:	ea02 0b01 	and.w	fp, r2, r1
   20002:	4659      	mov	r1, fp
   20004:	4630      	mov	r0, r6
   20006:	f000 fea9 	bl	20d5c <_sbrk_r>
   2000a:	1c43      	adds	r3, r0, #1
   2000c:	9b03      	ldr	r3, [sp, #12]
   2000e:	d1c0      	bne.n	1ff92 <_malloc_r+0x43a>
   20010:	f8dd b008 	ldr.w	fp, [sp, #8]
   20014:	e7c1      	b.n	1ff9a <_malloc_r+0x442>
   20016:	2a54      	cmp	r2, #84	@ 0x54
   20018:	d815      	bhi.n	20046 <_malloc_r+0x4ee>
   2001a:	ea4f 3219 	mov.w	r2, r9, lsr #12
   2001e:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
   20022:	00db      	lsls	r3, r3, #3
   20024:	326e      	adds	r2, #110	@ 0x6e
   20026:	e6e5      	b.n	1fdf4 <_malloc_r+0x29c>
   20028:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
   2002c:	d815      	bhi.n	2005a <_malloc_r+0x502>
   2002e:	0beb      	lsrs	r3, r5, #15
   20030:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
   20034:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
   20038:	ea4f 03cc 	mov.w	r3, ip, lsl #3
   2003c:	e5d3      	b.n	1fbe6 <_malloc_r+0x8e>
   2003e:	2301      	movs	r3, #1
   20040:	f8ca 3004 	str.w	r3, [sl, #4]
   20044:	e6a6      	b.n	1fd94 <_malloc_r+0x23c>
   20046:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
   2004a:	d825      	bhi.n	20098 <_malloc_r+0x540>
   2004c:	ea4f 32d9 	mov.w	r2, r9, lsr #15
   20050:	f102 0378 	add.w	r3, r2, #120	@ 0x78
   20054:	00db      	lsls	r3, r3, #3
   20056:	3277      	adds	r2, #119	@ 0x77
   20058:	e6cc      	b.n	1fdf4 <_malloc_r+0x29c>
   2005a:	f240 5254 	movw	r2, #1364	@ 0x554
   2005e:	4293      	cmp	r3, r2
   20060:	d825      	bhi.n	200ae <_malloc_r+0x556>
   20062:	0cab      	lsrs	r3, r5, #18
   20064:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
   20068:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
   2006c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
   20070:	e5b9      	b.n	1fbe6 <_malloc_r+0x8e>
   20072:	4630      	mov	r0, r6
   20074:	f104 0108 	add.w	r1, r4, #8
   20078:	9301      	str	r3, [sp, #4]
   2007a:	f7ff fc6f 	bl	1f95c <_free_r>
   2007e:	9b01      	ldr	r3, [sp, #4]
   20080:	f8d7 a008 	ldr.w	sl, [r7, #8]
   20084:	6818      	ldr	r0, [r3, #0]
   20086:	e7a9      	b.n	1ffdc <_malloc_r+0x484>
   20088:	9a02      	ldr	r2, [sp, #8]
   2008a:	3a08      	subs	r2, #8
   2008c:	4490      	add	r8, r2
   2008e:	eba8 080a 	sub.w	r8, r8, sl
   20092:	f04f 0b00 	mov.w	fp, #0
   20096:	e780      	b.n	1ff9a <_malloc_r+0x442>
   20098:	f240 5354 	movw	r3, #1364	@ 0x554
   2009c:	429a      	cmp	r2, r3
   2009e:	d80d      	bhi.n	200bc <_malloc_r+0x564>
   200a0:	ea4f 4299 	mov.w	r2, r9, lsr #18
   200a4:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
   200a8:	00db      	lsls	r3, r3, #3
   200aa:	327c      	adds	r2, #124	@ 0x7c
   200ac:	e6a2      	b.n	1fdf4 <_malloc_r+0x29c>
   200ae:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
   200b2:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
   200b6:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
   200ba:	e594      	b.n	1fbe6 <_malloc_r+0x8e>
   200bc:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
   200c0:	227e      	movs	r2, #126	@ 0x7e
   200c2:	e697      	b.n	1fdf4 <_malloc_r+0x29c>
   200c4:	687b      	ldr	r3, [r7, #4]
   200c6:	e72e      	b.n	1ff26 <_malloc_r+0x3ce>
   200c8:	10030240 	.word	0x10030240

000200cc <__ascii_mbtowc>:
   200cc:	b082      	sub	sp, #8
   200ce:	b149      	cbz	r1, 200e4 <__ascii_mbtowc+0x18>
   200d0:	b15a      	cbz	r2, 200ea <__ascii_mbtowc+0x1e>
   200d2:	b16b      	cbz	r3, 200f0 <__ascii_mbtowc+0x24>
   200d4:	7813      	ldrb	r3, [r2, #0]
   200d6:	600b      	str	r3, [r1, #0]
   200d8:	7812      	ldrb	r2, [r2, #0]
   200da:	1e10      	subs	r0, r2, #0
   200dc:	bf18      	it	ne
   200de:	2001      	movne	r0, #1
   200e0:	b002      	add	sp, #8
   200e2:	4770      	bx	lr
   200e4:	a901      	add	r1, sp, #4
   200e6:	2a00      	cmp	r2, #0
   200e8:	d1f3      	bne.n	200d2 <__ascii_mbtowc+0x6>
   200ea:	4610      	mov	r0, r2
   200ec:	b002      	add	sp, #8
   200ee:	4770      	bx	lr
   200f0:	f06f 0001 	mvn.w	r0, #1
   200f4:	e7f4      	b.n	200e0 <__ascii_mbtowc+0x14>
   200f6:	bf00      	nop

000200f8 <__malloc_lock>:
   200f8:	4801      	ldr	r0, [pc, #4]	@ (20100 <__malloc_lock+0x8>)
   200fa:	f7fe bbdf 	b.w	1e8bc <__retarget_lock_acquire_recursive>
   200fe:	bf00      	nop
   20100:	10030238 	.word	0x10030238

00020104 <__malloc_unlock>:
   20104:	4801      	ldr	r0, [pc, #4]	@ (2010c <__malloc_unlock+0x8>)
   20106:	f7fe bbdb 	b.w	1e8c0 <__retarget_lock_release_recursive>
   2010a:	bf00      	nop
   2010c:	10030238 	.word	0x10030238

00020110 <_Balloc>:
   20110:	6c43      	ldr	r3, [r0, #68]	@ 0x44
   20112:	b570      	push	{r4, r5, r6, lr}
   20114:	4605      	mov	r5, r0
   20116:	460c      	mov	r4, r1
   20118:	b14b      	cbz	r3, 2012e <_Balloc+0x1e>
   2011a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   2011e:	b180      	cbz	r0, 20142 <_Balloc+0x32>
   20120:	6802      	ldr	r2, [r0, #0]
   20122:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   20126:	2300      	movs	r3, #0
   20128:	60c3      	str	r3, [r0, #12]
   2012a:	6103      	str	r3, [r0, #16]
   2012c:	bd70      	pop	{r4, r5, r6, pc}
   2012e:	2221      	movs	r2, #33	@ 0x21
   20130:	2104      	movs	r1, #4
   20132:	f000 fe59 	bl	20de8 <_calloc_r>
   20136:	4603      	mov	r3, r0
   20138:	6468      	str	r0, [r5, #68]	@ 0x44
   2013a:	2800      	cmp	r0, #0
   2013c:	d1ed      	bne.n	2011a <_Balloc+0xa>
   2013e:	2000      	movs	r0, #0
   20140:	bd70      	pop	{r4, r5, r6, pc}
   20142:	2101      	movs	r1, #1
   20144:	fa01 f604 	lsl.w	r6, r1, r4
   20148:	1d72      	adds	r2, r6, #5
   2014a:	0092      	lsls	r2, r2, #2
   2014c:	4628      	mov	r0, r5
   2014e:	f000 fe4b 	bl	20de8 <_calloc_r>
   20152:	2800      	cmp	r0, #0
   20154:	d0f3      	beq.n	2013e <_Balloc+0x2e>
   20156:	e9c0 4601 	strd	r4, r6, [r0, #4]
   2015a:	e7e4      	b.n	20126 <_Balloc+0x16>

0002015c <_Bfree>:
   2015c:	b131      	cbz	r1, 2016c <_Bfree+0x10>
   2015e:	6c43      	ldr	r3, [r0, #68]	@ 0x44
   20160:	684a      	ldr	r2, [r1, #4]
   20162:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   20166:	6008      	str	r0, [r1, #0]
   20168:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   2016c:	4770      	bx	lr
   2016e:	bf00      	nop

00020170 <__multadd>:
   20170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20174:	690d      	ldr	r5, [r1, #16]
   20176:	4607      	mov	r7, r0
   20178:	460e      	mov	r6, r1
   2017a:	461c      	mov	r4, r3
   2017c:	f101 0e14 	add.w	lr, r1, #20
   20180:	2000      	movs	r0, #0
   20182:	f8de 1000 	ldr.w	r1, [lr]
   20186:	b28b      	uxth	r3, r1
   20188:	fb02 4303 	mla	r3, r2, r3, r4
   2018c:	ea4f 4c13 	mov.w	ip, r3, lsr #16
   20190:	0c09      	lsrs	r1, r1, #16
   20192:	fb02 cc01 	mla	ip, r2, r1, ip
   20196:	3001      	adds	r0, #1
   20198:	b29b      	uxth	r3, r3
   2019a:	eb03 430c 	add.w	r3, r3, ip, lsl #16
   2019e:	4285      	cmp	r5, r0
   201a0:	f84e 3b04 	str.w	r3, [lr], #4
   201a4:	ea4f 441c 	mov.w	r4, ip, lsr #16
   201a8:	dceb      	bgt.n	20182 <__multadd+0x12>
   201aa:	b13c      	cbz	r4, 201bc <__multadd+0x4c>
   201ac:	68b3      	ldr	r3, [r6, #8]
   201ae:	42ab      	cmp	r3, r5
   201b0:	dd07      	ble.n	201c2 <__multadd+0x52>
   201b2:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   201b6:	3501      	adds	r5, #1
   201b8:	615c      	str	r4, [r3, #20]
   201ba:	6135      	str	r5, [r6, #16]
   201bc:	4630      	mov	r0, r6
   201be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   201c2:	6871      	ldr	r1, [r6, #4]
   201c4:	4638      	mov	r0, r7
   201c6:	3101      	adds	r1, #1
   201c8:	f7ff ffa2 	bl	20110 <_Balloc>
   201cc:	4680      	mov	r8, r0
   201ce:	b1a8      	cbz	r0, 201fc <__multadd+0x8c>
   201d0:	6932      	ldr	r2, [r6, #16]
   201d2:	3202      	adds	r2, #2
   201d4:	f106 010c 	add.w	r1, r6, #12
   201d8:	0092      	lsls	r2, r2, #2
   201da:	300c      	adds	r0, #12
   201dc:	f7f8 f8dc 	bl	18398 <memcpy>
   201e0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   201e2:	6872      	ldr	r2, [r6, #4]
   201e4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   201e8:	6031      	str	r1, [r6, #0]
   201ea:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   201ee:	4646      	mov	r6, r8
   201f0:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   201f4:	3501      	adds	r5, #1
   201f6:	615c      	str	r4, [r3, #20]
   201f8:	6135      	str	r5, [r6, #16]
   201fa:	e7df      	b.n	201bc <__multadd+0x4c>
   201fc:	4b02      	ldr	r3, [pc, #8]	@ (20208 <__multadd+0x98>)
   201fe:	4803      	ldr	r0, [pc, #12]	@ (2020c <__multadd+0x9c>)
   20200:	4642      	mov	r2, r8
   20202:	21ba      	movs	r1, #186	@ 0xba
   20204:	f000 fdd0 	bl	20da8 <__assert_func>
   20208:	00028238 	.word	0x00028238
   2020c:	000282a8 	.word	0x000282a8

00020210 <__hi0bits>:
   20210:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
   20214:	4603      	mov	r3, r0
   20216:	bf36      	itet	cc
   20218:	0403      	lslcc	r3, r0, #16
   2021a:	2000      	movcs	r0, #0
   2021c:	2010      	movcc	r0, #16
   2021e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
   20222:	bf3c      	itt	cc
   20224:	021b      	lslcc	r3, r3, #8
   20226:	3008      	addcc	r0, #8
   20228:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
   2022c:	bf3c      	itt	cc
   2022e:	011b      	lslcc	r3, r3, #4
   20230:	3004      	addcc	r0, #4
   20232:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
   20236:	d303      	bcc.n	20240 <__hi0bits+0x30>
   20238:	2b00      	cmp	r3, #0
   2023a:	db06      	blt.n	2024a <__hi0bits+0x3a>
   2023c:	3001      	adds	r0, #1
   2023e:	4770      	bx	lr
   20240:	009b      	lsls	r3, r3, #2
   20242:	d403      	bmi.n	2024c <__hi0bits+0x3c>
   20244:	005b      	lsls	r3, r3, #1
   20246:	d403      	bmi.n	20250 <__hi0bits+0x40>
   20248:	2020      	movs	r0, #32
   2024a:	4770      	bx	lr
   2024c:	3002      	adds	r0, #2
   2024e:	4770      	bx	lr
   20250:	3003      	adds	r0, #3
   20252:	4770      	bx	lr

00020254 <__lo0bits>:
   20254:	6803      	ldr	r3, [r0, #0]
   20256:	f013 0207 	ands.w	r2, r3, #7
   2025a:	4601      	mov	r1, r0
   2025c:	d007      	beq.n	2026e <__lo0bits+0x1a>
   2025e:	07da      	lsls	r2, r3, #31
   20260:	d41f      	bmi.n	202a2 <__lo0bits+0x4e>
   20262:	0798      	lsls	r0, r3, #30
   20264:	d521      	bpl.n	202aa <__lo0bits+0x56>
   20266:	085b      	lsrs	r3, r3, #1
   20268:	600b      	str	r3, [r1, #0]
   2026a:	2001      	movs	r0, #1
   2026c:	4770      	bx	lr
   2026e:	b298      	uxth	r0, r3
   20270:	b1a0      	cbz	r0, 2029c <__lo0bits+0x48>
   20272:	4610      	mov	r0, r2
   20274:	b2da      	uxtb	r2, r3
   20276:	b90a      	cbnz	r2, 2027c <__lo0bits+0x28>
   20278:	3008      	adds	r0, #8
   2027a:	0a1b      	lsrs	r3, r3, #8
   2027c:	071a      	lsls	r2, r3, #28
   2027e:	bf04      	itt	eq
   20280:	091b      	lsreq	r3, r3, #4
   20282:	3004      	addeq	r0, #4
   20284:	079a      	lsls	r2, r3, #30
   20286:	bf04      	itt	eq
   20288:	089b      	lsreq	r3, r3, #2
   2028a:	3002      	addeq	r0, #2
   2028c:	07da      	lsls	r2, r3, #31
   2028e:	d403      	bmi.n	20298 <__lo0bits+0x44>
   20290:	085b      	lsrs	r3, r3, #1
   20292:	f100 0001 	add.w	r0, r0, #1
   20296:	d006      	beq.n	202a6 <__lo0bits+0x52>
   20298:	600b      	str	r3, [r1, #0]
   2029a:	4770      	bx	lr
   2029c:	0c1b      	lsrs	r3, r3, #16
   2029e:	2010      	movs	r0, #16
   202a0:	e7e8      	b.n	20274 <__lo0bits+0x20>
   202a2:	2000      	movs	r0, #0
   202a4:	4770      	bx	lr
   202a6:	2020      	movs	r0, #32
   202a8:	4770      	bx	lr
   202aa:	089b      	lsrs	r3, r3, #2
   202ac:	600b      	str	r3, [r1, #0]
   202ae:	2002      	movs	r0, #2
   202b0:	4770      	bx	lr
   202b2:	bf00      	nop

000202b4 <__i2b>:
   202b4:	b538      	push	{r3, r4, r5, lr}
   202b6:	6c43      	ldr	r3, [r0, #68]	@ 0x44
   202b8:	4604      	mov	r4, r0
   202ba:	460d      	mov	r5, r1
   202bc:	b14b      	cbz	r3, 202d2 <__i2b+0x1e>
   202be:	6858      	ldr	r0, [r3, #4]
   202c0:	b1b0      	cbz	r0, 202f0 <__i2b+0x3c>
   202c2:	6802      	ldr	r2, [r0, #0]
   202c4:	605a      	str	r2, [r3, #4]
   202c6:	2200      	movs	r2, #0
   202c8:	2301      	movs	r3, #1
   202ca:	6145      	str	r5, [r0, #20]
   202cc:	60c2      	str	r2, [r0, #12]
   202ce:	6103      	str	r3, [r0, #16]
   202d0:	bd38      	pop	{r3, r4, r5, pc}
   202d2:	2221      	movs	r2, #33	@ 0x21
   202d4:	2104      	movs	r1, #4
   202d6:	f000 fd87 	bl	20de8 <_calloc_r>
   202da:	4603      	mov	r3, r0
   202dc:	6460      	str	r0, [r4, #68]	@ 0x44
   202de:	2800      	cmp	r0, #0
   202e0:	d1ed      	bne.n	202be <__i2b+0xa>
   202e2:	4b09      	ldr	r3, [pc, #36]	@ (20308 <__i2b+0x54>)
   202e4:	4809      	ldr	r0, [pc, #36]	@ (2030c <__i2b+0x58>)
   202e6:	2200      	movs	r2, #0
   202e8:	f240 1145 	movw	r1, #325	@ 0x145
   202ec:	f000 fd5c 	bl	20da8 <__assert_func>
   202f0:	221c      	movs	r2, #28
   202f2:	2101      	movs	r1, #1
   202f4:	4620      	mov	r0, r4
   202f6:	f000 fd77 	bl	20de8 <_calloc_r>
   202fa:	2800      	cmp	r0, #0
   202fc:	d0f1      	beq.n	202e2 <__i2b+0x2e>
   202fe:	2201      	movs	r2, #1
   20300:	2302      	movs	r3, #2
   20302:	6042      	str	r2, [r0, #4]
   20304:	6083      	str	r3, [r0, #8]
   20306:	e7de      	b.n	202c6 <__i2b+0x12>
   20308:	00028238 	.word	0x00028238
   2030c:	000282a8 	.word	0x000282a8

00020310 <__multiply>:
   20310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20314:	f8d1 8010 	ldr.w	r8, [r1, #16]
   20318:	6915      	ldr	r5, [r2, #16]
   2031a:	45a8      	cmp	r8, r5
   2031c:	b085      	sub	sp, #20
   2031e:	460e      	mov	r6, r1
   20320:	4692      	mov	sl, r2
   20322:	db05      	blt.n	20330 <__multiply+0x20>
   20324:	462a      	mov	r2, r5
   20326:	4653      	mov	r3, sl
   20328:	4645      	mov	r5, r8
   2032a:	468a      	mov	sl, r1
   2032c:	4690      	mov	r8, r2
   2032e:	461e      	mov	r6, r3
   20330:	f8da 3008 	ldr.w	r3, [sl, #8]
   20334:	f8da 1004 	ldr.w	r1, [sl, #4]
   20338:	eb05 0408 	add.w	r4, r5, r8
   2033c:	42a3      	cmp	r3, r4
   2033e:	bfb8      	it	lt
   20340:	3101      	addlt	r1, #1
   20342:	f7ff fee5 	bl	20110 <_Balloc>
   20346:	4684      	mov	ip, r0
   20348:	2800      	cmp	r0, #0
   2034a:	f000 808b 	beq.w	20464 <__multiply+0x154>
   2034e:	f100 0714 	add.w	r7, r0, #20
   20352:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
   20356:	4577      	cmp	r7, lr
   20358:	d205      	bcs.n	20366 <__multiply+0x56>
   2035a:	463b      	mov	r3, r7
   2035c:	2200      	movs	r2, #0
   2035e:	f843 2b04 	str.w	r2, [r3], #4
   20362:	459e      	cmp	lr, r3
   20364:	d8fb      	bhi.n	2035e <__multiply+0x4e>
   20366:	3614      	adds	r6, #20
   20368:	eb06 0888 	add.w	r8, r6, r8, lsl #2
   2036c:	f10a 0914 	add.w	r9, sl, #20
   20370:	4546      	cmp	r6, r8
   20372:	eb09 0585 	add.w	r5, r9, r5, lsl #2
   20376:	d266      	bcs.n	20446 <__multiply+0x136>
   20378:	eba5 030a 	sub.w	r3, r5, sl
   2037c:	3b15      	subs	r3, #21
   2037e:	f023 0303 	bic.w	r3, r3, #3
   20382:	f10a 0a15 	add.w	sl, sl, #21
   20386:	3304      	adds	r3, #4
   20388:	4555      	cmp	r5, sl
   2038a:	bf2c      	ite	cs
   2038c:	469b      	movcs	fp, r3
   2038e:	f04f 0b04 	movcc.w	fp, #4
   20392:	f8cd e008 	str.w	lr, [sp, #8]
   20396:	9403      	str	r4, [sp, #12]
   20398:	46ae      	mov	lr, r5
   2039a:	46e2      	mov	sl, ip
   2039c:	e005      	b.n	203aa <__multiply+0x9a>
   2039e:	0c09      	lsrs	r1, r1, #16
   203a0:	d12a      	bne.n	203f8 <__multiply+0xe8>
   203a2:	45b0      	cmp	r8, r6
   203a4:	f107 0704 	add.w	r7, r7, #4
   203a8:	d94a      	bls.n	20440 <__multiply+0x130>
   203aa:	f856 1b04 	ldr.w	r1, [r6], #4
   203ae:	b28d      	uxth	r5, r1
   203b0:	2d00      	cmp	r5, #0
   203b2:	d0f4      	beq.n	2039e <__multiply+0x8e>
   203b4:	46cc      	mov	ip, r9
   203b6:	463c      	mov	r4, r7
   203b8:	2300      	movs	r3, #0
   203ba:	9601      	str	r6, [sp, #4]
   203bc:	f85c 0b04 	ldr.w	r0, [ip], #4
   203c0:	6821      	ldr	r1, [r4, #0]
   203c2:	b286      	uxth	r6, r0
   203c4:	b28a      	uxth	r2, r1
   203c6:	0c00      	lsrs	r0, r0, #16
   203c8:	fb05 2206 	mla	r2, r5, r6, r2
   203cc:	0c09      	lsrs	r1, r1, #16
   203ce:	441a      	add	r2, r3
   203d0:	fb05 1100 	mla	r1, r5, r0, r1
   203d4:	eb01 4112 	add.w	r1, r1, r2, lsr #16
   203d8:	b292      	uxth	r2, r2
   203da:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   203de:	45e6      	cmp	lr, ip
   203e0:	f844 2b04 	str.w	r2, [r4], #4
   203e4:	ea4f 4311 	mov.w	r3, r1, lsr #16
   203e8:	d8e8      	bhi.n	203bc <__multiply+0xac>
   203ea:	9e01      	ldr	r6, [sp, #4]
   203ec:	f847 300b 	str.w	r3, [r7, fp]
   203f0:	f856 1c04 	ldr.w	r1, [r6, #-4]
   203f4:	0c09      	lsrs	r1, r1, #16
   203f6:	d0d4      	beq.n	203a2 <__multiply+0x92>
   203f8:	683b      	ldr	r3, [r7, #0]
   203fa:	2200      	movs	r2, #0
   203fc:	4648      	mov	r0, r9
   203fe:	461d      	mov	r5, r3
   20400:	463c      	mov	r4, r7
   20402:	4694      	mov	ip, r2
   20404:	8802      	ldrh	r2, [r0, #0]
   20406:	fb01 c202 	mla	r2, r1, r2, ip
   2040a:	eb02 4215 	add.w	r2, r2, r5, lsr #16
   2040e:	b29b      	uxth	r3, r3
   20410:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   20414:	f844 3b04 	str.w	r3, [r4], #4
   20418:	f850 3b04 	ldr.w	r3, [r0], #4
   2041c:	6825      	ldr	r5, [r4, #0]
   2041e:	ea4f 4c13 	mov.w	ip, r3, lsr #16
   20422:	b2ab      	uxth	r3, r5
   20424:	fb01 330c 	mla	r3, r1, ip, r3
   20428:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   2042c:	4586      	cmp	lr, r0
   2042e:	ea4f 4c13 	mov.w	ip, r3, lsr #16
   20432:	d8e7      	bhi.n	20404 <__multiply+0xf4>
   20434:	45b0      	cmp	r8, r6
   20436:	f847 300b 	str.w	r3, [r7, fp]
   2043a:	f107 0704 	add.w	r7, r7, #4
   2043e:	d8b4      	bhi.n	203aa <__multiply+0x9a>
   20440:	e9dd e402 	ldrd	lr, r4, [sp, #8]
   20444:	46d4      	mov	ip, sl
   20446:	2c00      	cmp	r4, #0
   20448:	dc02      	bgt.n	20450 <__multiply+0x140>
   2044a:	e005      	b.n	20458 <__multiply+0x148>
   2044c:	3c01      	subs	r4, #1
   2044e:	d003      	beq.n	20458 <__multiply+0x148>
   20450:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
   20454:	2b00      	cmp	r3, #0
   20456:	d0f9      	beq.n	2044c <__multiply+0x13c>
   20458:	4660      	mov	r0, ip
   2045a:	f8cc 4010 	str.w	r4, [ip, #16]
   2045e:	b005      	add	sp, #20
   20460:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20464:	4b03      	ldr	r3, [pc, #12]	@ (20474 <__multiply+0x164>)
   20466:	4804      	ldr	r0, [pc, #16]	@ (20478 <__multiply+0x168>)
   20468:	4662      	mov	r2, ip
   2046a:	f44f 71b1 	mov.w	r1, #354	@ 0x162
   2046e:	f000 fc9b 	bl	20da8 <__assert_func>
   20472:	bf00      	nop
   20474:	00028238 	.word	0x00028238
   20478:	000282a8 	.word	0x000282a8

0002047c <__pow5mult>:
   2047c:	f012 0303 	ands.w	r3, r2, #3
   20480:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20484:	4614      	mov	r4, r2
   20486:	4607      	mov	r7, r0
   20488:	d12c      	bne.n	204e4 <__pow5mult+0x68>
   2048a:	460d      	mov	r5, r1
   2048c:	10a4      	asrs	r4, r4, #2
   2048e:	d01c      	beq.n	204ca <__pow5mult+0x4e>
   20490:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
   20492:	b386      	cbz	r6, 204f6 <__pow5mult+0x7a>
   20494:	07e3      	lsls	r3, r4, #31
   20496:	f04f 0800 	mov.w	r8, #0
   2049a:	d406      	bmi.n	204aa <__pow5mult+0x2e>
   2049c:	1064      	asrs	r4, r4, #1
   2049e:	d014      	beq.n	204ca <__pow5mult+0x4e>
   204a0:	6830      	ldr	r0, [r6, #0]
   204a2:	b1a8      	cbz	r0, 204d0 <__pow5mult+0x54>
   204a4:	4606      	mov	r6, r0
   204a6:	07e3      	lsls	r3, r4, #31
   204a8:	d5f8      	bpl.n	2049c <__pow5mult+0x20>
   204aa:	4632      	mov	r2, r6
   204ac:	4629      	mov	r1, r5
   204ae:	4638      	mov	r0, r7
   204b0:	f7ff ff2e 	bl	20310 <__multiply>
   204b4:	b135      	cbz	r5, 204c4 <__pow5mult+0x48>
   204b6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   204b8:	6869      	ldr	r1, [r5, #4]
   204ba:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
   204be:	602a      	str	r2, [r5, #0]
   204c0:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
   204c4:	1064      	asrs	r4, r4, #1
   204c6:	4605      	mov	r5, r0
   204c8:	d1ea      	bne.n	204a0 <__pow5mult+0x24>
   204ca:	4628      	mov	r0, r5
   204cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   204d0:	4632      	mov	r2, r6
   204d2:	4631      	mov	r1, r6
   204d4:	4638      	mov	r0, r7
   204d6:	f7ff ff1b 	bl	20310 <__multiply>
   204da:	6030      	str	r0, [r6, #0]
   204dc:	f8c0 8000 	str.w	r8, [r0]
   204e0:	4606      	mov	r6, r0
   204e2:	e7e0      	b.n	204a6 <__pow5mult+0x2a>
   204e4:	3b01      	subs	r3, #1
   204e6:	4a0f      	ldr	r2, [pc, #60]	@ (20524 <__pow5mult+0xa8>)
   204e8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   204ec:	2300      	movs	r3, #0
   204ee:	f7ff fe3f 	bl	20170 <__multadd>
   204f2:	4605      	mov	r5, r0
   204f4:	e7ca      	b.n	2048c <__pow5mult+0x10>
   204f6:	2101      	movs	r1, #1
   204f8:	4638      	mov	r0, r7
   204fa:	f7ff fe09 	bl	20110 <_Balloc>
   204fe:	4606      	mov	r6, r0
   20500:	b140      	cbz	r0, 20514 <__pow5mult+0x98>
   20502:	2301      	movs	r3, #1
   20504:	f240 2271 	movw	r2, #625	@ 0x271
   20508:	e9c0 3204 	strd	r3, r2, [r0, #16]
   2050c:	2300      	movs	r3, #0
   2050e:	6438      	str	r0, [r7, #64]	@ 0x40
   20510:	6003      	str	r3, [r0, #0]
   20512:	e7bf      	b.n	20494 <__pow5mult+0x18>
   20514:	4b04      	ldr	r3, [pc, #16]	@ (20528 <__pow5mult+0xac>)
   20516:	4805      	ldr	r0, [pc, #20]	@ (2052c <__pow5mult+0xb0>)
   20518:	4632      	mov	r2, r6
   2051a:	f240 1145 	movw	r1, #325	@ 0x145
   2051e:	f000 fc43 	bl	20da8 <__assert_func>
   20522:	bf00      	nop
   20524:	00028304 	.word	0x00028304
   20528:	00028238 	.word	0x00028238
   2052c:	000282a8 	.word	0x000282a8

00020530 <__lshift>:
   20530:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   20534:	460c      	mov	r4, r1
   20536:	4690      	mov	r8, r2
   20538:	6927      	ldr	r7, [r4, #16]
   2053a:	68a3      	ldr	r3, [r4, #8]
   2053c:	6849      	ldr	r1, [r1, #4]
   2053e:	eb07 1762 	add.w	r7, r7, r2, asr #5
   20542:	1c7d      	adds	r5, r7, #1
   20544:	429d      	cmp	r5, r3
   20546:	4606      	mov	r6, r0
   20548:	ea4f 1962 	mov.w	r9, r2, asr #5
   2054c:	dd04      	ble.n	20558 <__lshift+0x28>
   2054e:	005b      	lsls	r3, r3, #1
   20550:	429d      	cmp	r5, r3
   20552:	f101 0101 	add.w	r1, r1, #1
   20556:	dcfa      	bgt.n	2054e <__lshift+0x1e>
   20558:	4630      	mov	r0, r6
   2055a:	f7ff fdd9 	bl	20110 <_Balloc>
   2055e:	4684      	mov	ip, r0
   20560:	2800      	cmp	r0, #0
   20562:	d051      	beq.n	20608 <__lshift+0xd8>
   20564:	f1b9 0f00 	cmp.w	r9, #0
   20568:	f100 0014 	add.w	r0, r0, #20
   2056c:	dd0e      	ble.n	2058c <__lshift+0x5c>
   2056e:	f109 0205 	add.w	r2, r9, #5
   20572:	ea4f 0e82 	mov.w	lr, r2, lsl #2
   20576:	4603      	mov	r3, r0
   20578:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
   2057c:	2100      	movs	r1, #0
   2057e:	f843 1b04 	str.w	r1, [r3], #4
   20582:	4293      	cmp	r3, r2
   20584:	d1fb      	bne.n	2057e <__lshift+0x4e>
   20586:	f1ae 0314 	sub.w	r3, lr, #20
   2058a:	4418      	add	r0, r3
   2058c:	6921      	ldr	r1, [r4, #16]
   2058e:	f104 0314 	add.w	r3, r4, #20
   20592:	f018 081f 	ands.w	r8, r8, #31
   20596:	eb03 0181 	add.w	r1, r3, r1, lsl #2
   2059a:	d02d      	beq.n	205f8 <__lshift+0xc8>
   2059c:	f1c8 0920 	rsb	r9, r8, #32
   205a0:	4686      	mov	lr, r0
   205a2:	f04f 0a00 	mov.w	sl, #0
   205a6:	681a      	ldr	r2, [r3, #0]
   205a8:	fa02 f208 	lsl.w	r2, r2, r8
   205ac:	ea42 020a 	orr.w	r2, r2, sl
   205b0:	f84e 2b04 	str.w	r2, [lr], #4
   205b4:	f853 2b04 	ldr.w	r2, [r3], #4
   205b8:	4299      	cmp	r1, r3
   205ba:	fa22 fa09 	lsr.w	sl, r2, r9
   205be:	d8f2      	bhi.n	205a6 <__lshift+0x76>
   205c0:	1b0b      	subs	r3, r1, r4
   205c2:	3b15      	subs	r3, #21
   205c4:	f023 0303 	bic.w	r3, r3, #3
   205c8:	3304      	adds	r3, #4
   205ca:	f104 0215 	add.w	r2, r4, #21
   205ce:	4291      	cmp	r1, r2
   205d0:	bf38      	it	cc
   205d2:	2304      	movcc	r3, #4
   205d4:	f840 a003 	str.w	sl, [r0, r3]
   205d8:	f1ba 0f00 	cmp.w	sl, #0
   205dc:	d100      	bne.n	205e0 <__lshift+0xb0>
   205de:	463d      	mov	r5, r7
   205e0:	6c73      	ldr	r3, [r6, #68]	@ 0x44
   205e2:	6862      	ldr	r2, [r4, #4]
   205e4:	f8cc 5010 	str.w	r5, [ip, #16]
   205e8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   205ec:	6021      	str	r1, [r4, #0]
   205ee:	4660      	mov	r0, ip
   205f0:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
   205f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   205f8:	3804      	subs	r0, #4
   205fa:	f853 2b04 	ldr.w	r2, [r3], #4
   205fe:	f840 2f04 	str.w	r2, [r0, #4]!
   20602:	4299      	cmp	r1, r3
   20604:	d8f9      	bhi.n	205fa <__lshift+0xca>
   20606:	e7ea      	b.n	205de <__lshift+0xae>
   20608:	4b03      	ldr	r3, [pc, #12]	@ (20618 <__lshift+0xe8>)
   2060a:	4804      	ldr	r0, [pc, #16]	@ (2061c <__lshift+0xec>)
   2060c:	4662      	mov	r2, ip
   2060e:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
   20612:	f000 fbc9 	bl	20da8 <__assert_func>
   20616:	bf00      	nop
   20618:	00028238 	.word	0x00028238
   2061c:	000282a8 	.word	0x000282a8

00020620 <__mcmp>:
   20620:	690b      	ldr	r3, [r1, #16]
   20622:	4684      	mov	ip, r0
   20624:	6900      	ldr	r0, [r0, #16]
   20626:	1ac0      	subs	r0, r0, r3
   20628:	d116      	bne.n	20658 <__mcmp+0x38>
   2062a:	f10c 0c14 	add.w	ip, ip, #20
   2062e:	3114      	adds	r1, #20
   20630:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
   20634:	b410      	push	{r4}
   20636:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   2063a:	e001      	b.n	20640 <__mcmp+0x20>
   2063c:	4594      	cmp	ip, r2
   2063e:	d208      	bcs.n	20652 <__mcmp+0x32>
   20640:	f852 4d04 	ldr.w	r4, [r2, #-4]!
   20644:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   20648:	428c      	cmp	r4, r1
   2064a:	d0f7      	beq.n	2063c <__mcmp+0x1c>
   2064c:	d205      	bcs.n	2065a <__mcmp+0x3a>
   2064e:	f04f 30ff 	mov.w	r0, #4294967295
   20652:	f85d 4b04 	ldr.w	r4, [sp], #4
   20656:	4770      	bx	lr
   20658:	4770      	bx	lr
   2065a:	2001      	movs	r0, #1
   2065c:	f85d 4b04 	ldr.w	r4, [sp], #4
   20660:	4770      	bx	lr
   20662:	bf00      	nop

00020664 <__mdiff>:
   20664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20668:	6913      	ldr	r3, [r2, #16]
   2066a:	690f      	ldr	r7, [r1, #16]
   2066c:	1aff      	subs	r7, r7, r3
   2066e:	2f00      	cmp	r7, #0
   20670:	b083      	sub	sp, #12
   20672:	460d      	mov	r5, r1
   20674:	4690      	mov	r8, r2
   20676:	d115      	bne.n	206a4 <__mdiff+0x40>
   20678:	f101 0614 	add.w	r6, r1, #20
   2067c:	3214      	adds	r2, #20
   2067e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
   20682:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   20686:	e001      	b.n	2068c <__mdiff+0x28>
   20688:	429e      	cmp	r6, r3
   2068a:	d276      	bcs.n	2077a <__mdiff+0x116>
   2068c:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   20690:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   20694:	428c      	cmp	r4, r1
   20696:	d0f7      	beq.n	20688 <__mdiff+0x24>
   20698:	d206      	bcs.n	206a8 <__mdiff+0x44>
   2069a:	462b      	mov	r3, r5
   2069c:	2701      	movs	r7, #1
   2069e:	4645      	mov	r5, r8
   206a0:	4698      	mov	r8, r3
   206a2:	e001      	b.n	206a8 <__mdiff+0x44>
   206a4:	dbf9      	blt.n	2069a <__mdiff+0x36>
   206a6:	2700      	movs	r7, #0
   206a8:	6869      	ldr	r1, [r5, #4]
   206aa:	f7ff fd31 	bl	20110 <_Balloc>
   206ae:	4681      	mov	r9, r0
   206b0:	2800      	cmp	r0, #0
   206b2:	d076      	beq.n	207a2 <__mdiff+0x13e>
   206b4:	692e      	ldr	r6, [r5, #16]
   206b6:	60c7      	str	r7, [r0, #12]
   206b8:	f8d8 0010 	ldr.w	r0, [r8, #16]
   206bc:	f105 0b14 	add.w	fp, r5, #20
   206c0:	f108 0e14 	add.w	lr, r8, #20
   206c4:	f109 0a14 	add.w	sl, r9, #20
   206c8:	f105 0110 	add.w	r1, r5, #16
   206cc:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
   206d0:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
   206d4:	4657      	mov	r7, sl
   206d6:	f04f 0c00 	mov.w	ip, #0
   206da:	f8cd b004 	str.w	fp, [sp, #4]
   206de:	f85e 4b04 	ldr.w	r4, [lr], #4
   206e2:	f851 5f04 	ldr.w	r5, [r1, #4]!
   206e6:	fa1f fb84 	uxth.w	fp, r4
   206ea:	b2ab      	uxth	r3, r5
   206ec:	eba3 030b 	sub.w	r3, r3, fp
   206f0:	0c24      	lsrs	r4, r4, #16
   206f2:	4463      	add	r3, ip
   206f4:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   206f8:	eb04 4423 	add.w	r4, r4, r3, asr #16
   206fc:	b29b      	uxth	r3, r3
   206fe:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   20702:	4570      	cmp	r0, lr
   20704:	f847 3b04 	str.w	r3, [r7], #4
   20708:	ea4f 4c24 	mov.w	ip, r4, asr #16
   2070c:	d8e7      	bhi.n	206de <__mdiff+0x7a>
   2070e:	eba0 0108 	sub.w	r1, r0, r8
   20712:	3915      	subs	r1, #21
   20714:	0889      	lsrs	r1, r1, #2
   20716:	1c4c      	adds	r4, r1, #1
   20718:	f8dd b004 	ldr.w	fp, [sp, #4]
   2071c:	f108 0815 	add.w	r8, r8, #21
   20720:	00a4      	lsls	r4, r4, #2
   20722:	4540      	cmp	r0, r8
   20724:	bf38      	it	cc
   20726:	2404      	movcc	r4, #4
   20728:	eb0b 0504 	add.w	r5, fp, r4
   2072c:	42aa      	cmp	r2, r5
   2072e:	4454      	add	r4, sl
   20730:	d930      	bls.n	20794 <__mdiff+0x130>
   20732:	4627      	mov	r7, r4
   20734:	4628      	mov	r0, r5
   20736:	f850 3b04 	ldr.w	r3, [r0], #4
   2073a:	fa1c fe83 	uxtah	lr, ip, r3
   2073e:	0c19      	lsrs	r1, r3, #16
   20740:	4463      	add	r3, ip
   20742:	eb01 412e 	add.w	r1, r1, lr, asr #16
   20746:	b29b      	uxth	r3, r3
   20748:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   2074c:	4282      	cmp	r2, r0
   2074e:	f847 3b04 	str.w	r3, [r7], #4
   20752:	ea4f 4c21 	mov.w	ip, r1, asr #16
   20756:	d8ee      	bhi.n	20736 <__mdiff+0xd2>
   20758:	3a01      	subs	r2, #1
   2075a:	1b52      	subs	r2, r2, r5
   2075c:	f022 0203 	bic.w	r2, r2, #3
   20760:	4414      	add	r4, r2
   20762:	b923      	cbnz	r3, 2076e <__mdiff+0x10a>
   20764:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   20768:	3e01      	subs	r6, #1
   2076a:	2b00      	cmp	r3, #0
   2076c:	d0fa      	beq.n	20764 <__mdiff+0x100>
   2076e:	4648      	mov	r0, r9
   20770:	f8c9 6010 	str.w	r6, [r9, #16]
   20774:	b003      	add	sp, #12
   20776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2077a:	2100      	movs	r1, #0
   2077c:	f7ff fcc8 	bl	20110 <_Balloc>
   20780:	4681      	mov	r9, r0
   20782:	b1a8      	cbz	r0, 207b0 <__mdiff+0x14c>
   20784:	2201      	movs	r2, #1
   20786:	2300      	movs	r3, #0
   20788:	e9c0 2304 	strd	r2, r3, [r0, #16]
   2078c:	4648      	mov	r0, r9
   2078e:	b003      	add	sp, #12
   20790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20794:	0089      	lsls	r1, r1, #2
   20796:	4540      	cmp	r0, r8
   20798:	bf38      	it	cc
   2079a:	2100      	movcc	r1, #0
   2079c:	eb0a 0401 	add.w	r4, sl, r1
   207a0:	e7df      	b.n	20762 <__mdiff+0xfe>
   207a2:	4b07      	ldr	r3, [pc, #28]	@ (207c0 <__mdiff+0x15c>)
   207a4:	4807      	ldr	r0, [pc, #28]	@ (207c4 <__mdiff+0x160>)
   207a6:	464a      	mov	r2, r9
   207a8:	f240 2145 	movw	r1, #581	@ 0x245
   207ac:	f000 fafc 	bl	20da8 <__assert_func>
   207b0:	4b03      	ldr	r3, [pc, #12]	@ (207c0 <__mdiff+0x15c>)
   207b2:	4804      	ldr	r0, [pc, #16]	@ (207c4 <__mdiff+0x160>)
   207b4:	464a      	mov	r2, r9
   207b6:	f240 2137 	movw	r1, #567	@ 0x237
   207ba:	f000 faf5 	bl	20da8 <__assert_func>
   207be:	bf00      	nop
   207c0:	00028238 	.word	0x00028238
   207c4:	000282a8 	.word	0x000282a8

000207c8 <__d2b>:
   207c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   207cc:	460e      	mov	r6, r1
   207ce:	b083      	sub	sp, #12
   207d0:	2101      	movs	r1, #1
   207d2:	ec59 8b10 	vmov	r8, r9, d0
   207d6:	4615      	mov	r5, r2
   207d8:	f7ff fc9a 	bl	20110 <_Balloc>
   207dc:	4604      	mov	r4, r0
   207de:	2800      	cmp	r0, #0
   207e0:	d046      	beq.n	20870 <__d2b+0xa8>
   207e2:	f3c9 570a 	ubfx	r7, r9, #20, #11
   207e6:	f3c9 0313 	ubfx	r3, r9, #0, #20
   207ea:	b10f      	cbz	r7, 207f0 <__d2b+0x28>
   207ec:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
   207f0:	9301      	str	r3, [sp, #4]
   207f2:	f1b8 0300 	subs.w	r3, r8, #0
   207f6:	d113      	bne.n	20820 <__d2b+0x58>
   207f8:	a801      	add	r0, sp, #4
   207fa:	f7ff fd2b 	bl	20254 <__lo0bits>
   207fe:	9b01      	ldr	r3, [sp, #4]
   20800:	6163      	str	r3, [r4, #20]
   20802:	2201      	movs	r2, #1
   20804:	3020      	adds	r0, #32
   20806:	6122      	str	r2, [r4, #16]
   20808:	b30f      	cbz	r7, 2084e <__d2b+0x86>
   2080a:	f2a7 4733 	subw	r7, r7, #1075	@ 0x433
   2080e:	4407      	add	r7, r0
   20810:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
   20814:	6037      	str	r7, [r6, #0]
   20816:	6028      	str	r0, [r5, #0]
   20818:	4620      	mov	r0, r4
   2081a:	b003      	add	sp, #12
   2081c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20820:	4668      	mov	r0, sp
   20822:	9300      	str	r3, [sp, #0]
   20824:	f7ff fd16 	bl	20254 <__lo0bits>
   20828:	9b01      	ldr	r3, [sp, #4]
   2082a:	b1f8      	cbz	r0, 2086c <__d2b+0xa4>
   2082c:	9900      	ldr	r1, [sp, #0]
   2082e:	f1c0 0220 	rsb	r2, r0, #32
   20832:	fa03 f202 	lsl.w	r2, r3, r2
   20836:	40c3      	lsrs	r3, r0
   20838:	430a      	orrs	r2, r1
   2083a:	9301      	str	r3, [sp, #4]
   2083c:	2b00      	cmp	r3, #0
   2083e:	6162      	str	r2, [r4, #20]
   20840:	bf0c      	ite	eq
   20842:	2201      	moveq	r2, #1
   20844:	2202      	movne	r2, #2
   20846:	61a3      	str	r3, [r4, #24]
   20848:	6122      	str	r2, [r4, #16]
   2084a:	2f00      	cmp	r7, #0
   2084c:	d1dd      	bne.n	2080a <__d2b+0x42>
   2084e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
   20852:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
   20856:	6030      	str	r0, [r6, #0]
   20858:	6918      	ldr	r0, [r3, #16]
   2085a:	f7ff fcd9 	bl	20210 <__hi0bits>
   2085e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
   20862:	6028      	str	r0, [r5, #0]
   20864:	4620      	mov	r0, r4
   20866:	b003      	add	sp, #12
   20868:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2086c:	9a00      	ldr	r2, [sp, #0]
   2086e:	e7e5      	b.n	2083c <__d2b+0x74>
   20870:	4b03      	ldr	r3, [pc, #12]	@ (20880 <__d2b+0xb8>)
   20872:	4804      	ldr	r0, [pc, #16]	@ (20884 <__d2b+0xbc>)
   20874:	4622      	mov	r2, r4
   20876:	f240 310f 	movw	r1, #783	@ 0x30f
   2087a:	f000 fa95 	bl	20da8 <__assert_func>
   2087e:	bf00      	nop
   20880:	00028238 	.word	0x00028238
   20884:	000282a8 	.word	0x000282a8

00020888 <__ascii_wctomb>:
   20888:	b149      	cbz	r1, 2089e <__ascii_wctomb+0x16>
   2088a:	2aff      	cmp	r2, #255	@ 0xff
   2088c:	d802      	bhi.n	20894 <__ascii_wctomb+0xc>
   2088e:	700a      	strb	r2, [r1, #0]
   20890:	2001      	movs	r0, #1
   20892:	4770      	bx	lr
   20894:	238a      	movs	r3, #138	@ 0x8a
   20896:	6003      	str	r3, [r0, #0]
   20898:	f04f 30ff 	mov.w	r0, #4294967295
   2089c:	4770      	bx	lr
   2089e:	4608      	mov	r0, r1
   208a0:	4770      	bx	lr
   208a2:	bf00      	nop

000208a4 <_wcrtomb_r>:
   208a4:	b570      	push	{r4, r5, r6, lr}
   208a6:	4605      	mov	r5, r0
   208a8:	b084      	sub	sp, #16
   208aa:	b15b      	cbz	r3, 208c4 <_wcrtomb_r+0x20>
   208ac:	461c      	mov	r4, r3
   208ae:	4b0f      	ldr	r3, [pc, #60]	@ (208ec <_wcrtomb_r+0x48>)
   208b0:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
   208b4:	4623      	mov	r3, r4
   208b6:	b169      	cbz	r1, 208d4 <_wcrtomb_r+0x30>
   208b8:	4628      	mov	r0, r5
   208ba:	47b0      	blx	r6
   208bc:	1c43      	adds	r3, r0, #1
   208be:	d00f      	beq.n	208e0 <_wcrtomb_r+0x3c>
   208c0:	b004      	add	sp, #16
   208c2:	bd70      	pop	{r4, r5, r6, pc}
   208c4:	4b09      	ldr	r3, [pc, #36]	@ (208ec <_wcrtomb_r+0x48>)
   208c6:	f500 7482 	add.w	r4, r0, #260	@ 0x104
   208ca:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
   208ce:	4623      	mov	r3, r4
   208d0:	2900      	cmp	r1, #0
   208d2:	d1f1      	bne.n	208b8 <_wcrtomb_r+0x14>
   208d4:	460a      	mov	r2, r1
   208d6:	4628      	mov	r0, r5
   208d8:	a901      	add	r1, sp, #4
   208da:	47b0      	blx	r6
   208dc:	1c43      	adds	r3, r0, #1
   208de:	d1ef      	bne.n	208c0 <_wcrtomb_r+0x1c>
   208e0:	2200      	movs	r2, #0
   208e2:	238a      	movs	r3, #138	@ 0x8a
   208e4:	6022      	str	r2, [r4, #0]
   208e6:	602b      	str	r3, [r5, #0]
   208e8:	b004      	add	sp, #16
   208ea:	bd70      	pop	{r4, r5, r6, pc}
   208ec:	1000121c 	.word	0x1000121c

000208f0 <_wcsrtombs_r>:
   208f0:	b510      	push	{r4, lr}
   208f2:	b082      	sub	sp, #8
   208f4:	9c04      	ldr	r4, [sp, #16]
   208f6:	e9cd 3400 	strd	r3, r4, [sp]
   208fa:	f04f 33ff 	mov.w	r3, #4294967295
   208fe:	f000 fcc9 	bl	21294 <_wcsnrtombs_r>
   20902:	b002      	add	sp, #8
   20904:	bd10      	pop	{r4, pc}
   20906:	bf00      	nop

00020908 <__ssprint_r>:
   20908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2090c:	6893      	ldr	r3, [r2, #8]
   2090e:	6817      	ldr	r7, [r2, #0]
   20910:	b083      	sub	sp, #12
   20912:	4692      	mov	sl, r2
   20914:	2b00      	cmp	r3, #0
   20916:	d074      	beq.n	20a02 <__ssprint_r+0xfa>
   20918:	f04f 0b00 	mov.w	fp, #0
   2091c:	688b      	ldr	r3, [r1, #8]
   2091e:	680a      	ldr	r2, [r1, #0]
   20920:	4681      	mov	r9, r0
   20922:	460c      	mov	r4, r1
   20924:	465d      	mov	r5, fp
   20926:	e045      	b.n	209b4 <__ssprint_r+0xac>
   20928:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   2092c:	f413 6f90 	tst.w	r3, #1152	@ 0x480
   20930:	d02c      	beq.n	2098c <__ssprint_r+0x84>
   20932:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
   20936:	1a16      	subs	r6, r2, r0
   20938:	eb01 0241 	add.w	r2, r1, r1, lsl #1
   2093c:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
   20940:	1c71      	adds	r1, r6, #1
   20942:	1052      	asrs	r2, r2, #1
   20944:	4429      	add	r1, r5
   20946:	4291      	cmp	r1, r2
   20948:	bf92      	itee	ls
   2094a:	4690      	movls	r8, r2
   2094c:	4688      	movhi	r8, r1
   2094e:	460a      	movhi	r2, r1
   20950:	055b      	lsls	r3, r3, #21
   20952:	d539      	bpl.n	209c8 <__ssprint_r+0xc0>
   20954:	4611      	mov	r1, r2
   20956:	4648      	mov	r0, r9
   20958:	f7ff f8fe 	bl	1fb58 <_malloc_r>
   2095c:	9001      	str	r0, [sp, #4]
   2095e:	2800      	cmp	r0, #0
   20960:	d03d      	beq.n	209de <__ssprint_r+0xd6>
   20962:	4632      	mov	r2, r6
   20964:	6921      	ldr	r1, [r4, #16]
   20966:	f7f7 fd17 	bl	18398 <memcpy>
   2096a:	89a2      	ldrh	r2, [r4, #12]
   2096c:	9b01      	ldr	r3, [sp, #4]
   2096e:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
   20972:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
   20976:	81a2      	strh	r2, [r4, #12]
   20978:	1998      	adds	r0, r3, r6
   2097a:	eba8 0606 	sub.w	r6, r8, r6
   2097e:	60a6      	str	r6, [r4, #8]
   20980:	f8c4 8014 	str.w	r8, [r4, #20]
   20984:	6123      	str	r3, [r4, #16]
   20986:	6020      	str	r0, [r4, #0]
   20988:	46a8      	mov	r8, r5
   2098a:	462e      	mov	r6, r5
   2098c:	4632      	mov	r2, r6
   2098e:	4659      	mov	r1, fp
   20990:	f000 f964 	bl	20c5c <memmove>
   20994:	f8da 1008 	ldr.w	r1, [sl, #8]
   20998:	68a3      	ldr	r3, [r4, #8]
   2099a:	6822      	ldr	r2, [r4, #0]
   2099c:	eba3 0308 	sub.w	r3, r3, r8
   209a0:	4432      	add	r2, r6
   209a2:	1b49      	subs	r1, r1, r5
   209a4:	60a3      	str	r3, [r4, #8]
   209a6:	6022      	str	r2, [r4, #0]
   209a8:	f8ca 1008 	str.w	r1, [sl, #8]
   209ac:	b349      	cbz	r1, 20a02 <__ssprint_r+0xfa>
   209ae:	e9d7 b500 	ldrd	fp, r5, [r7]
   209b2:	3708      	adds	r7, #8
   209b4:	4698      	mov	r8, r3
   209b6:	4610      	mov	r0, r2
   209b8:	2d00      	cmp	r5, #0
   209ba:	d0f8      	beq.n	209ae <__ssprint_r+0xa6>
   209bc:	429d      	cmp	r5, r3
   209be:	461e      	mov	r6, r3
   209c0:	d2b2      	bcs.n	20928 <__ssprint_r+0x20>
   209c2:	46a8      	mov	r8, r5
   209c4:	462e      	mov	r6, r5
   209c6:	e7e1      	b.n	2098c <__ssprint_r+0x84>
   209c8:	4601      	mov	r1, r0
   209ca:	4648      	mov	r0, r9
   209cc:	f000 fa42 	bl	20e54 <_realloc_r>
   209d0:	4603      	mov	r3, r0
   209d2:	2800      	cmp	r0, #0
   209d4:	d1d0      	bne.n	20978 <__ssprint_r+0x70>
   209d6:	6921      	ldr	r1, [r4, #16]
   209d8:	4648      	mov	r0, r9
   209da:	f7fe ffbf 	bl	1f95c <_free_r>
   209de:	89a3      	ldrh	r3, [r4, #12]
   209e0:	220c      	movs	r2, #12
   209e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   209e6:	f8c9 2000 	str.w	r2, [r9]
   209ea:	f04f 30ff 	mov.w	r0, #4294967295
   209ee:	81a3      	strh	r3, [r4, #12]
   209f0:	2200      	movs	r2, #0
   209f2:	2300      	movs	r3, #0
   209f4:	f8ca 2008 	str.w	r2, [sl, #8]
   209f8:	f8ca 3004 	str.w	r3, [sl, #4]
   209fc:	b003      	add	sp, #12
   209fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a02:	2000      	movs	r0, #0
   20a04:	2300      	movs	r3, #0
   20a06:	f8ca 3004 	str.w	r3, [sl, #4]
   20a0a:	b003      	add	sp, #12
   20a0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020a10 <_fclose_r>:
   20a10:	b570      	push	{r4, r5, r6, lr}
   20a12:	2900      	cmp	r1, #0
   20a14:	d03f      	beq.n	20a96 <_fclose_r+0x86>
   20a16:	4605      	mov	r5, r0
   20a18:	460c      	mov	r4, r1
   20a1a:	b110      	cbz	r0, 20a22 <_fclose_r+0x12>
   20a1c:	6b43      	ldr	r3, [r0, #52]	@ 0x34
   20a1e:	2b00      	cmp	r3, #0
   20a20:	d03c      	beq.n	20a9c <_fclose_r+0x8c>
   20a22:	6e63      	ldr	r3, [r4, #100]	@ 0x64
   20a24:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   20a28:	07de      	lsls	r6, r3, #31
   20a2a:	d432      	bmi.n	20a92 <_fclose_r+0x82>
   20a2c:	0590      	lsls	r0, r2, #22
   20a2e:	d538      	bpl.n	20aa2 <_fclose_r+0x92>
   20a30:	4621      	mov	r1, r4
   20a32:	4628      	mov	r0, r5
   20a34:	f000 f84c 	bl	20ad0 <__sflush_r>
   20a38:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
   20a3a:	4606      	mov	r6, r0
   20a3c:	b133      	cbz	r3, 20a4c <_fclose_r+0x3c>
   20a3e:	69e1      	ldr	r1, [r4, #28]
   20a40:	4628      	mov	r0, r5
   20a42:	4798      	blx	r3
   20a44:	2800      	cmp	r0, #0
   20a46:	bfb8      	it	lt
   20a48:	f04f 36ff 	movlt.w	r6, #4294967295
   20a4c:	89a3      	ldrh	r3, [r4, #12]
   20a4e:	061a      	lsls	r2, r3, #24
   20a50:	d439      	bmi.n	20ac6 <_fclose_r+0xb6>
   20a52:	6b21      	ldr	r1, [r4, #48]	@ 0x30
   20a54:	b141      	cbz	r1, 20a68 <_fclose_r+0x58>
   20a56:	f104 0340 	add.w	r3, r4, #64	@ 0x40
   20a5a:	4299      	cmp	r1, r3
   20a5c:	d002      	beq.n	20a64 <_fclose_r+0x54>
   20a5e:	4628      	mov	r0, r5
   20a60:	f7fe ff7c 	bl	1f95c <_free_r>
   20a64:	2300      	movs	r3, #0
   20a66:	6323      	str	r3, [r4, #48]	@ 0x30
   20a68:	6c61      	ldr	r1, [r4, #68]	@ 0x44
   20a6a:	b121      	cbz	r1, 20a76 <_fclose_r+0x66>
   20a6c:	4628      	mov	r0, r5
   20a6e:	f7fe ff75 	bl	1f95c <_free_r>
   20a72:	2300      	movs	r3, #0
   20a74:	6463      	str	r3, [r4, #68]	@ 0x44
   20a76:	f7fd fdc1 	bl	1e5fc <__sfp_lock_acquire>
   20a7a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
   20a7c:	2200      	movs	r2, #0
   20a7e:	07db      	lsls	r3, r3, #31
   20a80:	81a2      	strh	r2, [r4, #12]
   20a82:	d51c      	bpl.n	20abe <_fclose_r+0xae>
   20a84:	6da0      	ldr	r0, [r4, #88]	@ 0x58
   20a86:	f7fd ff17 	bl	1e8b8 <__retarget_lock_close_recursive>
   20a8a:	f7fd fdbd 	bl	1e608 <__sfp_lock_release>
   20a8e:	4630      	mov	r0, r6
   20a90:	bd70      	pop	{r4, r5, r6, pc}
   20a92:	2a00      	cmp	r2, #0
   20a94:	d1cc      	bne.n	20a30 <_fclose_r+0x20>
   20a96:	2600      	movs	r6, #0
   20a98:	4630      	mov	r0, r6
   20a9a:	bd70      	pop	{r4, r5, r6, pc}
   20a9c:	f7fd fd90 	bl	1e5c0 <__sinit>
   20aa0:	e7bf      	b.n	20a22 <_fclose_r+0x12>
   20aa2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
   20aa4:	f7fd ff0a 	bl	1e8bc <__retarget_lock_acquire_recursive>
   20aa8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   20aac:	2b00      	cmp	r3, #0
   20aae:	d1bf      	bne.n	20a30 <_fclose_r+0x20>
   20ab0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
   20ab2:	07d9      	lsls	r1, r3, #31
   20ab4:	d4ef      	bmi.n	20a96 <_fclose_r+0x86>
   20ab6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
   20ab8:	f7fd ff02 	bl	1e8c0 <__retarget_lock_release_recursive>
   20abc:	e7eb      	b.n	20a96 <_fclose_r+0x86>
   20abe:	6da0      	ldr	r0, [r4, #88]	@ 0x58
   20ac0:	f7fd fefe 	bl	1e8c0 <__retarget_lock_release_recursive>
   20ac4:	e7de      	b.n	20a84 <_fclose_r+0x74>
   20ac6:	6921      	ldr	r1, [r4, #16]
   20ac8:	4628      	mov	r0, r5
   20aca:	f7fe ff47 	bl	1f95c <_free_r>
   20ace:	e7c0      	b.n	20a52 <_fclose_r+0x42>

00020ad0 <__sflush_r>:
   20ad0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
   20ad4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20ad8:	460c      	mov	r4, r1
   20ada:	0711      	lsls	r1, r2, #28
   20adc:	4680      	mov	r8, r0
   20ade:	d44b      	bmi.n	20b78 <__sflush_r+0xa8>
   20ae0:	6861      	ldr	r1, [r4, #4]
   20ae2:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
   20ae6:	2900      	cmp	r1, #0
   20ae8:	81a3      	strh	r3, [r4, #12]
   20aea:	dd60      	ble.n	20bae <__sflush_r+0xde>
   20aec:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
   20aee:	2d00      	cmp	r5, #0
   20af0:	d03f      	beq.n	20b72 <__sflush_r+0xa2>
   20af2:	2100      	movs	r1, #0
   20af4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
   20af8:	f8d8 6000 	ldr.w	r6, [r8]
   20afc:	f8c8 1000 	str.w	r1, [r8]
   20b00:	69e1      	ldr	r1, [r4, #28]
   20b02:	d161      	bne.n	20bc8 <__sflush_r+0xf8>
   20b04:	2301      	movs	r3, #1
   20b06:	4640      	mov	r0, r8
   20b08:	47a8      	blx	r5
   20b0a:	1c43      	adds	r3, r0, #1
   20b0c:	4602      	mov	r2, r0
   20b0e:	d06b      	beq.n	20be8 <__sflush_r+0x118>
   20b10:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   20b14:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
   20b16:	69e1      	ldr	r1, [r4, #28]
   20b18:	075f      	lsls	r7, r3, #29
   20b1a:	d505      	bpl.n	20b28 <__sflush_r+0x58>
   20b1c:	6863      	ldr	r3, [r4, #4]
   20b1e:	1ad2      	subs	r2, r2, r3
   20b20:	6b23      	ldr	r3, [r4, #48]	@ 0x30
   20b22:	b10b      	cbz	r3, 20b28 <__sflush_r+0x58>
   20b24:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
   20b26:	1ad2      	subs	r2, r2, r3
   20b28:	2300      	movs	r3, #0
   20b2a:	4640      	mov	r0, r8
   20b2c:	47a8      	blx	r5
   20b2e:	1c45      	adds	r5, r0, #1
   20b30:	d14c      	bne.n	20bcc <__sflush_r+0xfc>
   20b32:	f8d8 1000 	ldr.w	r1, [r8]
   20b36:	291d      	cmp	r1, #29
   20b38:	d83d      	bhi.n	20bb6 <__sflush_r+0xe6>
   20b3a:	4a32      	ldr	r2, [pc, #200]	@ (20c04 <__sflush_r+0x134>)
   20b3c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   20b40:	410a      	asrs	r2, r1
   20b42:	f012 0201 	ands.w	r2, r2, #1
   20b46:	d138      	bne.n	20bba <__sflush_r+0xea>
   20b48:	6062      	str	r2, [r4, #4]
   20b4a:	6922      	ldr	r2, [r4, #16]
   20b4c:	6022      	str	r2, [r4, #0]
   20b4e:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
   20b52:	81a2      	strh	r2, [r4, #12]
   20b54:	04da      	lsls	r2, r3, #19
   20b56:	d452      	bmi.n	20bfe <__sflush_r+0x12e>
   20b58:	6b21      	ldr	r1, [r4, #48]	@ 0x30
   20b5a:	f8c8 6000 	str.w	r6, [r8]
   20b5e:	b141      	cbz	r1, 20b72 <__sflush_r+0xa2>
   20b60:	f104 0340 	add.w	r3, r4, #64	@ 0x40
   20b64:	4299      	cmp	r1, r3
   20b66:	d002      	beq.n	20b6e <__sflush_r+0x9e>
   20b68:	4640      	mov	r0, r8
   20b6a:	f7fe fef7 	bl	1f95c <_free_r>
   20b6e:	2300      	movs	r3, #0
   20b70:	6323      	str	r3, [r4, #48]	@ 0x30
   20b72:	2000      	movs	r0, #0
   20b74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   20b78:	6926      	ldr	r6, [r4, #16]
   20b7a:	2e00      	cmp	r6, #0
   20b7c:	d0f9      	beq.n	20b72 <__sflush_r+0xa2>
   20b7e:	6825      	ldr	r5, [r4, #0]
   20b80:	6026      	str	r6, [r4, #0]
   20b82:	0791      	lsls	r1, r2, #30
   20b84:	bf0c      	ite	eq
   20b86:	6963      	ldreq	r3, [r4, #20]
   20b88:	2300      	movne	r3, #0
   20b8a:	1bad      	subs	r5, r5, r6
   20b8c:	60a3      	str	r3, [r4, #8]
   20b8e:	e00b      	b.n	20ba8 <__sflush_r+0xd8>
   20b90:	462b      	mov	r3, r5
   20b92:	4632      	mov	r2, r6
   20b94:	69e1      	ldr	r1, [r4, #28]
   20b96:	6a67      	ldr	r7, [r4, #36]	@ 0x24
   20b98:	4640      	mov	r0, r8
   20b9a:	47b8      	blx	r7
   20b9c:	f1b0 0c00 	subs.w	ip, r0, #0
   20ba0:	eba5 050c 	sub.w	r5, r5, ip
   20ba4:	4466      	add	r6, ip
   20ba6:	dd06      	ble.n	20bb6 <__sflush_r+0xe6>
   20ba8:	2d00      	cmp	r5, #0
   20baa:	dcf1      	bgt.n	20b90 <__sflush_r+0xc0>
   20bac:	e7e1      	b.n	20b72 <__sflush_r+0xa2>
   20bae:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
   20bb0:	2900      	cmp	r1, #0
   20bb2:	dc9b      	bgt.n	20aec <__sflush_r+0x1c>
   20bb4:	e7dd      	b.n	20b72 <__sflush_r+0xa2>
   20bb6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   20bba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   20bbe:	81a3      	strh	r3, [r4, #12]
   20bc0:	f04f 30ff 	mov.w	r0, #4294967295
   20bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   20bc8:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   20bca:	e7a5      	b.n	20b18 <__sflush_r+0x48>
   20bcc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   20bd0:	6922      	ldr	r2, [r4, #16]
   20bd2:	6022      	str	r2, [r4, #0]
   20bd4:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
   20bd8:	81a2      	strh	r2, [r4, #12]
   20bda:	04db      	lsls	r3, r3, #19
   20bdc:	f04f 0200 	mov.w	r2, #0
   20be0:	6062      	str	r2, [r4, #4]
   20be2:	d5b9      	bpl.n	20b58 <__sflush_r+0x88>
   20be4:	6520      	str	r0, [r4, #80]	@ 0x50
   20be6:	e7b7      	b.n	20b58 <__sflush_r+0x88>
   20be8:	f8d8 3000 	ldr.w	r3, [r8]
   20bec:	2b00      	cmp	r3, #0
   20bee:	d08f      	beq.n	20b10 <__sflush_r+0x40>
   20bf0:	2b1d      	cmp	r3, #29
   20bf2:	d001      	beq.n	20bf8 <__sflush_r+0x128>
   20bf4:	2b16      	cmp	r3, #22
   20bf6:	d1de      	bne.n	20bb6 <__sflush_r+0xe6>
   20bf8:	f8c8 6000 	str.w	r6, [r8]
   20bfc:	e7b9      	b.n	20b72 <__sflush_r+0xa2>
   20bfe:	2900      	cmp	r1, #0
   20c00:	d1aa      	bne.n	20b58 <__sflush_r+0x88>
   20c02:	e7ef      	b.n	20be4 <__sflush_r+0x114>
   20c04:	dfbffffe 	.word	0xdfbffffe

00020c08 <_fflush_r>:
   20c08:	b538      	push	{r3, r4, r5, lr}
   20c0a:	460c      	mov	r4, r1
   20c0c:	4605      	mov	r5, r0
   20c0e:	b108      	cbz	r0, 20c14 <_fflush_r+0xc>
   20c10:	6b43      	ldr	r3, [r0, #52]	@ 0x34
   20c12:	b303      	cbz	r3, 20c56 <_fflush_r+0x4e>
   20c14:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   20c18:	b188      	cbz	r0, 20c3e <_fflush_r+0x36>
   20c1a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
   20c1c:	07db      	lsls	r3, r3, #31
   20c1e:	d401      	bmi.n	20c24 <_fflush_r+0x1c>
   20c20:	0581      	lsls	r1, r0, #22
   20c22:	d50f      	bpl.n	20c44 <_fflush_r+0x3c>
   20c24:	4628      	mov	r0, r5
   20c26:	4621      	mov	r1, r4
   20c28:	f7ff ff52 	bl	20ad0 <__sflush_r>
   20c2c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
   20c2e:	07da      	lsls	r2, r3, #31
   20c30:	4605      	mov	r5, r0
   20c32:	d402      	bmi.n	20c3a <_fflush_r+0x32>
   20c34:	89a3      	ldrh	r3, [r4, #12]
   20c36:	059b      	lsls	r3, r3, #22
   20c38:	d508      	bpl.n	20c4c <_fflush_r+0x44>
   20c3a:	4628      	mov	r0, r5
   20c3c:	bd38      	pop	{r3, r4, r5, pc}
   20c3e:	4605      	mov	r5, r0
   20c40:	4628      	mov	r0, r5
   20c42:	bd38      	pop	{r3, r4, r5, pc}
   20c44:	6da0      	ldr	r0, [r4, #88]	@ 0x58
   20c46:	f7fd fe39 	bl	1e8bc <__retarget_lock_acquire_recursive>
   20c4a:	e7eb      	b.n	20c24 <_fflush_r+0x1c>
   20c4c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
   20c4e:	f7fd fe37 	bl	1e8c0 <__retarget_lock_release_recursive>
   20c52:	4628      	mov	r0, r5
   20c54:	bd38      	pop	{r3, r4, r5, pc}
   20c56:	f7fd fcb3 	bl	1e5c0 <__sinit>
   20c5a:	e7db      	b.n	20c14 <_fflush_r+0xc>

00020c5c <memmove>:
   20c5c:	4288      	cmp	r0, r1
   20c5e:	d90e      	bls.n	20c7e <memmove+0x22>
   20c60:	188b      	adds	r3, r1, r2
   20c62:	4283      	cmp	r3, r0
   20c64:	d90b      	bls.n	20c7e <memmove+0x22>
   20c66:	eb00 0c02 	add.w	ip, r0, r2
   20c6a:	2a00      	cmp	r2, #0
   20c6c:	d06e      	beq.n	20d4c <memmove+0xf0>
   20c6e:	4662      	mov	r2, ip
   20c70:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
   20c74:	f802 cd01 	strb.w	ip, [r2, #-1]!
   20c78:	4299      	cmp	r1, r3
   20c7a:	d1f9      	bne.n	20c70 <memmove+0x14>
   20c7c:	4770      	bx	lr
   20c7e:	2a0f      	cmp	r2, #15
   20c80:	d80f      	bhi.n	20ca2 <memmove+0x46>
   20c82:	4603      	mov	r3, r0
   20c84:	f102 3cff 	add.w	ip, r2, #4294967295
   20c88:	2a00      	cmp	r2, #0
   20c8a:	d05f      	beq.n	20d4c <memmove+0xf0>
   20c8c:	f10c 0c01 	add.w	ip, ip, #1
   20c90:	3b01      	subs	r3, #1
   20c92:	448c      	add	ip, r1
   20c94:	f811 2b01 	ldrb.w	r2, [r1], #1
   20c98:	f803 2f01 	strb.w	r2, [r3, #1]!
   20c9c:	4561      	cmp	r1, ip
   20c9e:	d1f9      	bne.n	20c94 <memmove+0x38>
   20ca0:	4770      	bx	lr
   20ca2:	ea40 0301 	orr.w	r3, r0, r1
   20ca6:	079b      	lsls	r3, r3, #30
   20ca8:	d151      	bne.n	20d4e <memmove+0xf2>
   20caa:	f1a2 0310 	sub.w	r3, r2, #16
   20cae:	b570      	push	{r4, r5, r6, lr}
   20cb0:	f101 0c20 	add.w	ip, r1, #32
   20cb4:	f023 050f 	bic.w	r5, r3, #15
   20cb8:	f101 0e10 	add.w	lr, r1, #16
   20cbc:	f100 0410 	add.w	r4, r0, #16
   20cc0:	44ac      	add	ip, r5
   20cc2:	091b      	lsrs	r3, r3, #4
   20cc4:	f85e 5c10 	ldr.w	r5, [lr, #-16]
   20cc8:	f844 5c10 	str.w	r5, [r4, #-16]
   20ccc:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
   20cd0:	f844 5c0c 	str.w	r5, [r4, #-12]
   20cd4:	f85e 5c08 	ldr.w	r5, [lr, #-8]
   20cd8:	f844 5c08 	str.w	r5, [r4, #-8]
   20cdc:	f85e 5c04 	ldr.w	r5, [lr, #-4]
   20ce0:	f844 5c04 	str.w	r5, [r4, #-4]
   20ce4:	f10e 0e10 	add.w	lr, lr, #16
   20ce8:	45e6      	cmp	lr, ip
   20cea:	f104 0410 	add.w	r4, r4, #16
   20cee:	d1e9      	bne.n	20cc4 <memmove+0x68>
   20cf0:	3301      	adds	r3, #1
   20cf2:	f012 0f0c 	tst.w	r2, #12
   20cf6:	eb01 1103 	add.w	r1, r1, r3, lsl #4
   20cfa:	f002 040f 	and.w	r4, r2, #15
   20cfe:	eb00 1303 	add.w	r3, r0, r3, lsl #4
   20d02:	d028      	beq.n	20d56 <memmove+0xfa>
   20d04:	3c04      	subs	r4, #4
   20d06:	f024 0603 	bic.w	r6, r4, #3
   20d0a:	ea4f 0c94 	mov.w	ip, r4, lsr #2
   20d0e:	441e      	add	r6, r3
   20d10:	1f1c      	subs	r4, r3, #4
   20d12:	468e      	mov	lr, r1
   20d14:	f85e 5b04 	ldr.w	r5, [lr], #4
   20d18:	f844 5f04 	str.w	r5, [r4, #4]!
   20d1c:	42b4      	cmp	r4, r6
   20d1e:	d1f9      	bne.n	20d14 <memmove+0xb8>
   20d20:	f10c 0401 	add.w	r4, ip, #1
   20d24:	f002 0203 	and.w	r2, r2, #3
   20d28:	eb03 0384 	add.w	r3, r3, r4, lsl #2
   20d2c:	eb01 0184 	add.w	r1, r1, r4, lsl #2
   20d30:	f102 3cff 	add.w	ip, r2, #4294967295
   20d34:	b14a      	cbz	r2, 20d4a <memmove+0xee>
   20d36:	f10c 0c01 	add.w	ip, ip, #1
   20d3a:	3b01      	subs	r3, #1
   20d3c:	448c      	add	ip, r1
   20d3e:	f811 2b01 	ldrb.w	r2, [r1], #1
   20d42:	f803 2f01 	strb.w	r2, [r3, #1]!
   20d46:	4561      	cmp	r1, ip
   20d48:	d1f9      	bne.n	20d3e <memmove+0xe2>
   20d4a:	bd70      	pop	{r4, r5, r6, pc}
   20d4c:	4770      	bx	lr
   20d4e:	f102 3cff 	add.w	ip, r2, #4294967295
   20d52:	4603      	mov	r3, r0
   20d54:	e79a      	b.n	20c8c <memmove+0x30>
   20d56:	4622      	mov	r2, r4
   20d58:	e7ea      	b.n	20d30 <memmove+0xd4>
   20d5a:	bf00      	nop

00020d5c <_sbrk_r>:
   20d5c:	b538      	push	{r3, r4, r5, lr}
   20d5e:	4d07      	ldr	r5, [pc, #28]	@ (20d7c <_sbrk_r+0x20>)
   20d60:	2200      	movs	r2, #0
   20d62:	4604      	mov	r4, r0
   20d64:	4608      	mov	r0, r1
   20d66:	602a      	str	r2, [r5, #0]
   20d68:	f001 fec8 	bl	22afc <_sbrk>
   20d6c:	1c43      	adds	r3, r0, #1
   20d6e:	d000      	beq.n	20d72 <_sbrk_r+0x16>
   20d70:	bd38      	pop	{r3, r4, r5, pc}
   20d72:	682b      	ldr	r3, [r5, #0]
   20d74:	2b00      	cmp	r3, #0
   20d76:	d0fb      	beq.n	20d70 <_sbrk_r+0x14>
   20d78:	6023      	str	r3, [r4, #0]
   20d7a:	bd38      	pop	{r3, r4, r5, pc}
   20d7c:	10030234 	.word	0x10030234

00020d80 <__errno>:
   20d80:	4b01      	ldr	r3, [pc, #4]	@ (20d88 <__errno+0x8>)
   20d82:	6818      	ldr	r0, [r3, #0]
   20d84:	4770      	bx	lr
   20d86:	bf00      	nop
   20d88:	100010e8 	.word	0x100010e8

00020d8c <sysconf>:
   20d8c:	2808      	cmp	r0, #8
   20d8e:	d102      	bne.n	20d96 <sysconf+0xa>
   20d90:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
   20d94:	4770      	bx	lr
   20d96:	b508      	push	{r3, lr}
   20d98:	f7ff fff2 	bl	20d80 <__errno>
   20d9c:	2316      	movs	r3, #22
   20d9e:	6003      	str	r3, [r0, #0]
   20da0:	f04f 30ff 	mov.w	r0, #4294967295
   20da4:	bd08      	pop	{r3, pc}
   20da6:	bf00      	nop

00020da8 <__assert_func>:
   20da8:	b500      	push	{lr}
   20daa:	4c0b      	ldr	r4, [pc, #44]	@ (20dd8 <__assert_func+0x30>)
   20dac:	6825      	ldr	r5, [r4, #0]
   20dae:	4614      	mov	r4, r2
   20db0:	68ee      	ldr	r6, [r5, #12]
   20db2:	461a      	mov	r2, r3
   20db4:	b085      	sub	sp, #20
   20db6:	4603      	mov	r3, r0
   20db8:	460d      	mov	r5, r1
   20dba:	b14c      	cbz	r4, 20dd0 <__assert_func+0x28>
   20dbc:	4907      	ldr	r1, [pc, #28]	@ (20ddc <__assert_func+0x34>)
   20dbe:	9500      	str	r5, [sp, #0]
   20dc0:	e9cd 1401 	strd	r1, r4, [sp, #4]
   20dc4:	4630      	mov	r0, r6
   20dc6:	4906      	ldr	r1, [pc, #24]	@ (20de0 <__assert_func+0x38>)
   20dc8:	f000 fa76 	bl	212b8 <fiprintf>
   20dcc:	f001 fd26 	bl	2281c <abort>
   20dd0:	4904      	ldr	r1, [pc, #16]	@ (20de4 <__assert_func+0x3c>)
   20dd2:	460c      	mov	r4, r1
   20dd4:	e7f3      	b.n	20dbe <__assert_func+0x16>
   20dd6:	bf00      	nop
   20dd8:	100010e8 	.word	0x100010e8
   20ddc:	00028504 	.word	0x00028504
   20de0:	00028514 	.word	0x00028514
   20de4:	00028510 	.word	0x00028510

00020de8 <_calloc_r>:
   20de8:	b538      	push	{r3, r4, r5, lr}
   20dea:	fba1 1402 	umull	r1, r4, r1, r2
   20dee:	bb54      	cbnz	r4, 20e46 <_calloc_r+0x5e>
   20df0:	f7fe feb2 	bl	1fb58 <_malloc_r>
   20df4:	4605      	mov	r5, r0
   20df6:	b350      	cbz	r0, 20e4e <_calloc_r+0x66>
   20df8:	f850 2c04 	ldr.w	r2, [r0, #-4]
   20dfc:	f022 0203 	bic.w	r2, r2, #3
   20e00:	3a04      	subs	r2, #4
   20e02:	2a24      	cmp	r2, #36	@ 0x24
   20e04:	d810      	bhi.n	20e28 <_calloc_r+0x40>
   20e06:	2a13      	cmp	r2, #19
   20e08:	d913      	bls.n	20e32 <_calloc_r+0x4a>
   20e0a:	2a1b      	cmp	r2, #27
   20e0c:	6004      	str	r4, [r0, #0]
   20e0e:	6044      	str	r4, [r0, #4]
   20e10:	d916      	bls.n	20e40 <_calloc_r+0x58>
   20e12:	2a24      	cmp	r2, #36	@ 0x24
   20e14:	6084      	str	r4, [r0, #8]
   20e16:	60c4      	str	r4, [r0, #12]
   20e18:	bf11      	iteee	ne
   20e1a:	f100 0210 	addne.w	r2, r0, #16
   20e1e:	f100 0218 	addeq.w	r2, r0, #24
   20e22:	6104      	streq	r4, [r0, #16]
   20e24:	6144      	streq	r4, [r0, #20]
   20e26:	e005      	b.n	20e34 <_calloc_r+0x4c>
   20e28:	4621      	mov	r1, r4
   20e2a:	f7fd fc5f 	bl	1e6ec <memset>
   20e2e:	4628      	mov	r0, r5
   20e30:	bd38      	pop	{r3, r4, r5, pc}
   20e32:	4602      	mov	r2, r0
   20e34:	2300      	movs	r3, #0
   20e36:	6013      	str	r3, [r2, #0]
   20e38:	6053      	str	r3, [r2, #4]
   20e3a:	6093      	str	r3, [r2, #8]
   20e3c:	4628      	mov	r0, r5
   20e3e:	bd38      	pop	{r3, r4, r5, pc}
   20e40:	f100 0208 	add.w	r2, r0, #8
   20e44:	e7f6      	b.n	20e34 <_calloc_r+0x4c>
   20e46:	f7ff ff9b 	bl	20d80 <__errno>
   20e4a:	230c      	movs	r3, #12
   20e4c:	6003      	str	r3, [r0, #0]
   20e4e:	2500      	movs	r5, #0
   20e50:	4628      	mov	r0, r5
   20e52:	bd38      	pop	{r3, r4, r5, pc}

00020e54 <_realloc_r>:
   20e54:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e58:	4616      	mov	r6, r2
   20e5a:	2900      	cmp	r1, #0
   20e5c:	f000 8096 	beq.w	20f8c <_realloc_r+0x138>
   20e60:	460c      	mov	r4, r1
   20e62:	4680      	mov	r8, r0
   20e64:	f106 050b 	add.w	r5, r6, #11
   20e68:	f7ff f946 	bl	200f8 <__malloc_lock>
   20e6c:	f854 1c04 	ldr.w	r1, [r4, #-4]
   20e70:	2d16      	cmp	r5, #22
   20e72:	f1a4 0908 	sub.w	r9, r4, #8
   20e76:	f021 0703 	bic.w	r7, r1, #3
   20e7a:	d858      	bhi.n	20f2e <_realloc_r+0xda>
   20e7c:	2510      	movs	r5, #16
   20e7e:	42ae      	cmp	r6, r5
   20e80:	d858      	bhi.n	20f34 <_realloc_r+0xe0>
   20e82:	42af      	cmp	r7, r5
   20e84:	da60      	bge.n	20f48 <_realloc_r+0xf4>
   20e86:	4bbe      	ldr	r3, [pc, #760]	@ (21180 <_realloc_r+0x32c>)
   20e88:	689a      	ldr	r2, [r3, #8]
   20e8a:	eb09 0c07 	add.w	ip, r9, r7
   20e8e:	4562      	cmp	r2, ip
   20e90:	f8dc 0004 	ldr.w	r0, [ip, #4]
   20e94:	f000 8090 	beq.w	20fb8 <_realloc_r+0x164>
   20e98:	f020 0301 	bic.w	r3, r0, #1
   20e9c:	4463      	add	r3, ip
   20e9e:	685b      	ldr	r3, [r3, #4]
   20ea0:	07da      	lsls	r2, r3, #31
   20ea2:	d468      	bmi.n	20f76 <_realloc_r+0x122>
   20ea4:	f020 0003 	bic.w	r0, r0, #3
   20ea8:	183b      	adds	r3, r7, r0
   20eaa:	429d      	cmp	r5, r3
   20eac:	dd47      	ble.n	20f3e <_realloc_r+0xea>
   20eae:	07cb      	lsls	r3, r1, #31
   20eb0:	d412      	bmi.n	20ed8 <_realloc_r+0x84>
   20eb2:	f854 3c08 	ldr.w	r3, [r4, #-8]
   20eb6:	eba9 0b03 	sub.w	fp, r9, r3
   20eba:	f8db 3004 	ldr.w	r3, [fp, #4]
   20ebe:	f023 0203 	bic.w	r2, r3, #3
   20ec2:	4410      	add	r0, r2
   20ec4:	eb00 0a07 	add.w	sl, r0, r7
   20ec8:	4555      	cmp	r5, sl
   20eca:	f340 80f6 	ble.w	210ba <_realloc_r+0x266>
   20ece:	eb07 0a02 	add.w	sl, r7, r2
   20ed2:	4555      	cmp	r5, sl
   20ed4:	f340 80cc 	ble.w	21070 <_realloc_r+0x21c>
   20ed8:	4631      	mov	r1, r6
   20eda:	4640      	mov	r0, r8
   20edc:	f7fe fe3c 	bl	1fb58 <_malloc_r>
   20ee0:	4606      	mov	r6, r0
   20ee2:	2800      	cmp	r0, #0
   20ee4:	f000 8120 	beq.w	21128 <_realloc_r+0x2d4>
   20ee8:	f854 3c04 	ldr.w	r3, [r4, #-4]
   20eec:	f023 0301 	bic.w	r3, r3, #1
   20ef0:	444b      	add	r3, r9
   20ef2:	f1a0 0208 	sub.w	r2, r0, #8
   20ef6:	4293      	cmp	r3, r2
   20ef8:	f000 80b4 	beq.w	21064 <_realloc_r+0x210>
   20efc:	1f3a      	subs	r2, r7, #4
   20efe:	2a24      	cmp	r2, #36	@ 0x24
   20f00:	f200 80d7 	bhi.w	210b2 <_realloc_r+0x25e>
   20f04:	2a13      	cmp	r2, #19
   20f06:	f200 80a2 	bhi.w	2104e <_realloc_r+0x1fa>
   20f0a:	4603      	mov	r3, r0
   20f0c:	4622      	mov	r2, r4
   20f0e:	6811      	ldr	r1, [r2, #0]
   20f10:	6019      	str	r1, [r3, #0]
   20f12:	6851      	ldr	r1, [r2, #4]
   20f14:	6059      	str	r1, [r3, #4]
   20f16:	6892      	ldr	r2, [r2, #8]
   20f18:	609a      	str	r2, [r3, #8]
   20f1a:	4621      	mov	r1, r4
   20f1c:	4640      	mov	r0, r8
   20f1e:	f7fe fd1d 	bl	1f95c <_free_r>
   20f22:	4640      	mov	r0, r8
   20f24:	f7ff f8ee 	bl	20104 <__malloc_unlock>
   20f28:	4630      	mov	r0, r6
   20f2a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f2e:	f035 0507 	bics.w	r5, r5, #7
   20f32:	d5a4      	bpl.n	20e7e <_realloc_r+0x2a>
   20f34:	230c      	movs	r3, #12
   20f36:	f8c8 3000 	str.w	r3, [r8]
   20f3a:	2600      	movs	r6, #0
   20f3c:	e018      	b.n	20f70 <_realloc_r+0x11c>
   20f3e:	461f      	mov	r7, r3
   20f40:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
   20f44:	60d3      	str	r3, [r2, #12]
   20f46:	609a      	str	r2, [r3, #8]
   20f48:	f8d9 3004 	ldr.w	r3, [r9, #4]
   20f4c:	1b7a      	subs	r2, r7, r5
   20f4e:	2a0f      	cmp	r2, #15
   20f50:	f003 0301 	and.w	r3, r3, #1
   20f54:	eb09 0007 	add.w	r0, r9, r7
   20f58:	d81d      	bhi.n	20f96 <_realloc_r+0x142>
   20f5a:	433b      	orrs	r3, r7
   20f5c:	f8c9 3004 	str.w	r3, [r9, #4]
   20f60:	6843      	ldr	r3, [r0, #4]
   20f62:	f043 0301 	orr.w	r3, r3, #1
   20f66:	6043      	str	r3, [r0, #4]
   20f68:	4640      	mov	r0, r8
   20f6a:	f7ff f8cb 	bl	20104 <__malloc_unlock>
   20f6e:	4626      	mov	r6, r4
   20f70:	4630      	mov	r0, r6
   20f72:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f76:	07c9      	lsls	r1, r1, #31
   20f78:	d4ae      	bmi.n	20ed8 <_realloc_r+0x84>
   20f7a:	f854 3c08 	ldr.w	r3, [r4, #-8]
   20f7e:	eba9 0b03 	sub.w	fp, r9, r3
   20f82:	f8db 3004 	ldr.w	r3, [fp, #4]
   20f86:	f023 0203 	bic.w	r2, r3, #3
   20f8a:	e7a0      	b.n	20ece <_realloc_r+0x7a>
   20f8c:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f90:	4611      	mov	r1, r2
   20f92:	f7fe bde1 	b.w	1fb58 <_malloc_r>
   20f96:	eb09 0105 	add.w	r1, r9, r5
   20f9a:	432b      	orrs	r3, r5
   20f9c:	f042 0201 	orr.w	r2, r2, #1
   20fa0:	f8c9 3004 	str.w	r3, [r9, #4]
   20fa4:	604a      	str	r2, [r1, #4]
   20fa6:	6843      	ldr	r3, [r0, #4]
   20fa8:	f043 0301 	orr.w	r3, r3, #1
   20fac:	6043      	str	r3, [r0, #4]
   20fae:	3108      	adds	r1, #8
   20fb0:	4640      	mov	r0, r8
   20fb2:	f7fe fcd3 	bl	1f95c <_free_r>
   20fb6:	e7d7      	b.n	20f68 <_realloc_r+0x114>
   20fb8:	f020 0003 	bic.w	r0, r0, #3
   20fbc:	19c2      	adds	r2, r0, r7
   20fbe:	f105 0c10 	add.w	ip, r5, #16
   20fc2:	4562      	cmp	r2, ip
   20fc4:	f280 8091 	bge.w	210ea <_realloc_r+0x296>
   20fc8:	07ca      	lsls	r2, r1, #31
   20fca:	d485      	bmi.n	20ed8 <_realloc_r+0x84>
   20fcc:	f854 2c08 	ldr.w	r2, [r4, #-8]
   20fd0:	eba9 0b02 	sub.w	fp, r9, r2
   20fd4:	f8db 2004 	ldr.w	r2, [fp, #4]
   20fd8:	f022 0203 	bic.w	r2, r2, #3
   20fdc:	4410      	add	r0, r2
   20fde:	eb00 0a07 	add.w	sl, r0, r7
   20fe2:	45d4      	cmp	ip, sl
   20fe4:	f73f af73 	bgt.w	20ece <_realloc_r+0x7a>
   20fe8:	465e      	mov	r6, fp
   20fea:	f8db 100c 	ldr.w	r1, [fp, #12]
   20fee:	f856 0f08 	ldr.w	r0, [r6, #8]!
   20ff2:	1f3a      	subs	r2, r7, #4
   20ff4:	2a24      	cmp	r2, #36	@ 0x24
   20ff6:	60c1      	str	r1, [r0, #12]
   20ff8:	6088      	str	r0, [r1, #8]
   20ffa:	f200 80ae 	bhi.w	2115a <_realloc_r+0x306>
   20ffe:	2a13      	cmp	r2, #19
   21000:	f240 80a9 	bls.w	21156 <_realloc_r+0x302>
   21004:	6821      	ldr	r1, [r4, #0]
   21006:	f8cb 1008 	str.w	r1, [fp, #8]
   2100a:	6861      	ldr	r1, [r4, #4]
   2100c:	f8cb 100c 	str.w	r1, [fp, #12]
   21010:	2a1b      	cmp	r2, #27
   21012:	f200 80a8 	bhi.w	21166 <_realloc_r+0x312>
   21016:	3408      	adds	r4, #8
   21018:	f10b 0210 	add.w	r2, fp, #16
   2101c:	6821      	ldr	r1, [r4, #0]
   2101e:	6011      	str	r1, [r2, #0]
   21020:	6861      	ldr	r1, [r4, #4]
   21022:	6051      	str	r1, [r2, #4]
   21024:	68a1      	ldr	r1, [r4, #8]
   21026:	6091      	str	r1, [r2, #8]
   21028:	eb0b 0105 	add.w	r1, fp, r5
   2102c:	ebaa 0205 	sub.w	r2, sl, r5
   21030:	f042 0201 	orr.w	r2, r2, #1
   21034:	6099      	str	r1, [r3, #8]
   21036:	604a      	str	r2, [r1, #4]
   21038:	f8db 3004 	ldr.w	r3, [fp, #4]
   2103c:	f003 0301 	and.w	r3, r3, #1
   21040:	432b      	orrs	r3, r5
   21042:	4640      	mov	r0, r8
   21044:	f8cb 3004 	str.w	r3, [fp, #4]
   21048:	f7ff f85c 	bl	20104 <__malloc_unlock>
   2104c:	e790      	b.n	20f70 <_realloc_r+0x11c>
   2104e:	6823      	ldr	r3, [r4, #0]
   21050:	6003      	str	r3, [r0, #0]
   21052:	6863      	ldr	r3, [r4, #4]
   21054:	6043      	str	r3, [r0, #4]
   21056:	2a1b      	cmp	r2, #27
   21058:	d83c      	bhi.n	210d4 <_realloc_r+0x280>
   2105a:	f104 0208 	add.w	r2, r4, #8
   2105e:	f100 0308 	add.w	r3, r0, #8
   21062:	e754      	b.n	20f0e <_realloc_r+0xba>
   21064:	f850 3c04 	ldr.w	r3, [r0, #-4]
   21068:	f023 0303 	bic.w	r3, r3, #3
   2106c:	441f      	add	r7, r3
   2106e:	e76b      	b.n	20f48 <_realloc_r+0xf4>
   21070:	1f3a      	subs	r2, r7, #4
   21072:	465e      	mov	r6, fp
   21074:	f8db 300c 	ldr.w	r3, [fp, #12]
   21078:	f856 1f08 	ldr.w	r1, [r6, #8]!
   2107c:	2a24      	cmp	r2, #36	@ 0x24
   2107e:	60cb      	str	r3, [r1, #12]
   21080:	6099      	str	r1, [r3, #8]
   21082:	d822      	bhi.n	210ca <_realloc_r+0x276>
   21084:	2a13      	cmp	r2, #19
   21086:	d91e      	bls.n	210c6 <_realloc_r+0x272>
   21088:	6823      	ldr	r3, [r4, #0]
   2108a:	f8cb 3008 	str.w	r3, [fp, #8]
   2108e:	6863      	ldr	r3, [r4, #4]
   21090:	f8cb 300c 	str.w	r3, [fp, #12]
   21094:	2a1b      	cmp	r2, #27
   21096:	d83b      	bhi.n	21110 <_realloc_r+0x2bc>
   21098:	3408      	adds	r4, #8
   2109a:	f10b 0310 	add.w	r3, fp, #16
   2109e:	6822      	ldr	r2, [r4, #0]
   210a0:	601a      	str	r2, [r3, #0]
   210a2:	6862      	ldr	r2, [r4, #4]
   210a4:	605a      	str	r2, [r3, #4]
   210a6:	68a2      	ldr	r2, [r4, #8]
   210a8:	609a      	str	r2, [r3, #8]
   210aa:	4634      	mov	r4, r6
   210ac:	4657      	mov	r7, sl
   210ae:	46d9      	mov	r9, fp
   210b0:	e74a      	b.n	20f48 <_realloc_r+0xf4>
   210b2:	4621      	mov	r1, r4
   210b4:	f7ff fdd2 	bl	20c5c <memmove>
   210b8:	e72f      	b.n	20f1a <_realloc_r+0xc6>
   210ba:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
   210be:	1f3a      	subs	r2, r7, #4
   210c0:	60cb      	str	r3, [r1, #12]
   210c2:	6099      	str	r1, [r3, #8]
   210c4:	e7d5      	b.n	21072 <_realloc_r+0x21e>
   210c6:	4633      	mov	r3, r6
   210c8:	e7e9      	b.n	2109e <_realloc_r+0x24a>
   210ca:	4621      	mov	r1, r4
   210cc:	4630      	mov	r0, r6
   210ce:	f7ff fdc5 	bl	20c5c <memmove>
   210d2:	e7ea      	b.n	210aa <_realloc_r+0x256>
   210d4:	68a3      	ldr	r3, [r4, #8]
   210d6:	6083      	str	r3, [r0, #8]
   210d8:	68e3      	ldr	r3, [r4, #12]
   210da:	60c3      	str	r3, [r0, #12]
   210dc:	2a24      	cmp	r2, #36	@ 0x24
   210de:	d027      	beq.n	21130 <_realloc_r+0x2dc>
   210e0:	f104 0210 	add.w	r2, r4, #16
   210e4:	f100 0310 	add.w	r3, r0, #16
   210e8:	e711      	b.n	20f0e <_realloc_r+0xba>
   210ea:	eb09 0105 	add.w	r1, r9, r5
   210ee:	6099      	str	r1, [r3, #8]
   210f0:	1b53      	subs	r3, r2, r5
   210f2:	f043 0301 	orr.w	r3, r3, #1
   210f6:	604b      	str	r3, [r1, #4]
   210f8:	f854 3c04 	ldr.w	r3, [r4, #-4]
   210fc:	f003 0301 	and.w	r3, r3, #1
   21100:	432b      	orrs	r3, r5
   21102:	4640      	mov	r0, r8
   21104:	f844 3c04 	str.w	r3, [r4, #-4]
   21108:	f7fe fffc 	bl	20104 <__malloc_unlock>
   2110c:	4626      	mov	r6, r4
   2110e:	e72f      	b.n	20f70 <_realloc_r+0x11c>
   21110:	68a3      	ldr	r3, [r4, #8]
   21112:	f8cb 3010 	str.w	r3, [fp, #16]
   21116:	68e3      	ldr	r3, [r4, #12]
   21118:	f8cb 3014 	str.w	r3, [fp, #20]
   2111c:	2a24      	cmp	r2, #36	@ 0x24
   2111e:	d010      	beq.n	21142 <_realloc_r+0x2ee>
   21120:	3410      	adds	r4, #16
   21122:	f10b 0318 	add.w	r3, fp, #24
   21126:	e7ba      	b.n	2109e <_realloc_r+0x24a>
   21128:	4640      	mov	r0, r8
   2112a:	f7fe ffeb 	bl	20104 <__malloc_unlock>
   2112e:	e704      	b.n	20f3a <_realloc_r+0xe6>
   21130:	6923      	ldr	r3, [r4, #16]
   21132:	6103      	str	r3, [r0, #16]
   21134:	6961      	ldr	r1, [r4, #20]
   21136:	6141      	str	r1, [r0, #20]
   21138:	f104 0218 	add.w	r2, r4, #24
   2113c:	f100 0318 	add.w	r3, r0, #24
   21140:	e6e5      	b.n	20f0e <_realloc_r+0xba>
   21142:	6923      	ldr	r3, [r4, #16]
   21144:	f8cb 3018 	str.w	r3, [fp, #24]
   21148:	6963      	ldr	r3, [r4, #20]
   2114a:	f8cb 301c 	str.w	r3, [fp, #28]
   2114e:	3418      	adds	r4, #24
   21150:	f10b 0320 	add.w	r3, fp, #32
   21154:	e7a3      	b.n	2109e <_realloc_r+0x24a>
   21156:	4632      	mov	r2, r6
   21158:	e760      	b.n	2101c <_realloc_r+0x1c8>
   2115a:	4621      	mov	r1, r4
   2115c:	4630      	mov	r0, r6
   2115e:	f7ff fd7d 	bl	20c5c <memmove>
   21162:	4b07      	ldr	r3, [pc, #28]	@ (21180 <_realloc_r+0x32c>)
   21164:	e760      	b.n	21028 <_realloc_r+0x1d4>
   21166:	68a1      	ldr	r1, [r4, #8]
   21168:	f8cb 1010 	str.w	r1, [fp, #16]
   2116c:	68e1      	ldr	r1, [r4, #12]
   2116e:	f8cb 1014 	str.w	r1, [fp, #20]
   21172:	2a24      	cmp	r2, #36	@ 0x24
   21174:	d006      	beq.n	21184 <_realloc_r+0x330>
   21176:	3410      	adds	r4, #16
   21178:	f10b 0218 	add.w	r2, fp, #24
   2117c:	e74e      	b.n	2101c <_realloc_r+0x1c8>
   2117e:	bf00      	nop
   21180:	10001390 	.word	0x10001390
   21184:	6922      	ldr	r2, [r4, #16]
   21186:	f8cb 2018 	str.w	r2, [fp, #24]
   2118a:	6962      	ldr	r2, [r4, #20]
   2118c:	f8cb 201c 	str.w	r2, [fp, #28]
   21190:	3418      	adds	r4, #24
   21192:	f10b 0220 	add.w	r2, fp, #32
   21196:	e741      	b.n	2101c <_realloc_r+0x1c8>

00021198 <_wcsnrtombs_l>:
   21198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2119c:	b08b      	sub	sp, #44	@ 0x2c
   2119e:	e9dd 7a15 	ldrd	r7, sl, [sp, #84]	@ 0x54
   211a2:	4686      	mov	lr, r0
   211a4:	461e      	mov	r6, r3
   211a6:	2f00      	cmp	r7, #0
   211a8:	d05a      	beq.n	21260 <_wcsnrtombs_l+0xc8>
   211aa:	6815      	ldr	r5, [r2, #0]
   211ac:	2900      	cmp	r1, #0
   211ae:	d05c      	beq.n	2126a <_wcsnrtombs_l+0xd2>
   211b0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
   211b2:	2b00      	cmp	r3, #0
   211b4:	d069      	beq.n	2128a <_wcsnrtombs_l+0xf2>
   211b6:	1e74      	subs	r4, r6, #1
   211b8:	b34e      	cbz	r6, 2120e <_wcsnrtombs_l+0x76>
   211ba:	3d04      	subs	r5, #4
   211bc:	e9cd 5e01 	strd	r5, lr, [sp, #4]
   211c0:	f8dd b050 	ldr.w	fp, [sp, #80]	@ 0x50
   211c4:	9104      	str	r1, [sp, #16]
   211c6:	2600      	movs	r6, #0
   211c8:	9103      	str	r1, [sp, #12]
   211ca:	9205      	str	r2, [sp, #20]
   211cc:	e00b      	b.n	211e6 <_wcsnrtombs_l+0x4e>
   211ce:	9b03      	ldr	r3, [sp, #12]
   211d0:	bb0b      	cbnz	r3, 21216 <_wcsnrtombs_l+0x7e>
   211d2:	9b01      	ldr	r3, [sp, #4]
   211d4:	6818      	ldr	r0, [r3, #0]
   211d6:	2800      	cmp	r0, #0
   211d8:	d036      	beq.n	21248 <_wcsnrtombs_l+0xb0>
   211da:	45dc      	cmp	ip, fp
   211dc:	d257      	bcs.n	2128e <_wcsnrtombs_l+0xf6>
   211de:	3c01      	subs	r4, #1
   211e0:	1c63      	adds	r3, r4, #1
   211e2:	4666      	mov	r6, ip
   211e4:	d013      	beq.n	2120e <_wcsnrtombs_l+0x76>
   211e6:	9b01      	ldr	r3, [sp, #4]
   211e8:	9802      	ldr	r0, [sp, #8]
   211ea:	f853 2f04 	ldr.w	r2, [r3, #4]!
   211ee:	9301      	str	r3, [sp, #4]
   211f0:	f8da 50e0 	ldr.w	r5, [sl, #224]	@ 0xe0
   211f4:	463b      	mov	r3, r7
   211f6:	a907      	add	r1, sp, #28
   211f8:	e9d7 9800 	ldrd	r9, r8, [r7]
   211fc:	47a8      	blx	r5
   211fe:	1c42      	adds	r2, r0, #1
   21200:	d037      	beq.n	21272 <_wcsnrtombs_l+0xda>
   21202:	eb00 0c06 	add.w	ip, r0, r6
   21206:	45dc      	cmp	ip, fp
   21208:	d9e1      	bls.n	211ce <_wcsnrtombs_l+0x36>
   2120a:	e9c7 9800 	strd	r9, r8, [r7]
   2120e:	4630      	mov	r0, r6
   21210:	b00b      	add	sp, #44	@ 0x2c
   21212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21216:	2800      	cmp	r0, #0
   21218:	dd0e      	ble.n	21238 <_wcsnrtombs_l+0xa0>
   2121a:	9b04      	ldr	r3, [sp, #16]
   2121c:	9d01      	ldr	r5, [sp, #4]
   2121e:	4418      	add	r0, r3
   21220:	1e5a      	subs	r2, r3, #1
   21222:	a907      	add	r1, sp, #28
   21224:	f100 3eff 	add.w	lr, r0, #4294967295
   21228:	f811 3b01 	ldrb.w	r3, [r1], #1
   2122c:	f802 3f01 	strb.w	r3, [r2, #1]!
   21230:	4596      	cmp	lr, r2
   21232:	d1f9      	bne.n	21228 <_wcsnrtombs_l+0x90>
   21234:	9501      	str	r5, [sp, #4]
   21236:	9004      	str	r0, [sp, #16]
   21238:	9b05      	ldr	r3, [sp, #20]
   2123a:	681a      	ldr	r2, [r3, #0]
   2123c:	3204      	adds	r2, #4
   2123e:	601a      	str	r2, [r3, #0]
   21240:	9b01      	ldr	r3, [sp, #4]
   21242:	6818      	ldr	r0, [r3, #0]
   21244:	2800      	cmp	r0, #0
   21246:	d1c8      	bne.n	211da <_wcsnrtombs_l+0x42>
   21248:	9903      	ldr	r1, [sp, #12]
   2124a:	9a05      	ldr	r2, [sp, #20]
   2124c:	b101      	cbz	r1, 21250 <_wcsnrtombs_l+0xb8>
   2124e:	6010      	str	r0, [r2, #0]
   21250:	f10c 36ff 	add.w	r6, ip, #4294967295
   21254:	2200      	movs	r2, #0
   21256:	4630      	mov	r0, r6
   21258:	603a      	str	r2, [r7, #0]
   2125a:	b00b      	add	sp, #44	@ 0x2c
   2125c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21260:	6815      	ldr	r5, [r2, #0]
   21262:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
   21266:	2900      	cmp	r1, #0
   21268:	d1a2      	bne.n	211b0 <_wcsnrtombs_l+0x18>
   2126a:	f04f 33ff 	mov.w	r3, #4294967295
   2126e:	9314      	str	r3, [sp, #80]	@ 0x50
   21270:	e7a1      	b.n	211b6 <_wcsnrtombs_l+0x1e>
   21272:	f8dd e008 	ldr.w	lr, [sp, #8]
   21276:	4606      	mov	r6, r0
   21278:	218a      	movs	r1, #138	@ 0x8a
   2127a:	2200      	movs	r2, #0
   2127c:	4630      	mov	r0, r6
   2127e:	f8ce 1000 	str.w	r1, [lr]
   21282:	603a      	str	r2, [r7, #0]
   21284:	b00b      	add	sp, #44	@ 0x2c
   21286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2128a:	9e14      	ldr	r6, [sp, #80]	@ 0x50
   2128c:	e7bf      	b.n	2120e <_wcsnrtombs_l+0x76>
   2128e:	4666      	mov	r6, ip
   21290:	e7bd      	b.n	2120e <_wcsnrtombs_l+0x76>
   21292:	bf00      	nop

00021294 <_wcsnrtombs_r>:
   21294:	b510      	push	{r4, lr}
   21296:	b084      	sub	sp, #16
   21298:	4c05      	ldr	r4, [pc, #20]	@ (212b0 <_wcsnrtombs_r+0x1c>)
   2129a:	9806      	ldr	r0, [sp, #24]
   2129c:	9000      	str	r0, [sp, #0]
   2129e:	9807      	ldr	r0, [sp, #28]
   212a0:	9001      	str	r0, [sp, #4]
   212a2:	4804      	ldr	r0, [pc, #16]	@ (212b4 <_wcsnrtombs_r+0x20>)
   212a4:	6800      	ldr	r0, [r0, #0]
   212a6:	9402      	str	r4, [sp, #8]
   212a8:	f7ff ff76 	bl	21198 <_wcsnrtombs_l>
   212ac:	b004      	add	sp, #16
   212ae:	bd10      	pop	{r4, pc}
   212b0:	1000121c 	.word	0x1000121c
   212b4:	100010e8 	.word	0x100010e8

000212b8 <fiprintf>:
   212b8:	b40e      	push	{r1, r2, r3}
   212ba:	b510      	push	{r4, lr}
   212bc:	b083      	sub	sp, #12
   212be:	ab05      	add	r3, sp, #20
   212c0:	4c06      	ldr	r4, [pc, #24]	@ (212dc <fiprintf+0x24>)
   212c2:	f853 2b04 	ldr.w	r2, [r3], #4
   212c6:	9301      	str	r3, [sp, #4]
   212c8:	4601      	mov	r1, r0
   212ca:	6820      	ldr	r0, [r4, #0]
   212cc:	f000 f844 	bl	21358 <_vfiprintf_r>
   212d0:	b003      	add	sp, #12
   212d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   212d6:	b003      	add	sp, #12
   212d8:	4770      	bx	lr
   212da:	bf00      	nop
   212dc:	100010e8 	.word	0x100010e8

000212e0 <__sprint_r.part.0>:
   212e0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   212e4:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
   212e6:	049c      	lsls	r4, r3, #18
   212e8:	4690      	mov	r8, r2
   212ea:	d52e      	bpl.n	2134a <__sprint_r.part.0+0x6a>
   212ec:	6893      	ldr	r3, [r2, #8]
   212ee:	6812      	ldr	r2, [r2, #0]
   212f0:	b34b      	cbz	r3, 21346 <__sprint_r.part.0+0x66>
   212f2:	460d      	mov	r5, r1
   212f4:	4606      	mov	r6, r0
   212f6:	f102 0908 	add.w	r9, r2, #8
   212fa:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
   212fe:	ea5f 079a 	movs.w	r7, sl, lsr #2
   21302:	d016      	beq.n	21332 <__sprint_r.part.0+0x52>
   21304:	f1a2 0b04 	sub.w	fp, r2, #4
   21308:	2400      	movs	r4, #0
   2130a:	e001      	b.n	21310 <__sprint_r.part.0+0x30>
   2130c:	42a7      	cmp	r7, r4
   2130e:	d00e      	beq.n	2132e <__sprint_r.part.0+0x4e>
   21310:	f85b 1f04 	ldr.w	r1, [fp, #4]!
   21314:	462a      	mov	r2, r5
   21316:	4630      	mov	r0, r6
   21318:	f001 fa50 	bl	227bc <_fputwc_r>
   2131c:	1c43      	adds	r3, r0, #1
   2131e:	f104 0401 	add.w	r4, r4, #1
   21322:	d1f3      	bne.n	2130c <__sprint_r.part.0+0x2c>
   21324:	2300      	movs	r3, #0
   21326:	e9c8 3301 	strd	r3, r3, [r8, #4]
   2132a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2132e:	f8d8 3008 	ldr.w	r3, [r8, #8]
   21332:	f02a 0a03 	bic.w	sl, sl, #3
   21336:	eba3 030a 	sub.w	r3, r3, sl
   2133a:	f8c8 3008 	str.w	r3, [r8, #8]
   2133e:	f109 0908 	add.w	r9, r9, #8
   21342:	2b00      	cmp	r3, #0
   21344:	d1d9      	bne.n	212fa <__sprint_r.part.0+0x1a>
   21346:	2000      	movs	r0, #0
   21348:	e7ec      	b.n	21324 <__sprint_r.part.0+0x44>
   2134a:	f001 f819 	bl	22380 <__sfvwrite_r>
   2134e:	2300      	movs	r3, #0
   21350:	e9c8 3301 	strd	r3, r3, [r8, #4]
   21354:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021358 <_vfiprintf_r>:
   21358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2135c:	b0c7      	sub	sp, #284	@ 0x11c
   2135e:	af16      	add	r7, sp, #88	@ 0x58
   21360:	4683      	mov	fp, r0
   21362:	9103      	str	r1, [sp, #12]
   21364:	9206      	str	r2, [sp, #24]
   21366:	2100      	movs	r1, #0
   21368:	2208      	movs	r2, #8
   2136a:	4638      	mov	r0, r7
   2136c:	461c      	mov	r4, r3
   2136e:	930a      	str	r3, [sp, #40]	@ 0x28
   21370:	f7fd f9bc 	bl	1e6ec <memset>
   21374:	f1bb 0f00 	cmp.w	fp, #0
   21378:	d004      	beq.n	21384 <_vfiprintf_r+0x2c>
   2137a:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
   2137e:	2b00      	cmp	r3, #0
   21380:	f000 86b8 	beq.w	220f4 <_vfiprintf_r+0xd9c>
   21384:	9a03      	ldr	r2, [sp, #12]
   21386:	6e53      	ldr	r3, [r2, #100]	@ 0x64
   21388:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
   2138c:	07db      	lsls	r3, r3, #31
   2138e:	d402      	bmi.n	21396 <_vfiprintf_r+0x3e>
   21390:	0596      	lsls	r6, r2, #22
   21392:	f140 859d 	bpl.w	21ed0 <_vfiprintf_r+0xb78>
   21396:	0495      	lsls	r5, r2, #18
   21398:	d407      	bmi.n	213aa <_vfiprintf_r+0x52>
   2139a:	9903      	ldr	r1, [sp, #12]
   2139c:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
   2139e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
   213a2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
   213a6:	818a      	strh	r2, [r1, #12]
   213a8:	664b      	str	r3, [r1, #100]	@ 0x64
   213aa:	0710      	lsls	r0, r2, #28
   213ac:	f140 80c9 	bpl.w	21542 <_vfiprintf_r+0x1ea>
   213b0:	9b03      	ldr	r3, [sp, #12]
   213b2:	691b      	ldr	r3, [r3, #16]
   213b4:	2b00      	cmp	r3, #0
   213b6:	f000 80c4 	beq.w	21542 <_vfiprintf_r+0x1ea>
   213ba:	f002 031a 	and.w	r3, r2, #26
   213be:	2b0a      	cmp	r3, #10
   213c0:	f000 80ce 	beq.w	21560 <_vfiprintf_r+0x208>
   213c4:	2300      	movs	r3, #0
   213c6:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
   213ca:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
   213ce:	aa1d      	add	r2, sp, #116	@ 0x74
   213d0:	f8df a904 	ldr.w	sl, [pc, #2308]	@ 21cd8 <_vfiprintf_r+0x980>
   213d4:	930d      	str	r3, [sp, #52]	@ 0x34
   213d6:	921a      	str	r2, [sp, #104]	@ 0x68
   213d8:	4691      	mov	r9, r2
   213da:	9310      	str	r3, [sp, #64]	@ 0x40
   213dc:	9307      	str	r3, [sp, #28]
   213de:	9d06      	ldr	r5, [sp, #24]
   213e0:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
   213e4:	f7fd fa08 	bl	1e7f8 <__locale_mb_cur_max>
   213e8:	462a      	mov	r2, r5
   213ea:	4603      	mov	r3, r0
   213ec:	a914      	add	r1, sp, #80	@ 0x50
   213ee:	9700      	str	r7, [sp, #0]
   213f0:	4658      	mov	r0, fp
   213f2:	47a0      	blx	r4
   213f4:	2800      	cmp	r0, #0
   213f6:	f000 80d2 	beq.w	2159e <_vfiprintf_r+0x246>
   213fa:	f2c0 80c8 	blt.w	2158e <_vfiprintf_r+0x236>
   213fe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
   21400:	2a25      	cmp	r2, #37	@ 0x25
   21402:	4603      	mov	r3, r0
   21404:	d001      	beq.n	2140a <_vfiprintf_r+0xb2>
   21406:	441d      	add	r5, r3
   21408:	e7ea      	b.n	213e0 <_vfiprintf_r+0x88>
   2140a:	9b06      	ldr	r3, [sp, #24]
   2140c:	1aee      	subs	r6, r5, r3
   2140e:	4604      	mov	r4, r0
   21410:	f040 80c9 	bne.w	215a6 <_vfiprintf_r+0x24e>
   21414:	2300      	movs	r3, #0
   21416:	f04f 31ff 	mov.w	r1, #4294967295
   2141a:	786a      	ldrb	r2, [r5, #1]
   2141c:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
   21420:	9308      	str	r3, [sp, #32]
   21422:	1c6c      	adds	r4, r5, #1
   21424:	9105      	str	r1, [sp, #20]
   21426:	9302      	str	r3, [sp, #8]
   21428:	3401      	adds	r4, #1
   2142a:	f1a2 0320 	sub.w	r3, r2, #32
   2142e:	2b5a      	cmp	r3, #90	@ 0x5a
   21430:	f200 80ff 	bhi.w	21632 <_vfiprintf_r+0x2da>
   21434:	e8df f013 	tbh	[pc, r3, lsl #1]
   21438:	00fd0300 	.word	0x00fd0300
   2143c:	02fa00fd 	.word	0x02fa00fd
   21440:	00fd00fd 	.word	0x00fd00fd
   21444:	006b00fd 	.word	0x006b00fd
   21448:	00fd00fd 	.word	0x00fd00fd
   2144c:	032a0215 	.word	0x032a0215
   21450:	022000fd 	.word	0x022000fd
   21454:	00fd0310 	.word	0x00fd0310
   21458:	005b030a 	.word	0x005b030a
   2145c:	005b005b 	.word	0x005b005b
   21460:	005b005b 	.word	0x005b005b
   21464:	005b005b 	.word	0x005b005b
   21468:	005b005b 	.word	0x005b005b
   2146c:	00fd00fd 	.word	0x00fd00fd
   21470:	00fd00fd 	.word	0x00fd00fd
   21474:	00fd00fd 	.word	0x00fd00fd
   21478:	00fd00fd 	.word	0x00fd00fd
   2147c:	01cb00fd 	.word	0x01cb00fd
   21480:	00fd025a 	.word	0x00fd025a
   21484:	00fd00fd 	.word	0x00fd00fd
   21488:	00fd00fd 	.word	0x00fd00fd
   2148c:	00fd00fd 	.word	0x00fd00fd
   21490:	00fd00fd 	.word	0x00fd00fd
   21494:	022600fd 	.word	0x022600fd
   21498:	00fd00fd 	.word	0x00fd00fd
   2149c:	01a300fd 	.word	0x01a300fd
   214a0:	027300fd 	.word	0x027300fd
   214a4:	00fd00fd 	.word	0x00fd00fd
   214a8:	00fd058c 	.word	0x00fd058c
   214ac:	00fd00fd 	.word	0x00fd00fd
   214b0:	00fd00fd 	.word	0x00fd00fd
   214b4:	00fd00fd 	.word	0x00fd00fd
   214b8:	00fd00fd 	.word	0x00fd00fd
   214bc:	01cb00fd 	.word	0x01cb00fd
   214c0:	00fd01f0 	.word	0x00fd01f0
   214c4:	00fd00fd 	.word	0x00fd00fd
   214c8:	01f002c1 	.word	0x01f002c1
   214cc:	00fd007f 	.word	0x00fd007f
   214d0:	00fd032f 	.word	0x00fd032f
   214d4:	058902eb 	.word	0x058902eb
   214d8:	007f02ca 	.word	0x007f02ca
   214dc:	01a300fd 	.word	0x01a300fd
   214e0:	0586007d 	.word	0x0586007d
   214e4:	00fd00fd 	.word	0x00fd00fd
   214e8:	00fd05af 	.word	0x00fd05af
   214ec:	007d      	.short	0x007d
   214ee:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
   214f2:	2200      	movs	r2, #0
   214f4:	4611      	mov	r1, r2
   214f6:	f814 2b01 	ldrb.w	r2, [r4], #1
   214fa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   214fe:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   21502:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
   21506:	2b09      	cmp	r3, #9
   21508:	d9f5      	bls.n	214f6 <_vfiprintf_r+0x19e>
   2150a:	9108      	str	r1, [sp, #32]
   2150c:	e78d      	b.n	2142a <_vfiprintf_r+0xd2>
   2150e:	4658      	mov	r0, fp
   21510:	f7fd f978 	bl	1e804 <_localeconv_r>
   21514:	6843      	ldr	r3, [r0, #4]
   21516:	9310      	str	r3, [sp, #64]	@ 0x40
   21518:	4618      	mov	r0, r3
   2151a:	f7f6 fed1 	bl	182c0 <strlen>
   2151e:	900f      	str	r0, [sp, #60]	@ 0x3c
   21520:	4605      	mov	r5, r0
   21522:	4658      	mov	r0, fp
   21524:	f7fd f96e 	bl	1e804 <_localeconv_r>
   21528:	6883      	ldr	r3, [r0, #8]
   2152a:	930e      	str	r3, [sp, #56]	@ 0x38
   2152c:	2d00      	cmp	r5, #0
   2152e:	f040 84e3 	bne.w	21ef8 <_vfiprintf_r+0xba0>
   21532:	7822      	ldrb	r2, [r4, #0]
   21534:	e778      	b.n	21428 <_vfiprintf_r+0xd0>
   21536:	9b02      	ldr	r3, [sp, #8]
   21538:	7822      	ldrb	r2, [r4, #0]
   2153a:	f043 0320 	orr.w	r3, r3, #32
   2153e:	9302      	str	r3, [sp, #8]
   21540:	e772      	b.n	21428 <_vfiprintf_r+0xd0>
   21542:	9d03      	ldr	r5, [sp, #12]
   21544:	4658      	mov	r0, fp
   21546:	4629      	mov	r1, r5
   21548:	f001 f89a 	bl	22680 <__swsetup_r>
   2154c:	2800      	cmp	r0, #0
   2154e:	f040 86a3 	bne.w	22298 <_vfiprintf_r+0xf40>
   21552:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   21556:	f002 031a 	and.w	r3, r2, #26
   2155a:	2b0a      	cmp	r3, #10
   2155c:	f47f af32 	bne.w	213c4 <_vfiprintf_r+0x6c>
   21560:	9903      	ldr	r1, [sp, #12]
   21562:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
   21566:	2b00      	cmp	r3, #0
   21568:	f6ff af2c 	blt.w	213c4 <_vfiprintf_r+0x6c>
   2156c:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
   2156e:	07db      	lsls	r3, r3, #31
   21570:	d402      	bmi.n	21578 <_vfiprintf_r+0x220>
   21572:	0597      	lsls	r7, r2, #22
   21574:	f140 865b 	bpl.w	2222e <_vfiprintf_r+0xed6>
   21578:	9a06      	ldr	r2, [sp, #24]
   2157a:	9903      	ldr	r1, [sp, #12]
   2157c:	4623      	mov	r3, r4
   2157e:	4658      	mov	r0, fp
   21580:	f000 febe 	bl	22300 <__sbprintf>
   21584:	9007      	str	r0, [sp, #28]
   21586:	9807      	ldr	r0, [sp, #28]
   21588:	b047      	add	sp, #284	@ 0x11c
   2158a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2158e:	2208      	movs	r2, #8
   21590:	2100      	movs	r1, #0
   21592:	4638      	mov	r0, r7
   21594:	f7fd f8aa 	bl	1e6ec <memset>
   21598:	2301      	movs	r3, #1
   2159a:	441d      	add	r5, r3
   2159c:	e720      	b.n	213e0 <_vfiprintf_r+0x88>
   2159e:	9b06      	ldr	r3, [sp, #24]
   215a0:	1aee      	subs	r6, r5, r3
   215a2:	4604      	mov	r4, r0
   215a4:	d012      	beq.n	215cc <_vfiprintf_r+0x274>
   215a6:	9b06      	ldr	r3, [sp, #24]
   215a8:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
   215aa:	e9c9 3600 	strd	r3, r6, [r9]
   215ae:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
   215b0:	3301      	adds	r3, #1
   215b2:	4432      	add	r2, r6
   215b4:	2b07      	cmp	r3, #7
   215b6:	921c      	str	r2, [sp, #112]	@ 0x70
   215b8:	931b      	str	r3, [sp, #108]	@ 0x6c
   215ba:	dc11      	bgt.n	215e0 <_vfiprintf_r+0x288>
   215bc:	f109 0908 	add.w	r9, r9, #8
   215c0:	9b07      	ldr	r3, [sp, #28]
   215c2:	4433      	add	r3, r6
   215c4:	9307      	str	r3, [sp, #28]
   215c6:	2c00      	cmp	r4, #0
   215c8:	f47f af24 	bne.w	21414 <_vfiprintf_r+0xbc>
   215cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
   215ce:	2b00      	cmp	r3, #0
   215d0:	f040 864d 	bne.w	2226e <_vfiprintf_r+0xf16>
   215d4:	9b03      	ldr	r3, [sp, #12]
   215d6:	2200      	movs	r2, #0
   215d8:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
   215dc:	921b      	str	r2, [sp, #108]	@ 0x6c
   215de:	e01c      	b.n	2161a <_vfiprintf_r+0x2c2>
   215e0:	2a00      	cmp	r2, #0
   215e2:	f000 842d 	beq.w	21e40 <_vfiprintf_r+0xae8>
   215e6:	9903      	ldr	r1, [sp, #12]
   215e8:	aa1a      	add	r2, sp, #104	@ 0x68
   215ea:	4658      	mov	r0, fp
   215ec:	f7ff fe78 	bl	212e0 <__sprint_r.part.0>
   215f0:	b980      	cbnz	r0, 21614 <_vfiprintf_r+0x2bc>
   215f2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   215f6:	e7e3      	b.n	215c0 <_vfiprintf_r+0x268>
   215f8:	9903      	ldr	r1, [sp, #12]
   215fa:	aa1a      	add	r2, sp, #104	@ 0x68
   215fc:	4658      	mov	r0, fp
   215fe:	f7ff fe6f 	bl	212e0 <__sprint_r.part.0>
   21602:	2800      	cmp	r0, #0
   21604:	f000 80a6 	beq.w	21754 <_vfiprintf_r+0x3fc>
   21608:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   2160a:	b11b      	cbz	r3, 21614 <_vfiprintf_r+0x2bc>
   2160c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
   2160e:	4658      	mov	r0, fp
   21610:	f7fe f9a4 	bl	1f95c <_free_r>
   21614:	9b03      	ldr	r3, [sp, #12]
   21616:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
   2161a:	9a03      	ldr	r2, [sp, #12]
   2161c:	6e52      	ldr	r2, [r2, #100]	@ 0x64
   2161e:	07d1      	lsls	r1, r2, #31
   21620:	f140 80a3 	bpl.w	2176a <_vfiprintf_r+0x412>
   21624:	065b      	lsls	r3, r3, #25
   21626:	f100 8643 	bmi.w	222b0 <_vfiprintf_r+0xf58>
   2162a:	9807      	ldr	r0, [sp, #28]
   2162c:	b047      	add	sp, #284	@ 0x11c
   2162e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21632:	9406      	str	r4, [sp, #24]
   21634:	2a00      	cmp	r2, #0
   21636:	d0c9      	beq.n	215cc <_vfiprintf_r+0x274>
   21638:	2300      	movs	r3, #0
   2163a:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
   2163e:	2301      	movs	r3, #1
   21640:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
   21644:	9304      	str	r3, [sp, #16]
   21646:	9309      	str	r3, [sp, #36]	@ 0x24
   21648:	ac2d      	add	r4, sp, #180	@ 0xb4
   2164a:	2300      	movs	r3, #0
   2164c:	930b      	str	r3, [sp, #44]	@ 0x2c
   2164e:	9305      	str	r3, [sp, #20]
   21650:	9b02      	ldr	r3, [sp, #8]
   21652:	f013 0302 	ands.w	r3, r3, #2
   21656:	d002      	beq.n	2165e <_vfiprintf_r+0x306>
   21658:	9a04      	ldr	r2, [sp, #16]
   2165a:	3202      	adds	r2, #2
   2165c:	9204      	str	r2, [sp, #16]
   2165e:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
   21662:	9d02      	ldr	r5, [sp, #8]
   21664:	1c50      	adds	r0, r2, #1
   21666:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
   2166a:	4601      	mov	r1, r0
   2166c:	950c      	str	r5, [sp, #48]	@ 0x30
   2166e:	d105      	bne.n	2167c <_vfiprintf_r+0x324>
   21670:	9d08      	ldr	r5, [sp, #32]
   21672:	9e04      	ldr	r6, [sp, #16]
   21674:	1bad      	subs	r5, r5, r6
   21676:	2d00      	cmp	r5, #0
   21678:	f300 8332 	bgt.w	21ce0 <_vfiprintf_r+0x988>
   2167c:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
   21680:	b188      	cbz	r0, 216a6 <_vfiprintf_r+0x34e>
   21682:	2201      	movs	r2, #1
   21684:	f10c 0c01 	add.w	ip, ip, #1
   21688:	f8c9 2004 	str.w	r2, [r9, #4]
   2168c:	2907      	cmp	r1, #7
   2168e:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
   21692:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
   21696:	f8c9 2000 	str.w	r2, [r9]
   2169a:	f300 82e1 	bgt.w	21c60 <_vfiprintf_r+0x908>
   2169e:	460a      	mov	r2, r1
   216a0:	f109 0908 	add.w	r9, r9, #8
   216a4:	3101      	adds	r1, #1
   216a6:	b1eb      	cbz	r3, 216e4 <_vfiprintf_r+0x38c>
   216a8:	ab13      	add	r3, sp, #76	@ 0x4c
   216aa:	f10c 0c02 	add.w	ip, ip, #2
   216ae:	f8c9 3000 	str.w	r3, [r9]
   216b2:	2907      	cmp	r1, #7
   216b4:	f04f 0302 	mov.w	r3, #2
   216b8:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
   216bc:	f8c9 3004 	str.w	r3, [r9, #4]
   216c0:	f340 82ec 	ble.w	21c9c <_vfiprintf_r+0x944>
   216c4:	f1bc 0f00 	cmp.w	ip, #0
   216c8:	f000 83db 	beq.w	21e82 <_vfiprintf_r+0xb2a>
   216cc:	9903      	ldr	r1, [sp, #12]
   216ce:	aa1a      	add	r2, sp, #104	@ 0x68
   216d0:	4658      	mov	r0, fp
   216d2:	f7ff fe05 	bl	212e0 <__sprint_r.part.0>
   216d6:	2800      	cmp	r0, #0
   216d8:	d196      	bne.n	21608 <_vfiprintf_r+0x2b0>
   216da:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
   216de:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   216e2:	1c51      	adds	r1, r2, #1
   216e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
   216e6:	2b80      	cmp	r3, #128	@ 0x80
   216e8:	f000 8213 	beq.w	21b12 <_vfiprintf_r+0x7ba>
   216ec:	9b05      	ldr	r3, [sp, #20]
   216ee:	9809      	ldr	r0, [sp, #36]	@ 0x24
   216f0:	1a1d      	subs	r5, r3, r0
   216f2:	2d00      	cmp	r5, #0
   216f4:	f300 8268 	bgt.w	21bc8 <_vfiprintf_r+0x870>
   216f8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
   216fa:	f8c9 4000 	str.w	r4, [r9]
   216fe:	eb02 030c 	add.w	r3, r2, ip
   21702:	2907      	cmp	r1, #7
   21704:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
   21708:	f8c9 2004 	str.w	r2, [r9, #4]
   2170c:	f340 81fe 	ble.w	21b0c <_vfiprintf_r+0x7b4>
   21710:	2b00      	cmp	r3, #0
   21712:	f000 832c 	beq.w	21d6e <_vfiprintf_r+0xa16>
   21716:	9903      	ldr	r1, [sp, #12]
   21718:	aa1a      	add	r2, sp, #104	@ 0x68
   2171a:	4658      	mov	r0, fp
   2171c:	f7ff fde0 	bl	212e0 <__sprint_r.part.0>
   21720:	2800      	cmp	r0, #0
   21722:	f47f af71 	bne.w	21608 <_vfiprintf_r+0x2b0>
   21726:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
   21728:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   2172c:	9a02      	ldr	r2, [sp, #8]
   2172e:	0750      	lsls	r0, r2, #29
   21730:	d505      	bpl.n	2173e <_vfiprintf_r+0x3e6>
   21732:	9a08      	ldr	r2, [sp, #32]
   21734:	9904      	ldr	r1, [sp, #16]
   21736:	1a54      	subs	r4, r2, r1
   21738:	2c00      	cmp	r4, #0
   2173a:	f300 8323 	bgt.w	21d84 <_vfiprintf_r+0xa2c>
   2173e:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
   21742:	9804      	ldr	r0, [sp, #16]
   21744:	4281      	cmp	r1, r0
   21746:	bfac      	ite	ge
   21748:	1852      	addge	r2, r2, r1
   2174a:	1812      	addlt	r2, r2, r0
   2174c:	9207      	str	r2, [sp, #28]
   2174e:	2b00      	cmp	r3, #0
   21750:	f47f af52 	bne.w	215f8 <_vfiprintf_r+0x2a0>
   21754:	2300      	movs	r3, #0
   21756:	931b      	str	r3, [sp, #108]	@ 0x6c
   21758:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   2175a:	b11b      	cbz	r3, 21764 <_vfiprintf_r+0x40c>
   2175c:	4619      	mov	r1, r3
   2175e:	4658      	mov	r0, fp
   21760:	f7fe f8fc 	bl	1f95c <_free_r>
   21764:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21768:	e639      	b.n	213de <_vfiprintf_r+0x86>
   2176a:	059a      	lsls	r2, r3, #22
   2176c:	f53f af5a 	bmi.w	21624 <_vfiprintf_r+0x2cc>
   21770:	9c03      	ldr	r4, [sp, #12]
   21772:	6da0      	ldr	r0, [r4, #88]	@ 0x58
   21774:	f7fd f8a4 	bl	1e8c0 <__retarget_lock_release_recursive>
   21778:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   2177c:	e752      	b.n	21624 <_vfiprintf_r+0x2cc>
   2177e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
   21780:	9406      	str	r4, [sp, #24]
   21782:	f856 4b04 	ldr.w	r4, [r6], #4
   21786:	2300      	movs	r3, #0
   21788:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
   2178c:	2c00      	cmp	r4, #0
   2178e:	f000 84c9 	beq.w	22124 <_vfiprintf_r+0xdcc>
   21792:	2a53      	cmp	r2, #83	@ 0x53
   21794:	f000 8422 	beq.w	21fdc <_vfiprintf_r+0xc84>
   21798:	9b02      	ldr	r3, [sp, #8]
   2179a:	f013 0510 	ands.w	r5, r3, #16
   2179e:	f040 841d 	bne.w	21fdc <_vfiprintf_r+0xc84>
   217a2:	9b05      	ldr	r3, [sp, #20]
   217a4:	1c5a      	adds	r2, r3, #1
   217a6:	f000 854e 	beq.w	22246 <_vfiprintf_r+0xeee>
   217aa:	461a      	mov	r2, r3
   217ac:	4629      	mov	r1, r5
   217ae:	4620      	mov	r0, r4
   217b0:	f7f6 fd26 	bl	18200 <memchr>
   217b4:	900b      	str	r0, [sp, #44]	@ 0x2c
   217b6:	2800      	cmp	r0, #0
   217b8:	f000 853e 	beq.w	22238 <_vfiprintf_r+0xee0>
   217bc:	1b03      	subs	r3, r0, r4
   217be:	9309      	str	r3, [sp, #36]	@ 0x24
   217c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   217c4:	9505      	str	r5, [sp, #20]
   217c6:	960a      	str	r6, [sp, #40]	@ 0x28
   217c8:	9304      	str	r3, [sp, #16]
   217ca:	950b      	str	r5, [sp, #44]	@ 0x2c
   217cc:	e18d      	b.n	21aea <_vfiprintf_r+0x792>
   217ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   217d0:	9406      	str	r4, [sp, #24]
   217d2:	2a43      	cmp	r2, #67	@ 0x43
   217d4:	f103 0504 	add.w	r5, r3, #4
   217d8:	d003      	beq.n	217e2 <_vfiprintf_r+0x48a>
   217da:	9b02      	ldr	r3, [sp, #8]
   217dc:	06de      	lsls	r6, r3, #27
   217de:	f140 83e5 	bpl.w	21fac <_vfiprintf_r+0xc54>
   217e2:	2208      	movs	r2, #8
   217e4:	2100      	movs	r1, #0
   217e6:	a818      	add	r0, sp, #96	@ 0x60
   217e8:	f7fc ff80 	bl	1e6ec <memset>
   217ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   217ee:	ac2d      	add	r4, sp, #180	@ 0xb4
   217f0:	681a      	ldr	r2, [r3, #0]
   217f2:	4621      	mov	r1, r4
   217f4:	ab18      	add	r3, sp, #96	@ 0x60
   217f6:	4658      	mov	r0, fp
   217f8:	f7ff f854 	bl	208a4 <_wcrtomb_r>
   217fc:	4603      	mov	r3, r0
   217fe:	3301      	adds	r3, #1
   21800:	9009      	str	r0, [sp, #36]	@ 0x24
   21802:	f000 8541 	beq.w	22288 <_vfiprintf_r+0xf30>
   21806:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   21808:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   2180c:	9304      	str	r3, [sp, #16]
   2180e:	2300      	movs	r3, #0
   21810:	950a      	str	r5, [sp, #40]	@ 0x28
   21812:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
   21816:	e718      	b.n	2164a <_vfiprintf_r+0x2f2>
   21818:	9b02      	ldr	r3, [sp, #8]
   2181a:	9406      	str	r4, [sp, #24]
   2181c:	069c      	lsls	r4, r3, #26
   2181e:	d56d      	bpl.n	218fc <_vfiprintf_r+0x5a4>
   21820:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   21822:	3307      	adds	r3, #7
   21824:	f023 0307 	bic.w	r3, r3, #7
   21828:	4619      	mov	r1, r3
   2182a:	685a      	ldr	r2, [r3, #4]
   2182c:	f851 3b08 	ldr.w	r3, [r1], #8
   21830:	910a      	str	r1, [sp, #40]	@ 0x28
   21832:	4611      	mov	r1, r2
   21834:	2a00      	cmp	r2, #0
   21836:	f2c0 8137 	blt.w	21aa8 <_vfiprintf_r+0x750>
   2183a:	9a05      	ldr	r2, [sp, #20]
   2183c:	3201      	adds	r2, #1
   2183e:	f000 8140 	beq.w	21ac2 <_vfiprintf_r+0x76a>
   21842:	9a02      	ldr	r2, [sp, #8]
   21844:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
   21848:	9202      	str	r2, [sp, #8]
   2184a:	ea53 0201 	orrs.w	r2, r3, r1
   2184e:	f040 8138 	bne.w	21ac2 <_vfiprintf_r+0x76a>
   21852:	9b05      	ldr	r3, [sp, #20]
   21854:	2b00      	cmp	r3, #0
   21856:	f040 8508 	bne.w	2226a <_vfiprintf_r+0xf12>
   2185a:	9304      	str	r3, [sp, #16]
   2185c:	9309      	str	r3, [sp, #36]	@ 0x24
   2185e:	ac46      	add	r4, sp, #280	@ 0x118
   21860:	e141      	b.n	21ae6 <_vfiprintf_r+0x78e>
   21862:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   21864:	f853 2b04 	ldr.w	r2, [r3], #4
   21868:	9208      	str	r2, [sp, #32]
   2186a:	2a00      	cmp	r2, #0
   2186c:	f280 8328 	bge.w	21ec0 <_vfiprintf_r+0xb68>
   21870:	9a08      	ldr	r2, [sp, #32]
   21872:	930a      	str	r3, [sp, #40]	@ 0x28
   21874:	4252      	negs	r2, r2
   21876:	9208      	str	r2, [sp, #32]
   21878:	9b02      	ldr	r3, [sp, #8]
   2187a:	7822      	ldrb	r2, [r4, #0]
   2187c:	f043 0304 	orr.w	r3, r3, #4
   21880:	9302      	str	r3, [sp, #8]
   21882:	e5d1      	b.n	21428 <_vfiprintf_r+0xd0>
   21884:	9b02      	ldr	r3, [sp, #8]
   21886:	9406      	str	r4, [sp, #24]
   21888:	f043 0210 	orr.w	r2, r3, #16
   2188c:	f012 0120 	ands.w	r1, r2, #32
   21890:	f000 82e8 	beq.w	21e64 <_vfiprintf_r+0xb0c>
   21894:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   21896:	3307      	adds	r3, #7
   21898:	f023 0307 	bic.w	r3, r3, #7
   2189c:	4618      	mov	r0, r3
   2189e:	6859      	ldr	r1, [r3, #4]
   218a0:	f850 3b08 	ldr.w	r3, [r0], #8
   218a4:	900a      	str	r0, [sp, #40]	@ 0x28
   218a6:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
   218aa:	9402      	str	r4, [sp, #8]
   218ac:	9c05      	ldr	r4, [sp, #20]
   218ae:	2000      	movs	r0, #0
   218b0:	3401      	adds	r4, #1
   218b2:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
   218b6:	d05d      	beq.n	21974 <_vfiprintf_r+0x61c>
   218b8:	ea53 0401 	orrs.w	r4, r3, r1
   218bc:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
   218c0:	f040 8414 	bne.w	220ec <_vfiprintf_r+0xd94>
   218c4:	9c02      	ldr	r4, [sp, #8]
   218c6:	9202      	str	r2, [sp, #8]
   218c8:	9b05      	ldr	r3, [sp, #20]
   218ca:	2b00      	cmp	r3, #0
   218cc:	d14a      	bne.n	21964 <_vfiprintf_r+0x60c>
   218ce:	2800      	cmp	r0, #0
   218d0:	f040 82f1 	bne.w	21eb6 <_vfiprintf_r+0xb5e>
   218d4:	f014 0201 	ands.w	r2, r4, #1
   218d8:	9209      	str	r2, [sp, #36]	@ 0x24
   218da:	f000 82f5 	beq.w	21ec8 <_vfiprintf_r+0xb70>
   218de:	2330      	movs	r3, #48	@ 0x30
   218e0:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
   218e4:	9204      	str	r2, [sp, #16]
   218e6:	f20d 1417 	addw	r4, sp, #279	@ 0x117
   218ea:	e0fc      	b.n	21ae6 <_vfiprintf_r+0x78e>
   218ec:	9b02      	ldr	r3, [sp, #8]
   218ee:	9406      	str	r4, [sp, #24]
   218f0:	f043 0310 	orr.w	r3, r3, #16
   218f4:	9302      	str	r3, [sp, #8]
   218f6:	9b02      	ldr	r3, [sp, #8]
   218f8:	069c      	lsls	r4, r3, #26
   218fa:	d491      	bmi.n	21820 <_vfiprintf_r+0x4c8>
   218fc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
   218fe:	f852 3b04 	ldr.w	r3, [r2], #4
   21902:	920a      	str	r2, [sp, #40]	@ 0x28
   21904:	9a02      	ldr	r2, [sp, #8]
   21906:	06d0      	lsls	r0, r2, #27
   21908:	f100 82f3 	bmi.w	21ef2 <_vfiprintf_r+0xb9a>
   2190c:	9a02      	ldr	r2, [sp, #8]
   2190e:	0651      	lsls	r1, r2, #25
   21910:	f140 82eb 	bpl.w	21eea <_vfiprintf_r+0xb92>
   21914:	f343 31c0 	sbfx	r1, r3, #15, #1
   21918:	460a      	mov	r2, r1
   2191a:	b21b      	sxth	r3, r3
   2191c:	e78a      	b.n	21834 <_vfiprintf_r+0x4dc>
   2191e:	9b02      	ldr	r3, [sp, #8]
   21920:	9406      	str	r4, [sp, #24]
   21922:	f043 0410 	orr.w	r4, r3, #16
   21926:	f014 0120 	ands.w	r1, r4, #32
   2192a:	f000 828c 	beq.w	21e46 <_vfiprintf_r+0xaee>
   2192e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   21930:	3307      	adds	r3, #7
   21932:	f023 0307 	bic.w	r3, r3, #7
   21936:	461a      	mov	r2, r3
   21938:	6859      	ldr	r1, [r3, #4]
   2193a:	f852 3b08 	ldr.w	r3, [r2], #8
   2193e:	920a      	str	r2, [sp, #40]	@ 0x28
   21940:	2200      	movs	r2, #0
   21942:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
   21946:	9a05      	ldr	r2, [sp, #20]
   21948:	3201      	adds	r2, #1
   2194a:	f000 83d1 	beq.w	220f0 <_vfiprintf_r+0xd98>
   2194e:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
   21952:	9202      	str	r2, [sp, #8]
   21954:	ea53 0201 	orrs.w	r2, r3, r1
   21958:	f040 80b3 	bne.w	21ac2 <_vfiprintf_r+0x76a>
   2195c:	9b05      	ldr	r3, [sp, #20]
   2195e:	2001      	movs	r0, #1
   21960:	2b00      	cmp	r3, #0
   21962:	d0b4      	beq.n	218ce <_vfiprintf_r+0x576>
   21964:	2801      	cmp	r0, #1
   21966:	f000 8480 	beq.w	2226a <_vfiprintf_r+0xf12>
   2196a:	2300      	movs	r3, #0
   2196c:	2802      	cmp	r0, #2
   2196e:	4619      	mov	r1, r3
   21970:	f000 8199 	beq.w	21ca6 <_vfiprintf_r+0x94e>
   21974:	ac46      	add	r4, sp, #280	@ 0x118
   21976:	f003 0207 	and.w	r2, r3, #7
   2197a:	08db      	lsrs	r3, r3, #3
   2197c:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
   21980:	08c9      	lsrs	r1, r1, #3
   21982:	3230      	adds	r2, #48	@ 0x30
   21984:	ea53 0501 	orrs.w	r5, r3, r1
   21988:	4620      	mov	r0, r4
   2198a:	f804 2d01 	strb.w	r2, [r4, #-1]!
   2198e:	d1f2      	bne.n	21976 <_vfiprintf_r+0x61e>
   21990:	9b02      	ldr	r3, [sp, #8]
   21992:	07dd      	lsls	r5, r3, #31
   21994:	f140 8195 	bpl.w	21cc2 <_vfiprintf_r+0x96a>
   21998:	2a30      	cmp	r2, #48	@ 0x30
   2199a:	f000 8192 	beq.w	21cc2 <_vfiprintf_r+0x96a>
   2199e:	2330      	movs	r3, #48	@ 0x30
   219a0:	9a05      	ldr	r2, [sp, #20]
   219a2:	f804 3c01 	strb.w	r3, [r4, #-1]
   219a6:	3802      	subs	r0, #2
   219a8:	ab46      	add	r3, sp, #280	@ 0x118
   219aa:	1a1b      	subs	r3, r3, r0
   219ac:	429a      	cmp	r2, r3
   219ae:	bfb8      	it	lt
   219b0:	461a      	movlt	r2, r3
   219b2:	9309      	str	r3, [sp, #36]	@ 0x24
   219b4:	4604      	mov	r4, r0
   219b6:	9204      	str	r2, [sp, #16]
   219b8:	e095      	b.n	21ae6 <_vfiprintf_r+0x78e>
   219ba:	7822      	ldrb	r2, [r4, #0]
   219bc:	9b02      	ldr	r3, [sp, #8]
   219be:	2a68      	cmp	r2, #104	@ 0x68
   219c0:	f000 839d 	beq.w	220fe <_vfiprintf_r+0xda6>
   219c4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   219c8:	9302      	str	r3, [sp, #8]
   219ca:	e52d      	b.n	21428 <_vfiprintf_r+0xd0>
   219cc:	9b02      	ldr	r3, [sp, #8]
   219ce:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
   219d0:	9406      	str	r4, [sp, #24]
   219d2:	f043 0302 	orr.w	r3, r3, #2
   219d6:	9302      	str	r3, [sp, #8]
   219d8:	f852 3b04 	ldr.w	r3, [r2], #4
   219dc:	920a      	str	r2, [sp, #40]	@ 0x28
   219de:	f647 0230 	movw	r2, #30768	@ 0x7830
   219e2:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
   219e6:	4abb      	ldr	r2, [pc, #748]	@ (21cd4 <_vfiprintf_r+0x97c>)
   219e8:	920d      	str	r2, [sp, #52]	@ 0x34
   219ea:	2100      	movs	r1, #0
   219ec:	2200      	movs	r2, #0
   219ee:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
   219f2:	9a05      	ldr	r2, [sp, #20]
   219f4:	3201      	adds	r2, #1
   219f6:	f000 8156 	beq.w	21ca6 <_vfiprintf_r+0x94e>
   219fa:	9c02      	ldr	r4, [sp, #8]
   219fc:	ea53 0001 	orrs.w	r0, r3, r1
   21a00:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
   21a04:	9202      	str	r2, [sp, #8]
   21a06:	f040 814e 	bne.w	21ca6 <_vfiprintf_r+0x94e>
   21a0a:	2002      	movs	r0, #2
   21a0c:	e75c      	b.n	218c8 <_vfiprintf_r+0x570>
   21a0e:	9b02      	ldr	r3, [sp, #8]
   21a10:	9406      	str	r4, [sp, #24]
   21a12:	069b      	lsls	r3, r3, #26
   21a14:	f140 827f 	bpl.w	21f16 <_vfiprintf_r+0xbbe>
   21a18:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   21a1a:	9a07      	ldr	r2, [sp, #28]
   21a1c:	681b      	ldr	r3, [r3, #0]
   21a1e:	601a      	str	r2, [r3, #0]
   21a20:	17d2      	asrs	r2, r2, #31
   21a22:	605a      	str	r2, [r3, #4]
   21a24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   21a26:	3304      	adds	r3, #4
   21a28:	930a      	str	r3, [sp, #40]	@ 0x28
   21a2a:	e4d8      	b.n	213de <_vfiprintf_r+0x86>
   21a2c:	9b02      	ldr	r3, [sp, #8]
   21a2e:	7822      	ldrb	r2, [r4, #0]
   21a30:	f043 0301 	orr.w	r3, r3, #1
   21a34:	9302      	str	r3, [sp, #8]
   21a36:	e4f7      	b.n	21428 <_vfiprintf_r+0xd0>
   21a38:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
   21a3c:	7822      	ldrb	r2, [r4, #0]
   21a3e:	2b00      	cmp	r3, #0
   21a40:	f47f acf2 	bne.w	21428 <_vfiprintf_r+0xd0>
   21a44:	2320      	movs	r3, #32
   21a46:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
   21a4a:	e4ed      	b.n	21428 <_vfiprintf_r+0xd0>
   21a4c:	9b02      	ldr	r3, [sp, #8]
   21a4e:	7822      	ldrb	r2, [r4, #0]
   21a50:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
   21a54:	9302      	str	r3, [sp, #8]
   21a56:	e4e7      	b.n	21428 <_vfiprintf_r+0xd0>
   21a58:	4621      	mov	r1, r4
   21a5a:	f811 2b01 	ldrb.w	r2, [r1], #1
   21a5e:	2a2a      	cmp	r2, #42	@ 0x2a
   21a60:	f000 8433 	beq.w	222ca <_vfiprintf_r+0xf72>
   21a64:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
   21a68:	2b09      	cmp	r3, #9
   21a6a:	460c      	mov	r4, r1
   21a6c:	f200 83f6 	bhi.w	2225c <_vfiprintf_r+0xf04>
   21a70:	2200      	movs	r2, #0
   21a72:	4611      	mov	r1, r2
   21a74:	f814 2b01 	ldrb.w	r2, [r4], #1
   21a78:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   21a7c:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   21a80:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
   21a84:	2b09      	cmp	r3, #9
   21a86:	d9f5      	bls.n	21a74 <_vfiprintf_r+0x71c>
   21a88:	9105      	str	r1, [sp, #20]
   21a8a:	e4ce      	b.n	2142a <_vfiprintf_r+0xd2>
   21a8c:	232b      	movs	r3, #43	@ 0x2b
   21a8e:	7822      	ldrb	r2, [r4, #0]
   21a90:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
   21a94:	e4c8      	b.n	21428 <_vfiprintf_r+0xd0>
   21a96:	7822      	ldrb	r2, [r4, #0]
   21a98:	9b02      	ldr	r3, [sp, #8]
   21a9a:	2a6c      	cmp	r2, #108	@ 0x6c
   21a9c:	f000 8336 	beq.w	2210c <_vfiprintf_r+0xdb4>
   21aa0:	f043 0310 	orr.w	r3, r3, #16
   21aa4:	9302      	str	r3, [sp, #8]
   21aa6:	e4bf      	b.n	21428 <_vfiprintf_r+0xd0>
   21aa8:	222d      	movs	r2, #45	@ 0x2d
   21aaa:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
   21aae:	9a05      	ldr	r2, [sp, #20]
   21ab0:	425b      	negs	r3, r3
   21ab2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   21ab6:	3201      	adds	r2, #1
   21ab8:	d003      	beq.n	21ac2 <_vfiprintf_r+0x76a>
   21aba:	9a02      	ldr	r2, [sp, #8]
   21abc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
   21ac0:	9202      	str	r2, [sp, #8]
   21ac2:	2b0a      	cmp	r3, #10
   21ac4:	f171 0200 	sbcs.w	r2, r1, #0
   21ac8:	f080 82bd 	bcs.w	22046 <_vfiprintf_r+0xcee>
   21acc:	3330      	adds	r3, #48	@ 0x30
   21ace:	b2db      	uxtb	r3, r3
   21ad0:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
   21ad4:	9b05      	ldr	r3, [sp, #20]
   21ad6:	2b01      	cmp	r3, #1
   21ad8:	bfb8      	it	lt
   21ada:	2301      	movlt	r3, #1
   21adc:	9304      	str	r3, [sp, #16]
   21ade:	2301      	movs	r3, #1
   21ae0:	9309      	str	r3, [sp, #36]	@ 0x24
   21ae2:	f20d 1417 	addw	r4, sp, #279	@ 0x117
   21ae6:	2300      	movs	r3, #0
   21ae8:	930b      	str	r3, [sp, #44]	@ 0x2c
   21aea:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
   21aee:	2b00      	cmp	r3, #0
   21af0:	f43f adae 	beq.w	21650 <_vfiprintf_r+0x2f8>
   21af4:	9b04      	ldr	r3, [sp, #16]
   21af6:	3301      	adds	r3, #1
   21af8:	9304      	str	r3, [sp, #16]
   21afa:	e5a9      	b.n	21650 <_vfiprintf_r+0x2f8>
   21afc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   21afe:	941d      	str	r4, [sp, #116]	@ 0x74
   21b00:	2201      	movs	r2, #1
   21b02:	931e      	str	r3, [sp, #120]	@ 0x78
   21b04:	931c      	str	r3, [sp, #112]	@ 0x70
   21b06:	921b      	str	r2, [sp, #108]	@ 0x6c
   21b08:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21b0c:	f109 0908 	add.w	r9, r9, #8
   21b10:	e60c      	b.n	2172c <_vfiprintf_r+0x3d4>
   21b12:	9b08      	ldr	r3, [sp, #32]
   21b14:	9804      	ldr	r0, [sp, #16]
   21b16:	1a1d      	subs	r5, r3, r0
   21b18:	2d00      	cmp	r5, #0
   21b1a:	f77f ade7 	ble.w	216ec <_vfiprintf_r+0x394>
   21b1e:	2d10      	cmp	r5, #16
   21b20:	f340 83cb 	ble.w	222ba <_vfiprintf_r+0xf62>
   21b24:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 21cdc <_vfiprintf_r+0x984>
   21b28:	4643      	mov	r3, r8
   21b2a:	2610      	movs	r6, #16
   21b2c:	46a0      	mov	r8, r4
   21b2e:	4661      	mov	r1, ip
   21b30:	461c      	mov	r4, r3
   21b32:	e007      	b.n	21b44 <_vfiprintf_r+0x7ec>
   21b34:	f102 0c02 	add.w	ip, r2, #2
   21b38:	f109 0908 	add.w	r9, r9, #8
   21b3c:	4602      	mov	r2, r0
   21b3e:	3d10      	subs	r5, #16
   21b40:	2d10      	cmp	r5, #16
   21b42:	dd1a      	ble.n	21b7a <_vfiprintf_r+0x822>
   21b44:	1c50      	adds	r0, r2, #1
   21b46:	3110      	adds	r1, #16
   21b48:	2807      	cmp	r0, #7
   21b4a:	e9c9 4600 	strd	r4, r6, [r9]
   21b4e:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
   21b52:	ddef      	ble.n	21b34 <_vfiprintf_r+0x7dc>
   21b54:	aa1a      	add	r2, sp, #104	@ 0x68
   21b56:	2900      	cmp	r1, #0
   21b58:	d07c      	beq.n	21c54 <_vfiprintf_r+0x8fc>
   21b5a:	9903      	ldr	r1, [sp, #12]
   21b5c:	4658      	mov	r0, fp
   21b5e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21b62:	f7ff fbbd 	bl	212e0 <__sprint_r.part.0>
   21b66:	2800      	cmp	r0, #0
   21b68:	f47f ad4e 	bne.w	21608 <_vfiprintf_r+0x2b0>
   21b6c:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
   21b70:	3d10      	subs	r5, #16
   21b72:	2d10      	cmp	r5, #16
   21b74:	f102 0c01 	add.w	ip, r2, #1
   21b78:	dce4      	bgt.n	21b44 <_vfiprintf_r+0x7ec>
   21b7a:	4623      	mov	r3, r4
   21b7c:	4660      	mov	r0, ip
   21b7e:	4644      	mov	r4, r8
   21b80:	468c      	mov	ip, r1
   21b82:	4698      	mov	r8, r3
   21b84:	44ac      	add	ip, r5
   21b86:	2807      	cmp	r0, #7
   21b88:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
   21b8c:	f8c9 8000 	str.w	r8, [r9]
   21b90:	f8c9 5004 	str.w	r5, [r9, #4]
   21b94:	f340 81a4 	ble.w	21ee0 <_vfiprintf_r+0xb88>
   21b98:	f1bc 0f00 	cmp.w	ip, #0
   21b9c:	f000 8327 	beq.w	221ee <_vfiprintf_r+0xe96>
   21ba0:	9903      	ldr	r1, [sp, #12]
   21ba2:	aa1a      	add	r2, sp, #104	@ 0x68
   21ba4:	4658      	mov	r0, fp
   21ba6:	f7ff fb9b 	bl	212e0 <__sprint_r.part.0>
   21baa:	2800      	cmp	r0, #0
   21bac:	f47f ad2c 	bne.w	21608 <_vfiprintf_r+0x2b0>
   21bb0:	9b05      	ldr	r3, [sp, #20]
   21bb2:	9809      	ldr	r0, [sp, #36]	@ 0x24
   21bb4:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
   21bb8:	1a1d      	subs	r5, r3, r0
   21bba:	2d00      	cmp	r5, #0
   21bbc:	f102 0101 	add.w	r1, r2, #1
   21bc0:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21bc4:	f77f ad98 	ble.w	216f8 <_vfiprintf_r+0x3a0>
   21bc8:	2d10      	cmp	r5, #16
   21bca:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 21cdc <_vfiprintf_r+0x984>
   21bce:	dd2d      	ble.n	21c2c <_vfiprintf_r+0x8d4>
   21bd0:	462b      	mov	r3, r5
   21bd2:	2610      	movs	r6, #16
   21bd4:	4625      	mov	r5, r4
   21bd6:	4660      	mov	r0, ip
   21bd8:	461c      	mov	r4, r3
   21bda:	e007      	b.n	21bec <_vfiprintf_r+0x894>
   21bdc:	f102 0c02 	add.w	ip, r2, #2
   21be0:	f109 0908 	add.w	r9, r9, #8
   21be4:	460a      	mov	r2, r1
   21be6:	3c10      	subs	r4, #16
   21be8:	2c10      	cmp	r4, #16
   21bea:	dd1a      	ble.n	21c22 <_vfiprintf_r+0x8ca>
   21bec:	1c51      	adds	r1, r2, #1
   21bee:	4b3b      	ldr	r3, [pc, #236]	@ (21cdc <_vfiprintf_r+0x984>)
   21bf0:	3010      	adds	r0, #16
   21bf2:	2907      	cmp	r1, #7
   21bf4:	e9c9 3600 	strd	r3, r6, [r9]
   21bf8:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
   21bfc:	ddee      	ble.n	21bdc <_vfiprintf_r+0x884>
   21bfe:	aa1a      	add	r2, sp, #104	@ 0x68
   21c00:	b310      	cbz	r0, 21c48 <_vfiprintf_r+0x8f0>
   21c02:	9903      	ldr	r1, [sp, #12]
   21c04:	4658      	mov	r0, fp
   21c06:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21c0a:	f7ff fb69 	bl	212e0 <__sprint_r.part.0>
   21c0e:	2800      	cmp	r0, #0
   21c10:	f47f acfa 	bne.w	21608 <_vfiprintf_r+0x2b0>
   21c14:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
   21c18:	3c10      	subs	r4, #16
   21c1a:	2c10      	cmp	r4, #16
   21c1c:	f102 0c01 	add.w	ip, r2, #1
   21c20:	dce4      	bgt.n	21bec <_vfiprintf_r+0x894>
   21c22:	4623      	mov	r3, r4
   21c24:	4661      	mov	r1, ip
   21c26:	462c      	mov	r4, r5
   21c28:	4684      	mov	ip, r0
   21c2a:	461d      	mov	r5, r3
   21c2c:	44ac      	add	ip, r5
   21c2e:	2907      	cmp	r1, #7
   21c30:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
   21c34:	f8c9 8000 	str.w	r8, [r9]
   21c38:	f8c9 5004 	str.w	r5, [r9, #4]
   21c3c:	f300 80ed 	bgt.w	21e1a <_vfiprintf_r+0xac2>
   21c40:	f109 0908 	add.w	r9, r9, #8
   21c44:	3101      	adds	r1, #1
   21c46:	e557      	b.n	216f8 <_vfiprintf_r+0x3a0>
   21c48:	f04f 0c01 	mov.w	ip, #1
   21c4c:	4602      	mov	r2, r0
   21c4e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21c52:	e7c8      	b.n	21be6 <_vfiprintf_r+0x88e>
   21c54:	f04f 0c01 	mov.w	ip, #1
   21c58:	460a      	mov	r2, r1
   21c5a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21c5e:	e76e      	b.n	21b3e <_vfiprintf_r+0x7e6>
   21c60:	f1bc 0f00 	cmp.w	ip, #0
   21c64:	d00f      	beq.n	21c86 <_vfiprintf_r+0x92e>
   21c66:	9903      	ldr	r1, [sp, #12]
   21c68:	9311      	str	r3, [sp, #68]	@ 0x44
   21c6a:	aa1a      	add	r2, sp, #104	@ 0x68
   21c6c:	4658      	mov	r0, fp
   21c6e:	f7ff fb37 	bl	212e0 <__sprint_r.part.0>
   21c72:	2800      	cmp	r0, #0
   21c74:	f47f acc8 	bne.w	21608 <_vfiprintf_r+0x2b0>
   21c78:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
   21c7c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   21c7e:	1c51      	adds	r1, r2, #1
   21c80:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21c84:	e50f      	b.n	216a6 <_vfiprintf_r+0x34e>
   21c86:	2b00      	cmp	r3, #0
   21c88:	f000 8156 	beq.w	21f38 <_vfiprintf_r+0xbe0>
   21c8c:	2302      	movs	r3, #2
   21c8e:	931e      	str	r3, [sp, #120]	@ 0x78
   21c90:	469c      	mov	ip, r3
   21c92:	ab13      	add	r3, sp, #76	@ 0x4c
   21c94:	931d      	str	r3, [sp, #116]	@ 0x74
   21c96:	2101      	movs	r1, #1
   21c98:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21c9c:	460a      	mov	r2, r1
   21c9e:	f109 0908 	add.w	r9, r9, #8
   21ca2:	3101      	adds	r1, #1
   21ca4:	e51e      	b.n	216e4 <_vfiprintf_r+0x38c>
   21ca6:	980d      	ldr	r0, [sp, #52]	@ 0x34
   21ca8:	ac46      	add	r4, sp, #280	@ 0x118
   21caa:	f003 020f 	and.w	r2, r3, #15
   21cae:	091b      	lsrs	r3, r3, #4
   21cb0:	5c82      	ldrb	r2, [r0, r2]
   21cb2:	f804 2d01 	strb.w	r2, [r4, #-1]!
   21cb6:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
   21cba:	0909      	lsrs	r1, r1, #4
   21cbc:	ea53 0201 	orrs.w	r2, r3, r1
   21cc0:	d1f3      	bne.n	21caa <_vfiprintf_r+0x952>
   21cc2:	9a05      	ldr	r2, [sp, #20]
   21cc4:	ab46      	add	r3, sp, #280	@ 0x118
   21cc6:	1b1b      	subs	r3, r3, r4
   21cc8:	429a      	cmp	r2, r3
   21cca:	bfb8      	it	lt
   21ccc:	461a      	movlt	r2, r3
   21cce:	9309      	str	r3, [sp, #36]	@ 0x24
   21cd0:	9204      	str	r2, [sp, #16]
   21cd2:	e708      	b.n	21ae6 <_vfiprintf_r+0x78e>
   21cd4:	0002818c 	.word	0x0002818c
   21cd8:	1000121c 	.word	0x1000121c
   21cdc:	00028544 	.word	0x00028544
   21ce0:	2d10      	cmp	r5, #16
   21ce2:	f340 82bf 	ble.w	22264 <_vfiprintf_r+0xf0c>
   21ce6:	4eae      	ldr	r6, [pc, #696]	@ (21fa0 <_vfiprintf_r+0xc48>)
   21ce8:	9311      	str	r3, [sp, #68]	@ 0x44
   21cea:	4649      	mov	r1, r9
   21cec:	f04f 0810 	mov.w	r8, #16
   21cf0:	46a1      	mov	r9, r4
   21cf2:	4634      	mov	r4, r6
   21cf4:	4666      	mov	r6, ip
   21cf6:	e007      	b.n	21d08 <_vfiprintf_r+0x9b0>
   21cf8:	f102 0e02 	add.w	lr, r2, #2
   21cfc:	3108      	adds	r1, #8
   21cfe:	4602      	mov	r2, r0
   21d00:	3d10      	subs	r5, #16
   21d02:	2d10      	cmp	r5, #16
   21d04:	dd18      	ble.n	21d38 <_vfiprintf_r+0x9e0>
   21d06:	1c50      	adds	r0, r2, #1
   21d08:	3610      	adds	r6, #16
   21d0a:	2807      	cmp	r0, #7
   21d0c:	e9c1 4800 	strd	r4, r8, [r1]
   21d10:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
   21d14:	ddf0      	ble.n	21cf8 <_vfiprintf_r+0x9a0>
   21d16:	9903      	ldr	r1, [sp, #12]
   21d18:	aa1a      	add	r2, sp, #104	@ 0x68
   21d1a:	4658      	mov	r0, fp
   21d1c:	b316      	cbz	r6, 21d64 <_vfiprintf_r+0xa0c>
   21d1e:	f7ff fadf 	bl	212e0 <__sprint_r.part.0>
   21d22:	2800      	cmp	r0, #0
   21d24:	f47f ac70 	bne.w	21608 <_vfiprintf_r+0x2b0>
   21d28:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
   21d2c:	3d10      	subs	r5, #16
   21d2e:	2d10      	cmp	r5, #16
   21d30:	f102 0e01 	add.w	lr, r2, #1
   21d34:	a91d      	add	r1, sp, #116	@ 0x74
   21d36:	dce6      	bgt.n	21d06 <_vfiprintf_r+0x9ae>
   21d38:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   21d3a:	46b4      	mov	ip, r6
   21d3c:	4626      	mov	r6, r4
   21d3e:	464c      	mov	r4, r9
   21d40:	4689      	mov	r9, r1
   21d42:	44ac      	add	ip, r5
   21d44:	f1be 0f07 	cmp.w	lr, #7
   21d48:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
   21d4c:	f8c9 6000 	str.w	r6, [r9]
   21d50:	f8c9 5004 	str.w	r5, [r9, #4]
   21d54:	f300 809a 	bgt.w	21e8c <_vfiprintf_r+0xb34>
   21d58:	f109 0908 	add.w	r9, r9, #8
   21d5c:	f10e 0101 	add.w	r1, lr, #1
   21d60:	4672      	mov	r2, lr
   21d62:	e48b      	b.n	2167c <_vfiprintf_r+0x324>
   21d64:	4632      	mov	r2, r6
   21d66:	f04f 0e01 	mov.w	lr, #1
   21d6a:	a91d      	add	r1, sp, #116	@ 0x74
   21d6c:	e7c8      	b.n	21d00 <_vfiprintf_r+0x9a8>
   21d6e:	9a02      	ldr	r2, [sp, #8]
   21d70:	931b      	str	r3, [sp, #108]	@ 0x6c
   21d72:	0754      	lsls	r4, r2, #29
   21d74:	d548      	bpl.n	21e08 <_vfiprintf_r+0xab0>
   21d76:	9a08      	ldr	r2, [sp, #32]
   21d78:	9904      	ldr	r1, [sp, #16]
   21d7a:	1a54      	subs	r4, r2, r1
   21d7c:	2c00      	cmp	r4, #0
   21d7e:	dd43      	ble.n	21e08 <_vfiprintf_r+0xab0>
   21d80:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21d84:	2c10      	cmp	r4, #16
   21d86:	991b      	ldr	r1, [sp, #108]	@ 0x6c
   21d88:	f340 827b 	ble.w	22282 <_vfiprintf_r+0xf2a>
   21d8c:	4e84      	ldr	r6, [pc, #528]	@ (21fa0 <_vfiprintf_r+0xc48>)
   21d8e:	f8dd 800c 	ldr.w	r8, [sp, #12]
   21d92:	2510      	movs	r5, #16
   21d94:	e006      	b.n	21da4 <_vfiprintf_r+0xa4c>
   21d96:	1c88      	adds	r0, r1, #2
   21d98:	f109 0908 	add.w	r9, r9, #8
   21d9c:	4611      	mov	r1, r2
   21d9e:	3c10      	subs	r4, #16
   21da0:	2c10      	cmp	r4, #16
   21da2:	dd19      	ble.n	21dd8 <_vfiprintf_r+0xa80>
   21da4:	1c4a      	adds	r2, r1, #1
   21da6:	3310      	adds	r3, #16
   21da8:	2a07      	cmp	r2, #7
   21daa:	e9c9 6500 	strd	r6, r5, [r9]
   21dae:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
   21db2:	ddf0      	ble.n	21d96 <_vfiprintf_r+0xa3e>
   21db4:	aa1a      	add	r2, sp, #104	@ 0x68
   21db6:	b313      	cbz	r3, 21dfe <_vfiprintf_r+0xaa6>
   21db8:	4641      	mov	r1, r8
   21dba:	4658      	mov	r0, fp
   21dbc:	f7ff fa90 	bl	212e0 <__sprint_r.part.0>
   21dc0:	2800      	cmp	r0, #0
   21dc2:	f47f ac21 	bne.w	21608 <_vfiprintf_r+0x2b0>
   21dc6:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
   21dca:	3c10      	subs	r4, #16
   21dcc:	2c10      	cmp	r4, #16
   21dce:	f101 0001 	add.w	r0, r1, #1
   21dd2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21dd6:	dce5      	bgt.n	21da4 <_vfiprintf_r+0xa4c>
   21dd8:	4423      	add	r3, r4
   21dda:	2807      	cmp	r0, #7
   21ddc:	e9c9 6400 	strd	r6, r4, [r9]
   21de0:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
   21de4:	f77f acab 	ble.w	2173e <_vfiprintf_r+0x3e6>
   21de8:	b173      	cbz	r3, 21e08 <_vfiprintf_r+0xab0>
   21dea:	9903      	ldr	r1, [sp, #12]
   21dec:	aa1a      	add	r2, sp, #104	@ 0x68
   21dee:	4658      	mov	r0, fp
   21df0:	f7ff fa76 	bl	212e0 <__sprint_r.part.0>
   21df4:	2800      	cmp	r0, #0
   21df6:	f47f ac07 	bne.w	21608 <_vfiprintf_r+0x2b0>
   21dfa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
   21dfc:	e49f      	b.n	2173e <_vfiprintf_r+0x3e6>
   21dfe:	2001      	movs	r0, #1
   21e00:	4619      	mov	r1, r3
   21e02:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21e06:	e7ca      	b.n	21d9e <_vfiprintf_r+0xa46>
   21e08:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
   21e0c:	9904      	ldr	r1, [sp, #16]
   21e0e:	428a      	cmp	r2, r1
   21e10:	bfac      	ite	ge
   21e12:	189b      	addge	r3, r3, r2
   21e14:	185b      	addlt	r3, r3, r1
   21e16:	9307      	str	r3, [sp, #28]
   21e18:	e49c      	b.n	21754 <_vfiprintf_r+0x3fc>
   21e1a:	f1bc 0f00 	cmp.w	ip, #0
   21e1e:	f43f ae6d 	beq.w	21afc <_vfiprintf_r+0x7a4>
   21e22:	9903      	ldr	r1, [sp, #12]
   21e24:	aa1a      	add	r2, sp, #104	@ 0x68
   21e26:	4658      	mov	r0, fp
   21e28:	f7ff fa5a 	bl	212e0 <__sprint_r.part.0>
   21e2c:	2800      	cmp	r0, #0
   21e2e:	f47f abeb 	bne.w	21608 <_vfiprintf_r+0x2b0>
   21e32:	991b      	ldr	r1, [sp, #108]	@ 0x6c
   21e34:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
   21e38:	3101      	adds	r1, #1
   21e3a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21e3e:	e45b      	b.n	216f8 <_vfiprintf_r+0x3a0>
   21e40:	921b      	str	r2, [sp, #108]	@ 0x6c
   21e42:	f7ff bbd6 	b.w	215f2 <_vfiprintf_r+0x29a>
   21e46:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
   21e48:	f852 3b04 	ldr.w	r3, [r2], #4
   21e4c:	920a      	str	r2, [sp, #40]	@ 0x28
   21e4e:	f014 0210 	ands.w	r2, r4, #16
   21e52:	f47f ad75 	bne.w	21940 <_vfiprintf_r+0x5e8>
   21e56:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
   21e5a:	f000 816d 	beq.w	22138 <_vfiprintf_r+0xde0>
   21e5e:	b29b      	uxth	r3, r3
   21e60:	4611      	mov	r1, r2
   21e62:	e56d      	b.n	21940 <_vfiprintf_r+0x5e8>
   21e64:	980a      	ldr	r0, [sp, #40]	@ 0x28
   21e66:	f850 3b04 	ldr.w	r3, [r0], #4
   21e6a:	900a      	str	r0, [sp, #40]	@ 0x28
   21e6c:	f012 0010 	ands.w	r0, r2, #16
   21e70:	f47f ad19 	bne.w	218a6 <_vfiprintf_r+0x54e>
   21e74:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
   21e78:	f000 8166 	beq.w	22148 <_vfiprintf_r+0xdf0>
   21e7c:	b29b      	uxth	r3, r3
   21e7e:	4601      	mov	r1, r0
   21e80:	e511      	b.n	218a6 <_vfiprintf_r+0x54e>
   21e82:	2101      	movs	r1, #1
   21e84:	4662      	mov	r2, ip
   21e86:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21e8a:	e42b      	b.n	216e4 <_vfiprintf_r+0x38c>
   21e8c:	f1bc 0f00 	cmp.w	ip, #0
   21e90:	f000 8095 	beq.w	21fbe <_vfiprintf_r+0xc66>
   21e94:	9903      	ldr	r1, [sp, #12]
   21e96:	9311      	str	r3, [sp, #68]	@ 0x44
   21e98:	aa1a      	add	r2, sp, #104	@ 0x68
   21e9a:	4658      	mov	r0, fp
   21e9c:	f7ff fa20 	bl	212e0 <__sprint_r.part.0>
   21ea0:	2800      	cmp	r0, #0
   21ea2:	f47f abb1 	bne.w	21608 <_vfiprintf_r+0x2b0>
   21ea6:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
   21eaa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
   21eac:	1c51      	adds	r1, r2, #1
   21eae:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21eb2:	f7ff bbe3 	b.w	2167c <_vfiprintf_r+0x324>
   21eb6:	9b05      	ldr	r3, [sp, #20]
   21eb8:	9304      	str	r3, [sp, #16]
   21eba:	9309      	str	r3, [sp, #36]	@ 0x24
   21ebc:	ac46      	add	r4, sp, #280	@ 0x118
   21ebe:	e612      	b.n	21ae6 <_vfiprintf_r+0x78e>
   21ec0:	7822      	ldrb	r2, [r4, #0]
   21ec2:	930a      	str	r3, [sp, #40]	@ 0x28
   21ec4:	f7ff bab0 	b.w	21428 <_vfiprintf_r+0xd0>
   21ec8:	9b05      	ldr	r3, [sp, #20]
   21eca:	9304      	str	r3, [sp, #16]
   21ecc:	ac46      	add	r4, sp, #280	@ 0x118
   21ece:	e60a      	b.n	21ae6 <_vfiprintf_r+0x78e>
   21ed0:	9d03      	ldr	r5, [sp, #12]
   21ed2:	6da8      	ldr	r0, [r5, #88]	@ 0x58
   21ed4:	f7fc fcf2 	bl	1e8bc <__retarget_lock_acquire_recursive>
   21ed8:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   21edc:	f7ff ba5b 	b.w	21396 <_vfiprintf_r+0x3e>
   21ee0:	f109 0908 	add.w	r9, r9, #8
   21ee4:	1c41      	adds	r1, r0, #1
   21ee6:	4602      	mov	r2, r0
   21ee8:	e400      	b.n	216ec <_vfiprintf_r+0x394>
   21eea:	9a02      	ldr	r2, [sp, #8]
   21eec:	0592      	lsls	r2, r2, #22
   21eee:	f100 8184 	bmi.w	221fa <_vfiprintf_r+0xea2>
   21ef2:	17d9      	asrs	r1, r3, #31
   21ef4:	460a      	mov	r2, r1
   21ef6:	e49d      	b.n	21834 <_vfiprintf_r+0x4dc>
   21ef8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
   21efa:	7822      	ldrb	r2, [r4, #0]
   21efc:	2b00      	cmp	r3, #0
   21efe:	f43f aa93 	beq.w	21428 <_vfiprintf_r+0xd0>
   21f02:	781b      	ldrb	r3, [r3, #0]
   21f04:	2b00      	cmp	r3, #0
   21f06:	f43f aa8f 	beq.w	21428 <_vfiprintf_r+0xd0>
   21f0a:	9b02      	ldr	r3, [sp, #8]
   21f0c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
   21f10:	9302      	str	r3, [sp, #8]
   21f12:	f7ff ba89 	b.w	21428 <_vfiprintf_r+0xd0>
   21f16:	9b02      	ldr	r3, [sp, #8]
   21f18:	06de      	lsls	r6, r3, #27
   21f1a:	f100 80fe 	bmi.w	2211a <_vfiprintf_r+0xdc2>
   21f1e:	9b02      	ldr	r3, [sp, #8]
   21f20:	065d      	lsls	r5, r3, #25
   21f22:	f100 8176 	bmi.w	22212 <_vfiprintf_r+0xeba>
   21f26:	9b02      	ldr	r3, [sp, #8]
   21f28:	059c      	lsls	r4, r3, #22
   21f2a:	f140 80f6 	bpl.w	2211a <_vfiprintf_r+0xdc2>
   21f2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   21f30:	9a07      	ldr	r2, [sp, #28]
   21f32:	681b      	ldr	r3, [r3, #0]
   21f34:	701a      	strb	r2, [r3, #0]
   21f36:	e575      	b.n	21a24 <_vfiprintf_r+0x6cc>
   21f38:	4662      	mov	r2, ip
   21f3a:	2101      	movs	r1, #1
   21f3c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21f40:	f7ff bbd0 	b.w	216e4 <_vfiprintf_r+0x38c>
   21f44:	9406      	str	r4, [sp, #24]
   21f46:	9c02      	ldr	r4, [sp, #8]
   21f48:	e4ed      	b.n	21926 <_vfiprintf_r+0x5ce>
   21f4a:	9a02      	ldr	r2, [sp, #8]
   21f4c:	9406      	str	r4, [sp, #24]
   21f4e:	e49d      	b.n	2188c <_vfiprintf_r+0x534>
   21f50:	4b14      	ldr	r3, [pc, #80]	@ (21fa4 <_vfiprintf_r+0xc4c>)
   21f52:	9406      	str	r4, [sp, #24]
   21f54:	930d      	str	r3, [sp, #52]	@ 0x34
   21f56:	9b02      	ldr	r3, [sp, #8]
   21f58:	f013 0120 	ands.w	r1, r3, #32
   21f5c:	d063      	beq.n	22026 <_vfiprintf_r+0xcce>
   21f5e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   21f60:	3307      	adds	r3, #7
   21f62:	f023 0307 	bic.w	r3, r3, #7
   21f66:	4618      	mov	r0, r3
   21f68:	6859      	ldr	r1, [r3, #4]
   21f6a:	f850 3b08 	ldr.w	r3, [r0], #8
   21f6e:	900a      	str	r0, [sp, #40]	@ 0x28
   21f70:	9c02      	ldr	r4, [sp, #8]
   21f72:	07e6      	lsls	r6, r4, #31
   21f74:	d50a      	bpl.n	21f8c <_vfiprintf_r+0xc34>
   21f76:	ea53 0001 	orrs.w	r0, r3, r1
   21f7a:	d007      	beq.n	21f8c <_vfiprintf_r+0xc34>
   21f7c:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
   21f80:	f044 0202 	orr.w	r2, r4, #2
   21f84:	9202      	str	r2, [sp, #8]
   21f86:	2230      	movs	r2, #48	@ 0x30
   21f88:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
   21f8c:	9a02      	ldr	r2, [sp, #8]
   21f8e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
   21f92:	9202      	str	r2, [sp, #8]
   21f94:	e52a      	b.n	219ec <_vfiprintf_r+0x694>
   21f96:	4b04      	ldr	r3, [pc, #16]	@ (21fa8 <_vfiprintf_r+0xc50>)
   21f98:	9406      	str	r4, [sp, #24]
   21f9a:	930d      	str	r3, [sp, #52]	@ 0x34
   21f9c:	e7db      	b.n	21f56 <_vfiprintf_r+0xbfe>
   21f9e:	bf00      	nop
   21fa0:	00028554 	.word	0x00028554
   21fa4:	000281a0 	.word	0x000281a0
   21fa8:	0002818c 	.word	0x0002818c
   21fac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   21fae:	681b      	ldr	r3, [r3, #0]
   21fb0:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
   21fb4:	2301      	movs	r3, #1
   21fb6:	9304      	str	r3, [sp, #16]
   21fb8:	9309      	str	r3, [sp, #36]	@ 0x24
   21fba:	ac2d      	add	r4, sp, #180	@ 0xb4
   21fbc:	e427      	b.n	2180e <_vfiprintf_r+0x4b6>
   21fbe:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
   21fc2:	2a00      	cmp	r2, #0
   21fc4:	f000 811f 	beq.w	22206 <_vfiprintf_r+0xeae>
   21fc8:	2101      	movs	r1, #1
   21fca:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
   21fce:	911e      	str	r1, [sp, #120]	@ 0x78
   21fd0:	921d      	str	r2, [sp, #116]	@ 0x74
   21fd2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   21fd6:	468c      	mov	ip, r1
   21fd8:	f7ff bb61 	b.w	2169e <_vfiprintf_r+0x346>
   21fdc:	2208      	movs	r2, #8
   21fde:	2100      	movs	r1, #0
   21fe0:	a818      	add	r0, sp, #96	@ 0x60
   21fe2:	9415      	str	r4, [sp, #84]	@ 0x54
   21fe4:	f7fc fb82 	bl	1e6ec <memset>
   21fe8:	9b05      	ldr	r3, [sp, #20]
   21fea:	1c58      	adds	r0, r3, #1
   21fec:	f000 80ba 	beq.w	22164 <_vfiprintf_r+0xe0c>
   21ff0:	2500      	movs	r5, #0
   21ff2:	9404      	str	r4, [sp, #16]
   21ff4:	4698      	mov	r8, r3
   21ff6:	462c      	mov	r4, r5
   21ff8:	e00c      	b.n	22014 <_vfiprintf_r+0xcbc>
   21ffa:	a92d      	add	r1, sp, #180	@ 0xb4
   21ffc:	4658      	mov	r0, fp
   21ffe:	f7fe fc51 	bl	208a4 <_wcrtomb_r>
   22002:	1c41      	adds	r1, r0, #1
   22004:	4420      	add	r0, r4
   22006:	f000 813f 	beq.w	22288 <_vfiprintf_r+0xf30>
   2200a:	4540      	cmp	r0, r8
   2200c:	dc08      	bgt.n	22020 <_vfiprintf_r+0xcc8>
   2200e:	f000 8158 	beq.w	222c2 <_vfiprintf_r+0xf6a>
   22012:	4604      	mov	r4, r0
   22014:	9a15      	ldr	r2, [sp, #84]	@ 0x54
   22016:	5952      	ldr	r2, [r2, r5]
   22018:	ab18      	add	r3, sp, #96	@ 0x60
   2201a:	3504      	adds	r5, #4
   2201c:	2a00      	cmp	r2, #0
   2201e:	d1ec      	bne.n	21ffa <_vfiprintf_r+0xca2>
   22020:	9409      	str	r4, [sp, #36]	@ 0x24
   22022:	9c04      	ldr	r4, [sp, #16]
   22024:	e0ac      	b.n	22180 <_vfiprintf_r+0xe28>
   22026:	980a      	ldr	r0, [sp, #40]	@ 0x28
   22028:	f850 3b04 	ldr.w	r3, [r0], #4
   2202c:	900a      	str	r0, [sp, #40]	@ 0x28
   2202e:	9802      	ldr	r0, [sp, #8]
   22030:	f010 0010 	ands.w	r0, r0, #16
   22034:	d19c      	bne.n	21f70 <_vfiprintf_r+0xc18>
   22036:	9902      	ldr	r1, [sp, #8]
   22038:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
   2203c:	f000 808b 	beq.w	22156 <_vfiprintf_r+0xdfe>
   22040:	b29b      	uxth	r3, r3
   22042:	4601      	mov	r1, r0
   22044:	e794      	b.n	21f70 <_vfiprintf_r+0xc18>
   22046:	9a02      	ldr	r2, [sp, #8]
   22048:	f8cd 9010 	str.w	r9, [sp, #16]
   2204c:	ac46      	add	r4, sp, #280	@ 0x118
   2204e:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
   22052:	46a1      	mov	r9, r4
   22054:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
   22058:	4ea5      	ldr	r6, [pc, #660]	@ (222f0 <_vfiprintf_r+0xf98>)
   2205a:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
   2205e:	f04f 0c00 	mov.w	ip, #0
   22062:	4614      	mov	r4, r2
   22064:	e005      	b.n	22072 <_vfiprintf_r+0xd1a>
   22066:	2b0a      	cmp	r3, #10
   22068:	f171 0100 	sbcs.w	r1, r1, #0
   2206c:	d336      	bcc.n	220dc <_vfiprintf_r+0xd84>
   2206e:	4643      	mov	r3, r8
   22070:	4629      	mov	r1, r5
   22072:	185a      	adds	r2, r3, r1
   22074:	f142 0200 	adc.w	r2, r2, #0
   22078:	fba6 0502 	umull	r0, r5, r6, r2
   2207c:	f025 0003 	bic.w	r0, r5, #3
   22080:	eb00 0095 	add.w	r0, r0, r5, lsr #2
   22084:	1a12      	subs	r2, r2, r0
   22086:	1a98      	subs	r0, r3, r2
   22088:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
   2208c:	f161 0e00 	sbc.w	lr, r1, #0
   22090:	fb05 f500 	mul.w	r5, r5, r0
   22094:	fb06 550e 	mla	r5, r6, lr, r5
   22098:	fba0 8006 	umull	r8, r0, r0, r6
   2209c:	4405      	add	r5, r0
   2209e:	f008 0e01 	and.w	lr, r8, #1
   220a2:	2005      	movs	r0, #5
   220a4:	fbae 0e00 	umull	r0, lr, lr, r0
   220a8:	1880      	adds	r0, r0, r2
   220aa:	ea4f 0858 	mov.w	r8, r8, lsr #1
   220ae:	3030      	adds	r0, #48	@ 0x30
   220b0:	f809 0c01 	strb.w	r0, [r9, #-1]
   220b4:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
   220b8:	f10c 0c01 	add.w	ip, ip, #1
   220bc:	f109 39ff 	add.w	r9, r9, #4294967295
   220c0:	086d      	lsrs	r5, r5, #1
   220c2:	2c00      	cmp	r4, #0
   220c4:	d0cf      	beq.n	22066 <_vfiprintf_r+0xd0e>
   220c6:	f89b 2000 	ldrb.w	r2, [fp]
   220ca:	4562      	cmp	r2, ip
   220cc:	d1cb      	bne.n	22066 <_vfiprintf_r+0xd0e>
   220ce:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
   220d2:	d0c8      	beq.n	22066 <_vfiprintf_r+0xd0e>
   220d4:	2b0a      	cmp	r3, #10
   220d6:	f171 0100 	sbcs.w	r1, r1, #0
   220da:	d272      	bcs.n	221c2 <_vfiprintf_r+0xe6a>
   220dc:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
   220e0:	464c      	mov	r4, r9
   220e2:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
   220e6:	f8dd 9010 	ldr.w	r9, [sp, #16]
   220ea:	e5ea      	b.n	21cc2 <_vfiprintf_r+0x96a>
   220ec:	9202      	str	r2, [sp, #8]
   220ee:	e441      	b.n	21974 <_vfiprintf_r+0x61c>
   220f0:	9402      	str	r4, [sp, #8]
   220f2:	e4e6      	b.n	21ac2 <_vfiprintf_r+0x76a>
   220f4:	4658      	mov	r0, fp
   220f6:	f7fc fa63 	bl	1e5c0 <__sinit>
   220fa:	f7ff b943 	b.w	21384 <_vfiprintf_r+0x2c>
   220fe:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
   22102:	7862      	ldrb	r2, [r4, #1]
   22104:	9302      	str	r3, [sp, #8]
   22106:	3401      	adds	r4, #1
   22108:	f7ff b98e 	b.w	21428 <_vfiprintf_r+0xd0>
   2210c:	f043 0320 	orr.w	r3, r3, #32
   22110:	7862      	ldrb	r2, [r4, #1]
   22112:	9302      	str	r3, [sp, #8]
   22114:	3401      	adds	r4, #1
   22116:	f7ff b987 	b.w	21428 <_vfiprintf_r+0xd0>
   2211a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   2211c:	9a07      	ldr	r2, [sp, #28]
   2211e:	681b      	ldr	r3, [r3, #0]
   22120:	601a      	str	r2, [r3, #0]
   22122:	e47f      	b.n	21a24 <_vfiprintf_r+0x6cc>
   22124:	9b05      	ldr	r3, [sp, #20]
   22126:	4c73      	ldr	r4, [pc, #460]	@ (222f4 <_vfiprintf_r+0xf9c>)
   22128:	2b06      	cmp	r3, #6
   2212a:	bf28      	it	cs
   2212c:	2306      	movcs	r3, #6
   2212e:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
   22132:	9304      	str	r3, [sp, #16]
   22134:	f7ff ba89 	b.w	2164a <_vfiprintf_r+0x2f2>
   22138:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
   2213c:	f43f ac00 	beq.w	21940 <_vfiprintf_r+0x5e8>
   22140:	b2db      	uxtb	r3, r3
   22142:	4601      	mov	r1, r0
   22144:	f7ff bbfc 	b.w	21940 <_vfiprintf_r+0x5e8>
   22148:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
   2214c:	bf1c      	itt	ne
   2214e:	b2db      	uxtbne	r3, r3
   22150:	4621      	movne	r1, r4
   22152:	f7ff bba8 	b.w	218a6 <_vfiprintf_r+0x54e>
   22156:	9902      	ldr	r1, [sp, #8]
   22158:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
   2215c:	bf1c      	itt	ne
   2215e:	b2db      	uxtbne	r3, r3
   22160:	4621      	movne	r1, r4
   22162:	e705      	b.n	21f70 <_vfiprintf_r+0xc18>
   22164:	ab18      	add	r3, sp, #96	@ 0x60
   22166:	9300      	str	r3, [sp, #0]
   22168:	2300      	movs	r3, #0
   2216a:	4619      	mov	r1, r3
   2216c:	aa15      	add	r2, sp, #84	@ 0x54
   2216e:	4658      	mov	r0, fp
   22170:	f7fe fbbe 	bl	208f0 <_wcsrtombs_r>
   22174:	4603      	mov	r3, r0
   22176:	3301      	adds	r3, #1
   22178:	9009      	str	r0, [sp, #36]	@ 0x24
   2217a:	f000 8085 	beq.w	22288 <_vfiprintf_r+0xf30>
   2217e:	9415      	str	r4, [sp, #84]	@ 0x54
   22180:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   22182:	b373      	cbz	r3, 221e2 <_vfiprintf_r+0xe8a>
   22184:	2b63      	cmp	r3, #99	@ 0x63
   22186:	dc49      	bgt.n	2221c <_vfiprintf_r+0xec4>
   22188:	2300      	movs	r3, #0
   2218a:	930b      	str	r3, [sp, #44]	@ 0x2c
   2218c:	ac2d      	add	r4, sp, #180	@ 0xb4
   2218e:	2208      	movs	r2, #8
   22190:	2100      	movs	r1, #0
   22192:	a818      	add	r0, sp, #96	@ 0x60
   22194:	f7fc faaa 	bl	1e6ec <memset>
   22198:	9d09      	ldr	r5, [sp, #36]	@ 0x24
   2219a:	ab18      	add	r3, sp, #96	@ 0x60
   2219c:	9300      	str	r3, [sp, #0]
   2219e:	aa15      	add	r2, sp, #84	@ 0x54
   221a0:	462b      	mov	r3, r5
   221a2:	4621      	mov	r1, r4
   221a4:	4658      	mov	r0, fp
   221a6:	f7fe fba3 	bl	208f0 <_wcsrtombs_r>
   221aa:	4285      	cmp	r5, r0
   221ac:	f040 8098 	bne.w	222e0 <_vfiprintf_r+0xf88>
   221b0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
   221b2:	960a      	str	r6, [sp, #40]	@ 0x28
   221b4:	2300      	movs	r3, #0
   221b6:	54a3      	strb	r3, [r4, r2]
   221b8:	9305      	str	r3, [sp, #20]
   221ba:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   221be:	9304      	str	r3, [sp, #16]
   221c0:	e493      	b.n	21aea <_vfiprintf_r+0x792>
   221c2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
   221c4:	9910      	ldr	r1, [sp, #64]	@ 0x40
   221c6:	eba9 0903 	sub.w	r9, r9, r3
   221ca:	461a      	mov	r2, r3
   221cc:	4648      	mov	r0, r9
   221ce:	f7fc fadf 	bl	1e790 <strncpy>
   221d2:	f89b 3001 	ldrb.w	r3, [fp, #1]
   221d6:	b10b      	cbz	r3, 221dc <_vfiprintf_r+0xe84>
   221d8:	f10b 0b01 	add.w	fp, fp, #1
   221dc:	f04f 0c00 	mov.w	ip, #0
   221e0:	e745      	b.n	2206e <_vfiprintf_r+0xd16>
   221e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   221e4:	960a      	str	r6, [sp, #40]	@ 0x28
   221e6:	e9cd 3304 	strd	r3, r3, [sp, #16]
   221ea:	930b      	str	r3, [sp, #44]	@ 0x2c
   221ec:	e47d      	b.n	21aea <_vfiprintf_r+0x792>
   221ee:	2101      	movs	r1, #1
   221f0:	4662      	mov	r2, ip
   221f2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   221f6:	f7ff ba79 	b.w	216ec <_vfiprintf_r+0x394>
   221fa:	f343 11c0 	sbfx	r1, r3, #7, #1
   221fe:	460a      	mov	r2, r1
   22200:	b25b      	sxtb	r3, r3
   22202:	f7ff bb17 	b.w	21834 <_vfiprintf_r+0x4dc>
   22206:	4662      	mov	r2, ip
   22208:	2101      	movs	r1, #1
   2220a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
   2220e:	f7ff ba4a 	b.w	216a6 <_vfiprintf_r+0x34e>
   22212:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   22214:	9a07      	ldr	r2, [sp, #28]
   22216:	681b      	ldr	r3, [r3, #0]
   22218:	801a      	strh	r2, [r3, #0]
   2221a:	e403      	b.n	21a24 <_vfiprintf_r+0x6cc>
   2221c:	1c59      	adds	r1, r3, #1
   2221e:	4658      	mov	r0, fp
   22220:	f7fd fc9a 	bl	1fb58 <_malloc_r>
   22224:	4604      	mov	r4, r0
   22226:	2800      	cmp	r0, #0
   22228:	d02e      	beq.n	22288 <_vfiprintf_r+0xf30>
   2222a:	900b      	str	r0, [sp, #44]	@ 0x2c
   2222c:	e7af      	b.n	2218e <_vfiprintf_r+0xe36>
   2222e:	6d88      	ldr	r0, [r1, #88]	@ 0x58
   22230:	f7fc fb46 	bl	1e8c0 <__retarget_lock_release_recursive>
   22234:	f7ff b9a0 	b.w	21578 <_vfiprintf_r+0x220>
   22238:	9b05      	ldr	r3, [sp, #20]
   2223a:	9304      	str	r3, [sp, #16]
   2223c:	9309      	str	r3, [sp, #36]	@ 0x24
   2223e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   22240:	960a      	str	r6, [sp, #40]	@ 0x28
   22242:	9305      	str	r3, [sp, #20]
   22244:	e451      	b.n	21aea <_vfiprintf_r+0x792>
   22246:	4620      	mov	r0, r4
   22248:	9505      	str	r5, [sp, #20]
   2224a:	960a      	str	r6, [sp, #40]	@ 0x28
   2224c:	f7f6 f838 	bl	182c0 <strlen>
   22250:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
   22254:	9009      	str	r0, [sp, #36]	@ 0x24
   22256:	9304      	str	r3, [sp, #16]
   22258:	950b      	str	r5, [sp, #44]	@ 0x2c
   2225a:	e446      	b.n	21aea <_vfiprintf_r+0x792>
   2225c:	2300      	movs	r3, #0
   2225e:	9305      	str	r3, [sp, #20]
   22260:	f7ff b8e3 	b.w	2142a <_vfiprintf_r+0xd2>
   22264:	4e24      	ldr	r6, [pc, #144]	@ (222f8 <_vfiprintf_r+0xfa0>)
   22266:	4686      	mov	lr, r0
   22268:	e56b      	b.n	21d42 <_vfiprintf_r+0x9ea>
   2226a:	2330      	movs	r3, #48	@ 0x30
   2226c:	e430      	b.n	21ad0 <_vfiprintf_r+0x778>
   2226e:	9903      	ldr	r1, [sp, #12]
   22270:	aa1a      	add	r2, sp, #104	@ 0x68
   22272:	4658      	mov	r0, fp
   22274:	f7ff f834 	bl	212e0 <__sprint_r.part.0>
   22278:	2800      	cmp	r0, #0
   2227a:	f43f a9ab 	beq.w	215d4 <_vfiprintf_r+0x27c>
   2227e:	f7ff b9c9 	b.w	21614 <_vfiprintf_r+0x2bc>
   22282:	4e1d      	ldr	r6, [pc, #116]	@ (222f8 <_vfiprintf_r+0xfa0>)
   22284:	1c48      	adds	r0, r1, #1
   22286:	e5a7      	b.n	21dd8 <_vfiprintf_r+0xa80>
   22288:	9a03      	ldr	r2, [sp, #12]
   2228a:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   2228e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   22292:	8193      	strh	r3, [r2, #12]
   22294:	f7ff b9c1 	b.w	2161a <_vfiprintf_r+0x2c2>
   22298:	9b03      	ldr	r3, [sp, #12]
   2229a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
   2229c:	07d9      	lsls	r1, r3, #31
   2229e:	d407      	bmi.n	222b0 <_vfiprintf_r+0xf58>
   222a0:	9b03      	ldr	r3, [sp, #12]
   222a2:	899b      	ldrh	r3, [r3, #12]
   222a4:	059a      	lsls	r2, r3, #22
   222a6:	d403      	bmi.n	222b0 <_vfiprintf_r+0xf58>
   222a8:	9b03      	ldr	r3, [sp, #12]
   222aa:	6d98      	ldr	r0, [r3, #88]	@ 0x58
   222ac:	f7fc fb08 	bl	1e8c0 <__retarget_lock_release_recursive>
   222b0:	f04f 33ff 	mov.w	r3, #4294967295
   222b4:	9307      	str	r3, [sp, #28]
   222b6:	f7ff b9b8 	b.w	2162a <_vfiprintf_r+0x2d2>
   222ba:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 222fc <_vfiprintf_r+0xfa4>
   222be:	4608      	mov	r0, r1
   222c0:	e460      	b.n	21b84 <_vfiprintf_r+0x82c>
   222c2:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
   222c6:	9309      	str	r3, [sp, #36]	@ 0x24
   222c8:	e75a      	b.n	22180 <_vfiprintf_r+0xe28>
   222ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   222cc:	7862      	ldrb	r2, [r4, #1]
   222ce:	460c      	mov	r4, r1
   222d0:	f853 1b04 	ldr.w	r1, [r3], #4
   222d4:	930a      	str	r3, [sp, #40]	@ 0x28
   222d6:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
   222da:	9105      	str	r1, [sp, #20]
   222dc:	f7ff b8a4 	b.w	21428 <_vfiprintf_r+0xd0>
   222e0:	9a03      	ldr	r2, [sp, #12]
   222e2:	8993      	ldrh	r3, [r2, #12]
   222e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   222e8:	8193      	strh	r3, [r2, #12]
   222ea:	f7ff b98d 	b.w	21608 <_vfiprintf_r+0x2b0>
   222ee:	bf00      	nop
   222f0:	cccccccd 	.word	0xcccccccd
   222f4:	000281b4 	.word	0x000281b4
   222f8:	00028554 	.word	0x00028554
   222fc:	00028544 	.word	0x00028544

00022300 <__sbprintf>:
   22300:	b5f0      	push	{r4, r5, r6, r7, lr}
   22302:	461f      	mov	r7, r3
   22304:	898b      	ldrh	r3, [r1, #12]
   22306:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
   2230a:	f023 0302 	bic.w	r3, r3, #2
   2230e:	f8ad 300c 	strh.w	r3, [sp, #12]
   22312:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
   22314:	9319      	str	r3, [sp, #100]	@ 0x64
   22316:	89cb      	ldrh	r3, [r1, #14]
   22318:	f8ad 300e 	strh.w	r3, [sp, #14]
   2231c:	69cb      	ldr	r3, [r1, #28]
   2231e:	9307      	str	r3, [sp, #28]
   22320:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
   22322:	9309      	str	r3, [sp, #36]	@ 0x24
   22324:	ab1a      	add	r3, sp, #104	@ 0x68
   22326:	9300      	str	r3, [sp, #0]
   22328:	9304      	str	r3, [sp, #16]
   2232a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
   2232e:	4615      	mov	r5, r2
   22330:	4606      	mov	r6, r0
   22332:	9302      	str	r3, [sp, #8]
   22334:	9305      	str	r3, [sp, #20]
   22336:	a816      	add	r0, sp, #88	@ 0x58
   22338:	2300      	movs	r3, #0
   2233a:	460c      	mov	r4, r1
   2233c:	9306      	str	r3, [sp, #24]
   2233e:	f7fc fab9 	bl	1e8b4 <__retarget_lock_init_recursive>
   22342:	462a      	mov	r2, r5
   22344:	463b      	mov	r3, r7
   22346:	4669      	mov	r1, sp
   22348:	4630      	mov	r0, r6
   2234a:	f7ff f805 	bl	21358 <_vfiprintf_r>
   2234e:	1e05      	subs	r5, r0, #0
   22350:	db07      	blt.n	22362 <__sbprintf+0x62>
   22352:	4669      	mov	r1, sp
   22354:	4630      	mov	r0, r6
   22356:	f7fe fc57 	bl	20c08 <_fflush_r>
   2235a:	2800      	cmp	r0, #0
   2235c:	bf18      	it	ne
   2235e:	f04f 35ff 	movne.w	r5, #4294967295
   22362:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   22366:	065b      	lsls	r3, r3, #25
   22368:	d503      	bpl.n	22372 <__sbprintf+0x72>
   2236a:	89a3      	ldrh	r3, [r4, #12]
   2236c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   22370:	81a3      	strh	r3, [r4, #12]
   22372:	9816      	ldr	r0, [sp, #88]	@ 0x58
   22374:	f7fc faa0 	bl	1e8b8 <__retarget_lock_close_recursive>
   22378:	4628      	mov	r0, r5
   2237a:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
   2237e:	bdf0      	pop	{r4, r5, r6, r7, pc}

00022380 <__sfvwrite_r>:
   22380:	6893      	ldr	r3, [r2, #8]
   22382:	2b00      	cmp	r3, #0
   22384:	f000 80f8 	beq.w	22578 <__sfvwrite_r+0x1f8>
   22388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2238c:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
   22390:	f01c 0f08 	tst.w	ip, #8
   22394:	b083      	sub	sp, #12
   22396:	4690      	mov	r8, r2
   22398:	4681      	mov	r9, r0
   2239a:	460c      	mov	r4, r1
   2239c:	d031      	beq.n	22402 <__sfvwrite_r+0x82>
   2239e:	690b      	ldr	r3, [r1, #16]
   223a0:	b37b      	cbz	r3, 22402 <__sfvwrite_r+0x82>
   223a2:	f01c 0702 	ands.w	r7, ip, #2
   223a6:	f8d8 6000 	ldr.w	r6, [r8]
   223aa:	d038      	beq.n	2241e <__sfvwrite_r+0x9e>
   223ac:	2700      	movs	r7, #0
   223ae:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
   223b2:	69e1      	ldr	r1, [r4, #28]
   223b4:	f8df a2c4 	ldr.w	sl, [pc, #708]	@ 2267c <__sfvwrite_r+0x2fc>
   223b8:	463d      	mov	r5, r7
   223ba:	4555      	cmp	r5, sl
   223bc:	462b      	mov	r3, r5
   223be:	463a      	mov	r2, r7
   223c0:	bf28      	it	cs
   223c2:	4653      	movcs	r3, sl
   223c4:	4648      	mov	r0, r9
   223c6:	b1c5      	cbz	r5, 223fa <__sfvwrite_r+0x7a>
   223c8:	47d8      	blx	fp
   223ca:	2800      	cmp	r0, #0
   223cc:	f340 80ca 	ble.w	22564 <__sfvwrite_r+0x1e4>
   223d0:	f8d8 3008 	ldr.w	r3, [r8, #8]
   223d4:	1a1b      	subs	r3, r3, r0
   223d6:	4407      	add	r7, r0
   223d8:	1a2d      	subs	r5, r5, r0
   223da:	f8c8 3008 	str.w	r3, [r8, #8]
   223de:	2b00      	cmp	r3, #0
   223e0:	f000 80b6 	beq.w	22550 <__sfvwrite_r+0x1d0>
   223e4:	4555      	cmp	r5, sl
   223e6:	462b      	mov	r3, r5
   223e8:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
   223ec:	69e1      	ldr	r1, [r4, #28]
   223ee:	bf28      	it	cs
   223f0:	4653      	movcs	r3, sl
   223f2:	463a      	mov	r2, r7
   223f4:	4648      	mov	r0, r9
   223f6:	2d00      	cmp	r5, #0
   223f8:	d1e6      	bne.n	223c8 <__sfvwrite_r+0x48>
   223fa:	e9d6 7500 	ldrd	r7, r5, [r6]
   223fe:	3608      	adds	r6, #8
   22400:	e7db      	b.n	223ba <__sfvwrite_r+0x3a>
   22402:	4621      	mov	r1, r4
   22404:	4648      	mov	r0, r9
   22406:	f000 f93b 	bl	22680 <__swsetup_r>
   2240a:	2800      	cmp	r0, #0
   2240c:	f040 80af 	bne.w	2256e <__sfvwrite_r+0x1ee>
   22410:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
   22414:	f8d8 6000 	ldr.w	r6, [r8]
   22418:	f01c 0702 	ands.w	r7, ip, #2
   2241c:	d1c6      	bne.n	223ac <__sfvwrite_r+0x2c>
   2241e:	f01c 0a01 	ands.w	sl, ip, #1
   22422:	d163      	bne.n	224ec <__sfvwrite_r+0x16c>
   22424:	6823      	ldr	r3, [r4, #0]
   22426:	68a1      	ldr	r1, [r4, #8]
   22428:	4657      	mov	r7, sl
   2242a:	4618      	mov	r0, r3
   2242c:	468b      	mov	fp, r1
   2242e:	2f00      	cmp	r7, #0
   22430:	d058      	beq.n	224e4 <__sfvwrite_r+0x164>
   22432:	f41c 7f00 	tst.w	ip, #512	@ 0x200
   22436:	f000 80b5 	beq.w	225a4 <__sfvwrite_r+0x224>
   2243a:	42b9      	cmp	r1, r7
   2243c:	460a      	mov	r2, r1
   2243e:	f200 80e1 	bhi.w	22604 <__sfvwrite_r+0x284>
   22442:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
   22446:	d02f      	beq.n	224a8 <__sfvwrite_r+0x128>
   22448:	6921      	ldr	r1, [r4, #16]
   2244a:	6962      	ldr	r2, [r4, #20]
   2244c:	1a5d      	subs	r5, r3, r1
   2244e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   22452:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
   22456:	1c6b      	adds	r3, r5, #1
   22458:	1052      	asrs	r2, r2, #1
   2245a:	443b      	add	r3, r7
   2245c:	4293      	cmp	r3, r2
   2245e:	bf92      	itee	ls
   22460:	4693      	movls	fp, r2
   22462:	469b      	movhi	fp, r3
   22464:	461a      	movhi	r2, r3
   22466:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
   2246a:	f000 80ea 	beq.w	22642 <__sfvwrite_r+0x2c2>
   2246e:	4611      	mov	r1, r2
   22470:	4648      	mov	r0, r9
   22472:	f7fd fb71 	bl	1fb58 <_malloc_r>
   22476:	2800      	cmp	r0, #0
   22478:	f000 80f9 	beq.w	2266e <__sfvwrite_r+0x2ee>
   2247c:	462a      	mov	r2, r5
   2247e:	6921      	ldr	r1, [r4, #16]
   22480:	9000      	str	r0, [sp, #0]
   22482:	f7f5 ff89 	bl	18398 <memcpy>
   22486:	89a2      	ldrh	r2, [r4, #12]
   22488:	9b00      	ldr	r3, [sp, #0]
   2248a:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
   2248e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
   22492:	81a2      	strh	r2, [r4, #12]
   22494:	1958      	adds	r0, r3, r5
   22496:	ebab 0505 	sub.w	r5, fp, r5
   2249a:	f8c4 b014 	str.w	fp, [r4, #20]
   2249e:	6123      	str	r3, [r4, #16]
   224a0:	60a5      	str	r5, [r4, #8]
   224a2:	6020      	str	r0, [r4, #0]
   224a4:	46bb      	mov	fp, r7
   224a6:	463a      	mov	r2, r7
   224a8:	4651      	mov	r1, sl
   224aa:	9200      	str	r2, [sp, #0]
   224ac:	f7fe fbd6 	bl	20c5c <memmove>
   224b0:	68a1      	ldr	r1, [r4, #8]
   224b2:	6823      	ldr	r3, [r4, #0]
   224b4:	9a00      	ldr	r2, [sp, #0]
   224b6:	eba1 010b 	sub.w	r1, r1, fp
   224ba:	441a      	add	r2, r3
   224bc:	463d      	mov	r5, r7
   224be:	60a1      	str	r1, [r4, #8]
   224c0:	6022      	str	r2, [r4, #0]
   224c2:	2700      	movs	r7, #0
   224c4:	f8d8 3008 	ldr.w	r3, [r8, #8]
   224c8:	1b5b      	subs	r3, r3, r5
   224ca:	44aa      	add	sl, r5
   224cc:	f8c8 3008 	str.w	r3, [r8, #8]
   224d0:	2b00      	cmp	r3, #0
   224d2:	d03d      	beq.n	22550 <__sfvwrite_r+0x1d0>
   224d4:	6823      	ldr	r3, [r4, #0]
   224d6:	68a1      	ldr	r1, [r4, #8]
   224d8:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
   224dc:	4618      	mov	r0, r3
   224de:	468b      	mov	fp, r1
   224e0:	2f00      	cmp	r7, #0
   224e2:	d1a6      	bne.n	22432 <__sfvwrite_r+0xb2>
   224e4:	e9d6 a700 	ldrd	sl, r7, [r6]
   224e8:	3608      	adds	r6, #8
   224ea:	e79e      	b.n	2242a <__sfvwrite_r+0xaa>
   224ec:	4638      	mov	r0, r7
   224ee:	46bb      	mov	fp, r7
   224f0:	463d      	mov	r5, r7
   224f2:	9700      	str	r7, [sp, #0]
   224f4:	2d00      	cmp	r5, #0
   224f6:	d041      	beq.n	2257c <__sfvwrite_r+0x1fc>
   224f8:	2800      	cmp	r0, #0
   224fa:	d046      	beq.n	2258a <__sfvwrite_r+0x20a>
   224fc:	9a00      	ldr	r2, [sp, #0]
   224fe:	6820      	ldr	r0, [r4, #0]
   22500:	68a1      	ldr	r1, [r4, #8]
   22502:	e9d4 7304 	ldrd	r7, r3, [r4, #16]
   22506:	42aa      	cmp	r2, r5
   22508:	bf28      	it	cs
   2250a:	462a      	movcs	r2, r5
   2250c:	42b8      	cmp	r0, r7
   2250e:	d904      	bls.n	2251a <__sfvwrite_r+0x19a>
   22510:	eb01 0a03 	add.w	sl, r1, r3
   22514:	4552      	cmp	r2, sl
   22516:	f300 8085 	bgt.w	22624 <__sfvwrite_r+0x2a4>
   2251a:	4293      	cmp	r3, r2
   2251c:	dc75      	bgt.n	2260a <__sfvwrite_r+0x28a>
   2251e:	69e1      	ldr	r1, [r4, #28]
   22520:	6a67      	ldr	r7, [r4, #36]	@ 0x24
   22522:	465a      	mov	r2, fp
   22524:	4648      	mov	r0, r9
   22526:	47b8      	blx	r7
   22528:	f1b0 0a00 	subs.w	sl, r0, #0
   2252c:	dd1a      	ble.n	22564 <__sfvwrite_r+0x1e4>
   2252e:	9b00      	ldr	r3, [sp, #0]
   22530:	ebb3 030a 	subs.w	r3, r3, sl
   22534:	9300      	str	r3, [sp, #0]
   22536:	d00f      	beq.n	22558 <__sfvwrite_r+0x1d8>
   22538:	2001      	movs	r0, #1
   2253a:	f8d8 3008 	ldr.w	r3, [r8, #8]
   2253e:	eba3 030a 	sub.w	r3, r3, sl
   22542:	44d3      	add	fp, sl
   22544:	eba5 050a 	sub.w	r5, r5, sl
   22548:	f8c8 3008 	str.w	r3, [r8, #8]
   2254c:	2b00      	cmp	r3, #0
   2254e:	d1d1      	bne.n	224f4 <__sfvwrite_r+0x174>
   22550:	2000      	movs	r0, #0
   22552:	b003      	add	sp, #12
   22554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22558:	4621      	mov	r1, r4
   2255a:	4648      	mov	r0, r9
   2255c:	f7fe fb54 	bl	20c08 <_fflush_r>
   22560:	2800      	cmp	r0, #0
   22562:	d0ea      	beq.n	2253a <__sfvwrite_r+0x1ba>
   22564:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   22568:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   2256c:	81a3      	strh	r3, [r4, #12]
   2256e:	f04f 30ff 	mov.w	r0, #4294967295
   22572:	b003      	add	sp, #12
   22574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22578:	2000      	movs	r0, #0
   2257a:	4770      	bx	lr
   2257c:	6875      	ldr	r5, [r6, #4]
   2257e:	4633      	mov	r3, r6
   22580:	3608      	adds	r6, #8
   22582:	2d00      	cmp	r5, #0
   22584:	d0fa      	beq.n	2257c <__sfvwrite_r+0x1fc>
   22586:	f8d3 b000 	ldr.w	fp, [r3]
   2258a:	462a      	mov	r2, r5
   2258c:	210a      	movs	r1, #10
   2258e:	4658      	mov	r0, fp
   22590:	f7f5 fe36 	bl	18200 <memchr>
   22594:	2800      	cmp	r0, #0
   22596:	d067      	beq.n	22668 <__sfvwrite_r+0x2e8>
   22598:	3001      	adds	r0, #1
   2259a:	eba0 030b 	sub.w	r3, r0, fp
   2259e:	9300      	str	r3, [sp, #0]
   225a0:	461a      	mov	r2, r3
   225a2:	e7ac      	b.n	224fe <__sfvwrite_r+0x17e>
   225a4:	6922      	ldr	r2, [r4, #16]
   225a6:	429a      	cmp	r2, r3
   225a8:	d314      	bcc.n	225d4 <__sfvwrite_r+0x254>
   225aa:	6962      	ldr	r2, [r4, #20]
   225ac:	42ba      	cmp	r2, r7
   225ae:	d811      	bhi.n	225d4 <__sfvwrite_r+0x254>
   225b0:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
   225b4:	42bb      	cmp	r3, r7
   225b6:	bf28      	it	cs
   225b8:	463b      	movcs	r3, r7
   225ba:	6a65      	ldr	r5, [r4, #36]	@ 0x24
   225bc:	fb93 f3f2 	sdiv	r3, r3, r2
   225c0:	69e1      	ldr	r1, [r4, #28]
   225c2:	fb02 f303 	mul.w	r3, r2, r3
   225c6:	4648      	mov	r0, r9
   225c8:	4652      	mov	r2, sl
   225ca:	47a8      	blx	r5
   225cc:	1e05      	subs	r5, r0, #0
   225ce:	ddc9      	ble.n	22564 <__sfvwrite_r+0x1e4>
   225d0:	1b7f      	subs	r7, r7, r5
   225d2:	e777      	b.n	224c4 <__sfvwrite_r+0x144>
   225d4:	42b9      	cmp	r1, r7
   225d6:	bf28      	it	cs
   225d8:	4639      	movcs	r1, r7
   225da:	460d      	mov	r5, r1
   225dc:	4618      	mov	r0, r3
   225de:	460a      	mov	r2, r1
   225e0:	4651      	mov	r1, sl
   225e2:	f7fe fb3b 	bl	20c5c <memmove>
   225e6:	68a1      	ldr	r1, [r4, #8]
   225e8:	6823      	ldr	r3, [r4, #0]
   225ea:	1b49      	subs	r1, r1, r5
   225ec:	442b      	add	r3, r5
   225ee:	60a1      	str	r1, [r4, #8]
   225f0:	6023      	str	r3, [r4, #0]
   225f2:	2900      	cmp	r1, #0
   225f4:	d1ec      	bne.n	225d0 <__sfvwrite_r+0x250>
   225f6:	4621      	mov	r1, r4
   225f8:	4648      	mov	r0, r9
   225fa:	f7fe fb05 	bl	20c08 <_fflush_r>
   225fe:	2800      	cmp	r0, #0
   22600:	d0e6      	beq.n	225d0 <__sfvwrite_r+0x250>
   22602:	e7af      	b.n	22564 <__sfvwrite_r+0x1e4>
   22604:	46bb      	mov	fp, r7
   22606:	463a      	mov	r2, r7
   22608:	e74e      	b.n	224a8 <__sfvwrite_r+0x128>
   2260a:	4659      	mov	r1, fp
   2260c:	9201      	str	r2, [sp, #4]
   2260e:	f7fe fb25 	bl	20c5c <memmove>
   22612:	9a01      	ldr	r2, [sp, #4]
   22614:	68a3      	ldr	r3, [r4, #8]
   22616:	1a9b      	subs	r3, r3, r2
   22618:	60a3      	str	r3, [r4, #8]
   2261a:	6823      	ldr	r3, [r4, #0]
   2261c:	4413      	add	r3, r2
   2261e:	6023      	str	r3, [r4, #0]
   22620:	4692      	mov	sl, r2
   22622:	e784      	b.n	2252e <__sfvwrite_r+0x1ae>
   22624:	4659      	mov	r1, fp
   22626:	4652      	mov	r2, sl
   22628:	f7fe fb18 	bl	20c5c <memmove>
   2262c:	6823      	ldr	r3, [r4, #0]
   2262e:	4453      	add	r3, sl
   22630:	6023      	str	r3, [r4, #0]
   22632:	4621      	mov	r1, r4
   22634:	4648      	mov	r0, r9
   22636:	f7fe fae7 	bl	20c08 <_fflush_r>
   2263a:	2800      	cmp	r0, #0
   2263c:	f43f af77 	beq.w	2252e <__sfvwrite_r+0x1ae>
   22640:	e790      	b.n	22564 <__sfvwrite_r+0x1e4>
   22642:	4648      	mov	r0, r9
   22644:	f7fe fc06 	bl	20e54 <_realloc_r>
   22648:	4603      	mov	r3, r0
   2264a:	2800      	cmp	r0, #0
   2264c:	f47f af22 	bne.w	22494 <__sfvwrite_r+0x114>
   22650:	6921      	ldr	r1, [r4, #16]
   22652:	4648      	mov	r0, r9
   22654:	f7fd f982 	bl	1f95c <_free_r>
   22658:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   2265c:	220c      	movs	r2, #12
   2265e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
   22662:	f8c9 2000 	str.w	r2, [r9]
   22666:	e77f      	b.n	22568 <__sfvwrite_r+0x1e8>
   22668:	1c6a      	adds	r2, r5, #1
   2266a:	9200      	str	r2, [sp, #0]
   2266c:	e747      	b.n	224fe <__sfvwrite_r+0x17e>
   2266e:	220c      	movs	r2, #12
   22670:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   22674:	f8c9 2000 	str.w	r2, [r9]
   22678:	e776      	b.n	22568 <__sfvwrite_r+0x1e8>
   2267a:	bf00      	nop
   2267c:	7ffffc00 	.word	0x7ffffc00

00022680 <__swsetup_r>:
   22680:	b538      	push	{r3, r4, r5, lr}
   22682:	4b2e      	ldr	r3, [pc, #184]	@ (2273c <__swsetup_r+0xbc>)
   22684:	681b      	ldr	r3, [r3, #0]
   22686:	4605      	mov	r5, r0
   22688:	460c      	mov	r4, r1
   2268a:	b113      	cbz	r3, 22692 <__swsetup_r+0x12>
   2268c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
   2268e:	2a00      	cmp	r2, #0
   22690:	d04b      	beq.n	2272a <__swsetup_r+0xaa>
   22692:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   22696:	0718      	lsls	r0, r3, #28
   22698:	d51c      	bpl.n	226d4 <__swsetup_r+0x54>
   2269a:	6922      	ldr	r2, [r4, #16]
   2269c:	b322      	cbz	r2, 226e8 <__swsetup_r+0x68>
   2269e:	f013 0101 	ands.w	r1, r3, #1
   226a2:	d007      	beq.n	226b4 <__swsetup_r+0x34>
   226a4:	6961      	ldr	r1, [r4, #20]
   226a6:	2000      	movs	r0, #0
   226a8:	4249      	negs	r1, r1
   226aa:	60a0      	str	r0, [r4, #8]
   226ac:	61a1      	str	r1, [r4, #24]
   226ae:	b13a      	cbz	r2, 226c0 <__swsetup_r+0x40>
   226b0:	2000      	movs	r0, #0
   226b2:	bd38      	pop	{r3, r4, r5, pc}
   226b4:	0798      	lsls	r0, r3, #30
   226b6:	bf58      	it	pl
   226b8:	6961      	ldrpl	r1, [r4, #20]
   226ba:	60a1      	str	r1, [r4, #8]
   226bc:	2a00      	cmp	r2, #0
   226be:	d1f7      	bne.n	226b0 <__swsetup_r+0x30>
   226c0:	0619      	lsls	r1, r3, #24
   226c2:	bf58      	it	pl
   226c4:	4610      	movpl	r0, r2
   226c6:	d5f4      	bpl.n	226b2 <__swsetup_r+0x32>
   226c8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   226cc:	81a3      	strh	r3, [r4, #12]
   226ce:	f04f 30ff 	mov.w	r0, #4294967295
   226d2:	bd38      	pop	{r3, r4, r5, pc}
   226d4:	06d9      	lsls	r1, r3, #27
   226d6:	d52c      	bpl.n	22732 <__swsetup_r+0xb2>
   226d8:	075a      	lsls	r2, r3, #29
   226da:	d412      	bmi.n	22702 <__swsetup_r+0x82>
   226dc:	6922      	ldr	r2, [r4, #16]
   226de:	f043 0308 	orr.w	r3, r3, #8
   226e2:	81a3      	strh	r3, [r4, #12]
   226e4:	2a00      	cmp	r2, #0
   226e6:	d1da      	bne.n	2269e <__swsetup_r+0x1e>
   226e8:	f403 7120 	and.w	r1, r3, #640	@ 0x280
   226ec:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
   226f0:	d0d5      	beq.n	2269e <__swsetup_r+0x1e>
   226f2:	4621      	mov	r1, r4
   226f4:	4628      	mov	r0, r5
   226f6:	f000 f899 	bl	2282c <__smakebuf_r>
   226fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   226fe:	6922      	ldr	r2, [r4, #16]
   22700:	e7cd      	b.n	2269e <__swsetup_r+0x1e>
   22702:	6b21      	ldr	r1, [r4, #48]	@ 0x30
   22704:	b151      	cbz	r1, 2271c <__swsetup_r+0x9c>
   22706:	f104 0240 	add.w	r2, r4, #64	@ 0x40
   2270a:	4291      	cmp	r1, r2
   2270c:	d004      	beq.n	22718 <__swsetup_r+0x98>
   2270e:	4628      	mov	r0, r5
   22710:	f7fd f924 	bl	1f95c <_free_r>
   22714:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   22718:	2200      	movs	r2, #0
   2271a:	6322      	str	r2, [r4, #48]	@ 0x30
   2271c:	6922      	ldr	r2, [r4, #16]
   2271e:	2100      	movs	r1, #0
   22720:	e9c4 2100 	strd	r2, r1, [r4]
   22724:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
   22728:	e7d9      	b.n	226de <__swsetup_r+0x5e>
   2272a:	4618      	mov	r0, r3
   2272c:	f7fb ff48 	bl	1e5c0 <__sinit>
   22730:	e7af      	b.n	22692 <__swsetup_r+0x12>
   22732:	2209      	movs	r2, #9
   22734:	602a      	str	r2, [r5, #0]
   22736:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   2273a:	e7c7      	b.n	226cc <__swsetup_r+0x4c>
   2273c:	100010e8 	.word	0x100010e8

00022740 <__fputwc>:
   22740:	b570      	push	{r4, r5, r6, lr}
   22742:	b082      	sub	sp, #8
   22744:	4606      	mov	r6, r0
   22746:	460d      	mov	r5, r1
   22748:	4614      	mov	r4, r2
   2274a:	f7fc f855 	bl	1e7f8 <__locale_mb_cur_max>
   2274e:	2801      	cmp	r0, #1
   22750:	d102      	bne.n	22758 <__fputwc+0x18>
   22752:	1e6b      	subs	r3, r5, #1
   22754:	2bfe      	cmp	r3, #254	@ 0xfe
   22756:	d926      	bls.n	227a6 <__fputwc+0x66>
   22758:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
   2275c:	462a      	mov	r2, r5
   2275e:	a901      	add	r1, sp, #4
   22760:	4630      	mov	r0, r6
   22762:	f7fe f89f 	bl	208a4 <_wcrtomb_r>
   22766:	1c43      	adds	r3, r0, #1
   22768:	d020      	beq.n	227ac <__fputwc+0x6c>
   2276a:	b178      	cbz	r0, 2278c <__fputwc+0x4c>
   2276c:	68a3      	ldr	r3, [r4, #8]
   2276e:	f89d 1004 	ldrb.w	r1, [sp, #4]
   22772:	3b01      	subs	r3, #1
   22774:	2b00      	cmp	r3, #0
   22776:	60a3      	str	r3, [r4, #8]
   22778:	da04      	bge.n	22784 <__fputwc+0x44>
   2277a:	69a2      	ldr	r2, [r4, #24]
   2277c:	4293      	cmp	r3, r2
   2277e:	db08      	blt.n	22792 <__fputwc+0x52>
   22780:	290a      	cmp	r1, #10
   22782:	d006      	beq.n	22792 <__fputwc+0x52>
   22784:	6823      	ldr	r3, [r4, #0]
   22786:	1c5a      	adds	r2, r3, #1
   22788:	6022      	str	r2, [r4, #0]
   2278a:	7019      	strb	r1, [r3, #0]
   2278c:	4628      	mov	r0, r5
   2278e:	b002      	add	sp, #8
   22790:	bd70      	pop	{r4, r5, r6, pc}
   22792:	4622      	mov	r2, r4
   22794:	4630      	mov	r0, r6
   22796:	f000 f8b7 	bl	22908 <__swbuf_r>
   2279a:	3001      	adds	r0, #1
   2279c:	d1f6      	bne.n	2278c <__fputwc+0x4c>
   2279e:	f04f 30ff 	mov.w	r0, #4294967295
   227a2:	b002      	add	sp, #8
   227a4:	bd70      	pop	{r4, r5, r6, pc}
   227a6:	f88d 5004 	strb.w	r5, [sp, #4]
   227aa:	e7df      	b.n	2276c <__fputwc+0x2c>
   227ac:	89a3      	ldrh	r3, [r4, #12]
   227ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   227b2:	81a3      	strh	r3, [r4, #12]
   227b4:	f04f 30ff 	mov.w	r0, #4294967295
   227b8:	e7f3      	b.n	227a2 <__fputwc+0x62>
   227ba:	bf00      	nop

000227bc <_fputwc_r>:
   227bc:	b530      	push	{r4, r5, lr}
   227be:	4614      	mov	r4, r2
   227c0:	6e52      	ldr	r2, [r2, #100]	@ 0x64
   227c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   227c6:	4605      	mov	r5, r0
   227c8:	07d0      	lsls	r0, r2, #31
   227ca:	b083      	sub	sp, #12
   227cc:	d401      	bmi.n	227d2 <_fputwc_r+0x16>
   227ce:	059a      	lsls	r2, r3, #22
   227d0:	d51c      	bpl.n	2280c <_fputwc_r+0x50>
   227d2:	0498      	lsls	r0, r3, #18
   227d4:	d406      	bmi.n	227e4 <_fputwc_r+0x28>
   227d6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
   227d8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
   227dc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
   227e0:	81a3      	strh	r3, [r4, #12]
   227e2:	6662      	str	r2, [r4, #100]	@ 0x64
   227e4:	4622      	mov	r2, r4
   227e6:	4628      	mov	r0, r5
   227e8:	f7ff ffaa 	bl	22740 <__fputwc>
   227ec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
   227ee:	07da      	lsls	r2, r3, #31
   227f0:	4605      	mov	r5, r0
   227f2:	d402      	bmi.n	227fa <_fputwc_r+0x3e>
   227f4:	89a3      	ldrh	r3, [r4, #12]
   227f6:	059b      	lsls	r3, r3, #22
   227f8:	d502      	bpl.n	22800 <_fputwc_r+0x44>
   227fa:	4628      	mov	r0, r5
   227fc:	b003      	add	sp, #12
   227fe:	bd30      	pop	{r4, r5, pc}
   22800:	6da0      	ldr	r0, [r4, #88]	@ 0x58
   22802:	f7fc f85d 	bl	1e8c0 <__retarget_lock_release_recursive>
   22806:	4628      	mov	r0, r5
   22808:	b003      	add	sp, #12
   2280a:	bd30      	pop	{r4, r5, pc}
   2280c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
   2280e:	9101      	str	r1, [sp, #4]
   22810:	f7fc f854 	bl	1e8bc <__retarget_lock_acquire_recursive>
   22814:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   22818:	9901      	ldr	r1, [sp, #4]
   2281a:	e7da      	b.n	227d2 <_fputwc_r+0x16>

0002281c <abort>:
   2281c:	b508      	push	{r3, lr}
   2281e:	2006      	movs	r0, #6
   22820:	f000 f8c8 	bl	229b4 <raise>
   22824:	2001      	movs	r0, #1
   22826:	f000 f97f 	bl	22b28 <_exit>
   2282a:	bf00      	nop

0002282c <__smakebuf_r>:
   2282c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   22830:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   22834:	460c      	mov	r4, r1
   22836:	0799      	lsls	r1, r3, #30
   22838:	b096      	sub	sp, #88	@ 0x58
   2283a:	d508      	bpl.n	2284e <__smakebuf_r+0x22>
   2283c:	f104 0343 	add.w	r3, r4, #67	@ 0x43
   22840:	2201      	movs	r2, #1
   22842:	e9c4 3204 	strd	r3, r2, [r4, #16]
   22846:	6023      	str	r3, [r4, #0]
   22848:	b016      	add	sp, #88	@ 0x58
   2284a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2284e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   22852:	2900      	cmp	r1, #0
   22854:	4606      	mov	r6, r0
   22856:	db26      	blt.n	228a6 <__smakebuf_r+0x7a>
   22858:	466a      	mov	r2, sp
   2285a:	f000 f8d7 	bl	22a0c <_fstat_r>
   2285e:	2800      	cmp	r0, #0
   22860:	db1f      	blt.n	228a2 <__smakebuf_r+0x76>
   22862:	9d01      	ldr	r5, [sp, #4]
   22864:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
   22868:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
   2286c:	fab5 f585 	clz	r5, r5
   22870:	f44f 6880 	mov.w	r8, #1024	@ 0x400
   22874:	096d      	lsrs	r5, r5, #5
   22876:	f44f 6700 	mov.w	r7, #2048	@ 0x800
   2287a:	4641      	mov	r1, r8
   2287c:	4630      	mov	r0, r6
   2287e:	f7fd f96b 	bl	1fb58 <_malloc_r>
   22882:	b1e8      	cbz	r0, 228c0 <__smakebuf_r+0x94>
   22884:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   22888:	f8c4 8014 	str.w	r8, [r4, #20]
   2288c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
   22890:	6020      	str	r0, [r4, #0]
   22892:	6120      	str	r0, [r4, #16]
   22894:	81a3      	strh	r3, [r4, #12]
   22896:	bb3d      	cbnz	r5, 228e8 <__smakebuf_r+0xbc>
   22898:	433b      	orrs	r3, r7
   2289a:	81a3      	strh	r3, [r4, #12]
   2289c:	b016      	add	sp, #88	@ 0x58
   2289e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   228a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   228a6:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
   228aa:	d019      	beq.n	228e0 <__smakebuf_r+0xb4>
   228ac:	f04f 0840 	mov.w	r8, #64	@ 0x40
   228b0:	2500      	movs	r5, #0
   228b2:	4641      	mov	r1, r8
   228b4:	4630      	mov	r0, r6
   228b6:	462f      	mov	r7, r5
   228b8:	f7fd f94e 	bl	1fb58 <_malloc_r>
   228bc:	2800      	cmp	r0, #0
   228be:	d1e1      	bne.n	22884 <__smakebuf_r+0x58>
   228c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   228c4:	059a      	lsls	r2, r3, #22
   228c6:	d4bf      	bmi.n	22848 <__smakebuf_r+0x1c>
   228c8:	f023 0303 	bic.w	r3, r3, #3
   228cc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
   228d0:	f043 0302 	orr.w	r3, r3, #2
   228d4:	2101      	movs	r1, #1
   228d6:	e9c4 2104 	strd	r2, r1, [r4, #16]
   228da:	81a3      	strh	r3, [r4, #12]
   228dc:	6022      	str	r2, [r4, #0]
   228de:	e7b3      	b.n	22848 <__smakebuf_r+0x1c>
   228e0:	f44f 6880 	mov.w	r8, #1024	@ 0x400
   228e4:	462f      	mov	r7, r5
   228e6:	e7c8      	b.n	2287a <__smakebuf_r+0x4e>
   228e8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   228ec:	4630      	mov	r0, r6
   228ee:	f000 f8a3 	bl	22a38 <_isatty_r>
   228f2:	b910      	cbnz	r0, 228fa <__smakebuf_r+0xce>
   228f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   228f8:	e7ce      	b.n	22898 <__smakebuf_r+0x6c>
   228fa:	89a3      	ldrh	r3, [r4, #12]
   228fc:	f023 0303 	bic.w	r3, r3, #3
   22900:	f043 0301 	orr.w	r3, r3, #1
   22904:	b21b      	sxth	r3, r3
   22906:	e7c7      	b.n	22898 <__smakebuf_r+0x6c>

00022908 <__swbuf_r>:
   22908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2290a:	460d      	mov	r5, r1
   2290c:	4614      	mov	r4, r2
   2290e:	4606      	mov	r6, r0
   22910:	b110      	cbz	r0, 22918 <__swbuf_r+0x10>
   22912:	6b43      	ldr	r3, [r0, #52]	@ 0x34
   22914:	2b00      	cmp	r3, #0
   22916:	d04a      	beq.n	229ae <__swbuf_r+0xa6>
   22918:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   2291c:	69a3      	ldr	r3, [r4, #24]
   2291e:	60a3      	str	r3, [r4, #8]
   22920:	0710      	lsls	r0, r2, #28
   22922:	d51b      	bpl.n	2295c <__swbuf_r+0x54>
   22924:	6923      	ldr	r3, [r4, #16]
   22926:	b1cb      	cbz	r3, 2295c <__swbuf_r+0x54>
   22928:	b2ed      	uxtb	r5, r5
   2292a:	0491      	lsls	r1, r2, #18
   2292c:	462f      	mov	r7, r5
   2292e:	d521      	bpl.n	22974 <__swbuf_r+0x6c>
   22930:	6822      	ldr	r2, [r4, #0]
   22932:	6961      	ldr	r1, [r4, #20]
   22934:	1ad3      	subs	r3, r2, r3
   22936:	4299      	cmp	r1, r3
   22938:	dd28      	ble.n	2298c <__swbuf_r+0x84>
   2293a:	3301      	adds	r3, #1
   2293c:	68a1      	ldr	r1, [r4, #8]
   2293e:	3901      	subs	r1, #1
   22940:	60a1      	str	r1, [r4, #8]
   22942:	1c51      	adds	r1, r2, #1
   22944:	6021      	str	r1, [r4, #0]
   22946:	7015      	strb	r5, [r2, #0]
   22948:	6962      	ldr	r2, [r4, #20]
   2294a:	429a      	cmp	r2, r3
   2294c:	d026      	beq.n	2299c <__swbuf_r+0x94>
   2294e:	89a3      	ldrh	r3, [r4, #12]
   22950:	07db      	lsls	r3, r3, #31
   22952:	d501      	bpl.n	22958 <__swbuf_r+0x50>
   22954:	2d0a      	cmp	r5, #10
   22956:	d021      	beq.n	2299c <__swbuf_r+0x94>
   22958:	4638      	mov	r0, r7
   2295a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   2295c:	4621      	mov	r1, r4
   2295e:	4630      	mov	r0, r6
   22960:	f7ff fe8e 	bl	22680 <__swsetup_r>
   22964:	bb00      	cbnz	r0, 229a8 <__swbuf_r+0xa0>
   22966:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   2296a:	6923      	ldr	r3, [r4, #16]
   2296c:	b2ed      	uxtb	r5, r5
   2296e:	0491      	lsls	r1, r2, #18
   22970:	462f      	mov	r7, r5
   22972:	d4dd      	bmi.n	22930 <__swbuf_r+0x28>
   22974:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
   22978:	81a2      	strh	r2, [r4, #12]
   2297a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
   2297c:	6961      	ldr	r1, [r4, #20]
   2297e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
   22982:	6662      	str	r2, [r4, #100]	@ 0x64
   22984:	6822      	ldr	r2, [r4, #0]
   22986:	1ad3      	subs	r3, r2, r3
   22988:	4299      	cmp	r1, r3
   2298a:	dcd6      	bgt.n	2293a <__swbuf_r+0x32>
   2298c:	4621      	mov	r1, r4
   2298e:	4630      	mov	r0, r6
   22990:	f7fe f93a 	bl	20c08 <_fflush_r>
   22994:	b940      	cbnz	r0, 229a8 <__swbuf_r+0xa0>
   22996:	6822      	ldr	r2, [r4, #0]
   22998:	2301      	movs	r3, #1
   2299a:	e7cf      	b.n	2293c <__swbuf_r+0x34>
   2299c:	4621      	mov	r1, r4
   2299e:	4630      	mov	r0, r6
   229a0:	f7fe f932 	bl	20c08 <_fflush_r>
   229a4:	2800      	cmp	r0, #0
   229a6:	d0d7      	beq.n	22958 <__swbuf_r+0x50>
   229a8:	f04f 37ff 	mov.w	r7, #4294967295
   229ac:	e7d4      	b.n	22958 <__swbuf_r+0x50>
   229ae:	f7fb fe07 	bl	1e5c0 <__sinit>
   229b2:	e7b1      	b.n	22918 <__swbuf_r+0x10>

000229b4 <raise>:
   229b4:	b538      	push	{r3, r4, r5, lr}
   229b6:	4b14      	ldr	r3, [pc, #80]	@ (22a08 <raise+0x54>)
   229b8:	281f      	cmp	r0, #31
   229ba:	681d      	ldr	r5, [r3, #0]
   229bc:	d81e      	bhi.n	229fc <raise+0x48>
   229be:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
   229c2:	4604      	mov	r4, r0
   229c4:	b162      	cbz	r2, 229e0 <raise+0x2c>
   229c6:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
   229ca:	b14b      	cbz	r3, 229e0 <raise+0x2c>
   229cc:	2b01      	cmp	r3, #1
   229ce:	d005      	beq.n	229dc <raise+0x28>
   229d0:	1c59      	adds	r1, r3, #1
   229d2:	d00f      	beq.n	229f4 <raise+0x40>
   229d4:	2100      	movs	r1, #0
   229d6:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
   229da:	4798      	blx	r3
   229dc:	2000      	movs	r0, #0
   229de:	bd38      	pop	{r3, r4, r5, pc}
   229e0:	4628      	mov	r0, r5
   229e2:	f000 f851 	bl	22a88 <_getpid_r>
   229e6:	4622      	mov	r2, r4
   229e8:	4601      	mov	r1, r0
   229ea:	4628      	mov	r0, r5
   229ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   229f0:	f000 b834 	b.w	22a5c <_kill_r>
   229f4:	2316      	movs	r3, #22
   229f6:	602b      	str	r3, [r5, #0]
   229f8:	2001      	movs	r0, #1
   229fa:	bd38      	pop	{r3, r4, r5, pc}
   229fc:	2316      	movs	r3, #22
   229fe:	602b      	str	r3, [r5, #0]
   22a00:	f04f 30ff 	mov.w	r0, #4294967295
   22a04:	bd38      	pop	{r3, r4, r5, pc}
   22a06:	bf00      	nop
   22a08:	100010e8 	.word	0x100010e8

00022a0c <_fstat_r>:
   22a0c:	b570      	push	{r4, r5, r6, lr}
   22a0e:	460c      	mov	r4, r1
   22a10:	4d08      	ldr	r5, [pc, #32]	@ (22a34 <_fstat_r+0x28>)
   22a12:	4603      	mov	r3, r0
   22a14:	2600      	movs	r6, #0
   22a16:	4620      	mov	r0, r4
   22a18:	4611      	mov	r1, r2
   22a1a:	461c      	mov	r4, r3
   22a1c:	602e      	str	r6, [r5, #0]
   22a1e:	f000 f83d 	bl	22a9c <_fstat>
   22a22:	1c43      	adds	r3, r0, #1
   22a24:	d000      	beq.n	22a28 <_fstat_r+0x1c>
   22a26:	bd70      	pop	{r4, r5, r6, pc}
   22a28:	682b      	ldr	r3, [r5, #0]
   22a2a:	2b00      	cmp	r3, #0
   22a2c:	d0fb      	beq.n	22a26 <_fstat_r+0x1a>
   22a2e:	6023      	str	r3, [r4, #0]
   22a30:	bd70      	pop	{r4, r5, r6, pc}
   22a32:	bf00      	nop
   22a34:	10030234 	.word	0x10030234

00022a38 <_isatty_r>:
   22a38:	b538      	push	{r3, r4, r5, lr}
   22a3a:	4d07      	ldr	r5, [pc, #28]	@ (22a58 <_isatty_r+0x20>)
   22a3c:	2200      	movs	r2, #0
   22a3e:	4604      	mov	r4, r0
   22a40:	4608      	mov	r0, r1
   22a42:	602a      	str	r2, [r5, #0]
   22a44:	f000 f83a 	bl	22abc <_isatty>
   22a48:	1c43      	adds	r3, r0, #1
   22a4a:	d000      	beq.n	22a4e <_isatty_r+0x16>
   22a4c:	bd38      	pop	{r3, r4, r5, pc}
   22a4e:	682b      	ldr	r3, [r5, #0]
   22a50:	2b00      	cmp	r3, #0
   22a52:	d0fb      	beq.n	22a4c <_isatty_r+0x14>
   22a54:	6023      	str	r3, [r4, #0]
   22a56:	bd38      	pop	{r3, r4, r5, pc}
   22a58:	10030234 	.word	0x10030234

00022a5c <_kill_r>:
   22a5c:	b570      	push	{r4, r5, r6, lr}
   22a5e:	460c      	mov	r4, r1
   22a60:	4d08      	ldr	r5, [pc, #32]	@ (22a84 <_kill_r+0x28>)
   22a62:	4603      	mov	r3, r0
   22a64:	2600      	movs	r6, #0
   22a66:	4620      	mov	r0, r4
   22a68:	4611      	mov	r1, r2
   22a6a:	461c      	mov	r4, r3
   22a6c:	602e      	str	r6, [r5, #0]
   22a6e:	f000 f82d 	bl	22acc <_kill>
   22a72:	1c43      	adds	r3, r0, #1
   22a74:	d000      	beq.n	22a78 <_kill_r+0x1c>
   22a76:	bd70      	pop	{r4, r5, r6, pc}
   22a78:	682b      	ldr	r3, [r5, #0]
   22a7a:	2b00      	cmp	r3, #0
   22a7c:	d0fb      	beq.n	22a76 <_kill_r+0x1a>
   22a7e:	6023      	str	r3, [r4, #0]
   22a80:	bd70      	pop	{r4, r5, r6, pc}
   22a82:	bf00      	nop
   22a84:	10030234 	.word	0x10030234

00022a88 <_getpid_r>:
   22a88:	f000 b810 	b.w	22aac <_getpid>

00022a8c <_close>:
   22a8c:	4b02      	ldr	r3, [pc, #8]	@ (22a98 <_close+0xc>)
   22a8e:	2258      	movs	r2, #88	@ 0x58
   22a90:	601a      	str	r2, [r3, #0]
   22a92:	f04f 30ff 	mov.w	r0, #4294967295
   22a96:	4770      	bx	lr
   22a98:	10030234 	.word	0x10030234

00022a9c <_fstat>:
   22a9c:	4b02      	ldr	r3, [pc, #8]	@ (22aa8 <_fstat+0xc>)
   22a9e:	2258      	movs	r2, #88	@ 0x58
   22aa0:	601a      	str	r2, [r3, #0]
   22aa2:	f04f 30ff 	mov.w	r0, #4294967295
   22aa6:	4770      	bx	lr
   22aa8:	10030234 	.word	0x10030234

00022aac <_getpid>:
   22aac:	4b02      	ldr	r3, [pc, #8]	@ (22ab8 <_getpid+0xc>)
   22aae:	2258      	movs	r2, #88	@ 0x58
   22ab0:	601a      	str	r2, [r3, #0]
   22ab2:	f04f 30ff 	mov.w	r0, #4294967295
   22ab6:	4770      	bx	lr
   22ab8:	10030234 	.word	0x10030234

00022abc <_isatty>:
   22abc:	4b02      	ldr	r3, [pc, #8]	@ (22ac8 <_isatty+0xc>)
   22abe:	2258      	movs	r2, #88	@ 0x58
   22ac0:	601a      	str	r2, [r3, #0]
   22ac2:	2000      	movs	r0, #0
   22ac4:	4770      	bx	lr
   22ac6:	bf00      	nop
   22ac8:	10030234 	.word	0x10030234

00022acc <_kill>:
   22acc:	4b02      	ldr	r3, [pc, #8]	@ (22ad8 <_kill+0xc>)
   22ace:	2258      	movs	r2, #88	@ 0x58
   22ad0:	601a      	str	r2, [r3, #0]
   22ad2:	f04f 30ff 	mov.w	r0, #4294967295
   22ad6:	4770      	bx	lr
   22ad8:	10030234 	.word	0x10030234

00022adc <_lseek>:
   22adc:	4b02      	ldr	r3, [pc, #8]	@ (22ae8 <_lseek+0xc>)
   22ade:	2258      	movs	r2, #88	@ 0x58
   22ae0:	601a      	str	r2, [r3, #0]
   22ae2:	f04f 30ff 	mov.w	r0, #4294967295
   22ae6:	4770      	bx	lr
   22ae8:	10030234 	.word	0x10030234

00022aec <_read>:
   22aec:	4b02      	ldr	r3, [pc, #8]	@ (22af8 <_read+0xc>)
   22aee:	2258      	movs	r2, #88	@ 0x58
   22af0:	601a      	str	r2, [r3, #0]
   22af2:	f04f 30ff 	mov.w	r0, #4294967295
   22af6:	4770      	bx	lr
   22af8:	10030234 	.word	0x10030234

00022afc <_sbrk>:
   22afc:	4a04      	ldr	r2, [pc, #16]	@ (22b10 <_sbrk+0x14>)
   22afe:	4905      	ldr	r1, [pc, #20]	@ (22b14 <_sbrk+0x18>)
   22b00:	6813      	ldr	r3, [r2, #0]
   22b02:	2b00      	cmp	r3, #0
   22b04:	bf08      	it	eq
   22b06:	460b      	moveq	r3, r1
   22b08:	4418      	add	r0, r3
   22b0a:	6010      	str	r0, [r2, #0]
   22b0c:	4618      	mov	r0, r3
   22b0e:	4770      	bx	lr
   22b10:	10030274 	.word	0x10030274
   22b14:	10001000 	.word	0x10001000

00022b18 <_write>:
   22b18:	4b02      	ldr	r3, [pc, #8]	@ (22b24 <_write+0xc>)
   22b1a:	2258      	movs	r2, #88	@ 0x58
   22b1c:	601a      	str	r2, [r3, #0]
   22b1e:	f04f 30ff 	mov.w	r0, #4294967295
   22b22:	4770      	bx	lr
   22b24:	10030234 	.word	0x10030234

00022b28 <_exit>:
   22b28:	e7fe      	b.n	22b28 <_exit>
   22b2a:	bf00      	nop

00022b2c <am_hal_cachectrl_config>:
   22b2c:	b530      	push	{r4, r5, lr}
   22b2e:	b083      	sub	sp, #12
   22b30:	4604      	mov	r4, r0
   22b32:	f000 f917 	bl	22d64 <am_hal_interrupt_master_disable>
   22b36:	f04f 4590 	mov.w	r5, #1207959552	@ 0x48000000
   22b3a:	9001      	str	r0, [sp, #4]
   22b3c:	682b      	ldr	r3, [r5, #0]
   22b3e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
   22b42:	602b      	str	r3, [r5, #0]
   22b44:	9801      	ldr	r0, [sp, #4]
   22b46:	f000 f911 	bl	22d6c <am_hal_interrupt_master_set>
   22b4a:	7863      	ldrb	r3, [r4, #1]
   22b4c:	7822      	ldrb	r2, [r4, #0]
   22b4e:	78a1      	ldrb	r1, [r4, #2]
   22b50:	021b      	lsls	r3, r3, #8
   22b52:	f403 7340 	and.w	r3, r3, #768	@ 0x300
   22b56:	0112      	lsls	r2, r2, #4
   22b58:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
   22b5c:	b2d2      	uxtb	r2, r2
   22b5e:	4313      	orrs	r3, r2
   22b60:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
   22b64:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
   22b68:	2000      	movs	r0, #0
   22b6a:	602b      	str	r3, [r5, #0]
   22b6c:	b003      	add	sp, #12
   22b6e:	bd30      	pop	{r4, r5, pc}

00022b70 <am_hal_cachectrl_enable>:
   22b70:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
   22b74:	2000      	movs	r0, #0
   22b76:	681a      	ldr	r2, [r3, #0]
   22b78:	f042 0201 	orr.w	r2, r2, #1
   22b7c:	601a      	str	r2, [r3, #0]
   22b7e:	689a      	ldr	r2, [r3, #8]
   22b80:	f042 0201 	orr.w	r2, r2, #1
   22b84:	609a      	str	r2, [r3, #8]
   22b86:	4770      	bx	lr

00022b88 <am_hal_daxi_config>:
   22b88:	b530      	push	{r4, r5, lr}
   22b8a:	b083      	sub	sp, #12
   22b8c:	4605      	mov	r5, r0
   22b8e:	f000 f8e9 	bl	22d64 <am_hal_interrupt_master_disable>
   22b92:	9000      	str	r0, [sp, #0]
   22b94:	f000 f8e6 	bl	22d64 <am_hal_interrupt_master_disable>
   22b98:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
   22b9c:	9001      	str	r0, [sp, #4]
   22b9e:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
   22ba0:	0752      	lsls	r2, r2, #29
   22ba2:	d40c      	bmi.n	22bbe <am_hal_daxi_config+0x36>
   22ba4:	f3bf 8f4f 	dsb	sy
   22ba8:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   22baa:	491a      	ldr	r1, [pc, #104]	@ (22c14 <am_hal_daxi_config+0x8c>)
   22bac:	f042 0201 	orr.w	r2, r2, #1
   22bb0:	655a      	str	r2, [r3, #84]	@ 0x54
   22bb2:	680a      	ldr	r2, [r1, #0]
   22bb4:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   22bb6:	f042 0202 	orr.w	r2, r2, #2
   22bba:	655a      	str	r2, [r3, #84]	@ 0x54
   22bbc:	680b      	ldr	r3, [r1, #0]
   22bbe:	f04f 4490 	mov.w	r4, #1207959552	@ 0x48000000
   22bc2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
   22bc4:	075b      	lsls	r3, r3, #29
   22bc6:	d5fc      	bpl.n	22bc2 <am_hal_daxi_config+0x3a>
   22bc8:	9801      	ldr	r0, [sp, #4]
   22bca:	f000 f8cf 	bl	22d6c <am_hal_interrupt_master_set>
   22bce:	b1ed      	cbz	r5, 22c0c <am_hal_daxi_config+0x84>
   22bd0:	792b      	ldrb	r3, [r5, #4]
   22bd2:	78ea      	ldrb	r2, [r5, #3]
   22bd4:	7869      	ldrb	r1, [r5, #1]
   22bd6:	6828      	ldr	r0, [r5, #0]
   22bd8:	f003 0301 	and.w	r3, r3, #1
   22bdc:	0212      	lsls	r2, r2, #8
   22bde:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
   22be2:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
   22be6:	4313      	orrs	r3, r2
   22be8:	78aa      	ldrb	r2, [r5, #2]
   22bea:	490b      	ldr	r1, [pc, #44]	@ (22c18 <am_hal_daxi_config+0x90>)
   22bec:	0412      	lsls	r2, r2, #16
   22bee:	f402 12f8 	and.w	r2, r2, #2031616	@ 0x1f0000
   22bf2:	4313      	orrs	r3, r2
   22bf4:	6523      	str	r3, [r4, #80]	@ 0x50
   22bf6:	6008      	str	r0, [r1, #0]
   22bf8:	792b      	ldrb	r3, [r5, #4]
   22bfa:	710b      	strb	r3, [r1, #4]
   22bfc:	4b05      	ldr	r3, [pc, #20]	@ (22c14 <am_hal_daxi_config+0x8c>)
   22bfe:	681b      	ldr	r3, [r3, #0]
   22c00:	9800      	ldr	r0, [sp, #0]
   22c02:	f000 f8b3 	bl	22d6c <am_hal_interrupt_master_set>
   22c06:	2000      	movs	r0, #0
   22c08:	b003      	add	sp, #12
   22c0a:	bd30      	pop	{r4, r5, pc}
   22c0c:	2306      	movs	r3, #6
   22c0e:	6523      	str	r3, [r4, #80]	@ 0x50
   22c10:	e7f4      	b.n	22bfc <am_hal_daxi_config+0x74>
   22c12:	bf00      	nop
   22c14:	47ff0000 	.word	0x47ff0000
   22c18:	10001798 	.word	0x10001798

00022c1c <am_hal_daxi_control>:
   22c1c:	b510      	push	{r4, lr}
   22c1e:	b084      	sub	sp, #16
   22c20:	2803      	cmp	r0, #3
   22c22:	d866      	bhi.n	22cf2 <am_hal_daxi_control+0xd6>
   22c24:	e8df f000 	tbb	[pc, r0]
   22c28:	02083252 	.word	0x02083252
   22c2c:	4832      	ldr	r0, [pc, #200]	@ (22cf8 <am_hal_daxi_control+0xdc>)
   22c2e:	f7ff ffab 	bl	22b88 <am_hal_daxi_config>
   22c32:	2000      	movs	r0, #0
   22c34:	b004      	add	sp, #16
   22c36:	bd10      	pop	{r4, pc}
   22c38:	f000 f894 	bl	22d64 <am_hal_interrupt_master_disable>
   22c3c:	9002      	str	r0, [sp, #8]
   22c3e:	f000 f891 	bl	22d64 <am_hal_interrupt_master_disable>
   22c42:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
   22c46:	9003      	str	r0, [sp, #12]
   22c48:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
   22c4a:	0752      	lsls	r2, r2, #29
   22c4c:	d40c      	bmi.n	22c68 <am_hal_daxi_control+0x4c>
   22c4e:	f3bf 8f4f 	dsb	sy
   22c52:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   22c54:	4929      	ldr	r1, [pc, #164]	@ (22cfc <am_hal_daxi_control+0xe0>)
   22c56:	f042 0201 	orr.w	r2, r2, #1
   22c5a:	655a      	str	r2, [r3, #84]	@ 0x54
   22c5c:	680a      	ldr	r2, [r1, #0]
   22c5e:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   22c60:	f042 0202 	orr.w	r2, r2, #2
   22c64:	655a      	str	r2, [r3, #84]	@ 0x54
   22c66:	680b      	ldr	r3, [r1, #0]
   22c68:	f04f 4490 	mov.w	r4, #1207959552	@ 0x48000000
   22c6c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
   22c6e:	075b      	lsls	r3, r3, #29
   22c70:	d5fc      	bpl.n	22c6c <am_hal_daxi_control+0x50>
   22c72:	9803      	ldr	r0, [sp, #12]
   22c74:	f000 f87a 	bl	22d6c <am_hal_interrupt_master_set>
   22c78:	2206      	movs	r2, #6
   22c7a:	4b20      	ldr	r3, [pc, #128]	@ (22cfc <am_hal_daxi_control+0xe0>)
   22c7c:	6522      	str	r2, [r4, #80]	@ 0x50
   22c7e:	681b      	ldr	r3, [r3, #0]
   22c80:	9802      	ldr	r0, [sp, #8]
   22c82:	f000 f873 	bl	22d6c <am_hal_interrupt_master_set>
   22c86:	2000      	movs	r0, #0
   22c88:	b004      	add	sp, #16
   22c8a:	bd10      	pop	{r4, pc}
   22c8c:	f000 f86a 	bl	22d64 <am_hal_interrupt_master_disable>
   22c90:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
   22c94:	9001      	str	r0, [sp, #4]
   22c96:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
   22c98:	0754      	lsls	r4, r2, #29
   22c9a:	d40c      	bmi.n	22cb6 <am_hal_daxi_control+0x9a>
   22c9c:	f3bf 8f4f 	dsb	sy
   22ca0:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   22ca2:	4916      	ldr	r1, [pc, #88]	@ (22cfc <am_hal_daxi_control+0xe0>)
   22ca4:	f042 0201 	orr.w	r2, r2, #1
   22ca8:	655a      	str	r2, [r3, #84]	@ 0x54
   22caa:	680a      	ldr	r2, [r1, #0]
   22cac:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   22cae:	f042 0202 	orr.w	r2, r2, #2
   22cb2:	655a      	str	r2, [r3, #84]	@ 0x54
   22cb4:	680b      	ldr	r3, [r1, #0]
   22cb6:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
   22cba:	6d53      	ldr	r3, [r2, #84]	@ 0x54
   22cbc:	0758      	lsls	r0, r3, #29
   22cbe:	d5fc      	bpl.n	22cba <am_hal_daxi_control+0x9e>
   22cc0:	9801      	ldr	r0, [sp, #4]
   22cc2:	f000 f853 	bl	22d6c <am_hal_interrupt_master_set>
   22cc6:	2000      	movs	r0, #0
   22cc8:	b004      	add	sp, #16
   22cca:	bd10      	pop	{r4, pc}
   22ccc:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
   22cd0:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
   22cd2:	0751      	lsls	r1, r2, #29
   22cd4:	f3c2 0080 	ubfx	r0, r2, #2, #1
   22cd8:	d409      	bmi.n	22cee <am_hal_daxi_control+0xd2>
   22cda:	f3bf 8f4f 	dsb	sy
   22cde:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   22ce0:	4906      	ldr	r1, [pc, #24]	@ (22cfc <am_hal_daxi_control+0xe0>)
   22ce2:	f042 0202 	orr.w	r2, r2, #2
   22ce6:	655a      	str	r2, [r3, #84]	@ 0x54
   22ce8:	680b      	ldr	r3, [r1, #0]
   22cea:	b004      	add	sp, #16
   22cec:	bd10      	pop	{r4, pc}
   22cee:	2000      	movs	r0, #0
   22cf0:	e7a0      	b.n	22c34 <am_hal_daxi_control+0x18>
   22cf2:	2006      	movs	r0, #6
   22cf4:	e79e      	b.n	22c34 <am_hal_daxi_control+0x18>
   22cf6:	bf00      	nop
   22cf8:	10001798 	.word	0x10001798
   22cfc:	47ff0000 	.word	0x47ff0000

00022d00 <am_hal_fault_capture_enable>:
   22d00:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
   22d04:	2000      	movs	r0, #0
   22d06:	f8d2 3090 	ldr.w	r3, [r2, #144]	@ 0x90
   22d0a:	f043 0301 	orr.w	r3, r3, #1
   22d0e:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
   22d12:	4770      	bx	lr

00022d14 <am_hal_fault_status_get>:
   22d14:	b1f8      	cbz	r0, 22d56 <am_hal_fault_status_get+0x42>
   22d16:	f04f 4190 	mov.w	r1, #1207959552	@ 0x48000000
   22d1a:	4603      	mov	r3, r0
   22d1c:	f8d1 208c 	ldr.w	r2, [r1, #140]	@ 0x8c
   22d20:	6840      	ldr	r0, [r0, #4]
   22d22:	b410      	push	{r4}
   22d24:	f002 0401 	and.w	r4, r2, #1
   22d28:	701c      	strb	r4, [r3, #0]
   22d2a:	f3c2 0440 	ubfx	r4, r2, #1, #1
   22d2e:	721c      	strb	r4, [r3, #8]
   22d30:	f8d1 4084 	ldr.w	r4, [r1, #132]	@ 0x84
   22d34:	60dc      	str	r4, [r3, #12]
   22d36:	f8d1 4080 	ldr.w	r4, [r1, #128]	@ 0x80
   22d3a:	4320      	orrs	r0, r4
   22d3c:	f3c2 0280 	ubfx	r2, r2, #2, #1
   22d40:	6058      	str	r0, [r3, #4]
   22d42:	f8d1 1088 	ldr.w	r1, [r1, #136]	@ 0x88
   22d46:	741a      	strb	r2, [r3, #16]
   22d48:	695a      	ldr	r2, [r3, #20]
   22d4a:	f85d 4b04 	ldr.w	r4, [sp], #4
   22d4e:	430a      	orrs	r2, r1
   22d50:	2000      	movs	r0, #0
   22d52:	615a      	str	r2, [r3, #20]
   22d54:	4770      	bx	lr
   22d56:	2006      	movs	r0, #6
   22d58:	4770      	bx	lr
   22d5a:	bf00      	nop

00022d5c <am_hal_interrupt_master_enable>:
   22d5c:	f3ef 8010 	mrs	r0, PRIMASK
   22d60:	b662      	cpsie	i
   22d62:	4770      	bx	lr

00022d64 <am_hal_interrupt_master_disable>:
   22d64:	f3ef 8010 	mrs	r0, PRIMASK
   22d68:	b672      	cpsid	i
   22d6a:	4770      	bx	lr

00022d6c <am_hal_interrupt_master_set>:
   22d6c:	f380 8810 	msr	PRIMASK, r0
   22d70:	4770      	bx	lr
   22d72:	bf00      	nop

00022d74 <internal_iom_reset_on_error>:
   22d74:	b570      	push	{r4, r5, r6, lr}
   22d76:	6844      	ldr	r4, [r0, #4]
   22d78:	f8d0 0864 	ldr.w	r0, [r0, #2148]	@ 0x864
   22d7c:	f504 2480 	add.w	r4, r4, #262144	@ 0x40000
   22d80:	3450      	adds	r4, #80	@ 0x50
   22d82:	0324      	lsls	r4, r4, #12
   22d84:	2300      	movs	r3, #0
   22d86:	050e      	lsls	r6, r1, #20
   22d88:	f8d4 5200 	ldr.w	r5, [r4, #512]	@ 0x200
   22d8c:	f8c4 3200 	str.w	r3, [r4, #512]	@ 0x200
   22d90:	d52a      	bpl.n	22de8 <internal_iom_reset_on_error+0x74>
   22d92:	f8d4 3218 	ldr.w	r3, [r4, #536]	@ 0x218
   22d96:	079a      	lsls	r2, r3, #30
   22d98:	d45d      	bmi.n	22e56 <internal_iom_reset_on_error+0xe2>
   22d9a:	f8d4 3248 	ldr.w	r3, [r4, #584]	@ 0x248
   22d9e:	079b      	lsls	r3, r3, #30
   22da0:	d508      	bpl.n	22db4 <internal_iom_reset_on_error+0x40>
   22da2:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   22da6:	f3c3 4307 	ubfx	r3, r3, #16, #8
   22daa:	2b03      	cmp	r3, #3
   22dac:	d9f5      	bls.n	22d9a <internal_iom_reset_on_error+0x26>
   22dae:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
   22db2:	e7f6      	b.n	22da2 <internal_iom_reset_on_error+0x2e>
   22db4:	f8d4 3248 	ldr.w	r3, [r4, #584]	@ 0x248
   22db8:	f003 0306 	and.w	r3, r3, #6
   22dbc:	2b04      	cmp	r3, #4
   22dbe:	d1f9      	bne.n	22db4 <internal_iom_reset_on_error+0x40>
   22dc0:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   22dc4:	f413 0f7f 	tst.w	r3, #16711680	@ 0xff0000
   22dc8:	d00e      	beq.n	22de8 <internal_iom_reset_on_error+0x74>
   22dca:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   22dce:	f3c3 4307 	ubfx	r3, r3, #16, #8
   22dd2:	2b03      	cmp	r3, #3
   22dd4:	d9f4      	bls.n	22dc0 <internal_iom_reset_on_error+0x4c>
   22dd6:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
   22dda:	e7f6      	b.n	22dca <internal_iom_reset_on_error+0x56>
   22ddc:	f8d4 3248 	ldr.w	r3, [r4, #584]	@ 0x248
   22de0:	f003 0306 	and.w	r3, r3, #6
   22de4:	2b04      	cmp	r3, #4
   22de6:	d1f9      	bne.n	22ddc <internal_iom_reset_on_error+0x68>
   22de8:	f411 7f04 	tst.w	r1, #528	@ 0x210
   22dec:	d02c      	beq.n	22e48 <internal_iom_reset_on_error+0xd4>
   22dee:	f8d4 6388 	ldr.w	r6, [r4, #904]	@ 0x388
   22df2:	f8d4 3248 	ldr.w	r3, [r4, #584]	@ 0x248
   22df6:	f003 0306 	and.w	r3, r3, #6
   22dfa:	2b04      	cmp	r3, #4
   22dfc:	d1f9      	bne.n	22df2 <internal_iom_reset_on_error+0x7e>
   22dfe:	f8d4 311c 	ldr.w	r3, [r4, #284]	@ 0x11c
   22e02:	f36f 1304 	bfc	r3, #4, #1
   22e06:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
   22e0a:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
   22e0e:	f36f 0341 	bfc	r3, #1, #1
   22e12:	f8c4 3110 	str.w	r3, [r4, #272]	@ 0x110
   22e16:	f8d4 3388 	ldr.w	r3, [r4, #904]	@ 0x388
   22e1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
   22e1e:	f043 0302 	orr.w	r3, r3, #2
   22e22:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
   22e26:	0040      	lsls	r0, r0, #1
   22e28:	f003 f95a 	bl	260e0 <am_hal_delay_us>
   22e2c:	f8c4 6388 	str.w	r6, [r4, #904]	@ 0x388
   22e30:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
   22e34:	f043 0302 	orr.w	r3, r3, #2
   22e38:	f8c4 3110 	str.w	r3, [r4, #272]	@ 0x110
   22e3c:	f8d4 311c 	ldr.w	r3, [r4, #284]	@ 0x11c
   22e40:	f043 0310 	orr.w	r3, r3, #16
   22e44:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
   22e48:	f04f 33ff 	mov.w	r3, #4294967295
   22e4c:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
   22e50:	f8c4 5200 	str.w	r5, [r4, #512]	@ 0x200
   22e54:	bd70      	pop	{r4, r5, r6, pc}
   22e56:	f8d4 221c 	ldr.w	r2, [r4, #540]	@ 0x21c
   22e5a:	4e07      	ldr	r6, [pc, #28]	@ (22e78 <internal_iom_reset_on_error+0x104>)
   22e5c:	2a00      	cmp	r2, #0
   22e5e:	d0bd      	beq.n	22ddc <internal_iom_reset_on_error+0x68>
   22e60:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   22e64:	f3c3 2307 	ubfx	r3, r3, #8, #8
   22e68:	2b03      	cmp	r3, #3
   22e6a:	d9f9      	bls.n	22e60 <internal_iom_reset_on_error+0xec>
   22e6c:	2a04      	cmp	r2, #4
   22e6e:	f8c4 610c 	str.w	r6, [r4, #268]	@ 0x10c
   22e72:	d9b3      	bls.n	22ddc <internal_iom_reset_on_error+0x68>
   22e74:	3a04      	subs	r2, #4
   22e76:	e7f1      	b.n	22e5c <internal_iom_reset_on_error+0xe8>
   22e78:	deadbeef 	.word	0xdeadbeef

00022e7c <am_hal_iom_initialize>:
   22e7c:	2807      	cmp	r0, #7
   22e7e:	d81a      	bhi.n	22eb6 <am_hal_iom_initialize+0x3a>
   22e80:	b1e9      	cbz	r1, 22ebe <am_hal_iom_initialize+0x42>
   22e82:	b530      	push	{r4, r5, lr}
   22e84:	f640 0ca8 	movw	ip, #2216	@ 0x8a8
   22e88:	4d0e      	ldr	r5, [pc, #56]	@ (22ec4 <am_hal_iom_initialize+0x48>)
   22e8a:	fb0c fc00 	mul.w	ip, ip, r0
   22e8e:	eb05 040c 	add.w	r4, r5, ip
   22e92:	4602      	mov	r2, r0
   22e94:	78e3      	ldrb	r3, [r4, #3]
   22e96:	f013 0301 	ands.w	r3, r3, #1
   22e9a:	d10e      	bne.n	22eba <am_hal_iom_initialize+0x3e>
   22e9c:	4618      	mov	r0, r3
   22e9e:	f855 300c 	ldr.w	r3, [r5, ip]
   22ea2:	f003 4e7c 	and.w	lr, r3, #4227858432	@ 0xfc000000
   22ea6:	4b08      	ldr	r3, [pc, #32]	@ (22ec8 <am_hal_iom_initialize+0x4c>)
   22ea8:	ea4e 0303 	orr.w	r3, lr, r3
   22eac:	f845 300c 	str.w	r3, [r5, ip]
   22eb0:	6062      	str	r2, [r4, #4]
   22eb2:	600c      	str	r4, [r1, #0]
   22eb4:	bd30      	pop	{r4, r5, pc}
   22eb6:	2005      	movs	r0, #5
   22eb8:	4770      	bx	lr
   22eba:	2007      	movs	r0, #7
   22ebc:	bd30      	pop	{r4, r5, pc}
   22ebe:	2006      	movs	r0, #6
   22ec0:	4770      	bx	lr
   22ec2:	bf00      	nop
   22ec4:	10030278 	.word	0x10030278
   22ec8:	01123456 	.word	0x01123456

00022ecc <am_hal_iom_enable>:
   22ecc:	2800      	cmp	r0, #0
   22ece:	d06b      	beq.n	22fa8 <am_hal_iom_enable+0xdc>
   22ed0:	b530      	push	{r4, r5, lr}
   22ed2:	6803      	ldr	r3, [r0, #0]
   22ed4:	4a37      	ldr	r2, [pc, #220]	@ (22fb4 <am_hal_iom_enable+0xe8>)
   22ed6:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   22eda:	4293      	cmp	r3, r2
   22edc:	b085      	sub	sp, #20
   22ede:	4604      	mov	r4, r0
   22ee0:	d155      	bne.n	22f8e <am_hal_iom_enable+0xc2>
   22ee2:	78c3      	ldrb	r3, [r0, #3]
   22ee4:	079b      	lsls	r3, r3, #30
   22ee6:	d455      	bmi.n	22f94 <am_hal_iom_enable+0xc8>
   22ee8:	6840      	ldr	r0, [r0, #4]
   22eea:	7a23      	ldrb	r3, [r4, #8]
   22eec:	f500 2280 	add.w	r2, r0, #262144	@ 0x40000
   22ef0:	3250      	adds	r2, #80	@ 0x50
   22ef2:	0311      	lsls	r1, r2, #12
   22ef4:	3b00      	subs	r3, #0
   22ef6:	f8d1 211c 	ldr.w	r2, [r1, #284]	@ 0x11c
   22efa:	bf18      	it	ne
   22efc:	2301      	movne	r3, #1
   22efe:	f3c2 0242 	ubfx	r2, r2, #1, #3
   22f02:	4293      	cmp	r3, r2
   22f04:	d04c      	beq.n	22fa0 <am_hal_iom_enable+0xd4>
   22f06:	f8d1 211c 	ldr.w	r2, [r1, #284]	@ 0x11c
   22f0a:	f3c2 1242 	ubfx	r2, r2, #5, #3
   22f0e:	4293      	cmp	r3, r2
   22f10:	d143      	bne.n	22f9a <am_hal_iom_enable+0xce>
   22f12:	2310      	movs	r3, #16
   22f14:	f8c1 311c 	str.w	r3, [r1, #284]	@ 0x11c
   22f18:	68e3      	ldr	r3, [r4, #12]
   22f1a:	b38b      	cbz	r3, 22f80 <am_hal_iom_enable+0xb4>
   22f1c:	4a26      	ldr	r2, [pc, #152]	@ (22fb8 <am_hal_iom_enable+0xec>)
   22f1e:	9302      	str	r3, [sp, #8]
   22f20:	2300      	movs	r3, #0
   22f22:	6263      	str	r3, [r4, #36]	@ 0x24
   22f24:	61e3      	str	r3, [r4, #28]
   22f26:	f8c1 2238 	str.w	r2, [r1, #568]	@ 0x238
   22f2a:	6922      	ldr	r2, [r4, #16]
   22f2c:	f8c4 3854 	str.w	r3, [r4, #2132]	@ 0x854
   22f30:	0852      	lsrs	r2, r2, #1
   22f32:	f44f 7580 	mov.w	r5, #256	@ 0x100
   22f36:	f884 383c 	strb.w	r3, [r4, #2108]	@ 0x83c
   22f3a:	f8c4 3838 	str.w	r3, [r4, #2104]	@ 0x838
   22f3e:	f8c4 3844 	str.w	r3, [r4, #2116]	@ 0x844
   22f42:	f8c4 3840 	str.w	r3, [r4, #2112]	@ 0x840
   22f46:	f8c4 3830 	str.w	r3, [r4, #2096]	@ 0x830
   22f4a:	f8c4 3828 	str.w	r3, [r4, #2088]	@ 0x828
   22f4e:	6223      	str	r3, [r4, #32]
   22f50:	f8c4 385c 	str.w	r3, [r4, #2140]	@ 0x85c
   22f54:	9201      	str	r2, [sp, #4]
   22f56:	2301      	movs	r3, #1
   22f58:	f604 0228 	addw	r2, r4, #2088	@ 0x828
   22f5c:	b2c0      	uxtb	r0, r0
   22f5e:	f8a4 582c 	strh.w	r5, [r4, #2092]	@ 0x82c
   22f62:	a901      	add	r1, sp, #4
   22f64:	f88d 300c 	strb.w	r3, [sp, #12]
   22f68:	f004 f8e6 	bl	27138 <am_hal_cmdq_init>
   22f6c:	6863      	ldr	r3, [r4, #4]
   22f6e:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   22f72:	3350      	adds	r3, #80	@ 0x50
   22f74:	2202      	movs	r2, #2
   22f76:	031b      	lsls	r3, r3, #12
   22f78:	b9c0      	cbnz	r0, 22fac <am_hal_iom_enable+0xe0>
   22f7a:	6225      	str	r5, [r4, #32]
   22f7c:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
   22f80:	78e3      	ldrb	r3, [r4, #3]
   22f82:	2000      	movs	r0, #0
   22f84:	f043 0302 	orr.w	r3, r3, #2
   22f88:	70e3      	strb	r3, [r4, #3]
   22f8a:	b005      	add	sp, #20
   22f8c:	bd30      	pop	{r4, r5, pc}
   22f8e:	2002      	movs	r0, #2
   22f90:	b005      	add	sp, #20
   22f92:	bd30      	pop	{r4, r5, pc}
   22f94:	2000      	movs	r0, #0
   22f96:	b005      	add	sp, #20
   22f98:	bd30      	pop	{r4, r5, pc}
   22f9a:	2009      	movs	r0, #9
   22f9c:	b005      	add	sp, #20
   22f9e:	bd30      	pop	{r4, r5, pc}
   22fa0:	2301      	movs	r3, #1
   22fa2:	f8c1 311c 	str.w	r3, [r1, #284]	@ 0x11c
   22fa6:	e7b7      	b.n	22f18 <am_hal_iom_enable+0x4c>
   22fa8:	2002      	movs	r0, #2
   22faa:	4770      	bx	lr
   22fac:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
   22fb0:	e7ee      	b.n	22f90 <am_hal_iom_enable+0xc4>
   22fb2:	bf00      	nop
   22fb4:	01123456 	.word	0x01123456
   22fb8:	00800040 	.word	0x00800040

00022fbc <am_hal_iom_power_ctrl>:
   22fbc:	2800      	cmp	r0, #0
   22fbe:	f000 80c5 	beq.w	2314c <am_hal_iom_power_ctrl+0x190>
   22fc2:	b510      	push	{r4, lr}
   22fc4:	6803      	ldr	r3, [r0, #0]
   22fc6:	4604      	mov	r4, r0
   22fc8:	4877      	ldr	r0, [pc, #476]	@ (231a8 <am_hal_iom_power_ctrl+0x1ec>)
   22fca:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   22fce:	4283      	cmp	r3, r0
   22fd0:	b082      	sub	sp, #8
   22fd2:	d169      	bne.n	230a8 <am_hal_iom_power_ctrl+0xec>
   22fd4:	2900      	cmp	r1, #0
   22fd6:	d06d      	beq.n	230b4 <am_hal_iom_power_ctrl+0xf8>
   22fd8:	3901      	subs	r1, #1
   22fda:	2901      	cmp	r1, #1
   22fdc:	d867      	bhi.n	230ae <am_hal_iom_power_ctrl+0xf2>
   22fde:	78e3      	ldrb	r3, [r4, #3]
   22fe0:	6860      	ldr	r0, [r4, #4]
   22fe2:	f013 0f02 	tst.w	r3, #2
   22fe6:	f500 2380 	add.w	r3, r0, #262144	@ 0x40000
   22fea:	f103 0350 	add.w	r3, r3, #80	@ 0x50
   22fee:	ea4f 3303 	mov.w	r3, r3, lsl #12
   22ff2:	d00a      	beq.n	2300a <am_hal_iom_power_ctrl+0x4e>
   22ff4:	f8d3 1248 	ldr.w	r1, [r3, #584]	@ 0x248
   22ff8:	f001 0106 	and.w	r1, r1, #6
   22ffc:	2904      	cmp	r1, #4
   22ffe:	f040 80be 	bne.w	2317e <am_hal_iom_power_ctrl+0x1c2>
   23002:	6a61      	ldr	r1, [r4, #36]	@ 0x24
   23004:	2900      	cmp	r1, #0
   23006:	f040 80ba 	bne.w	2317e <am_hal_iom_power_ctrl+0x1c2>
   2300a:	b3d2      	cbz	r2, 23082 <am_hal_iom_power_ctrl+0xc6>
   2300c:	f8d3 1104 	ldr.w	r1, [r3, #260]	@ 0x104
   23010:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   23014:	f8c4 2874 	str.w	r2, [r4, #2164]	@ 0x874
   23018:	f8c4 186c 	str.w	r1, [r4, #2156]	@ 0x86c
   2301c:	f8d3 111c 	ldr.w	r1, [r3, #284]	@ 0x11c
   23020:	f8d3 2228 	ldr.w	r2, [r3, #552]	@ 0x228
   23024:	f8c4 287c 	str.w	r2, [r4, #2172]	@ 0x87c
   23028:	f8c4 1878 	str.w	r1, [r4, #2168]	@ 0x878
   2302c:	f8d3 122c 	ldr.w	r1, [r3, #556]	@ 0x22c
   23030:	f8d3 2234 	ldr.w	r2, [r3, #564]	@ 0x234
   23034:	f8c4 2884 	str.w	r2, [r4, #2180]	@ 0x884
   23038:	f8c4 1880 	str.w	r1, [r4, #2176]	@ 0x880
   2303c:	f8d3 123c 	ldr.w	r1, [r3, #572]	@ 0x23c
   23040:	f8d3 2240 	ldr.w	r2, [r3, #576]	@ 0x240
   23044:	f8c4 288c 	str.w	r2, [r4, #2188]	@ 0x88c
   23048:	f8c4 1888 	str.w	r1, [r4, #2184]	@ 0x888
   2304c:	f8d3 1244 	ldr.w	r1, [r3, #580]	@ 0x244
   23050:	f8d3 2280 	ldr.w	r2, [r3, #640]	@ 0x280
   23054:	f8c4 2894 	str.w	r2, [r4, #2196]	@ 0x894
   23058:	f8c4 1890 	str.w	r1, [r4, #2192]	@ 0x890
   2305c:	f8d3 12c0 	ldr.w	r1, [r3, #704]	@ 0x2c0
   23060:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   23064:	f8c4 289c 	str.w	r2, [r4, #2204]	@ 0x89c
   23068:	f8c4 1898 	str.w	r1, [r4, #2200]	@ 0x898
   2306c:	f8d3 1210 	ldr.w	r1, [r3, #528]	@ 0x210
   23070:	f8d3 2228 	ldr.w	r2, [r3, #552]	@ 0x228
   23074:	f8c4 1870 	str.w	r1, [r4, #2160]	@ 0x870
   23078:	07d1      	lsls	r1, r2, #31
   2307a:	d472      	bmi.n	23162 <am_hal_iom_power_ctrl+0x1a6>
   2307c:	2201      	movs	r2, #1
   2307e:	f884 2868 	strb.w	r2, [r4, #2152]	@ 0x868
   23082:	f8d3 211c 	ldr.w	r2, [r3, #284]	@ 0x11c
   23086:	f36f 0200 	bfc	r2, #0, #1
   2308a:	f8c3 211c 	str.w	r2, [r3, #284]	@ 0x11c
   2308e:	f8d3 211c 	ldr.w	r2, [r3, #284]	@ 0x11c
   23092:	3001      	adds	r0, #1
   23094:	f36f 1204 	bfc	r2, #4, #1
   23098:	f8c3 211c 	str.w	r2, [r3, #284]	@ 0x11c
   2309c:	b2c0      	uxtb	r0, r0
   2309e:	f003 fcbd 	bl	26a1c <am_hal_pwrctrl_periph_disable>
   230a2:	2000      	movs	r0, #0
   230a4:	b002      	add	sp, #8
   230a6:	bd10      	pop	{r4, pc}
   230a8:	2002      	movs	r0, #2
   230aa:	b002      	add	sp, #8
   230ac:	bd10      	pop	{r4, pc}
   230ae:	2006      	movs	r0, #6
   230b0:	b002      	add	sp, #8
   230b2:	bd10      	pop	{r4, pc}
   230b4:	2a00      	cmp	r2, #0
   230b6:	d04b      	beq.n	23150 <am_hal_iom_power_ctrl+0x194>
   230b8:	f894 3868 	ldrb.w	r3, [r4, #2152]	@ 0x868
   230bc:	2b00      	cmp	r3, #0
   230be:	d060      	beq.n	23182 <am_hal_iom_power_ctrl+0x1c6>
   230c0:	6860      	ldr	r0, [r4, #4]
   230c2:	3001      	adds	r0, #1
   230c4:	b2c0      	uxtb	r0, r0
   230c6:	f003 fbdf 	bl	26888 <am_hal_pwrctrl_periph_enable>
   230ca:	6860      	ldr	r0, [r4, #4]
   230cc:	f8d4 186c 	ldr.w	r1, [r4, #2156]	@ 0x86c
   230d0:	f8d4 287c 	ldr.w	r2, [r4, #2172]	@ 0x87c
   230d4:	f500 2380 	add.w	r3, r0, #262144	@ 0x40000
   230d8:	3350      	adds	r3, #80	@ 0x50
   230da:	031b      	lsls	r3, r3, #12
   230dc:	f8c3 1104 	str.w	r1, [r3, #260]	@ 0x104
   230e0:	f8d4 1874 	ldr.w	r1, [r4, #2164]	@ 0x874
   230e4:	f8c3 1118 	str.w	r1, [r3, #280]	@ 0x118
   230e8:	f8d4 1880 	ldr.w	r1, [r4, #2176]	@ 0x880
   230ec:	f8c3 122c 	str.w	r1, [r3, #556]	@ 0x22c
   230f0:	f8d4 1884 	ldr.w	r1, [r4, #2180]	@ 0x884
   230f4:	f8c3 1234 	str.w	r1, [r3, #564]	@ 0x234
   230f8:	f8d4 1888 	ldr.w	r1, [r4, #2184]	@ 0x888
   230fc:	f8c3 123c 	str.w	r1, [r3, #572]	@ 0x23c
   23100:	f8d4 188c 	ldr.w	r1, [r4, #2188]	@ 0x88c
   23104:	f8c3 1240 	str.w	r1, [r3, #576]	@ 0x240
   23108:	f8d4 1890 	ldr.w	r1, [r4, #2192]	@ 0x890
   2310c:	f8c3 1244 	str.w	r1, [r3, #580]	@ 0x244
   23110:	f8d4 1894 	ldr.w	r1, [r4, #2196]	@ 0x894
   23114:	f8c3 1280 	str.w	r1, [r3, #640]	@ 0x280
   23118:	f8d4 1898 	ldr.w	r1, [r4, #2200]	@ 0x898
   2311c:	f8c3 12c0 	str.w	r1, [r3, #704]	@ 0x2c0
   23120:	f8d4 189c 	ldr.w	r1, [r4, #2204]	@ 0x89c
   23124:	f8c3 1200 	str.w	r1, [r3, #512]	@ 0x200
   23128:	f8d4 1870 	ldr.w	r1, [r4, #2160]	@ 0x870
   2312c:	f8c3 1210 	str.w	r1, [r3, #528]	@ 0x210
   23130:	f022 0101 	bic.w	r1, r2, #1
   23134:	f8c3 1228 	str.w	r1, [r3, #552]	@ 0x228
   23138:	07d2      	lsls	r2, r2, #31
   2313a:	f8d4 1878 	ldr.w	r1, [r4, #2168]	@ 0x878
   2313e:	f8c3 111c 	str.w	r1, [r3, #284]	@ 0x11c
   23142:	d420      	bmi.n	23186 <am_hal_iom_power_ctrl+0x1ca>
   23144:	2000      	movs	r0, #0
   23146:	f884 0868 	strb.w	r0, [r4, #2152]	@ 0x868
   2314a:	e7ae      	b.n	230aa <am_hal_iom_power_ctrl+0xee>
   2314c:	2002      	movs	r0, #2
   2314e:	4770      	bx	lr
   23150:	6860      	ldr	r0, [r4, #4]
   23152:	9201      	str	r2, [sp, #4]
   23154:	3001      	adds	r0, #1
   23156:	b2c0      	uxtb	r0, r0
   23158:	f003 fb96 	bl	26888 <am_hal_pwrctrl_periph_enable>
   2315c:	9a01      	ldr	r2, [sp, #4]
   2315e:	4610      	mov	r0, r2
   23160:	e7a3      	b.n	230aa <am_hal_iom_power_ctrl+0xee>
   23162:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   23166:	f004 f86b 	bl	27240 <am_hal_cmdq_disable>
   2316a:	6860      	ldr	r0, [r4, #4]
   2316c:	3013      	adds	r0, #19
   2316e:	f003 f83b 	bl	261e8 <am_gpu_power_disable>
   23172:	6860      	ldr	r0, [r4, #4]
   23174:	f500 2380 	add.w	r3, r0, #262144	@ 0x40000
   23178:	3350      	adds	r3, #80	@ 0x50
   2317a:	031b      	lsls	r3, r3, #12
   2317c:	e77e      	b.n	2307c <am_hal_iom_power_ctrl+0xc0>
   2317e:	2003      	movs	r0, #3
   23180:	e793      	b.n	230aa <am_hal_iom_power_ctrl+0xee>
   23182:	2007      	movs	r0, #7
   23184:	e791      	b.n	230aa <am_hal_iom_power_ctrl+0xee>
   23186:	6a62      	ldr	r2, [r4, #36]	@ 0x24
   23188:	b932      	cbnz	r2, 23198 <am_hal_iom_power_ctrl+0x1dc>
   2318a:	f8d3 222c 	ldr.w	r2, [r3, #556]	@ 0x22c
   2318e:	f503 730b 	add.w	r3, r3, #556	@ 0x22c
   23192:	e9c2 3200 	strd	r3, r2, [r2]
   23196:	6860      	ldr	r0, [r4, #4]
   23198:	3013      	adds	r0, #19
   2319a:	f003 f823 	bl	261e4 <am_gpu_power_enable>
   2319e:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   231a2:	f004 f821 	bl	271e8 <am_hal_cmdq_enable>
   231a6:	e7cd      	b.n	23144 <am_hal_iom_power_ctrl+0x188>
   231a8:	01123456 	.word	0x01123456

000231ac <am_hal_iom_configure>:
   231ac:	b380      	cbz	r0, 23210 <am_hal_iom_configure+0x64>
   231ae:	6803      	ldr	r3, [r0, #0]
   231b0:	4aa1      	ldr	r2, [pc, #644]	@ (23438 <am_hal_iom_configure+0x28c>)
   231b2:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   231b6:	4293      	cmp	r3, r2
   231b8:	d12a      	bne.n	23210 <am_hal_iom_configure+0x64>
   231ba:	2900      	cmp	r1, #0
   231bc:	f000 810c 	beq.w	233d8 <am_hal_iom_configure+0x22c>
   231c0:	6843      	ldr	r3, [r0, #4]
   231c2:	2b07      	cmp	r3, #7
   231c4:	f200 8108 	bhi.w	233d8 <am_hal_iom_configure+0x22c>
   231c8:	78c2      	ldrb	r2, [r0, #3]
   231ca:	0792      	lsls	r2, r2, #30
   231cc:	f100 8106 	bmi.w	233dc <am_hal_iom_configure+0x230>
   231d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   231d4:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   231d8:	3350      	adds	r3, #80	@ 0x50
   231da:	780a      	ldrb	r2, [r1, #0]
   231dc:	7202      	strb	r2, [r0, #8]
   231de:	031b      	lsls	r3, r3, #12
   231e0:	f241 0410 	movw	r4, #4112	@ 0x1010
   231e4:	f8c3 4104 	str.w	r4, [r3, #260]	@ 0x104
   231e8:	b1a2      	cbz	r2, 23214 <am_hal_iom_configure+0x68>
   231ea:	2a01      	cmp	r2, #1
   231ec:	f040 80f8 	bne.w	233e0 <am_hal_iom_configure+0x234>
   231f0:	684a      	ldr	r2, [r1, #4]
   231f2:	4c92      	ldr	r4, [pc, #584]	@ (2343c <am_hal_iom_configure+0x290>)
   231f4:	42a2      	cmp	r2, r4
   231f6:	f000 8114 	beq.w	23422 <am_hal_iom_configure+0x276>
   231fa:	4c91      	ldr	r4, [pc, #580]	@ (23440 <am_hal_iom_configure+0x294>)
   231fc:	42a2      	cmp	r2, r4
   231fe:	f000 810b 	beq.w	23418 <am_hal_iom_configure+0x26c>
   23202:	4c90      	ldr	r4, [pc, #576]	@ (23444 <am_hal_iom_configure+0x298>)
   23204:	42a2      	cmp	r2, r4
   23206:	f000 8102 	beq.w	2340e <am_hal_iom_configure+0x262>
   2320a:	2006      	movs	r0, #6
   2320c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23210:	2002      	movs	r0, #2
   23212:	4770      	bx	lr
   23214:	7a0d      	ldrb	r5, [r1, #8]
   23216:	2d03      	cmp	r5, #3
   23218:	d8f7      	bhi.n	2320a <am_hal_iom_configure+0x5e>
   2321a:	684a      	ldr	r2, [r1, #4]
   2321c:	4c8a      	ldr	r4, [pc, #552]	@ (23448 <am_hal_iom_configure+0x29c>)
   2321e:	42a2      	cmp	r2, r4
   23220:	d8f3      	bhi.n	2320a <am_hal_iom_configure+0x5e>
   23222:	2a00      	cmp	r2, #0
   23224:	f000 80e8 	beq.w	233f8 <am_hal_iom_configure+0x24c>
   23228:	4c88      	ldr	r4, [pc, #544]	@ (2344c <am_hal_iom_configure+0x2a0>)
   2322a:	fbb4 fef2 	udiv	lr, r4, r2
   2322e:	fb02 441e 	mls	r4, r2, lr, r4
   23232:	2c00      	cmp	r4, #0
   23234:	bf18      	it	ne
   23236:	f10e 0e01 	addne.w	lr, lr, #1
   2323a:	f1ce 0400 	rsb	r4, lr, #0
   2323e:	ea04 040e 	and.w	r4, r4, lr
   23242:	fab4 f484 	clz	r4, r4
   23246:	f1c4 041f 	rsb	r4, r4, #31
   2324a:	2c06      	cmp	r4, #6
   2324c:	f241 66e2 	movw	r6, #5858	@ 0x16e2
   23250:	bfa8      	it	ge
   23252:	2406      	movge	r4, #6
   23254:	42b2      	cmp	r2, r6
   23256:	f240 80c5 	bls.w	233e4 <am_hal_iom_configure+0x238>
   2325a:	4e7d      	ldr	r6, [pc, #500]	@ (23450 <am_hal_iom_configure+0x2a4>)
   2325c:	42b2      	cmp	r2, r6
   2325e:	f0c0 80e5 	bcc.w	2342c <am_hal_iom_configure+0x280>
   23262:	4e79      	ldr	r6, [pc, #484]	@ (23448 <am_hal_iom_configure+0x29c>)
   23264:	ebb2 0c06 	subs.w	ip, r2, r6
   23268:	bf18      	it	ne
   2326a:	f04f 0c01 	movne.w	ip, #1
   2326e:	ea4f 094c 	mov.w	r9, ip, lsl #1
   23272:	f109 0901 	add.w	r9, r9, #1
   23276:	fa09 f604 	lsl.w	r6, r9, r4
   2327a:	fbbe faf6 	udiv	sl, lr, r6
   2327e:	fb06 e61a 	mls	r6, r6, sl, lr
   23282:	2e00      	cmp	r6, #0
   23284:	bf18      	it	ne
   23286:	f10a 0a01 	addne.w	sl, sl, #1
   2328a:	faba f78a 	clz	r7, sl
   2328e:	f1c7 061f 	rsb	r6, r7, #31
   23292:	2e07      	cmp	r6, #7
   23294:	f240 80b2 	bls.w	233fc <am_hal_iom_configure+0x250>
   23298:	3c07      	subs	r4, #7
   2329a:	4434      	add	r4, r6
   2329c:	1c66      	adds	r6, r4, #1
   2329e:	2e07      	cmp	r6, #7
   232a0:	f200 80aa 	bhi.w	233f8 <am_hal_iom_configure+0x24c>
   232a4:	f1c7 0718 	rsb	r7, r7, #24
   232a8:	f04f 0801 	mov.w	r8, #1
   232ac:	fa08 f807 	lsl.w	r8, r8, r7
   232b0:	f108 38ff 	add.w	r8, r8, #4294967295
   232b4:	fa2a f707 	lsr.w	r7, sl, r7
   232b8:	ea08 080a 	and.w	r8, r8, sl
   232bc:	f1b8 0f00 	cmp.w	r8, #0
   232c0:	bf0c      	ite	eq
   232c2:	46ba      	moveq	sl, r7
   232c4:	f107 0a01 	addne.w	sl, r7, #1
   232c8:	4f62      	ldr	r7, [pc, #392]	@ (23454 <am_hal_iom_configure+0x2a8>)
   232ca:	42ba      	cmp	r2, r7
   232cc:	f080 8098 	bcs.w	23400 <am_hal_iom_configure+0x254>
   232d0:	2701      	movs	r7, #1
   232d2:	40a7      	lsls	r7, r4
   232d4:	45be      	cmp	lr, r7
   232d6:	f000 8093 	beq.w	23400 <am_hal_iom_configure+0x254>
   232da:	f10a 37ff 	add.w	r7, sl, #4294967295
   232de:	46d3      	mov	fp, sl
   232e0:	f44f 5880 	mov.w	r8, #4096	@ 0x1000
   232e4:	ea4f 0e65 	mov.w	lr, r5, asr #1
   232e8:	f1be 0f01 	cmp.w	lr, #1
   232ec:	ea4f 2ccc 	mov.w	ip, ip, lsl #11
   232f0:	bf08      	it	eq
   232f2:	f1aa 0e02 	subeq.w	lr, sl, #2
   232f6:	ea4c 2c06 	orr.w	ip, ip, r6, lsl #8
   232fa:	bf14      	ite	ne
   232fc:	ea4f 0e57 	movne.w	lr, r7, lsr #1
   23300:	ea4f 0e5e 	moveq.w	lr, lr, lsr #1
   23304:	ea4c 0c08 	orr.w	ip, ip, r8
   23308:	fa09 f404 	lsl.w	r4, r9, r4
   2330c:	ea4c 6c07 	orr.w	ip, ip, r7, lsl #24
   23310:	ea4f 4e0e 	mov.w	lr, lr, lsl #16
   23314:	4f4d      	ldr	r7, [pc, #308]	@ (2344c <am_hal_iom_configure+0x2a0>)
   23316:	fb0b f404 	mul.w	r4, fp, r4
   2331a:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
   2331e:	fbb7 f9f4 	udiv	r9, r7, r4
   23322:	ea4c 0c0e 	orr.w	ip, ip, lr
   23326:	fb04 7819 	mls	r8, r4, r9, r7
   2332a:	ea4f 2e06 	mov.w	lr, r6, lsl #8
   2332e:	0864      	lsrs	r4, r4, #1
   23330:	4e49      	ldr	r6, [pc, #292]	@ (23458 <am_hal_iom_configure+0x2ac>)
   23332:	4544      	cmp	r4, r8
   23334:	bf2c      	ite	cs
   23336:	464f      	movcs	r7, r9
   23338:	f109 0701 	addcc.w	r7, r9, #1
   2333c:	f8df 8140 	ldr.w	r8, [pc, #320]	@ 23480 <am_hal_iom_configure+0x2d4>
   23340:	fba6 6407 	umull	r6, r4, r6, r7
   23344:	4e45      	ldr	r6, [pc, #276]	@ (2345c <am_hal_iom_configure+0x2b0>)
   23346:	0c24      	lsrs	r4, r4, #16
   23348:	4547      	cmp	r7, r8
   2334a:	fb06 7614 	mls	r6, r6, r4, r7
   2334e:	d905      	bls.n	2335c <am_hal_iom_configure+0x1b0>
   23350:	1e67      	subs	r7, r4, #1
   23352:	403c      	ands	r4, r7
   23354:	4334      	orrs	r4, r6
   23356:	d101      	bne.n	2335c <am_hal_iom_configure+0x1b0>
   23358:	f44e 6c00 	orr.w	ip, lr, #2048	@ 0x800
   2335c:	f04c 0401 	orr.w	r4, ip, #1
   23360:	f8c3 5280 	str.w	r5, [r3, #640]	@ 0x280
   23364:	f8c3 4118 	str.w	r4, [r3, #280]	@ 0x118
   23368:	e9d1 4303 	ldrd	r4, r3, [r1, #12]
   2336c:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
   23370:	4933      	ldr	r1, [pc, #204]	@ (23440 <am_hal_iom_configure+0x294>)
   23372:	f8c0 5860 	str.w	r5, [r0, #2144]	@ 0x860
   23376:	fbb1 f2f2 	udiv	r2, r1, r2
   2337a:	60c4      	str	r4, [r0, #12]
   2337c:	f8c0 2864 	str.w	r2, [r0, #2148]	@ 0x864
   23380:	6103      	str	r3, [r0, #16]
   23382:	b31c      	cbz	r4, 233cc <am_hal_iom_configure+0x220>
   23384:	4936      	ldr	r1, [pc, #216]	@ (23460 <am_hal_iom_configure+0x2b4>)
   23386:	eb04 0583 	add.w	r5, r4, r3, lsl #2
   2338a:	428d      	cmp	r5, r1
   2338c:	bf94      	ite	ls
   2338e:	2101      	movls	r1, #1
   23390:	2100      	movhi	r1, #0
   23392:	ea4f 0283 	mov.w	r2, r3, lsl #2
   23396:	f880 18a4 	strb.w	r1, [r0, #2212]	@ 0x8a4
   2339a:	d909      	bls.n	233b0 <am_hal_iom_configure+0x204>
   2339c:	f004 030f 	and.w	r3, r4, #15
   233a0:	1ad3      	subs	r3, r2, r3
   233a2:	340f      	adds	r4, #15
   233a4:	091b      	lsrs	r3, r3, #4
   233a6:	f024 040f 	bic.w	r4, r4, #15
   233aa:	009b      	lsls	r3, r3, #2
   233ac:	e9c0 4303 	strd	r4, r3, [r0, #12]
   233b0:	3b08      	subs	r3, #8
   233b2:	f246 015f 	movw	r1, #24671	@ 0x605f
   233b6:	ebb1 0f83 	cmp.w	r1, r3, lsl #2
   233ba:	ea4f 0283 	mov.w	r2, r3, lsl #2
   233be:	d316      	bcc.n	233ee <am_hal_iom_configure+0x242>
   233c0:	4b28      	ldr	r3, [pc, #160]	@ (23464 <am_hal_iom_configure+0x2b8>)
   233c2:	fba3 3202 	umull	r3, r2, r3, r2
   233c6:	0992      	lsrs	r2, r2, #6
   233c8:	f8c0 2858 	str.w	r2, [r0, #2136]	@ 0x858
   233cc:	2300      	movs	r3, #0
   233ce:	f8c0 38a0 	str.w	r3, [r0, #2208]	@ 0x8a0
   233d2:	4618      	mov	r0, r3
   233d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   233d8:	2006      	movs	r0, #6
   233da:	4770      	bx	lr
   233dc:	2007      	movs	r0, #7
   233de:	4770      	bx	lr
   233e0:	2005      	movs	r0, #5
   233e2:	e713      	b.n	2320c <am_hal_iom_configure+0x60>
   233e4:	f04f 0903 	mov.w	r9, #3
   233e8:	f04f 0c01 	mov.w	ip, #1
   233ec:	e743      	b.n	23276 <am_hal_iom_configure+0xca>
   233ee:	f44f 7380 	mov.w	r3, #256	@ 0x100
   233f2:	f8c0 3858 	str.w	r3, [r0, #2136]	@ 0x858
   233f6:	e7e9      	b.n	233cc <am_hal_iom_configure+0x220>
   233f8:	2401      	movs	r4, #1
   233fa:	e7b1      	b.n	23360 <am_hal_iom_configure+0x1b4>
   233fc:	1c66      	adds	r6, r4, #1
   233fe:	e763      	b.n	232c8 <am_hal_iom_configure+0x11c>
   23400:	f10a 37ff 	add.w	r7, sl, #4294967295
   23404:	f04f 0b01 	mov.w	fp, #1
   23408:	f04f 0800 	mov.w	r8, #0
   2340c:	e76a      	b.n	232e4 <am_hal_iom_configure+0x138>
   2340e:	4c16      	ldr	r4, [pc, #88]	@ (23468 <am_hal_iom_configure+0x2bc>)
   23410:	f8c3 42c0 	str.w	r4, [r3, #704]	@ 0x2c0
   23414:	4c15      	ldr	r4, [pc, #84]	@ (2346c <am_hal_iom_configure+0x2c0>)
   23416:	e7a5      	b.n	23364 <am_hal_iom_configure+0x1b8>
   23418:	4c15      	ldr	r4, [pc, #84]	@ (23470 <am_hal_iom_configure+0x2c4>)
   2341a:	f8c3 42c0 	str.w	r4, [r3, #704]	@ 0x2c0
   2341e:	4c15      	ldr	r4, [pc, #84]	@ (23474 <am_hal_iom_configure+0x2c8>)
   23420:	e7a0      	b.n	23364 <am_hal_iom_configure+0x1b8>
   23422:	4c15      	ldr	r4, [pc, #84]	@ (23478 <am_hal_iom_configure+0x2cc>)
   23424:	f8c3 42c0 	str.w	r4, [r3, #704]	@ 0x2c0
   23428:	4c14      	ldr	r4, [pc, #80]	@ (2347c <am_hal_iom_configure+0x2d0>)
   2342a:	e79b      	b.n	23364 <am_hal_iom_configure+0x1b8>
   2342c:	f04f 0901 	mov.w	r9, #1
   23430:	f04f 0c00 	mov.w	ip, #0
   23434:	e71f      	b.n	23276 <am_hal_iom_configure+0xca>
   23436:	bf00      	nop
   23438:	01123456 	.word	0x01123456
   2343c:	00061a80 	.word	0x00061a80
   23440:	000f4240 	.word	0x000f4240
   23444:	000186a0 	.word	0x000186a0
   23448:	02dc6c00 	.word	0x02dc6c00
   2344c:	05b8d800 	.word	0x05b8d800
   23450:	01e84800 	.word	0x01e84800
   23454:	016e3600 	.word	0x016e3600
   23458:	431bde83 	.word	0x431bde83
   2345c:	0003d090 	.word	0x0003d090
   23460:	1005ffff 	.word	0x1005ffff
   23464:	aaaaaaab 	.word	0xaaaaaaab
   23468:	0003f070 	.word	0x0003f070
   2346c:	773b1301 	.word	0x773b1301
   23470:	00023040 	.word	0x00023040
   23474:	0b051301 	.word	0x0b051301
   23478:	0003f270 	.word	0x0003f270
   2347c:	1d0e1301 	.word	0x1d0e1301
   23480:	0003d08f 	.word	0x0003d08f

00023484 <am_hal_iom_blocking_transfer>:
   23484:	2800      	cmp	r0, #0
   23486:	f000 813e 	beq.w	23706 <am_hal_iom_blocking_transfer+0x282>
   2348a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2348e:	6803      	ldr	r3, [r0, #0]
   23490:	4abd      	ldr	r2, [pc, #756]	@ (23788 <am_hal_iom_blocking_transfer+0x304>)
   23492:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   23496:	4293      	cmp	r3, r2
   23498:	b087      	sub	sp, #28
   2349a:	4606      	mov	r6, r0
   2349c:	f040 8117 	bne.w	236ce <am_hal_iom_blocking_transfer+0x24a>
   234a0:	460d      	mov	r5, r1
   234a2:	2900      	cmp	r1, #0
   234a4:	f000 811c 	beq.w	236e0 <am_hal_iom_blocking_transfer+0x25c>
   234a8:	f891 8014 	ldrb.w	r8, [r1, #20]
   234ac:	f1b8 0f01 	cmp.w	r8, #1
   234b0:	f200 811f 	bhi.w	236f2 <am_hal_iom_blocking_transfer+0x26e>
   234b4:	f8d1 9010 	ldr.w	r9, [r1, #16]
   234b8:	f1b9 0f00 	cmp.w	r9, #0
   234bc:	f000 8115 	beq.w	236ea <am_hal_iom_blocking_transfer+0x266>
   234c0:	f8d5 a004 	ldr.w	sl, [r5, #4]
   234c4:	f1ba 0f05 	cmp.w	sl, #5
   234c8:	f200 810a 	bhi.w	236e0 <am_hal_iom_blocking_transfer+0x25c>
   234cc:	ea4f 01ca 	mov.w	r1, sl, lsl #3
   234d0:	f04f 33ff 	mov.w	r3, #4294967295
   234d4:	f1a1 0420 	sub.w	r4, r1, #32
   234d8:	f1c1 0020 	rsb	r0, r1, #32
   234dc:	fa03 f201 	lsl.w	r2, r3, r1
   234e0:	fa03 f404 	lsl.w	r4, r3, r4
   234e4:	fa23 f000 	lsr.w	r0, r3, r0
   234e8:	408b      	lsls	r3, r1
   234ea:	68a9      	ldr	r1, [r5, #8]
   234ec:	9102      	str	r1, [sp, #8]
   234ee:	400b      	ands	r3, r1
   234f0:	4322      	orrs	r2, r4
   234f2:	68e9      	ldr	r1, [r5, #12]
   234f4:	9103      	str	r1, [sp, #12]
   234f6:	4302      	orrs	r2, r0
   234f8:	400a      	ands	r2, r1
   234fa:	4313      	orrs	r3, r2
   234fc:	f040 80f0 	bne.w	236e0 <am_hal_iom_blocking_transfer+0x25c>
   23500:	f1b9 0f00 	cmp.w	r9, #0
   23504:	f000 80fa 	beq.w	236fc <am_hal_iom_blocking_transfer+0x278>
   23508:	f1b8 0f00 	cmp.w	r8, #0
   2350c:	f000 80e4 	beq.w	236d8 <am_hal_iom_blocking_transfer+0x254>
   23510:	69eb      	ldr	r3, [r5, #28]
   23512:	2b00      	cmp	r3, #0
   23514:	f000 80e4 	beq.w	236e0 <am_hal_iom_blocking_transfer+0x25c>
   23518:	7a33      	ldrb	r3, [r6, #8]
   2351a:	2b01      	cmp	r3, #1
   2351c:	d004      	beq.n	23528 <am_hal_iom_blocking_transfer+0xa4>
   2351e:	b93b      	cbnz	r3, 23530 <am_hal_iom_blocking_transfer+0xac>
   23520:	682b      	ldr	r3, [r5, #0]
   23522:	2b04      	cmp	r3, #4
   23524:	f200 80dc 	bhi.w	236e0 <am_hal_iom_blocking_transfer+0x25c>
   23528:	f5b9 5f80 	cmp.w	r9, #4096	@ 0x1000
   2352c:	f080 80d8 	bcs.w	236e0 <am_hal_iom_blocking_transfer+0x25c>
   23530:	f896 382c 	ldrb.w	r3, [r6, #2092]	@ 0x82c
   23534:	2b02      	cmp	r3, #2
   23536:	f000 80dc 	beq.w	236f2 <am_hal_iom_blocking_transfer+0x26e>
   2353a:	e9d5 3706 	ldrd	r3, r7, [r5, #24]
   2353e:	f04f 0b01 	mov.w	fp, #1
   23542:	f8cd b000 	str.w	fp, [sp]
   23546:	6874      	ldr	r4, [r6, #4]
   23548:	9404      	str	r4, [sp, #16]
   2354a:	f8d6 0860 	ldr.w	r0, [r6, #2144]	@ 0x860
   2354e:	f895 4020 	ldrb.w	r4, [r5, #32]
   23552:	9405      	str	r4, [sp, #20]
   23554:	f1b8 0f00 	cmp.w	r8, #0
   23558:	bf08      	it	eq
   2355a:	461f      	moveq	r7, r3
   2355c:	f04f 32ff 	mov.w	r2, #4294967295
   23560:	2300      	movs	r3, #0
   23562:	f106 0124 	add.w	r1, r6, #36	@ 0x24
   23566:	f002 fdff 	bl	26168 <am_hal_delay_us_status_check>
   2356a:	4603      	mov	r3, r0
   2356c:	2800      	cmp	r0, #0
   2356e:	f040 80af 	bne.w	236d0 <am_hal_iom_blocking_transfer+0x24c>
   23572:	9b04      	ldr	r3, [sp, #16]
   23574:	f8cd b000 	str.w	fp, [sp]
   23578:	f503 2480 	add.w	r4, r3, #262144	@ 0x40000
   2357c:	3450      	adds	r4, #80	@ 0x50
   2357e:	0324      	lsls	r4, r4, #12
   23580:	f504 7b12 	add.w	fp, r4, #584	@ 0x248
   23584:	2304      	movs	r3, #4
   23586:	f8d6 0860 	ldr.w	r0, [r6, #2144]	@ 0x860
   2358a:	2206      	movs	r2, #6
   2358c:	4659      	mov	r1, fp
   2358e:	f002 fdeb 	bl	26168 <am_hal_delay_us_status_check>
   23592:	4603      	mov	r3, r0
   23594:	2800      	cmp	r0, #0
   23596:	f040 809b 	bne.w	236d0 <am_hal_iom_blocking_transfer+0x24c>
   2359a:	f8d4 2200 	ldr.w	r2, [r4, #512]	@ 0x200
   2359e:	9204      	str	r2, [sp, #16]
   235a0:	f8c4 0200 	str.w	r0, [r4, #512]	@ 0x200
   235a4:	f8d4 2218 	ldr.w	r2, [r4, #536]	@ 0x218
   235a8:	f360 0200 	bfi	r2, r0, #0, #1
   235ac:	f8c4 2218 	str.w	r2, [r4, #536]	@ 0x218
   235b0:	682a      	ldr	r2, [r5, #0]
   235b2:	f04f 31ff 	mov.w	r1, #4294967295
   235b6:	f8c4 1208 	str.w	r1, [r4, #520]	@ 0x208
   235ba:	f8c4 22c4 	str.w	r2, [r4, #708]	@ 0x2c4
   235be:	7a31      	ldrb	r1, [r6, #8]
   235c0:	2900      	cmp	r1, #0
   235c2:	f000 80a3 	beq.w	2370c <am_hal_iom_blocking_transfer+0x288>
   235c6:	f8c4 0124 	str.w	r0, [r4, #292]	@ 0x124
   235ca:	4a70      	ldr	r2, [pc, #448]	@ (2378c <am_hal_iom_blocking_transfer+0x308>)
   235cc:	f1b8 0f01 	cmp.w	r8, #1
   235d0:	ea02 2909 	and.w	r9, r2, r9, lsl #8
   235d4:	ea49 0303 	orr.w	r3, r9, r3
   235d8:	f000 80de 	beq.w	23798 <am_hal_iom_blocking_transfer+0x314>
   235dc:	9a02      	ldr	r2, [sp, #8]
   235de:	9903      	ldr	r1, [sp, #12]
   235e0:	692d      	ldr	r5, [r5, #16]
   235e2:	0a12      	lsrs	r2, r2, #8
   235e4:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
   235e8:	f8c4 2128 	str.w	r2, [r4, #296]	@ 0x128
   235ec:	f8d4 2100 	ldr.w	r2, [r4, #256]	@ 0x100
   235f0:	f3c2 2207 	ubfx	r2, r2, #8, #8
   235f4:	2a03      	cmp	r2, #3
   235f6:	46b9      	mov	r9, r7
   235f8:	d917      	bls.n	2362a <am_hal_iom_blocking_transfer+0x1a6>
   235fa:	b1b5      	cbz	r5, 2362a <am_hal_iom_blocking_transfer+0x1a6>
   235fc:	f859 1b04 	ldr.w	r1, [r9], #4
   23600:	f8c4 110c 	str.w	r1, [r4, #268]	@ 0x10c
   23604:	2d03      	cmp	r5, #3
   23606:	d90f      	bls.n	23628 <am_hal_iom_blocking_transfer+0x1a4>
   23608:	3a04      	subs	r2, #4
   2360a:	f022 0203 	bic.w	r2, r2, #3
   2360e:	3204      	adds	r2, #4
   23610:	4417      	add	r7, r2
   23612:	454f      	cmp	r7, r9
   23614:	f1a5 0504 	sub.w	r5, r5, #4
   23618:	d007      	beq.n	2362a <am_hal_iom_blocking_transfer+0x1a6>
   2361a:	b135      	cbz	r5, 2362a <am_hal_iom_blocking_transfer+0x1a6>
   2361c:	f859 2b04 	ldr.w	r2, [r9], #4
   23620:	f8c4 210c 	str.w	r2, [r4, #268]	@ 0x10c
   23624:	2d03      	cmp	r5, #3
   23626:	d8f4      	bhi.n	23612 <am_hal_iom_blocking_transfer+0x18e>
   23628:	4645      	mov	r5, r8
   2362a:	9a05      	ldr	r2, [sp, #20]
   2362c:	ea43 130a 	orr.w	r3, r3, sl, lsl #4
   23630:	ea43 13c2 	orr.w	r3, r3, r2, lsl #7
   23634:	9a02      	ldr	r2, [sp, #8]
   23636:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2363a:	f043 0301 	orr.w	r3, r3, #1
   2363e:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
   23642:	2d00      	cmp	r5, #0
   23644:	f000 8088 	beq.w	23758 <am_hal_iom_blocking_transfer+0x2d4>
   23648:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   2364c:	f3c3 2307 	ubfx	r3, r3, #8, #8
   23650:	2b03      	cmp	r3, #3
   23652:	f200 8083 	bhi.w	2375c <am_hal_iom_blocking_transfer+0x2d8>
   23656:	4f4e      	ldr	r7, [pc, #312]	@ (23790 <am_hal_iom_blocking_transfer+0x30c>)
   23658:	e009      	b.n	2366e <am_hal_iom_blocking_transfer+0x1ea>
   2365a:	3f01      	subs	r7, #1
   2365c:	d00d      	beq.n	2367a <am_hal_iom_blocking_transfer+0x1f6>
   2365e:	f002 fd3f 	bl	260e0 <am_hal_delay_us>
   23662:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   23666:	f3c3 2307 	ubfx	r3, r3, #8, #8
   2366a:	2b03      	cmp	r3, #3
   2366c:	d876      	bhi.n	2375c <am_hal_iom_blocking_transfer+0x2d8>
   2366e:	f8d4 3204 	ldr.w	r3, [r4, #516]	@ 0x204
   23672:	07db      	lsls	r3, r3, #31
   23674:	f04f 0001 	mov.w	r0, #1
   23678:	d5ef      	bpl.n	2365a <am_hal_iom_blocking_transfer+0x1d6>
   2367a:	2701      	movs	r7, #1
   2367c:	2304      	movs	r3, #4
   2367e:	4845      	ldr	r0, [pc, #276]	@ (23794 <am_hal_iom_blocking_transfer+0x310>)
   23680:	9700      	str	r7, [sp, #0]
   23682:	4659      	mov	r1, fp
   23684:	2206      	movs	r2, #6
   23686:	f002 fd6f 	bl	26168 <am_hal_delay_us_status_check>
   2368a:	4603      	mov	r3, r0
   2368c:	b980      	cbnz	r0, 236b0 <am_hal_iom_blocking_transfer+0x22c>
   2368e:	f8d4 3204 	ldr.w	r3, [r4, #516]	@ 0x204
   23692:	f013 0f6c 	tst.w	r3, #108	@ 0x6c
   23696:	f040 80b6 	bne.w	23806 <am_hal_iom_blocking_transfer+0x382>
   2369a:	0599      	lsls	r1, r3, #22
   2369c:	f100 80b6 	bmi.w	2380c <am_hal_iom_blocking_transfer+0x388>
   236a0:	06da      	lsls	r2, r3, #27
   236a2:	f100 80b5 	bmi.w	23810 <am_hal_iom_blocking_transfer+0x38c>
   236a6:	f403 4390 	and.w	r3, r3, #18432	@ 0x4800
   236aa:	432b      	orrs	r3, r5
   236ac:	d007      	beq.n	236be <am_hal_iom_blocking_transfer+0x23a>
   236ae:	463b      	mov	r3, r7
   236b0:	f8d4 1204 	ldr.w	r1, [r4, #516]	@ 0x204
   236b4:	9302      	str	r3, [sp, #8]
   236b6:	4630      	mov	r0, r6
   236b8:	f7ff fb5c 	bl	22d74 <internal_iom_reset_on_error>
   236bc:	9b02      	ldr	r3, [sp, #8]
   236be:	f04f 32ff 	mov.w	r2, #4294967295
   236c2:	f8c4 2208 	str.w	r2, [r4, #520]	@ 0x208
   236c6:	9a04      	ldr	r2, [sp, #16]
   236c8:	f8c4 2200 	str.w	r2, [r4, #512]	@ 0x200
   236cc:	e000      	b.n	236d0 <am_hal_iom_blocking_transfer+0x24c>
   236ce:	2302      	movs	r3, #2
   236d0:	4618      	mov	r0, r3
   236d2:	b007      	add	sp, #28
   236d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236d8:	69ab      	ldr	r3, [r5, #24]
   236da:	2b00      	cmp	r3, #0
   236dc:	f47f af1c 	bne.w	23518 <am_hal_iom_blocking_transfer+0x94>
   236e0:	2306      	movs	r3, #6
   236e2:	4618      	mov	r0, r3
   236e4:	b007      	add	sp, #28
   236e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236ea:	f881 9014 	strb.w	r9, [r1, #20]
   236ee:	46c8      	mov	r8, r9
   236f0:	e6e6      	b.n	234c0 <am_hal_iom_blocking_transfer+0x3c>
   236f2:	2307      	movs	r3, #7
   236f4:	4618      	mov	r0, r3
   236f6:	b007      	add	sp, #28
   236f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236fc:	7a33      	ldrb	r3, [r6, #8]
   236fe:	2b01      	cmp	r3, #1
   23700:	f47f af0d 	bne.w	2351e <am_hal_iom_blocking_transfer+0x9a>
   23704:	e714      	b.n	23530 <am_hal_iom_blocking_transfer+0xac>
   23706:	2302      	movs	r3, #2
   23708:	4618      	mov	r0, r3
   2370a:	4770      	bx	lr
   2370c:	18b1      	adds	r1, r6, r2
   2370e:	0513      	lsls	r3, r2, #20
   23710:	f891 28a0 	ldrb.w	r2, [r1, #2208]	@ 0x8a0
   23714:	f8c4 2124 	str.w	r2, [r4, #292]	@ 0x124
   23718:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
   2371c:	e755      	b.n	235ca <am_hal_iom_blocking_transfer+0x146>
   2371e:	2b03      	cmp	r3, #3
   23720:	f8c8 1000 	str.w	r1, [r8]
   23724:	f1a5 0504 	sub.w	r5, r5, #4
   23728:	f108 0804 	add.w	r8, r8, #4
   2372c:	d968      	bls.n	23800 <am_hal_iom_blocking_transfer+0x37c>
   2372e:	b19d      	cbz	r5, 23758 <am_hal_iom_blocking_transfer+0x2d4>
   23730:	2d03      	cmp	r5, #3
   23732:	f8d4 1108 	ldr.w	r1, [r4, #264]	@ 0x108
   23736:	f1a3 0304 	sub.w	r3, r3, #4
   2373a:	d8f0      	bhi.n	2371e <am_hal_iom_blocking_transfer+0x29a>
   2373c:	3d01      	subs	r5, #1
   2373e:	f888 1000 	strb.w	r1, [r8]
   23742:	ea4f 2311 	mov.w	r3, r1, lsr #8
   23746:	d007      	beq.n	23758 <am_hal_iom_blocking_transfer+0x2d4>
   23748:	2d01      	cmp	r5, #1
   2374a:	f888 3001 	strb.w	r3, [r8, #1]
   2374e:	ea4f 4111 	mov.w	r1, r1, lsr #16
   23752:	d001      	beq.n	23758 <am_hal_iom_blocking_transfer+0x2d4>
   23754:	f888 1002 	strb.w	r1, [r8, #2]
   23758:	2500      	movs	r5, #0
   2375a:	e78e      	b.n	2367a <am_hal_iom_blocking_transfer+0x1f6>
   2375c:	f005 0003 	and.w	r0, r5, #3
   23760:	464a      	mov	r2, r9
   23762:	f852 1b04 	ldr.w	r1, [r2], #4
   23766:	f8c4 110c 	str.w	r1, [r4, #268]	@ 0x10c
   2376a:	42a8      	cmp	r0, r5
   2376c:	eba9 0102 	sub.w	r1, r9, r2
   23770:	4419      	add	r1, r3
   23772:	f1a5 0504 	sub.w	r5, r5, #4
   23776:	d004      	beq.n	23782 <am_hal_iom_blocking_transfer+0x2fe>
   23778:	2903      	cmp	r1, #3
   2377a:	d903      	bls.n	23784 <am_hal_iom_blocking_transfer+0x300>
   2377c:	2d00      	cmp	r5, #0
   2377e:	d1f0      	bne.n	23762 <am_hal_iom_blocking_transfer+0x2de>
   23780:	e7ea      	b.n	23758 <am_hal_iom_blocking_transfer+0x2d4>
   23782:	4645      	mov	r5, r8
   23784:	4691      	mov	r9, r2
   23786:	e75c      	b.n	23642 <am_hal_iom_blocking_transfer+0x1be>
   23788:	01123456 	.word	0x01123456
   2378c:	000fff00 	.word	0x000fff00
   23790:	0007a121 	.word	0x0007a121
   23794:	0007a120 	.word	0x0007a120
   23798:	9a05      	ldr	r2, [sp, #20]
   2379a:	9903      	ldr	r1, [sp, #12]
   2379c:	692d      	ldr	r5, [r5, #16]
   2379e:	ea43 130a 	orr.w	r3, r3, sl, lsl #4
   237a2:	ea43 13c2 	orr.w	r3, r3, r2, lsl #7
   237a6:	9a02      	ldr	r2, [sp, #8]
   237a8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   237ac:	0a12      	lsrs	r2, r2, #8
   237ae:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
   237b2:	f043 0302 	orr.w	r3, r3, #2
   237b6:	f8c4 2128 	str.w	r2, [r4, #296]	@ 0x128
   237ba:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
   237be:	2d00      	cmp	r5, #0
   237c0:	d0ca      	beq.n	23758 <am_hal_iom_blocking_transfer+0x2d4>
   237c2:	2200      	movs	r2, #0
   237c4:	46b8      	mov	r8, r7
   237c6:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   237ca:	f3c3 4307 	ubfx	r3, r3, #16, #8
   237ce:	2b03      	cmp	r3, #3
   237d0:	d8ae      	bhi.n	23730 <am_hal_iom_blocking_transfer+0x2ac>
   237d2:	4f10      	ldr	r7, [pc, #64]	@ (23814 <am_hal_iom_blocking_transfer+0x390>)
   237d4:	e002      	b.n	237dc <am_hal_iom_blocking_transfer+0x358>
   237d6:	3f01      	subs	r7, #1
   237d8:	f43f af4f 	beq.w	2367a <am_hal_iom_blocking_transfer+0x1f6>
   237dc:	2001      	movs	r0, #1
   237de:	b112      	cbz	r2, 237e6 <am_hal_iom_blocking_transfer+0x362>
   237e0:	42ab      	cmp	r3, r5
   237e2:	f4ff af4a 	bcc.w	2367a <am_hal_iom_blocking_transfer+0x1f6>
   237e6:	f002 fc7b 	bl	260e0 <am_hal_delay_us>
   237ea:	f8d4 2204 	ldr.w	r2, [r4, #516]	@ 0x204
   237ee:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   237f2:	f3c3 4307 	ubfx	r3, r3, #16, #8
   237f6:	2b03      	cmp	r3, #3
   237f8:	f002 0201 	and.w	r2, r2, #1
   237fc:	d9eb      	bls.n	237d6 <am_hal_iom_blocking_transfer+0x352>
   237fe:	e797      	b.n	23730 <am_hal_iom_blocking_transfer+0x2ac>
   23800:	2d00      	cmp	r5, #0
   23802:	d1e0      	bne.n	237c6 <am_hal_iom_blocking_transfer+0x342>
   23804:	e7a8      	b.n	23758 <am_hal_iom_blocking_transfer+0x2d4>
   23806:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
   2380a:	e751      	b.n	236b0 <am_hal_iom_blocking_transfer+0x22c>
   2380c:	4b02      	ldr	r3, [pc, #8]	@ (23818 <am_hal_iom_blocking_transfer+0x394>)
   2380e:	e74f      	b.n	236b0 <am_hal_iom_blocking_transfer+0x22c>
   23810:	4b02      	ldr	r3, [pc, #8]	@ (2381c <am_hal_iom_blocking_transfer+0x398>)
   23812:	e74d      	b.n	236b0 <am_hal_iom_blocking_transfer+0x22c>
   23814:	0007a120 	.word	0x0007a120
   23818:	08000001 	.word	0x08000001
   2381c:	08000002 	.word	0x08000002

00023820 <mspi_dummy_callback>:
   23820:	4770      	bx	lr
   23822:	bf00      	nop

00023824 <mspi_seq_loopback>:
   23824:	6843      	ldr	r3, [r0, #4]
   23826:	f8d0 2830 	ldr.w	r2, [r0, #2096]	@ 0x830
   2382a:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   2382e:	3360      	adds	r3, #96	@ 0x60
   23830:	b410      	push	{r4}
   23832:	3201      	adds	r2, #1
   23834:	2400      	movs	r4, #0
   23836:	031b      	lsls	r3, r3, #12
   23838:	e9c0 4207 	strd	r4, r2, [r0, #28]
   2383c:	2101      	movs	r1, #1
   2383e:	2240      	movs	r2, #64	@ 0x40
   23840:	f880 1834 	strb.w	r1, [r0, #2100]	@ 0x834
   23844:	f85d 4b04 	ldr.w	r4, [sp], #4
   23848:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
   2384c:	4770      	bx	lr
   2384e:	bf00      	nop

00023850 <mspi_device_configure.isra.0>:
   23850:	7a82      	ldrb	r2, [r0, #10]
   23852:	6843      	ldr	r3, [r0, #4]
   23854:	2a19      	cmp	r2, #25
   23856:	d83b      	bhi.n	238d0 <mspi_device_configure.isra.0+0x80>
   23858:	e8df f012 	tbh	[pc, r2, lsl #1]
   2385c:	0109001a 	.word	0x0109001a
   23860:	00fb0102 	.word	0x00fb0102
   23864:	011900da 	.word	0x011900da
   23868:	003b0056 	.word	0x003b0056
   2386c:	003b0056 	.word	0x003b0056
   23870:	00600126 	.word	0x00600126
   23874:	015f0169 	.word	0x015f0169
   23878:	01360158 	.word	0x01360158
   2387c:	00d0012c 	.word	0x00d0012c
   23880:	00a700c9 	.word	0x00a700c9
   23884:	008e00a0 	.word	0x008e00a0
   23888:	00690085 	.word	0x00690085
   2388c:	01100120 	.word	0x01100120
   23890:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23894:	3360      	adds	r3, #96	@ 0x60
   23896:	031b      	lsls	r3, r3, #12
   23898:	f04f 0c01 	mov.w	ip, #1
   2389c:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
   238a0:	4aaf      	ldr	r2, [pc, #700]	@ (23b60 <mspi_device_configure.isra.0+0x310>)
   238a2:	f36c 0104 	bfi	r1, ip, #0, #5
   238a6:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
   238aa:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
   238ae:	f041 7100 	orr.w	r1, r1, #33554432	@ 0x2000000
   238b2:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
   238b6:	f8d3 1090 	ldr.w	r1, [r3, #144]	@ 0x90
   238ba:	f36f 210b 	bfc	r1, #8, #4
   238be:	f8c3 1090 	str.w	r1, [r3, #144]	@ 0x90
   238c2:	7a40      	ldrb	r0, [r0, #9]
   238c4:	f240 1103 	movw	r1, #259	@ 0x103
   238c8:	2800      	cmp	r0, #0
   238ca:	bf08      	it	eq
   238cc:	460a      	moveq	r2, r1
   238ce:	645a      	str	r2, [r3, #68]	@ 0x44
   238d0:	4770      	bx	lr
   238d2:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   238d6:	3360      	adds	r3, #96	@ 0x60
   238d8:	031b      	lsls	r3, r3, #12
   238da:	200e      	movs	r0, #14
   238dc:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   238e0:	f240 31ff 	movw	r1, #1023	@ 0x3ff
   238e4:	f360 0204 	bfi	r2, r0, #0, #5
   238e8:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   238ec:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   238f0:	f36f 6259 	bfc	r2, #25, #1
   238f4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   238f8:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
   238fc:	f36f 220b 	bfc	r2, #8, #4
   23900:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
   23904:	6459      	str	r1, [r3, #68]	@ 0x44
   23906:	4770      	bx	lr
   23908:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   2390c:	3360      	adds	r3, #96	@ 0x60
   2390e:	031b      	lsls	r3, r3, #12
   23910:	200d      	movs	r0, #13
   23912:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   23916:	f240 31ff 	movw	r1, #1023	@ 0x3ff
   2391a:	e7e3      	b.n	238e4 <mspi_device_configure.isra.0+0x94>
   2391c:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23920:	3360      	adds	r3, #96	@ 0x60
   23922:	031b      	lsls	r3, r3, #12
   23924:	2012      	movs	r0, #18
   23926:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   2392a:	498e      	ldr	r1, [pc, #568]	@ (23b64 <mspi_device_configure.isra.0+0x314>)
   2392c:	e7da      	b.n	238e4 <mspi_device_configure.isra.0+0x94>
   2392e:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23932:	3360      	adds	r3, #96	@ 0x60
   23934:	031b      	lsls	r3, r3, #12
   23936:	2102      	movs	r1, #2
   23938:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   2393c:	2009      	movs	r0, #9
   2393e:	f361 0204 	bfi	r2, r1, #0, #5
   23942:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   23946:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   2394a:	f36f 6259 	bfc	r2, #25, #1
   2394e:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   23952:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
   23956:	f240 31ff 	movw	r1, #1023	@ 0x3ff
   2395a:	f360 220b 	bfi	r2, r0, #8, #4
   2395e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
   23962:	6459      	str	r1, [r3, #68]	@ 0x44
   23964:	4770      	bx	lr
   23966:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   2396a:	3360      	adds	r3, #96	@ 0x60
   2396c:	031b      	lsls	r3, r3, #12
   2396e:	2101      	movs	r1, #1
   23970:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   23974:	2009      	movs	r0, #9
   23976:	e7e2      	b.n	2393e <mspi_device_configure.isra.0+0xee>
   23978:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   2397c:	3360      	adds	r3, #96	@ 0x60
   2397e:	031b      	lsls	r3, r3, #12
   23980:	f04f 0c02 	mov.w	ip, #2
   23984:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
   23988:	4a75      	ldr	r2, [pc, #468]	@ (23b60 <mspi_device_configure.isra.0+0x310>)
   2398a:	f36c 0104 	bfi	r1, ip, #0, #5
   2398e:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
   23992:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
   23996:	f36f 6159 	bfc	r1, #25, #1
   2399a:	e78a      	b.n	238b2 <mspi_device_configure.isra.0+0x62>
   2399c:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   239a0:	3360      	adds	r3, #96	@ 0x60
   239a2:	031b      	lsls	r3, r3, #12
   239a4:	f04f 0c01 	mov.w	ip, #1
   239a8:	e7ec      	b.n	23984 <mspi_device_configure.isra.0+0x134>
   239aa:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   239ae:	3360      	adds	r3, #96	@ 0x60
   239b0:	031b      	lsls	r3, r3, #12
   239b2:	f04f 0c02 	mov.w	ip, #2
   239b6:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   239ba:	2107      	movs	r1, #7
   239bc:	f36c 0204 	bfi	r2, ip, #0, #5
   239c0:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   239c4:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   239c8:	f36f 6259 	bfc	r2, #25, #1
   239cc:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   239d0:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
   239d4:	f361 220b 	bfi	r2, r1, #8, #4
   239d8:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
   239dc:	7a40      	ldrb	r0, [r0, #9]
   239de:	4a62      	ldr	r2, [pc, #392]	@ (23b68 <mspi_device_configure.isra.0+0x318>)
   239e0:	f240 110f 	movw	r1, #271	@ 0x10f
   239e4:	2800      	cmp	r0, #0
   239e6:	bf08      	it	eq
   239e8:	460a      	moveq	r2, r1
   239ea:	645a      	str	r2, [r3, #68]	@ 0x44
   239ec:	4770      	bx	lr
   239ee:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   239f2:	3360      	adds	r3, #96	@ 0x60
   239f4:	031b      	lsls	r3, r3, #12
   239f6:	f04f 0c01 	mov.w	ip, #1
   239fa:	e7dc      	b.n	239b6 <mspi_device_configure.isra.0+0x166>
   239fc:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23a00:	3360      	adds	r3, #96	@ 0x60
   23a02:	031b      	lsls	r3, r3, #12
   23a04:	f04f 0c02 	mov.w	ip, #2
   23a08:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   23a0c:	2105      	movs	r1, #5
   23a0e:	e7d5      	b.n	239bc <mspi_device_configure.isra.0+0x16c>
   23a10:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23a14:	3360      	adds	r3, #96	@ 0x60
   23a16:	031b      	lsls	r3, r3, #12
   23a18:	f04f 0c09 	mov.w	ip, #9
   23a1c:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
   23a20:	4a51      	ldr	r2, [pc, #324]	@ (23b68 <mspi_device_configure.isra.0+0x318>)
   23a22:	f36c 0104 	bfi	r1, ip, #0, #5
   23a26:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
   23a2a:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
   23a2e:	f36f 6159 	bfc	r1, #25, #1
   23a32:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
   23a36:	f8d3 1090 	ldr.w	r1, [r3, #144]	@ 0x90
   23a3a:	f36f 210b 	bfc	r1, #8, #4
   23a3e:	f8c3 1090 	str.w	r1, [r3, #144]	@ 0x90
   23a42:	7a40      	ldrb	r0, [r0, #9]
   23a44:	f240 110f 	movw	r1, #271	@ 0x10f
   23a48:	2800      	cmp	r0, #0
   23a4a:	bf08      	it	eq
   23a4c:	460a      	moveq	r2, r1
   23a4e:	645a      	str	r2, [r3, #68]	@ 0x44
   23a50:	4770      	bx	lr
   23a52:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23a56:	3360      	adds	r3, #96	@ 0x60
   23a58:	031b      	lsls	r3, r3, #12
   23a5a:	f04f 0c06 	mov.w	ip, #6
   23a5e:	e791      	b.n	23984 <mspi_device_configure.isra.0+0x134>
   23a60:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23a64:	3360      	adds	r3, #96	@ 0x60
   23a66:	031b      	lsls	r3, r3, #12
   23a68:	f04f 0c05 	mov.w	ip, #5
   23a6c:	e78a      	b.n	23984 <mspi_device_configure.isra.0+0x134>
   23a6e:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23a72:	3360      	adds	r3, #96	@ 0x60
   23a74:	031b      	lsls	r3, r3, #12
   23a76:	f04f 0c02 	mov.w	ip, #2
   23a7a:	e70f      	b.n	2389c <mspi_device_configure.isra.0+0x4c>
   23a7c:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23a80:	3360      	adds	r3, #96	@ 0x60
   23a82:	031b      	lsls	r3, r3, #12
   23a84:	2102      	movs	r1, #2
   23a86:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   23a8a:	200b      	movs	r0, #11
   23a8c:	e757      	b.n	2393e <mspi_device_configure.isra.0+0xee>
   23a8e:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23a92:	3360      	adds	r3, #96	@ 0x60
   23a94:	031b      	lsls	r3, r3, #12
   23a96:	f04f 0c0a 	mov.w	ip, #10
   23a9a:	e7bf      	b.n	23a1c <mspi_device_configure.isra.0+0x1cc>
   23a9c:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23aa0:	3360      	adds	r3, #96	@ 0x60
   23aa2:	031b      	lsls	r3, r3, #12
   23aa4:	2101      	movs	r1, #1
   23aa6:	e7ee      	b.n	23a86 <mspi_device_configure.isra.0+0x236>
   23aa8:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23aac:	3360      	adds	r3, #96	@ 0x60
   23aae:	031b      	lsls	r3, r3, #12
   23ab0:	2011      	movs	r0, #17
   23ab2:	e738      	b.n	23926 <mspi_device_configure.isra.0+0xd6>
   23ab4:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23ab8:	3360      	adds	r3, #96	@ 0x60
   23aba:	031b      	lsls	r3, r3, #12
   23abc:	f04f 0c01 	mov.w	ip, #1
   23ac0:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   23ac4:	2105      	movs	r1, #5
   23ac6:	e779      	b.n	239bc <mspi_device_configure.isra.0+0x16c>
   23ac8:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23acc:	3360      	adds	r3, #96	@ 0x60
   23ace:	031b      	lsls	r3, r3, #12
   23ad0:	f04f 0c02 	mov.w	ip, #2
   23ad4:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   23ad8:	2103      	movs	r1, #3
   23ada:	f36c 0204 	bfi	r2, ip, #0, #5
   23ade:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   23ae2:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   23ae6:	f36f 6259 	bfc	r2, #25, #1
   23aea:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   23aee:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
   23af2:	f361 220b 	bfi	r2, r1, #8, #4
   23af6:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
   23afa:	7a40      	ldrb	r0, [r0, #9]
   23afc:	4a18      	ldr	r2, [pc, #96]	@ (23b60 <mspi_device_configure.isra.0+0x310>)
   23afe:	f240 1103 	movw	r1, #259	@ 0x103
   23b02:	2800      	cmp	r0, #0
   23b04:	bf08      	it	eq
   23b06:	460a      	moveq	r2, r1
   23b08:	645a      	str	r2, [r3, #68]	@ 0x44
   23b0a:	4770      	bx	lr
   23b0c:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23b10:	3360      	adds	r3, #96	@ 0x60
   23b12:	031b      	lsls	r3, r3, #12
   23b14:	f04f 0c01 	mov.w	ip, #1
   23b18:	e7dc      	b.n	23ad4 <mspi_device_configure.isra.0+0x284>
   23b1a:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23b1e:	3360      	adds	r3, #96	@ 0x60
   23b20:	031b      	lsls	r3, r3, #12
   23b22:	f04f 0c02 	mov.w	ip, #2
   23b26:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   23b2a:	2101      	movs	r1, #1
   23b2c:	e7d5      	b.n	23ada <mspi_device_configure.isra.0+0x28a>
   23b2e:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23b32:	3360      	adds	r3, #96	@ 0x60
   23b34:	031b      	lsls	r3, r3, #12
   23b36:	f04f 0c01 	mov.w	ip, #1
   23b3a:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
   23b3e:	4a08      	ldr	r2, [pc, #32]	@ (23b60 <mspi_device_configure.isra.0+0x310>)
   23b40:	f36c 0104 	bfi	r1, ip, #0, #5
   23b44:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
   23b48:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
   23b4c:	f36f 6159 	bfc	r1, #25, #1
   23b50:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
   23b54:	f8d3 1090 	ldr.w	r1, [r3, #144]	@ 0x90
   23b58:	f36c 210b 	bfi	r1, ip, #8, #4
   23b5c:	e6af      	b.n	238be <mspi_device_configure.isra.0+0x6e>
   23b5e:	bf00      	nop
   23b60:	80000013 	.word	0x80000013
   23b64:	0007ffff 	.word	0x0007ffff
   23b68:	8000001f 	.word	0x8000001f

00023b6c <sched_hiprio>:
   23b6c:	b570      	push	{r4, r5, r6, lr}
   23b6e:	4605      	mov	r5, r0
   23b70:	b084      	sub	sp, #16
   23b72:	460c      	mov	r4, r1
   23b74:	f7ff f8f6 	bl	22d64 <am_hal_interrupt_master_disable>
   23b78:	f8d5 6840 	ldr.w	r6, [r5, #2112]	@ 0x840
   23b7c:	9003      	str	r0, [sp, #12]
   23b7e:	4434      	add	r4, r6
   23b80:	9803      	ldr	r0, [sp, #12]
   23b82:	f8c5 4840 	str.w	r4, [r5, #2112]	@ 0x840
   23b86:	f7ff f8f1 	bl	22d6c <am_hal_interrupt_master_set>
   23b8a:	b116      	cbz	r6, 23b92 <sched_hiprio+0x26>
   23b8c:	2000      	movs	r0, #0
   23b8e:	b004      	add	sp, #16
   23b90:	bd70      	pop	{r4, r5, r6, pc}
   23b92:	6869      	ldr	r1, [r5, #4]
   23b94:	f501 2180 	add.w	r1, r1, #262144	@ 0x40000
   23b98:	3160      	adds	r1, #96	@ 0x60
   23b9a:	0309      	lsls	r1, r1, #12
   23b9c:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
   23ba0:	f8c1 32b4 	str.w	r3, [r1, #692]	@ 0x2b4
   23ba4:	f8d1 32a0 	ldr.w	r3, [r1, #672]	@ 0x2a0
   23ba8:	07db      	lsls	r3, r3, #31
   23baa:	d517      	bpl.n	23bdc <sched_hiprio+0x70>
   23bac:	4c2a      	ldr	r4, [pc, #168]	@ (23c58 <sched_hiprio+0xec>)
   23bae:	f8d1 32ac 	ldr.w	r3, [r1, #684]	@ 0x2ac
   23bb2:	071e      	lsls	r6, r3, #28
   23bb4:	f04f 0001 	mov.w	r0, #1
   23bb8:	d503      	bpl.n	23bc2 <sched_hiprio+0x56>
   23bba:	f8d1 32b8 	ldr.w	r3, [r1, #696]	@ 0x2b8
   23bbe:	061a      	lsls	r2, r3, #24
   23bc0:	d40c      	bmi.n	23bdc <sched_hiprio+0x70>
   23bc2:	3c01      	subs	r4, #1
   23bc4:	d046      	beq.n	23c54 <sched_hiprio+0xe8>
   23bc6:	f002 fa8b 	bl	260e0 <am_hal_delay_us>
   23bca:	6869      	ldr	r1, [r5, #4]
   23bcc:	f501 2180 	add.w	r1, r1, #262144	@ 0x40000
   23bd0:	3160      	adds	r1, #96	@ 0x60
   23bd2:	0309      	lsls	r1, r1, #12
   23bd4:	f8d1 32a0 	ldr.w	r3, [r1, #672]	@ 0x2a0
   23bd8:	07db      	lsls	r3, r3, #31
   23bda:	d4e8      	bmi.n	23bae <sched_hiprio+0x42>
   23bdc:	2401      	movs	r4, #1
   23bde:	481f      	ldr	r0, [pc, #124]	@ (23c5c <sched_hiprio+0xf0>)
   23be0:	9400      	str	r4, [sp, #0]
   23be2:	2300      	movs	r3, #0
   23be4:	4622      	mov	r2, r4
   23be6:	f501 7182 	add.w	r1, r1, #260	@ 0x104
   23bea:	f002 fabd 	bl	26168 <am_hal_delay_us_status_check>
   23bee:	2800      	cmp	r0, #0
   23bf0:	d1cd      	bne.n	23b8e <sched_hiprio+0x22>
   23bf2:	686b      	ldr	r3, [r5, #4]
   23bf4:	6268      	str	r0, [r5, #36]	@ 0x24
   23bf6:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23bfa:	3360      	adds	r3, #96	@ 0x60
   23bfc:	031b      	lsls	r3, r3, #12
   23bfe:	2240      	movs	r2, #64	@ 0x40
   23c00:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
   23c04:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   23c08:	f8d5 1850 	ldr.w	r1, [r5, #2128]	@ 0x850
   23c0c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
   23c10:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
   23c14:	190a      	adds	r2, r1, r4
   23c16:	f8d5 1848 	ldr.w	r1, [r5, #2120]	@ 0x848
   23c1a:	f885 483c 	strb.w	r4, [r5, #2108]	@ 0x83c
   23c1e:	f8d5 4854 	ldr.w	r4, [r5, #2132]	@ 0x854
   23c22:	fbb2 f5f1 	udiv	r5, r2, r1
   23c26:	fb01 2215 	mls	r2, r1, r5, r2
   23c2a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   23c2e:	eb04 01c2 	add.w	r1, r4, r2, lsl #3
   23c32:	f854 4032 	ldr.w	r4, [r4, r2, lsl #3]
   23c36:	684a      	ldr	r2, [r1, #4]
   23c38:	f8c3 0100 	str.w	r0, [r3, #256]	@ 0x100
   23c3c:	f8c3 4108 	str.w	r4, [r3, #264]	@ 0x108
   23c40:	f8c3 210c 	str.w	r2, [r3, #268]	@ 0x10c
   23c44:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
   23c48:	f8c3 4110 	str.w	r4, [r3, #272]	@ 0x110
   23c4c:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
   23c50:	b004      	add	sp, #16
   23c52:	bd70      	pop	{r4, r5, r6, pc}
   23c54:	2004      	movs	r0, #4
   23c56:	e79a      	b.n	23b8e <sched_hiprio+0x22>
   23c58:	000186a1 	.word	0x000186a1
   23c5c:	000186a0 	.word	0x000186a0

00023c60 <build_dma_cmdlist>:
   23c60:	b4f0      	push	{r4, r5, r6, r7}
   23c62:	6844      	ldr	r4, [r0, #4]
   23c64:	2900      	cmp	r1, #0
   23c66:	d049      	beq.n	23cfc <build_dma_cmdlist+0x9c>
   23c68:	2901      	cmp	r1, #1
   23c6a:	d144      	bne.n	23cf6 <build_dma_cmdlist+0x96>
   23c6c:	685f      	ldr	r7, [r3, #4]
   23c6e:	f1b7 7f80 	cmp.w	r7, #16777216	@ 0x1000000
   23c72:	f080 8083 	bcs.w	23d7c <build_dma_cmdlist+0x11c>
   23c76:	f8d0 6838 	ldr.w	r6, [r0, #2104]	@ 0x838
   23c7a:	691d      	ldr	r5, [r3, #16]
   23c7c:	b10e      	cbz	r6, 23c82 <build_dma_cmdlist+0x22>
   23c7e:	2d00      	cmp	r5, #0
   23c80:	d17f      	bne.n	23d82 <build_dma_cmdlist+0x122>
   23c82:	f504 2180 	add.w	r1, r4, #262144	@ 0x40000
   23c86:	3160      	adds	r1, #96	@ 0x60
   23c88:	68dc      	ldr	r4, [r3, #12]
   23c8a:	6154      	str	r4, [r2, #20]
   23c8c:	0309      	lsls	r1, r1, #12
   23c8e:	689c      	ldr	r4, [r3, #8]
   23c90:	61d4      	str	r4, [r2, #28]
   23c92:	f501 7480 	add.w	r4, r1, #256	@ 0x100
   23c96:	6314      	str	r4, [r2, #48]	@ 0x30
   23c98:	6294      	str	r4, [r2, #40]	@ 0x28
   23c9a:	2400      	movs	r4, #0
   23c9c:	6354      	str	r4, [r2, #52]	@ 0x34
   23c9e:	f501 7484 	add.w	r4, r1, #264	@ 0x108
   23ca2:	6114      	str	r4, [r2, #16]
   23ca4:	f501 7486 	add.w	r4, r1, #268	@ 0x10c
   23ca8:	6194      	str	r4, [r2, #24]
   23caa:	f501 7488 	add.w	r4, r1, #272	@ 0x110
   23cae:	6257      	str	r7, [r2, #36]	@ 0x24
   23cb0:	6214      	str	r4, [r2, #32]
   23cb2:	781c      	ldrb	r4, [r3, #0]
   23cb4:	f893 c001 	ldrb.w	ip, [r3, #1]
   23cb8:	0124      	lsls	r4, r4, #4
   23cba:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
   23cbe:	f004 0430 	and.w	r4, r4, #48	@ 0x30
   23cc2:	f00c 0c04 	and.w	ip, ip, #4
   23cc6:	ea44 040c 	orr.w	r4, r4, ip
   23cca:	f044 0403 	orr.w	r4, r4, #3
   23cce:	62d4      	str	r4, [r2, #44]	@ 0x2c
   23cd0:	2e01      	cmp	r6, #1
   23cd2:	f501 742e 	add.w	r4, r1, #696	@ 0x2b8
   23cd6:	6094      	str	r4, [r2, #8]
   23cd8:	6014      	str	r4, [r2, #0]
   23cda:	d047      	beq.n	23d6c <build_dma_cmdlist+0x10c>
   23cdc:	2e02      	cmp	r6, #2
   23cde:	d142      	bne.n	23d66 <build_dma_cmdlist+0x106>
   23ce0:	f44f 4580 	mov.w	r5, #16384	@ 0x4000
   23ce4:	695b      	ldr	r3, [r3, #20]
   23ce6:	6055      	str	r5, [r2, #4]
   23ce8:	f501 712d 	add.w	r1, r1, #692	@ 0x2b4
   23cec:	e9c2 130e 	strd	r1, r3, [r2, #56]	@ 0x38
   23cf0:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
   23cf4:	60d0      	str	r0, [r2, #12]
   23cf6:	2000      	movs	r0, #0
   23cf8:	bcf0      	pop	{r4, r5, r6, r7}
   23cfa:	4770      	bx	lr
   23cfc:	6819      	ldr	r1, [r3, #0]
   23cfe:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
   23d02:	d23b      	bcs.n	23d7c <build_dma_cmdlist+0x11c>
   23d04:	7c9d      	ldrb	r5, [r3, #18]
   23d06:	2d00      	cmp	r5, #0
   23d08:	d13b      	bne.n	23d82 <build_dma_cmdlist+0x122>
   23d0a:	7b40      	ldrb	r0, [r0, #13]
   23d0c:	0409      	lsls	r1, r1, #16
   23d0e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
   23d12:	4628      	mov	r0, r5
   23d14:	795d      	ldrb	r5, [r3, #5]
   23d16:	ea41 21c5 	orr.w	r1, r1, r5, lsl #11
   23d1a:	791d      	ldrb	r5, [r3, #4]
   23d1c:	f504 2480 	add.w	r4, r4, #262144	@ 0x40000
   23d20:	ea41 2145 	orr.w	r1, r1, r5, lsl #9
   23d24:	689d      	ldr	r5, [r3, #8]
   23d26:	6055      	str	r5, [r2, #4]
   23d28:	3460      	adds	r4, #96	@ 0x60
   23d2a:	89dd      	ldrh	r5, [r3, #14]
   23d2c:	0324      	lsls	r4, r4, #12
   23d2e:	e9c2 5403 	strd	r5, r4, [r2, #12]
   23d32:	7b1d      	ldrb	r5, [r3, #12]
   23d34:	ea41 1185 	orr.w	r1, r1, r5, lsl #6
   23d38:	f104 0508 	add.w	r5, r4, #8
   23d3c:	340c      	adds	r4, #12
   23d3e:	6094      	str	r4, [r2, #8]
   23d40:	79dc      	ldrb	r4, [r3, #7]
   23d42:	6015      	str	r5, [r2, #0]
   23d44:	ea41 1144 	orr.w	r1, r1, r4, lsl #5
   23d48:	7c1c      	ldrb	r4, [r3, #16]
   23d4a:	7c5d      	ldrb	r5, [r3, #17]
   23d4c:	ea41 2184 	orr.w	r1, r1, r4, lsl #10
   23d50:	799c      	ldrb	r4, [r3, #6]
   23d52:	ea41 3305 	orr.w	r3, r1, r5, lsl #12
   23d56:	01e1      	lsls	r1, r4, #7
   23d58:	b2c9      	uxtb	r1, r1
   23d5a:	430b      	orrs	r3, r1
   23d5c:	f043 0301 	orr.w	r3, r3, #1
   23d60:	bcf0      	pop	{r4, r5, r6, r7}
   23d62:	6153      	str	r3, [r2, #20]
   23d64:	4770      	bx	lr
   23d66:	f445 4581 	orr.w	r5, r5, #16512	@ 0x4080
   23d6a:	e7bb      	b.n	23ce4 <build_dma_cmdlist+0x84>
   23d6c:	f445 4581 	orr.w	r5, r5, #16512	@ 0x4080
   23d70:	2402      	movs	r4, #2
   23d72:	f045 0520 	orr.w	r5, r5, #32
   23d76:	f8c0 4838 	str.w	r4, [r0, #2104]	@ 0x838
   23d7a:	e7b3      	b.n	23ce4 <build_dma_cmdlist+0x84>
   23d7c:	2005      	movs	r0, #5
   23d7e:	bcf0      	pop	{r4, r5, r6, r7}
   23d80:	4770      	bx	lr
   23d82:	2007      	movs	r0, #7
   23d84:	e7b8      	b.n	23cf8 <build_dma_cmdlist+0x98>
   23d86:	bf00      	nop

00023d88 <am_hal_mspi_initialize>:
   23d88:	2802      	cmp	r0, #2
   23d8a:	d81b      	bhi.n	23dc4 <am_hal_mspi_initialize+0x3c>
   23d8c:	b1f1      	cbz	r1, 23dcc <am_hal_mspi_initialize+0x44>
   23d8e:	b570      	push	{r4, r5, r6, lr}
   23d90:	f640 02c4 	movw	r2, #2244	@ 0x8c4
   23d94:	4d0e      	ldr	r5, [pc, #56]	@ (23dd0 <am_hal_mspi_initialize+0x48>)
   23d96:	fb00 f202 	mul.w	r2, r0, r2
   23d9a:	18ac      	adds	r4, r5, r2
   23d9c:	78e3      	ldrb	r3, [r4, #3]
   23d9e:	f3c3 0e00 	ubfx	lr, r3, #0, #1
   23da2:	f013 0301 	ands.w	r3, r3, #1
   23da6:	d10f      	bne.n	23dc8 <am_hal_mspi_initialize+0x40>
   23da8:	58ae      	ldr	r6, [r5, r2]
   23daa:	f006 4c7e 	and.w	ip, r6, #4261412864	@ 0xfe000000
   23dae:	4e09      	ldr	r6, [pc, #36]	@ (23dd4 <am_hal_mspi_initialize+0x4c>)
   23db0:	ea4c 0606 	orr.w	r6, ip, r6
   23db4:	50ae      	str	r6, [r5, r2]
   23db6:	f884 e00c 	strb.w	lr, [r4, #12]
   23dba:	6060      	str	r0, [r4, #4]
   23dbc:	61a3      	str	r3, [r4, #24]
   23dbe:	4618      	mov	r0, r3
   23dc0:	600c      	str	r4, [r1, #0]
   23dc2:	bd70      	pop	{r4, r5, r6, pc}
   23dc4:	2005      	movs	r0, #5
   23dc6:	4770      	bx	lr
   23dc8:	2007      	movs	r0, #7
   23dca:	bd70      	pop	{r4, r5, r6, pc}
   23dcc:	2006      	movs	r0, #6
   23dce:	4770      	bx	lr
   23dd0:	100347b8 	.word	0x100347b8
   23dd4:	01bebebe 	.word	0x01bebebe

00023dd8 <am_hal_mspi_configure>:
   23dd8:	6803      	ldr	r3, [r0, #0]
   23dda:	4a33      	ldr	r2, [pc, #204]	@ (23ea8 <am_hal_mspi_configure+0xd0>)
   23ddc:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   23de0:	4293      	cmp	r3, r2
   23de2:	d152      	bne.n	23e8a <am_hal_mspi_configure+0xb2>
   23de4:	78c2      	ldrb	r2, [r0, #3]
   23de6:	f012 0202 	ands.w	r2, r2, #2
   23dea:	d15b      	bne.n	23ea4 <am_hal_mspi_configure+0xcc>
   23dec:	b470      	push	{r4, r5, r6}
   23dee:	6846      	ldr	r6, [r0, #4]
   23df0:	4c2e      	ldr	r4, [pc, #184]	@ (23eac <am_hal_mspi_configure+0xd4>)
   23df2:	f506 2380 	add.w	r3, r6, #262144	@ 0x40000
   23df6:	3360      	adds	r3, #96	@ 0x60
   23df8:	031b      	lsls	r3, r3, #12
   23dfa:	f8d3 5090 	ldr.w	r5, [r3, #144]	@ 0x90
   23dfe:	f362 0500 	bfi	r5, r2, #0, #1
   23e02:	f8c3 5090 	str.w	r5, [r3, #144]	@ 0x90
   23e06:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
   23e0a:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
   23e0e:	f640 02c4 	movw	r2, #2244	@ 0x8c4
   23e12:	fb02 4206 	mla	r2, r2, r6, r4
   23e16:	684b      	ldr	r3, [r1, #4]
   23e18:	6193      	str	r3, [r2, #24]
   23e1a:	6985      	ldr	r5, [r0, #24]
   23e1c:	680b      	ldr	r3, [r1, #0]
   23e1e:	6153      	str	r3, [r2, #20]
   23e20:	b335      	cbz	r5, 23e70 <am_hal_mspi_configure+0x98>
   23e22:	6942      	ldr	r2, [r0, #20]
   23e24:	4b22      	ldr	r3, [pc, #136]	@ (23eb0 <am_hal_mspi_configure+0xd8>)
   23e26:	eb05 0c82 	add.w	ip, r5, r2, lsl #2
   23e2a:	459c      	cmp	ip, r3
   23e2c:	bf94      	ite	ls
   23e2e:	2301      	movls	r3, #1
   23e30:	2300      	movhi	r3, #0
   23e32:	f880 38c0 	strb.w	r3, [r0, #2240]	@ 0x8c0
   23e36:	ea4f 0382 	mov.w	r3, r2, lsl #2
   23e3a:	d909      	bls.n	23e50 <am_hal_mspi_configure+0x78>
   23e3c:	f005 020f 	and.w	r2, r5, #15
   23e40:	1a9a      	subs	r2, r3, r2
   23e42:	350f      	adds	r5, #15
   23e44:	0912      	lsrs	r2, r2, #4
   23e46:	f025 050f 	bic.w	r5, r5, #15
   23e4a:	0092      	lsls	r2, r2, #2
   23e4c:	6185      	str	r5, [r0, #24]
   23e4e:	6142      	str	r2, [r0, #20]
   23e50:	3a08      	subs	r2, #8
   23e52:	f644 0047 	movw	r0, #18503	@ 0x4847
   23e56:	ebb0 0f82 	cmp.w	r0, r2, lsl #2
   23e5a:	ea4f 0382 	mov.w	r3, r2, lsl #2
   23e5e:	d216      	bcs.n	23e8e <am_hal_mspi_configure+0xb6>
   23e60:	f640 03c4 	movw	r3, #2244	@ 0x8c4
   23e64:	fb03 4306 	mla	r3, r3, r6, r4
   23e68:	f44f 7280 	mov.w	r2, #256	@ 0x100
   23e6c:	f8c3 2858 	str.w	r2, [r3, #2136]	@ 0x858
   23e70:	f640 03c4 	movw	r3, #2244	@ 0x8c4
   23e74:	fb03 4306 	mla	r3, r3, r6, r4
   23e78:	221a      	movs	r2, #26
   23e7a:	7a08      	ldrb	r0, [r1, #8]
   23e7c:	729a      	strb	r2, [r3, #10]
   23e7e:	2101      	movs	r1, #1
   23e80:	7258      	strb	r0, [r3, #9]
   23e82:	bc70      	pop	{r4, r5, r6}
   23e84:	2000      	movs	r0, #0
   23e86:	7219      	strb	r1, [r3, #8]
   23e88:	4770      	bx	lr
   23e8a:	2002      	movs	r0, #2
   23e8c:	4770      	bx	lr
   23e8e:	4809      	ldr	r0, [pc, #36]	@ (23eb4 <am_hal_mspi_configure+0xdc>)
   23e90:	f640 02c4 	movw	r2, #2244	@ 0x8c4
   23e94:	fb02 4206 	mla	r2, r2, r6, r4
   23e98:	fba0 0303 	umull	r0, r3, r0, r3
   23e9c:	091b      	lsrs	r3, r3, #4
   23e9e:	f8c2 3858 	str.w	r3, [r2, #2136]	@ 0x858
   23ea2:	e7e5      	b.n	23e70 <am_hal_mspi_configure+0x98>
   23ea4:	2007      	movs	r0, #7
   23ea6:	4770      	bx	lr
   23ea8:	01bebebe 	.word	0x01bebebe
   23eac:	100347b8 	.word	0x100347b8
   23eb0:	1005ffff 	.word	0x1005ffff
   23eb4:	38e38e39 	.word	0x38e38e39

00023eb8 <am_hal_mspi_device_configure>:
   23eb8:	6803      	ldr	r3, [r0, #0]
   23eba:	4a91      	ldr	r2, [pc, #580]	@ (24100 <am_hal_mspi_device_configure+0x248>)
   23ebc:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   23ec0:	4293      	cmp	r3, r2
   23ec2:	f040 80d9 	bne.w	24078 <am_hal_mspi_device_configure+0x1c0>
   23ec6:	7a03      	ldrb	r3, [r0, #8]
   23ec8:	b570      	push	{r4, r5, r6, lr}
   23eca:	4605      	mov	r5, r0
   23ecc:	2b00      	cmp	r3, #0
   23ece:	f000 8115 	beq.w	240fc <am_hal_mspi_device_configure+0x244>
   23ed2:	784b      	ldrb	r3, [r1, #1]
   23ed4:	788a      	ldrb	r2, [r1, #2]
   23ed6:	460c      	mov	r4, r1
   23ed8:	015b      	lsls	r3, r3, #5
   23eda:	7809      	ldrb	r1, [r1, #0]
   23edc:	01d2      	lsls	r2, r2, #7
   23ede:	b2d2      	uxtb	r2, r2
   23ee0:	f003 0360 	and.w	r3, r3, #96	@ 0x60
   23ee4:	4313      	orrs	r3, r2
   23ee6:	020a      	lsls	r2, r1, #8
   23ee8:	f402 527c 	and.w	r2, r2, #16128	@ 0x3f00
   23eec:	4313      	orrs	r3, r2
   23eee:	7aa2      	ldrb	r2, [r4, #10]
   23ef0:	2a02      	cmp	r2, #2
   23ef2:	f000 80ec 	beq.w	240ce <am_hal_mspi_device_configure+0x216>
   23ef6:	2a03      	cmp	r2, #3
   23ef8:	f000 80e6 	beq.w	240c8 <am_hal_mspi_device_configure+0x210>
   23efc:	2a01      	cmp	r2, #1
   23efe:	f000 80e0 	beq.w	240c2 <am_hal_mspi_device_configure+0x20a>
   23f02:	f894 c00b 	ldrb.w	ip, [r4, #11]
   23f06:	ea4f 420c 	mov.w	r2, ip, lsl #16
   23f0a:	f402 127c 	and.w	r2, r2, #4128768	@ 0x3f0000
   23f0e:	f10c 3cff 	add.w	ip, ip, #4294967295
   23f12:	431a      	orrs	r2, r3
   23f14:	f1bc 0f1f 	cmp.w	ip, #31
   23f18:	d811      	bhi.n	23f3e <am_hal_mspi_device_configure+0x86>
   23f1a:	e8df f00c 	tbb	[pc, ip]
   23f1e:	1412      	.short	0x1412
   23f20:	14101414 	.word	0x14101414
   23f24:	10101410 	.word	0x10101410
   23f28:	10101410 	.word	0x10101410
   23f2c:	10101410 	.word	0x10101410
   23f30:	10101010 	.word	0x10101010
   23f34:	10101410 	.word	0x10101410
   23f38:	10101010 	.word	0x10101010
   23f3c:	1410      	.short	0x1410
   23f3e:	2005      	movs	r0, #5
   23f40:	bd70      	pop	{r4, r5, r6, pc}
   23f42:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
   23f46:	686b      	ldr	r3, [r5, #4]
   23f48:	7a60      	ldrb	r0, [r4, #9]
   23f4a:	7c26      	ldrb	r6, [r4, #16]
   23f4c:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   23f50:	3360      	adds	r3, #96	@ 0x60
   23f52:	031b      	lsls	r3, r3, #12
   23f54:	ea42 6280 	orr.w	r2, r2, r0, lsl #26
   23f58:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   23f5c:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   23f60:	f366 0200 	bfi	r2, r6, #0, #1
   23f64:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   23f68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   23f6a:	f36f 0200 	bfc	r2, #0, #1
   23f6e:	631a      	str	r2, [r3, #48]	@ 0x30
   23f70:	f8d3 6090 	ldr.w	r6, [r3, #144]	@ 0x90
   23f74:	4a63      	ldr	r2, [pc, #396]	@ (24104 <am_hal_mspi_device_configure+0x24c>)
   23f76:	4032      	ands	r2, r6
   23f78:	7b6e      	ldrb	r6, [r5, #13]
   23f7a:	ea42 1206 	orr.w	r2, r2, r6, lsl #4
   23f7e:	7be6      	ldrb	r6, [r4, #15]
   23f80:	f042 020c 	orr.w	r2, r2, #12
   23f84:	b12e      	cbz	r6, 23f92 <am_hal_mspi_device_configure+0xda>
   23f86:	0389      	lsls	r1, r1, #14
   23f88:	f401 217c 	and.w	r1, r1, #1032192	@ 0xfc000
   23f8c:	430a      	orrs	r2, r1
   23f8e:	f042 0220 	orr.w	r2, r2, #32
   23f92:	7b61      	ldrb	r1, [r4, #13]
   23f94:	b109      	cbz	r1, 23f9a <am_hal_mspi_device_configure+0xe2>
   23f96:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
   23f9a:	7ba1      	ldrb	r1, [r4, #14]
   23f9c:	2900      	cmp	r1, #0
   23f9e:	f040 808d 	bne.w	240bc <am_hal_mspi_device_configure+0x204>
   23fa2:	7b21      	ldrb	r1, [r4, #12]
   23fa4:	0500      	lsls	r0, r0, #20
   23fa6:	f000 707c 	and.w	r0, r0, #66060288	@ 0x3f00000
   23faa:	ea40 3041 	orr.w	r0, r0, r1, lsl #13
   23fae:	4310      	orrs	r0, r2
   23fb0:	88a1      	ldrh	r1, [r4, #4]
   23fb2:	88e2      	ldrh	r2, [r4, #6]
   23fb4:	f8c3 0090 	str.w	r0, [r3, #144]	@ 0x90
   23fb8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   23fbc:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
   23fc0:	7d22      	ldrb	r2, [r4, #20]
   23fc2:	8a61      	ldrh	r1, [r4, #18]
   23fc4:	0312      	lsls	r2, r2, #12
   23fc6:	f3c1 010b 	ubfx	r1, r1, #0, #12
   23fca:	b292      	uxth	r2, r2
   23fcc:	430a      	orrs	r2, r1
   23fce:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
   23fd2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   23fd4:	2107      	movs	r1, #7
   23fd6:	f361 1207 	bfi	r2, r1, #4, #4
   23fda:	631a      	str	r2, [r3, #48]	@ 0x30
   23fdc:	2200      	movs	r2, #0
   23fde:	736a      	strb	r2, [r5, #13]
   23fe0:	69aa      	ldr	r2, [r5, #24]
   23fe2:	2a00      	cmp	r2, #0
   23fe4:	d05c      	beq.n	240a0 <am_hal_mspi_device_configure+0x1e8>
   23fe6:	2220      	movs	r2, #32
   23fe8:	f8c3 2114 	str.w	r2, [r3, #276]	@ 0x114
   23fec:	f1bc 0f1f 	cmp.w	ip, #31
   23ff0:	d8a5      	bhi.n	23f3e <am_hal_mspi_device_configure+0x86>
   23ff2:	a201      	add	r2, pc, #4	@ (adr r2, 23ff8 <am_hal_mspi_device_configure+0x140>)
   23ff4:	f852 f02c 	ldr.w	pc, [r2, ip, lsl #2]
   23ff8:	000240d5 	.word	0x000240d5
   23ffc:	000240d5 	.word	0x000240d5
   24000:	0002407d 	.word	0x0002407d
   24004:	0002407d 	.word	0x0002407d
   24008:	00023f3f 	.word	0x00023f3f
   2400c:	0002407d 	.word	0x0002407d
   24010:	00023f3f 	.word	0x00023f3f
   24014:	0002407d 	.word	0x0002407d
   24018:	00023f3f 	.word	0x00023f3f
   2401c:	00023f3f 	.word	0x00023f3f
   24020:	00023f3f 	.word	0x00023f3f
   24024:	0002407d 	.word	0x0002407d
   24028:	00023f3f 	.word	0x00023f3f
   2402c:	00023f3f 	.word	0x00023f3f
   24030:	00023f3f 	.word	0x00023f3f
   24034:	0002407d 	.word	0x0002407d
   24038:	00023f3f 	.word	0x00023f3f
   2403c:	00023f3f 	.word	0x00023f3f
   24040:	00023f3f 	.word	0x00023f3f
   24044:	00023f3f 	.word	0x00023f3f
   24048:	00023f3f 	.word	0x00023f3f
   2404c:	00023f3f 	.word	0x00023f3f
   24050:	00023f3f 	.word	0x00023f3f
   24054:	0002407d 	.word	0x0002407d
   24058:	00023f3f 	.word	0x00023f3f
   2405c:	00023f3f 	.word	0x00023f3f
   24060:	00023f3f 	.word	0x00023f3f
   24064:	00023f3f 	.word	0x00023f3f
   24068:	00023f3f 	.word	0x00023f3f
   2406c:	00023f3f 	.word	0x00023f3f
   24070:	00023f3f 	.word	0x00023f3f
   24074:	0002407d 	.word	0x0002407d
   24078:	2002      	movs	r0, #2
   2407a:	4770      	bx	lr
   2407c:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   24080:	2108      	movs	r1, #8
   24082:	f361 0204 	bfi	r2, r1, #0, #5
   24086:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
   2408a:	6a1a      	ldr	r2, [r3, #32]
   2408c:	201e      	movs	r0, #30
   2408e:	f360 220d 	bfi	r2, r0, #8, #6
   24092:	621a      	str	r2, [r3, #32]
   24094:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   24098:	f361 220c 	bfi	r2, r1, #8, #5
   2409c:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
   240a0:	7a23      	ldrb	r3, [r4, #8]
   240a2:	72ab      	strb	r3, [r5, #10]
   240a4:	4628      	mov	r0, r5
   240a6:	f7ff fbd3 	bl	23850 <mspi_device_configure.isra.0>
   240aa:	2000      	movs	r0, #0
   240ac:	f8a5 000d 	strh.w	r0, [r5, #13]
   240b0:	7ae2      	ldrb	r2, [r4, #11]
   240b2:	732a      	strb	r2, [r5, #12]
   240b4:	f242 7310 	movw	r3, #10000	@ 0x2710
   240b8:	612b      	str	r3, [r5, #16]
   240ba:	bd70      	pop	{r4, r5, r6, pc}
   240bc:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
   240c0:	e76f      	b.n	23fa2 <am_hal_mspi_device_configure+0xea>
   240c2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
   240c6:	e71c      	b.n	23f02 <am_hal_mspi_device_configure+0x4a>
   240c8:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
   240cc:	e719      	b.n	23f02 <am_hal_mspi_device_configure+0x4a>
   240ce:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
   240d2:	e716      	b.n	23f02 <am_hal_mspi_device_configure+0x4a>
   240d4:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   240d8:	210c      	movs	r1, #12
   240da:	f361 0204 	bfi	r2, r1, #0, #5
   240de:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
   240e2:	6a1a      	ldr	r2, [r3, #32]
   240e4:	211e      	movs	r1, #30
   240e6:	f361 220d 	bfi	r2, r1, #8, #6
   240ea:	621a      	str	r2, [r3, #32]
   240ec:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   240f0:	2108      	movs	r1, #8
   240f2:	f361 220c 	bfi	r2, r1, #8, #5
   240f6:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
   240fa:	e7d1      	b.n	240a0 <am_hal_mspi_device_configure+0x1e8>
   240fc:	2007      	movs	r0, #7
   240fe:	bd70      	pop	{r4, r5, r6, pc}
   24100:	01bebebe 	.word	0x01bebebe
   24104:	fc001f03 	.word	0xfc001f03

00024108 <am_hal_mspi_enable>:
   24108:	2800      	cmp	r0, #0
   2410a:	d049      	beq.n	241a0 <am_hal_mspi_enable+0x98>
   2410c:	b530      	push	{r4, r5, lr}
   2410e:	6803      	ldr	r3, [r0, #0]
   24110:	4a24      	ldr	r2, [pc, #144]	@ (241a4 <am_hal_mspi_enable+0x9c>)
   24112:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   24116:	4293      	cmp	r3, r2
   24118:	b085      	sub	sp, #20
   2411a:	4604      	mov	r4, r0
   2411c:	d13a      	bne.n	24194 <am_hal_mspi_enable+0x8c>
   2411e:	7a03      	ldrb	r3, [r0, #8]
   24120:	2b00      	cmp	r3, #0
   24122:	d03a      	beq.n	2419a <am_hal_mspi_enable+0x92>
   24124:	6983      	ldr	r3, [r0, #24]
   24126:	b373      	cbz	r3, 24186 <am_hal_mspi_enable+0x7e>
   24128:	6840      	ldr	r0, [r0, #4]
   2412a:	6961      	ldr	r1, [r4, #20]
   2412c:	9302      	str	r3, [sp, #8]
   2412e:	4a1e      	ldr	r2, [pc, #120]	@ (241a8 <am_hal_mspi_enable+0xa0>)
   24130:	2301      	movs	r3, #1
   24132:	f88d 300c 	strb.w	r3, [sp, #12]
   24136:	f640 03c4 	movw	r3, #2244	@ 0x8c4
   2413a:	2500      	movs	r5, #0
   2413c:	fb03 2200 	mla	r2, r3, r0, r2
   24140:	0849      	lsrs	r1, r1, #1
   24142:	3008      	adds	r0, #8
   24144:	9101      	str	r1, [sp, #4]
   24146:	e9c4 5507 	strd	r5, r5, [r4, #28]
   2414a:	a901      	add	r1, sp, #4
   2414c:	b2c0      	uxtb	r0, r0
   2414e:	f002 fff3 	bl	27138 <am_hal_cmdq_init>
   24152:	6863      	ldr	r3, [r4, #4]
   24154:	4915      	ldr	r1, [pc, #84]	@ (241ac <am_hal_mspi_enable+0xa4>)
   24156:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   2415a:	3360      	adds	r3, #96	@ 0x60
   2415c:	031b      	lsls	r3, r3, #12
   2415e:	f44f 7280 	mov.w	r2, #256	@ 0x100
   24162:	f8c3 12b4 	str.w	r1, [r3, #692]	@ 0x2b4
   24166:	f8c4 5854 	str.w	r5, [r4, #2132]	@ 0x854
   2416a:	f884 583c 	strb.w	r5, [r4, #2108]	@ 0x83c
   2416e:	f8c4 5844 	str.w	r5, [r4, #2116]	@ 0x844
   24172:	f8c4 5838 	str.w	r5, [r4, #2104]	@ 0x838
   24176:	f8c4 5840 	str.w	r5, [r4, #2112]	@ 0x840
   2417a:	f8c4 5830 	str.w	r5, [r4, #2096]	@ 0x830
   2417e:	f8a4 282c 	strh.w	r2, [r4, #2092]	@ 0x82c
   24182:	f8c4 585c 	str.w	r5, [r4, #2140]	@ 0x85c
   24186:	78e3      	ldrb	r3, [r4, #3]
   24188:	2000      	movs	r0, #0
   2418a:	f043 0302 	orr.w	r3, r3, #2
   2418e:	70e3      	strb	r3, [r4, #3]
   24190:	b005      	add	sp, #20
   24192:	bd30      	pop	{r4, r5, pc}
   24194:	2002      	movs	r0, #2
   24196:	b005      	add	sp, #20
   24198:	bd30      	pop	{r4, r5, pc}
   2419a:	2007      	movs	r0, #7
   2419c:	b005      	add	sp, #20
   2419e:	bd30      	pop	{r4, r5, pc}
   241a0:	2002      	movs	r0, #2
   241a2:	4770      	bx	lr
   241a4:	01bebebe 	.word	0x01bebebe
   241a8:	10034fe0 	.word	0x10034fe0
   241ac:	00400080 	.word	0x00400080

000241b0 <am_hal_mspi_control>:
   241b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   241b4:	b085      	sub	sp, #20
   241b6:	b398      	cbz	r0, 24220 <am_hal_mspi_control+0x70>
   241b8:	6803      	ldr	r3, [r0, #0]
   241ba:	4617      	mov	r7, r2
   241bc:	4aa3      	ldr	r2, [pc, #652]	@ (2444c <am_hal_mspi_control+0x29c>)
   241be:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   241c2:	4293      	cmp	r3, r2
   241c4:	4604      	mov	r4, r0
   241c6:	d12b      	bne.n	24220 <am_hal_mspi_control+0x70>
   241c8:	2923      	cmp	r1, #35	@ 0x23
   241ca:	d82e      	bhi.n	2422a <am_hal_mspi_control+0x7a>
   241cc:	7a03      	ldrb	r3, [r0, #8]
   241ce:	b3ab      	cbz	r3, 2423c <am_hal_mspi_control+0x8c>
   241d0:	6845      	ldr	r5, [r0, #4]
   241d2:	2922      	cmp	r1, #34	@ 0x22
   241d4:	d829      	bhi.n	2422a <am_hal_mspi_control+0x7a>
   241d6:	e8df f011 	tbh	[pc, r1, lsl #1]
   241da:	0053      	.short	0x0053
   241dc:	00700060 	.word	0x00700060
   241e0:	0091007f 	.word	0x0091007f
   241e4:	00a9009d 	.word	0x00a9009d
   241e8:	00c100b5 	.word	0x00c100b5
   241ec:	00dd00d1 	.word	0x00dd00d1
   241f0:	013b00e9 	.word	0x013b00e9
   241f4:	01c5018a 	.word	0x01c5018a
   241f8:	020c01f0 	.word	0x020c01f0
   241fc:	0228021c 	.word	0x0228021c
   24200:	024c023a 	.word	0x024c023a
   24204:	02790270 	.word	0x02790270
   24208:	02d902aa 	.word	0x02d902aa
   2420c:	034102e7 	.word	0x034102e7
   24210:	04b704df 	.word	0x04b704df
   24214:	03cc04c8 	.word	0x03cc04c8
   24218:	0488046a 	.word	0x0488046a
   2421c:	003604a0 	.word	0x003604a0
   24220:	2602      	movs	r6, #2
   24222:	4630      	mov	r0, r6
   24224:	b005      	add	sp, #20
   24226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2422a:	2606      	movs	r6, #6
   2422c:	4630      	mov	r0, r6
   2422e:	b005      	add	sp, #20
   24230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24234:	6a03      	ldr	r3, [r0, #32]
   24236:	2b00      	cmp	r3, #0
   24238:	f000 82f9 	beq.w	2482e <am_hal_mspi_control+0x67e>
   2423c:	2607      	movs	r6, #7
   2423e:	4630      	mov	r0, r6
   24240:	b005      	add	sp, #20
   24242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24246:	2f00      	cmp	r7, #0
   24248:	d0ef      	beq.n	2422a <am_hal_mspi_control+0x7a>
   2424a:	f505 2380 	add.w	r3, r5, #262144	@ 0x40000
   2424e:	3360      	adds	r3, #96	@ 0x60
   24250:	031b      	lsls	r3, r3, #12
   24252:	7a78      	ldrb	r0, [r7, #9]
   24254:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   24258:	f360 629f 	bfi	r2, r0, #26, #6
   2425c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   24260:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
   24264:	2105      	movs	r1, #5
   24266:	f361 220b 	bfi	r2, r1, #8, #4
   2426a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
   2426e:	7b39      	ldrb	r1, [r7, #12]
   24270:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
   24274:	f361 324d 	bfi	r2, r1, #13, #1
   24278:	2600      	movs	r6, #0
   2427a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
   2427e:	e7d0      	b.n	24222 <am_hal_mspi_control+0x72>
   24280:	2f00      	cmp	r7, #0
   24282:	d0d2      	beq.n	2422a <am_hal_mspi_control+0x7a>
   24284:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24288:	3560      	adds	r5, #96	@ 0x60
   2428a:	032d      	lsls	r5, r5, #12
   2428c:	683a      	ldr	r2, [r7, #0]
   2428e:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
   24290:	f362 0300 	bfi	r3, r2, #0, #1
   24294:	2600      	movs	r6, #0
   24296:	632b      	str	r3, [r5, #48]	@ 0x30
   24298:	e7c3      	b.n	24222 <am_hal_mspi_control+0x72>
   2429a:	2f00      	cmp	r7, #0
   2429c:	d0c5      	beq.n	2422a <am_hal_mspi_control+0x7a>
   2429e:	683b      	ldr	r3, [r7, #0]
   242a0:	f003 36e0 	and.w	r6, r3, #3772834016	@ 0xe0e0e0e0
   242a4:	f026 4660 	bic.w	r6, r6, #3758096384	@ 0xe0000000
   242a8:	2e00      	cmp	r6, #0
   242aa:	d1be      	bne.n	2422a <am_hal_mspi_control+0x7a>
   242ac:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   242b0:	3560      	adds	r5, #96	@ 0x60
   242b2:	032d      	lsls	r5, r5, #12
   242b4:	f8c5 32b4 	str.w	r3, [r5, #692]	@ 0x2b4
   242b8:	e7b3      	b.n	24222 <am_hal_mspi_control+0x72>
   242ba:	2f00      	cmp	r7, #0
   242bc:	d0b5      	beq.n	2422a <am_hal_mspi_control+0x7a>
   242be:	683b      	ldr	r3, [r7, #0]
   242c0:	2b07      	cmp	r3, #7
   242c2:	d8b2      	bhi.n	2422a <am_hal_mspi_control+0x7a>
   242c4:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   242c8:	3560      	adds	r5, #96	@ 0x60
   242ca:	032d      	lsls	r5, r5, #12
   242cc:	2600      	movs	r6, #0
   242ce:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
   242d0:	f363 1207 	bfi	r2, r3, #4, #4
   242d4:	632a      	str	r2, [r5, #48]	@ 0x30
   242d6:	e7a4      	b.n	24222 <am_hal_mspi_control+0x72>
   242d8:	2f00      	cmp	r7, #0
   242da:	d0a6      	beq.n	2422a <am_hal_mspi_control+0x7a>
   242dc:	683b      	ldr	r3, [r7, #0]
   242de:	2b02      	cmp	r3, #2
   242e0:	d901      	bls.n	242e6 <am_hal_mspi_control+0x136>
   242e2:	2b07      	cmp	r3, #7
   242e4:	d1a1      	bne.n	2422a <am_hal_mspi_control+0x7a>
   242e6:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   242ea:	3560      	adds	r5, #96	@ 0x60
   242ec:	032d      	lsls	r5, r5, #12
   242ee:	3308      	adds	r3, #8
   242f0:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
   242f2:	f363 1207 	bfi	r2, r3, #4, #4
   242f6:	2600      	movs	r6, #0
   242f8:	632a      	str	r2, [r5, #48]	@ 0x30
   242fa:	e792      	b.n	24222 <am_hal_mspi_control+0x72>
   242fc:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24300:	3560      	adds	r5, #96	@ 0x60
   24302:	032d      	lsls	r5, r5, #12
   24304:	2600      	movs	r6, #0
   24306:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
   2430a:	f36f 330c 	bfc	r3, #12, #1
   2430e:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
   24312:	e786      	b.n	24222 <am_hal_mspi_control+0x72>
   24314:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24318:	3560      	adds	r5, #96	@ 0x60
   2431a:	032d      	lsls	r5, r5, #12
   2431c:	2600      	movs	r6, #0
   2431e:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
   24322:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
   24326:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
   2432a:	e77a      	b.n	24222 <am_hal_mspi_control+0x72>
   2432c:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24330:	3560      	adds	r5, #96	@ 0x60
   24332:	032d      	lsls	r5, r5, #12
   24334:	2600      	movs	r6, #0
   24336:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
   2433a:	f36f 73df 	bfc	r3, #31, #1
   2433e:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
   24342:	e76e      	b.n	24222 <am_hal_mspi_control+0x72>
   24344:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24348:	3560      	adds	r5, #96	@ 0x60
   2434a:	032d      	lsls	r5, r5, #12
   2434c:	2600      	movs	r6, #0
   2434e:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
   24352:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
   24356:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
   2435a:	e762      	b.n	24222 <am_hal_mspi_control+0x72>
   2435c:	2f00      	cmp	r7, #0
   2435e:	f43f af64 	beq.w	2422a <am_hal_mspi_control+0x7a>
   24362:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24366:	3560      	adds	r5, #96	@ 0x60
   24368:	032d      	lsls	r5, r5, #12
   2436a:	783a      	ldrb	r2, [r7, #0]
   2436c:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
   24370:	f362 0383 	bfi	r3, r2, #2, #2
   24374:	2600      	movs	r6, #0
   24376:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
   2437a:	e752      	b.n	24222 <am_hal_mspi_control+0x72>
   2437c:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24380:	3560      	adds	r5, #96	@ 0x60
   24382:	032d      	lsls	r5, r5, #12
   24384:	2600      	movs	r6, #0
   24386:	f8d5 3088 	ldr.w	r3, [r5, #136]	@ 0x88
   2438a:	f36f 0300 	bfc	r3, #0, #1
   2438e:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
   24392:	e746      	b.n	24222 <am_hal_mspi_control+0x72>
   24394:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24398:	3560      	adds	r5, #96	@ 0x60
   2439a:	032d      	lsls	r5, r5, #12
   2439c:	2600      	movs	r6, #0
   2439e:	f8d5 3088 	ldr.w	r3, [r5, #136]	@ 0x88
   243a2:	f043 0301 	orr.w	r3, r3, #1
   243a6:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
   243aa:	e73a      	b.n	24222 <am_hal_mspi_control+0x72>
   243ac:	2f00      	cmp	r7, #0
   243ae:	f43f af3c 	beq.w	2422a <am_hal_mspi_control+0x7a>
   243b2:	f505 2380 	add.w	r3, r5, #262144	@ 0x40000
   243b6:	3360      	adds	r3, #96	@ 0x60
   243b8:	031b      	lsls	r3, r3, #12
   243ba:	7839      	ldrb	r1, [r7, #0]
   243bc:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   243c0:	f361 0282 	bfi	r2, r1, #2, #1
   243c4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   243c8:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   243cc:	7879      	ldrb	r1, [r7, #1]
   243ce:	f361 02c3 	bfi	r2, r1, #3, #1
   243d2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   243d6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   243da:	78b9      	ldrb	r1, [r7, #2]
   243dc:	f361 1204 	bfi	r2, r1, #4, #1
   243e0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   243e4:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   243e8:	78f9      	ldrb	r1, [r7, #3]
   243ea:	f361 1249 	bfi	r2, r1, #5, #5
   243ee:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   243f2:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   243f6:	7939      	ldrb	r1, [r7, #4]
   243f8:	f361 228e 	bfi	r2, r1, #10, #5
   243fc:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   24400:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   24404:	7979      	ldrb	r1, [r7, #5]
   24406:	f361 32d3 	bfi	r2, r1, #15, #5
   2440a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   2440e:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   24412:	79b9      	ldrb	r1, [r7, #6]
   24414:	f361 5214 	bfi	r2, r1, #20, #1
   24418:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   2441c:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   24420:	79f9      	ldrb	r1, [r7, #7]
   24422:	f361 5259 	bfi	r2, r1, #21, #5
   24426:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   2442a:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   2442e:	7a39      	ldrb	r1, [r7, #8]
   24430:	f361 629e 	bfi	r2, r1, #26, #5
   24434:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   24438:	7a79      	ldrb	r1, [r7, #9]
   2443a:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   2443e:	f361 72df 	bfi	r2, r1, #31, #1
   24442:	2600      	movs	r6, #0
   24444:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   24448:	e6eb      	b.n	24222 <am_hal_mspi_control+0x72>
   2444a:	bf00      	nop
   2444c:	01bebebe 	.word	0x01bebebe
   24450:	2f00      	cmp	r7, #0
   24452:	f43f aeea 	beq.w	2422a <am_hal_mspi_control+0x7a>
   24456:	f505 2380 	add.w	r3, r5, #262144	@ 0x40000
   2445a:	3360      	adds	r3, #96	@ 0x60
   2445c:	031b      	lsls	r3, r3, #12
   2445e:	7a79      	ldrb	r1, [r7, #9]
   24460:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   24464:	f361 0203 	bfi	r2, r1, #0, #4
   24468:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   2446c:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   24470:	7a39      	ldrb	r1, [r7, #8]
   24472:	f361 1204 	bfi	r2, r1, #4, #1
   24476:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   2447a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   2447e:	79f9      	ldrb	r1, [r7, #7]
   24480:	f361 1245 	bfi	r2, r1, #5, #1
   24484:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   24488:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   2448c:	79b9      	ldrb	r1, [r7, #6]
   2448e:	f361 12c7 	bfi	r2, r1, #7, #1
   24492:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   24496:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   2449a:	7979      	ldrb	r1, [r7, #5]
   2449c:	f361 2208 	bfi	r2, r1, #8, #1
   244a0:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   244a4:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   244a8:	7939      	ldrb	r1, [r7, #4]
   244aa:	f361 224a 	bfi	r2, r1, #9, #2
   244ae:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   244b2:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   244b6:	78f9      	ldrb	r1, [r7, #3]
   244b8:	f361 22cb 	bfi	r2, r1, #11, #1
   244bc:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   244c0:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   244c4:	78b9      	ldrb	r1, [r7, #2]
   244c6:	f361 320c 	bfi	r2, r1, #12, #1
   244ca:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   244ce:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   244d2:	7879      	ldrb	r1, [r7, #1]
   244d4:	f361 324d 	bfi	r2, r1, #13, #1
   244d8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   244dc:	7839      	ldrb	r1, [r7, #0]
   244de:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   244e2:	f361 3290 	bfi	r2, r1, #14, #3
   244e6:	2600      	movs	r6, #0
   244e8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   244ec:	e699      	b.n	24222 <am_hal_mspi_control+0x72>
   244ee:	2f00      	cmp	r7, #0
   244f0:	f43f ae9b 	beq.w	2422a <am_hal_mspi_control+0x7a>
   244f4:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   244f8:	3560      	adds	r5, #96	@ 0x60
   244fa:	032d      	lsls	r5, r5, #12
   244fc:	783a      	ldrb	r2, [r7, #0]
   244fe:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
   24502:	f362 6318 	bfi	r3, r2, #24, #1
   24506:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
   2450a:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
   2450e:	787a      	ldrb	r2, [r7, #1]
   24510:	f362 53d7 	bfi	r3, r2, #23, #1
   24514:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
   24518:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
   2451c:	78ba      	ldrb	r2, [r7, #2]
   2451e:	f362 5396 	bfi	r3, r2, #22, #1
   24522:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
   24526:	797b      	ldrb	r3, [r7, #5]
   24528:	f8d5 2084 	ldr.w	r2, [r5, #132]	@ 0x84
   2452c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
   24530:	f363 220d 	bfi	r2, r3, #8, #6
   24534:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
   24538:	f8d5 2090 	ldr.w	r2, [r5, #144]	@ 0x90
   2453c:	f363 3293 	bfi	r2, r3, #14, #6
   24540:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
   24544:	f8d5 3088 	ldr.w	r3, [r5, #136]	@ 0x88
   24548:	78fa      	ldrb	r2, [r7, #3]
   2454a:	f362 1349 	bfi	r3, r2, #5, #5
   2454e:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
   24552:	793a      	ldrb	r2, [r7, #4]
   24554:	f8d5 3088 	ldr.w	r3, [r5, #136]	@ 0x88
   24558:	f362 238e 	bfi	r3, r2, #10, #5
   2455c:	2600      	movs	r6, #0
   2455e:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
   24562:	e65e      	b.n	24222 <am_hal_mspi_control+0x72>
   24564:	2d01      	cmp	r5, #1
   24566:	68b9      	ldr	r1, [r7, #8]
   24568:	f000 843f 	beq.w	24dea <am_hal_mspi_control+0xc3a>
   2456c:	2d02      	cmp	r5, #2
   2456e:	f000 832e 	beq.w	24bce <am_hal_mspi_control+0xa1e>
   24572:	2d00      	cmp	r5, #0
   24574:	f000 8440 	beq.w	24df8 <am_hal_mspi_control+0xc48>
   24578:	7b3b      	ldrb	r3, [r7, #12]
   2457a:	7b7a      	ldrb	r2, [r7, #13]
   2457c:	8878      	ldrh	r0, [r7, #2]
   2457e:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24582:	011b      	lsls	r3, r3, #4
   24584:	f002 020f 	and.w	r2, r2, #15
   24588:	3560      	adds	r5, #96	@ 0x60
   2458a:	f003 0310 	and.w	r3, r3, #16
   2458e:	032d      	lsls	r5, r5, #12
   24590:	4313      	orrs	r3, r2
   24592:	4aaf      	ldr	r2, [pc, #700]	@ (24850 <am_hal_mspi_control+0x6a0>)
   24594:	400a      	ands	r2, r1
   24596:	f8d5 109c 	ldr.w	r1, [r5, #156]	@ 0x9c
   2459a:	f360 0109 	bfi	r1, r0, #0, #10
   2459e:	f8c5 109c 	str.w	r1, [r5, #156]	@ 0x9c
   245a2:	88f8      	ldrh	r0, [r7, #6]
   245a4:	f8d5 109c 	ldr.w	r1, [r5, #156]	@ 0x9c
   245a8:	4313      	orrs	r3, r2
   245aa:	f360 4119 	bfi	r1, r0, #16, #10
   245ae:	f8c5 109c 	str.w	r1, [r5, #156]	@ 0x9c
   245b2:	2600      	movs	r6, #0
   245b4:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
   245b8:	e633      	b.n	24222 <am_hal_mspi_control+0x72>
   245ba:	2f00      	cmp	r7, #0
   245bc:	f43f ae35 	beq.w	2422a <am_hal_mspi_control+0x7a>
   245c0:	79fb      	ldrb	r3, [r7, #7]
   245c2:	79b9      	ldrb	r1, [r7, #6]
   245c4:	683a      	ldr	r2, [r7, #0]
   245c6:	039b      	lsls	r3, r3, #14
   245c8:	ea43 5341 	orr.w	r3, r3, r1, lsl #21
   245cc:	f3c2 020b 	ubfx	r2, r2, #0, #12
   245d0:	4313      	orrs	r3, r2
   245d2:	7a3a      	ldrb	r2, [r7, #8]
   245d4:	7979      	ldrb	r1, [r7, #5]
   245d6:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   245da:	0352      	lsls	r2, r2, #13
   245dc:	3560      	adds	r5, #96	@ 0x60
   245de:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
   245e2:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
   245e6:	032d      	lsls	r5, r5, #12
   245e8:	4313      	orrs	r3, r2
   245ea:	f8c5 30a0 	str.w	r3, [r5, #160]	@ 0xa0
   245ee:	2600      	movs	r6, #0
   245f0:	e617      	b.n	24222 <am_hal_mspi_control+0x72>
   245f2:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   245f6:	3560      	adds	r5, #96	@ 0x60
   245f8:	032d      	lsls	r5, r5, #12
   245fa:	2100      	movs	r1, #0
   245fc:	2001      	movs	r0, #1
   245fe:	f7fe fb0d 	bl	22c1c <am_hal_daxi_control>
   24602:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
   24606:	f36f 0300 	bfc	r3, #0, #1
   2460a:	2600      	movs	r6, #0
   2460c:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
   24610:	e607      	b.n	24222 <am_hal_mspi_control+0x72>
   24612:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24616:	3560      	adds	r5, #96	@ 0x60
   24618:	032d      	lsls	r5, r5, #12
   2461a:	2600      	movs	r6, #0
   2461c:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
   24620:	f043 0301 	orr.w	r3, r3, #1
   24624:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
   24628:	e5fb      	b.n	24222 <am_hal_mspi_control+0x72>
   2462a:	f505 2380 	add.w	r3, r5, #262144	@ 0x40000
   2462e:	3360      	adds	r3, #96	@ 0x60
   24630:	031b      	lsls	r3, r3, #12
   24632:	2101      	movs	r1, #1
   24634:	681a      	ldr	r2, [r3, #0]
   24636:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
   2463a:	601a      	str	r2, [r3, #0]
   2463c:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
   24640:	f042 0210 	orr.w	r2, r2, #16
   24644:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
   24648:	2600      	movs	r6, #0
   2464a:	7341      	strb	r1, [r0, #13]
   2464c:	e5e9      	b.n	24222 <am_hal_mspi_control+0x72>
   2464e:	f505 2380 	add.w	r3, r5, #262144	@ 0x40000
   24652:	3360      	adds	r3, #96	@ 0x60
   24654:	031b      	lsls	r3, r3, #12
   24656:	2200      	movs	r2, #0
   24658:	6819      	ldr	r1, [r3, #0]
   2465a:	f36f 2108 	bfc	r1, #8, #1
   2465e:	6019      	str	r1, [r3, #0]
   24660:	f8d3 1090 	ldr.w	r1, [r3, #144]	@ 0x90
   24664:	f36f 1104 	bfc	r1, #4, #1
   24668:	f8c3 1090 	str.w	r1, [r3, #144]	@ 0x90
   2466c:	4616      	mov	r6, r2
   2466e:	7342      	strb	r2, [r0, #13]
   24670:	e5d7      	b.n	24222 <am_hal_mspi_control+0x72>
   24672:	2f00      	cmp	r7, #0
   24674:	f43f add9 	beq.w	2422a <am_hal_mspi_control+0x7a>
   24678:	783b      	ldrb	r3, [r7, #0]
   2467a:	72c3      	strb	r3, [r0, #11]
   2467c:	2b19      	cmp	r3, #25
   2467e:	f200 8288 	bhi.w	24b92 <am_hal_mspi_control+0x9e2>
   24682:	e8df f013 	tbh	[pc, r3, lsl #1]
   24686:	02ad      	.short	0x02ad
   24688:	02ad02ad 	.word	0x02ad02ad
   2468c:	02ad02ad 	.word	0x02ad02ad
   24690:	02ad02ad 	.word	0x02ad02ad
   24694:	02ad02ad 	.word	0x02ad02ad
   24698:	02ad02ad 	.word	0x02ad02ad
   2469c:	036702ad 	.word	0x036702ad
   246a0:	034f0367 	.word	0x034f0367
   246a4:	0343034f 	.word	0x0343034f
   246a8:	03370343 	.word	0x03370343
   246ac:	02ad0337 	.word	0x02ad0337
   246b0:	032b02ad 	.word	0x032b02ad
   246b4:	035b032b 	.word	0x035b032b
   246b8:	035b      	.short	0x035b
   246ba:	2f00      	cmp	r7, #0
   246bc:	f43f adb5 	beq.w	2422a <am_hal_mspi_control+0x7a>
   246c0:	783b      	ldrb	r3, [r7, #0]
   246c2:	7283      	strb	r3, [r0, #10]
   246c4:	f7ff f8c4 	bl	23850 <mspi_device_configure.isra.0>
   246c8:	2600      	movs	r6, #0
   246ca:	e5aa      	b.n	24222 <am_hal_mspi_control+0x72>
   246cc:	f505 2380 	add.w	r3, r5, #262144	@ 0x40000
   246d0:	3360      	adds	r3, #96	@ 0x60
   246d2:	031b      	lsls	r3, r3, #12
   246d4:	7838      	ldrb	r0, [r7, #0]
   246d6:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
   246da:	1e42      	subs	r2, r0, #1
   246dc:	f360 4115 	bfi	r1, r0, #16, #6
   246e0:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
   246e4:	2a1f      	cmp	r2, #31
   246e6:	f200 8278 	bhi.w	24bda <am_hal_mspi_control+0xa2a>
   246ea:	e8df f012 	tbh	[pc, r2, lsl #1]
   246ee:	033f      	.short	0x033f
   246f0:	02840284 	.word	0x02840284
   246f4:	02760284 	.word	0x02760284
   246f8:	02760284 	.word	0x02760284
   246fc:	02760284 	.word	0x02760284
   24700:	02760276 	.word	0x02760276
   24704:	02760284 	.word	0x02760284
   24708:	02760276 	.word	0x02760276
   2470c:	02760284 	.word	0x02760284
   24710:	02760276 	.word	0x02760276
   24714:	02760276 	.word	0x02760276
   24718:	02760276 	.word	0x02760276
   2471c:	02760284 	.word	0x02760284
   24720:	02760276 	.word	0x02760276
   24724:	02760276 	.word	0x02760276
   24728:	02760276 	.word	0x02760276
   2472c:	0284      	.short	0x0284
   2472e:	f505 2180 	add.w	r1, r5, #262144	@ 0x40000
   24732:	3160      	adds	r1, #96	@ 0x60
   24734:	0309      	lsls	r1, r1, #12
   24736:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
   2473a:	f8c1 32b4 	str.w	r3, [r1, #692]	@ 0x2b4
   2473e:	f8d1 32a0 	ldr.w	r3, [r1, #672]	@ 0x2a0
   24742:	07db      	lsls	r3, r3, #31
   24744:	d518      	bpl.n	24778 <am_hal_mspi_control+0x5c8>
   24746:	4d43      	ldr	r5, [pc, #268]	@ (24854 <am_hal_mspi_control+0x6a4>)
   24748:	f8d1 32ac 	ldr.w	r3, [r1, #684]	@ 0x2ac
   2474c:	071f      	lsls	r7, r3, #28
   2474e:	f04f 0001 	mov.w	r0, #1
   24752:	d503      	bpl.n	2475c <am_hal_mspi_control+0x5ac>
   24754:	f8d1 32b8 	ldr.w	r3, [r1, #696]	@ 0x2b8
   24758:	061e      	lsls	r6, r3, #24
   2475a:	d40d      	bmi.n	24778 <am_hal_mspi_control+0x5c8>
   2475c:	3d01      	subs	r5, #1
   2475e:	f000 8352 	beq.w	24e06 <am_hal_mspi_control+0xc56>
   24762:	f001 fcbd 	bl	260e0 <am_hal_delay_us>
   24766:	6861      	ldr	r1, [r4, #4]
   24768:	f501 2180 	add.w	r1, r1, #262144	@ 0x40000
   2476c:	3160      	adds	r1, #96	@ 0x60
   2476e:	0309      	lsls	r1, r1, #12
   24770:	f8d1 32a0 	ldr.w	r3, [r1, #672]	@ 0x2a0
   24774:	07d8      	lsls	r0, r3, #31
   24776:	d4e7      	bmi.n	24748 <am_hal_mspi_control+0x598>
   24778:	2201      	movs	r2, #1
   2477a:	4837      	ldr	r0, [pc, #220]	@ (24858 <am_hal_mspi_control+0x6a8>)
   2477c:	9200      	str	r2, [sp, #0]
   2477e:	2300      	movs	r3, #0
   24780:	f501 7182 	add.w	r1, r1, #260	@ 0x104
   24784:	f001 fcf0 	bl	26168 <am_hal_delay_us_status_check>
   24788:	4606      	mov	r6, r0
   2478a:	e54a      	b.n	24222 <am_hal_mspi_control+0x72>
   2478c:	f890 18c0 	ldrb.w	r1, [r0, #2240]	@ 0x8c0
   24790:	2900      	cmp	r1, #0
   24792:	f000 8326 	beq.w	24de2 <am_hal_mspi_control+0xc32>
   24796:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   2479a:	3560      	adds	r5, #96	@ 0x60
   2479c:	032d      	lsls	r5, r5, #12
   2479e:	2380      	movs	r3, #128	@ 0x80
   247a0:	f8c5 32b4 	str.w	r3, [r5, #692]	@ 0x2b4
   247a4:	2600      	movs	r6, #0
   247a6:	e53c      	b.n	24222 <am_hal_mspi_control+0x72>
   247a8:	2f00      	cmp	r7, #0
   247aa:	f43f ad3e 	beq.w	2422a <am_hal_mspi_control+0x7a>
   247ae:	6983      	ldr	r3, [r0, #24]
   247b0:	2b00      	cmp	r3, #0
   247b2:	f43f ad43 	beq.w	2423c <am_hal_mspi_control+0x8c>
   247b6:	783f      	ldrb	r7, [r7, #0]
   247b8:	f890 382c 	ldrb.w	r3, [r0, #2092]	@ 0x82c
   247bc:	42bb      	cmp	r3, r7
   247be:	f000 81e8 	beq.w	24b92 <am_hal_mspi_control+0x9e2>
   247c2:	2b00      	cmp	r3, #0
   247c4:	f43f ad36 	beq.w	24234 <am_hal_mspi_control+0x84>
   247c8:	2b02      	cmp	r3, #2
   247ca:	d130      	bne.n	2482e <am_hal_mspi_control+0x67e>
   247cc:	f505 2180 	add.w	r1, r5, #262144	@ 0x40000
   247d0:	3160      	adds	r1, #96	@ 0x60
   247d2:	0309      	lsls	r1, r1, #12
   247d4:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
   247d8:	f8c1 32b4 	str.w	r3, [r1, #692]	@ 0x2b4
   247dc:	f8d1 32a0 	ldr.w	r3, [r1, #672]	@ 0x2a0
   247e0:	07da      	lsls	r2, r3, #31
   247e2:	d518      	bpl.n	24816 <am_hal_mspi_control+0x666>
   247e4:	4d1b      	ldr	r5, [pc, #108]	@ (24854 <am_hal_mspi_control+0x6a4>)
   247e6:	f8d1 32ac 	ldr.w	r3, [r1, #684]	@ 0x2ac
   247ea:	071b      	lsls	r3, r3, #28
   247ec:	f04f 0001 	mov.w	r0, #1
   247f0:	d503      	bpl.n	247fa <am_hal_mspi_control+0x64a>
   247f2:	f8d1 32b8 	ldr.w	r3, [r1, #696]	@ 0x2b8
   247f6:	061e      	lsls	r6, r3, #24
   247f8:	d40d      	bmi.n	24816 <am_hal_mspi_control+0x666>
   247fa:	3d01      	subs	r5, #1
   247fc:	f000 8303 	beq.w	24e06 <am_hal_mspi_control+0xc56>
   24800:	f001 fc6e 	bl	260e0 <am_hal_delay_us>
   24804:	6861      	ldr	r1, [r4, #4]
   24806:	f501 2180 	add.w	r1, r1, #262144	@ 0x40000
   2480a:	3160      	adds	r1, #96	@ 0x60
   2480c:	0309      	lsls	r1, r1, #12
   2480e:	f8d1 32a0 	ldr.w	r3, [r1, #672]	@ 0x2a0
   24812:	07d8      	lsls	r0, r3, #31
   24814:	d4e7      	bmi.n	247e6 <am_hal_mspi_control+0x636>
   24816:	2201      	movs	r2, #1
   24818:	480f      	ldr	r0, [pc, #60]	@ (24858 <am_hal_mspi_control+0x6a8>)
   2481a:	9200      	str	r2, [sp, #0]
   2481c:	2300      	movs	r3, #0
   2481e:	f501 7182 	add.w	r1, r1, #260	@ 0x104
   24822:	f001 fca1 	bl	26168 <am_hal_delay_us_status_check>
   24826:	4606      	mov	r6, r0
   24828:	2800      	cmp	r0, #0
   2482a:	f47f acfa 	bne.w	24222 <am_hal_mspi_control+0x72>
   2482e:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   24832:	f002 fe6f 	bl	27514 <am_hal_cmdq_reset>
   24836:	2600      	movs	r6, #0
   24838:	2301      	movs	r3, #1
   2483a:	61e6      	str	r6, [r4, #28]
   2483c:	f8c4 6830 	str.w	r6, [r4, #2096]	@ 0x830
   24840:	6226      	str	r6, [r4, #32]
   24842:	f884 782c 	strb.w	r7, [r4, #2092]	@ 0x82c
   24846:	f884 382d 	strb.w	r3, [r4, #2093]	@ 0x82d
   2484a:	f8c4 685c 	str.w	r6, [r4, #2140]	@ 0x85c
   2484e:	e4e8      	b.n	24222 <am_hal_mspi_control+0x72>
   24850:	03ff0000 	.word	0x03ff0000
   24854:	000186a1 	.word	0x000186a1
   24858:	000186a0 	.word	0x000186a0
   2485c:	2f00      	cmp	r7, #0
   2485e:	f43f ace4 	beq.w	2422a <am_hal_mspi_control+0x7a>
   24862:	687b      	ldr	r3, [r7, #4]
   24864:	f013 0fe0 	tst.w	r3, #224	@ 0xe0
   24868:	f47f acdf 	bne.w	2422a <am_hal_mspi_control+0x7a>
   2486c:	68bb      	ldr	r3, [r7, #8]
   2486e:	f003 38e0 	and.w	r8, r3, #3772834016	@ 0xe0e0e0e0
   24872:	f028 4860 	bic.w	r8, r8, #3758096384	@ 0xe0000000
   24876:	f1b8 0f00 	cmp.w	r8, #0
   2487a:	f47f acd6 	bne.w	2422a <am_hal_mspi_control+0x7a>
   2487e:	f890 082c 	ldrb.w	r0, [r0, #2092]	@ 0x82c
   24882:	2801      	cmp	r0, #1
   24884:	f47f acda 	bne.w	2423c <am_hal_mspi_control+0x8c>
   24888:	f8d4 3838 	ldr.w	r3, [r4, #2104]	@ 0x838
   2488c:	b16b      	cbz	r3, 248aa <am_hal_mspi_control+0x6fa>
   2488e:	f894 38c0 	ldrb.w	r3, [r4, #2240]	@ 0x8c0
   24892:	f8c4 8838 	str.w	r8, [r4, #2104]	@ 0x838
   24896:	2b00      	cmp	r3, #0
   24898:	f000 8337 	beq.w	24f0a <am_hal_mspi_control+0xd5a>
   2489c:	f505 2380 	add.w	r3, r5, #262144	@ 0x40000
   248a0:	3360      	adds	r3, #96	@ 0x60
   248a2:	031b      	lsls	r3, r3, #12
   248a4:	2220      	movs	r2, #32
   248a6:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
   248aa:	783b      	ldrb	r3, [r7, #0]
   248ac:	b123      	cbz	r3, 248b8 <am_hal_mspi_control+0x708>
   248ae:	f894 382d 	ldrb.w	r3, [r4, #2093]	@ 0x82d
   248b2:	2b00      	cmp	r3, #0
   248b4:	f000 82f5 	beq.w	24ea2 <am_hal_mspi_control+0xcf2>
   248b8:	f04f 0900 	mov.w	r9, #0
   248bc:	f10d 0b0c 	add.w	fp, sp, #12
   248c0:	f10d 0a08 	add.w	sl, sp, #8
   248c4:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   248c8:	465b      	mov	r3, fp
   248ca:	4652      	mov	r2, sl
   248cc:	2103      	movs	r1, #3
   248ce:	f002 fcd3 	bl	27278 <am_hal_cmdq_alloc_block>
   248d2:	4606      	mov	r6, r0
   248d4:	2800      	cmp	r0, #0
   248d6:	f47f aca4 	bne.w	24222 <am_hal_mspi_control+0x72>
   248da:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   248de:	f8d4 1838 	ldr.w	r1, [r4, #2104]	@ 0x838
   248e2:	687b      	ldr	r3, [r7, #4]
   248e4:	9a02      	ldr	r2, [sp, #8]
   248e6:	3560      	adds	r5, #96	@ 0x60
   248e8:	032d      	lsls	r5, r5, #12
   248ea:	f505 702e 	add.w	r0, r5, #696	@ 0x2b8
   248ee:	2901      	cmp	r1, #1
   248f0:	f505 752d 	add.w	r5, r5, #692	@ 0x2b4
   248f4:	ea48 0303 	orr.w	r3, r8, r3
   248f8:	6115      	str	r5, [r2, #16]
   248fa:	6090      	str	r0, [r2, #8]
   248fc:	6010      	str	r0, [r2, #0]
   248fe:	f000 8308 	beq.w	24f12 <am_hal_mspi_control+0xd62>
   24902:	2902      	cmp	r1, #2
   24904:	f000 82ca 	beq.w	24e9c <am_hal_mspi_control+0xcec>
   24908:	f443 4381 	orr.w	r3, r3, #16512	@ 0x4080
   2490c:	6053      	str	r3, [r2, #4]
   2490e:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
   24912:	60d3      	str	r3, [r2, #12]
   24914:	68bb      	ldr	r3, [r7, #8]
   24916:	ea43 0309 	orr.w	r3, r3, r9
   2491a:	6153      	str	r3, [r2, #20]
   2491c:	f7fe fa22 	bl	22d64 <am_hal_interrupt_master_disable>
   24920:	7839      	ldrb	r1, [r7, #0]
   24922:	4605      	mov	r5, r0
   24924:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   24928:	2900      	cmp	r1, #0
   2492a:	f000 82b3 	beq.w	24e94 <am_hal_mspi_control+0xce4>
   2492e:	2100      	movs	r1, #0
   24930:	f002 fe1e 	bl	27570 <am_hal_cmdq_post_loop_block>
   24934:	4606      	mov	r6, r0
   24936:	2e00      	cmp	r6, #0
   24938:	f040 826b 	bne.w	24e12 <am_hal_mspi_control+0xc62>
   2493c:	783b      	ldrb	r3, [r7, #0]
   2493e:	6a27      	ldr	r7, [r4, #32]
   24940:	2b00      	cmp	r3, #0
   24942:	f107 0301 	add.w	r3, r7, #1
   24946:	6223      	str	r3, [r4, #32]
   24948:	bf14      	ite	ne
   2494a:	2302      	movne	r3, #2
   2494c:	2300      	moveq	r3, #0
   2494e:	4628      	mov	r0, r5
   24950:	f884 382c 	strb.w	r3, [r4, #2092]	@ 0x82c
   24954:	f7fe fa0a 	bl	22d6c <am_hal_interrupt_master_set>
   24958:	2f00      	cmp	r7, #0
   2495a:	f47f ac62 	bne.w	24222 <am_hal_mspi_control+0x72>
   2495e:	6860      	ldr	r0, [r4, #4]
   24960:	301b      	adds	r0, #27
   24962:	f001 fc3f 	bl	261e4 <am_gpu_power_enable>
   24966:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   2496a:	f002 fc3d 	bl	271e8 <am_hal_cmdq_enable>
   2496e:	4606      	mov	r6, r0
   24970:	e457      	b.n	24222 <am_hal_mspi_control+0x72>
   24972:	2f00      	cmp	r7, #0
   24974:	f43f ac59 	beq.w	2422a <am_hal_mspi_control+0x7a>
   24978:	f8d0 0828 	ldr.w	r0, [r0, #2088]	@ 0x828
   2497c:	2800      	cmp	r0, #0
   2497e:	f43f ac5d 	beq.w	2423c <am_hal_mspi_control+0x8c>
   24982:	6a23      	ldr	r3, [r4, #32]
   24984:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
   24988:	f000 8127 	beq.w	24bda <am_hal_mspi_control+0xa2a>
   2498c:	68f9      	ldr	r1, [r7, #12]
   2498e:	ab03      	add	r3, sp, #12
   24990:	3103      	adds	r1, #3
   24992:	aa02      	add	r2, sp, #8
   24994:	f002 fc70 	bl	27278 <am_hal_cmdq_alloc_block>
   24998:	2800      	cmp	r0, #0
   2499a:	f040 811e 	bne.w	24bda <am_hal_mspi_control+0xa2a>
   2499e:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   249a2:	f8d4 1838 	ldr.w	r1, [r4, #2104]	@ 0x838
   249a6:	9b02      	ldr	r3, [sp, #8]
   249a8:	683a      	ldr	r2, [r7, #0]
   249aa:	3560      	adds	r5, #96	@ 0x60
   249ac:	ea4f 3c05 	mov.w	ip, r5, lsl #12
   249b0:	f50c 782e 	add.w	r8, ip, #696	@ 0x2b8
   249b4:	2901      	cmp	r1, #1
   249b6:	f8c3 8000 	str.w	r8, [r3]
   249ba:	f000 8247 	beq.w	24e4c <am_hal_mspi_control+0xc9c>
   249be:	2902      	cmp	r1, #2
   249c0:	f000 8224 	beq.w	24e0c <am_hal_mspi_control+0xc5c>
   249c4:	f442 4281 	orr.w	r2, r2, #16512	@ 0x4080
   249c8:	f8d7 e00c 	ldr.w	lr, [r7, #12]
   249cc:	605a      	str	r2, [r3, #4]
   249ce:	f103 0608 	add.w	r6, r3, #8
   249d2:	9602      	str	r6, [sp, #8]
   249d4:	f1be 0f00 	cmp.w	lr, #0
   249d8:	d018      	beq.n	24a0c <am_hal_mspi_control+0x85c>
   249da:	68ba      	ldr	r2, [r7, #8]
   249dc:	ea46 0102 	orr.w	r1, r6, r2
   249e0:	0749      	lsls	r1, r1, #29
   249e2:	f040 8247 	bne.w	24e74 <am_hal_mspi_control+0xcc4>
   249e6:	f10e 31ff 	add.w	r1, lr, #4294967295
   249ea:	2904      	cmp	r1, #4
   249ec:	f240 8242 	bls.w	24e74 <am_hal_mspi_control+0xcc4>
   249f0:	f10e 0501 	add.w	r5, lr, #1
   249f4:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
   249f8:	3a08      	subs	r2, #8
   249fa:	4633      	mov	r3, r6
   249fc:	e9f2 0102 	ldrd	r0, r1, [r2, #8]!
   24a00:	e8e3 0102 	strd	r0, r1, [r3], #8
   24a04:	42ab      	cmp	r3, r5
   24a06:	d1f9      	bne.n	249fc <am_hal_mspi_control+0x84c>
   24a08:	eb06 06ce 	add.w	r6, r6, lr, lsl #3
   24a0c:	69bb      	ldr	r3, [r7, #24]
   24a0e:	b103      	cbz	r3, 24a12 <am_hal_mspi_control+0x862>
   24a10:	601e      	str	r6, [r3, #0]
   24a12:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
   24a16:	6072      	str	r2, [r6, #4]
   24a18:	f106 0208 	add.w	r2, r6, #8
   24a1c:	f8c6 8000 	str.w	r8, [r6]
   24a20:	9202      	str	r2, [sp, #8]
   24a22:	f8d7 8010 	ldr.w	r8, [r7, #16]
   24a26:	687a      	ldr	r2, [r7, #4]
   24a28:	f50c 732d 	add.w	r3, ip, #692	@ 0x2b4
   24a2c:	e9c6 3202 	strd	r3, r2, [r6, #8]
   24a30:	f1b8 0f00 	cmp.w	r8, #0
   24a34:	f000 81f6 	beq.w	24e24 <am_hal_mspi_control+0xc74>
   24a38:	f89d 300c 	ldrb.w	r3, [sp, #12]
   24a3c:	697a      	ldr	r2, [r7, #20]
   24a3e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
   24a42:	f8c3 8028 	str.w	r8, [r3, #40]	@ 0x28
   24a46:	f8c3 2428 	str.w	r2, [r3, #1064]	@ 0x428
   24a4a:	f7fe f98b 	bl	22d64 <am_hal_interrupt_master_disable>
   24a4e:	f1b8 0100 	subs.w	r1, r8, #0
   24a52:	bf18      	it	ne
   24a54:	2101      	movne	r1, #1
   24a56:	4605      	mov	r5, r0
   24a58:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   24a5c:	f002 fc8c 	bl	27378 <am_hal_cmdq_post_block>
   24a60:	4606      	mov	r6, r0
   24a62:	2800      	cmp	r0, #0
   24a64:	f040 81d5 	bne.w	24e12 <am_hal_mspi_control+0xc62>
   24a68:	f8d4 3830 	ldr.w	r3, [r4, #2096]	@ 0x830
   24a6c:	693a      	ldr	r2, [r7, #16]
   24a6e:	6a27      	ldr	r7, [r4, #32]
   24a70:	3301      	adds	r3, #1
   24a72:	f8c4 3830 	str.w	r3, [r4, #2096]	@ 0x830
   24a76:	1c7b      	adds	r3, r7, #1
   24a78:	6223      	str	r3, [r4, #32]
   24a7a:	2a00      	cmp	r2, #0
   24a7c:	f000 81f4 	beq.w	24e68 <am_hal_mspi_control+0xcb8>
   24a80:	f884 082d 	strb.w	r0, [r4, #2093]	@ 0x82d
   24a84:	f8c4 085c 	str.w	r0, [r4, #2140]	@ 0x85c
   24a88:	4628      	mov	r0, r5
   24a8a:	f7fe f96f 	bl	22d6c <am_hal_interrupt_master_set>
   24a8e:	2f00      	cmp	r7, #0
   24a90:	f47f abc7 	bne.w	24222 <am_hal_mspi_control+0x72>
   24a94:	6860      	ldr	r0, [r4, #4]
   24a96:	301b      	adds	r0, #27
   24a98:	f001 fba4 	bl	261e4 <am_gpu_power_enable>
   24a9c:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   24aa0:	f002 fba2 	bl	271e8 <am_hal_cmdq_enable>
   24aa4:	2800      	cmp	r0, #0
   24aa6:	bf18      	it	ne
   24aa8:	4606      	movne	r6, r0
   24aaa:	f7ff bbba 	b.w	24222 <am_hal_mspi_control+0x72>
   24aae:	2f00      	cmp	r7, #0
   24ab0:	f43f abbb 	beq.w	2422a <am_hal_mspi_control+0x7a>
   24ab4:	783a      	ldrb	r2, [r7, #0]
   24ab6:	2a03      	cmp	r2, #3
   24ab8:	f63f abb7 	bhi.w	2422a <am_hal_mspi_control+0x7a>
   24abc:	7879      	ldrb	r1, [r7, #1]
   24abe:	2901      	cmp	r1, #1
   24ac0:	f63f abb3 	bhi.w	2422a <am_hal_mspi_control+0x7a>
   24ac4:	f505 2380 	add.w	r3, r5, #262144	@ 0x40000
   24ac8:	3360      	adds	r3, #96	@ 0x60
   24aca:	031b      	lsls	r3, r3, #12
   24acc:	2600      	movs	r6, #0
   24ace:	f8d3 0084 	ldr.w	r0, [r3, #132]	@ 0x84
   24ad2:	f361 10c7 	bfi	r0, r1, #7, #1
   24ad6:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84
   24ada:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
   24ade:	f362 1146 	bfi	r1, r2, #5, #2
   24ae2:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
   24ae6:	f7ff bb9c 	b.w	24222 <am_hal_mspi_control+0x72>
   24aea:	4bdc      	ldr	r3, [pc, #880]	@ (24e5c <am_hal_mspi_control+0xcac>)
   24aec:	681b      	ldr	r3, [r3, #0]
   24aee:	0e1b      	lsrs	r3, r3, #24
   24af0:	2b09      	cmp	r3, #9
   24af2:	d10d      	bne.n	24b10 <am_hal_mspi_control+0x960>
   24af4:	f505 2380 	add.w	r3, r5, #262144	@ 0x40000
   24af8:	3360      	adds	r3, #96	@ 0x60
   24afa:	031b      	lsls	r3, r3, #12
   24afc:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
   24b00:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
   24b04:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
   24b08:	681a      	ldr	r2, [r3, #0]
   24b0a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
   24b0e:	601a      	str	r2, [r3, #0]
   24b10:	2301      	movs	r3, #1
   24b12:	73a3      	strb	r3, [r4, #14]
   24b14:	2600      	movs	r6, #0
   24b16:	f7ff bb84 	b.w	24222 <am_hal_mspi_control+0x72>
   24b1a:	4bd0      	ldr	r3, [pc, #832]	@ (24e5c <am_hal_mspi_control+0xcac>)
   24b1c:	681b      	ldr	r3, [r3, #0]
   24b1e:	0e1b      	lsrs	r3, r3, #24
   24b20:	2b09      	cmp	r3, #9
   24b22:	d10d      	bne.n	24b40 <am_hal_mspi_control+0x990>
   24b24:	f505 2380 	add.w	r3, r5, #262144	@ 0x40000
   24b28:	3360      	adds	r3, #96	@ 0x60
   24b2a:	031b      	lsls	r3, r3, #12
   24b2c:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
   24b30:	f36f 629a 	bfc	r2, #26, #1
   24b34:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
   24b38:	681a      	ldr	r2, [r3, #0]
   24b3a:	f36f 324d 	bfc	r2, #13, #1
   24b3e:	601a      	str	r2, [r3, #0]
   24b40:	2600      	movs	r6, #0
   24b42:	73a6      	strb	r6, [r4, #14]
   24b44:	f7ff bb6d 	b.w	24222 <am_hal_mspi_control+0x72>
   24b48:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24b4c:	3560      	adds	r5, #96	@ 0x60
   24b4e:	032d      	lsls	r5, r5, #12
   24b50:	2300      	movs	r3, #0
   24b52:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
   24b56:	2201      	movs	r2, #1
   24b58:	f8c5 12b4 	str.w	r1, [r5, #692]	@ 0x2b4
   24b5c:	461e      	mov	r6, r3
   24b5e:	f8c0 2838 	str.w	r2, [r0, #2104]	@ 0x838
   24b62:	f8c0 3844 	str.w	r3, [r0, #2116]	@ 0x844
   24b66:	f7ff bb5c 	b.w	24222 <am_hal_mspi_control+0x72>
   24b6a:	f890 18c0 	ldrb.w	r1, [r0, #2240]	@ 0x8c0
   24b6e:	2900      	cmp	r1, #0
   24b70:	f000 8128 	beq.w	24dc4 <am_hal_mspi_control+0xc14>
   24b74:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24b78:	3560      	adds	r5, #96	@ 0x60
   24b7a:	f8d4 1844 	ldr.w	r1, [r4, #2116]	@ 0x844
   24b7e:	032d      	lsls	r5, r5, #12
   24b80:	2220      	movs	r2, #32
   24b82:	2300      	movs	r3, #0
   24b84:	f8c5 22b4 	str.w	r2, [r5, #692]	@ 0x2b4
   24b88:	f8c4 3838 	str.w	r3, [r4, #2104]	@ 0x838
   24b8c:	2900      	cmp	r1, #0
   24b8e:	f000 811d 	beq.w	24dcc <am_hal_mspi_control+0xc1c>
   24b92:	2600      	movs	r6, #0
   24b94:	f7ff bb45 	b.w	24222 <am_hal_mspi_control+0x72>
   24b98:	2f00      	cmp	r7, #0
   24b9a:	f43f ab46 	beq.w	2422a <am_hal_mspi_control+0x7a>
   24b9e:	f8d0 6854 	ldr.w	r6, [r0, #2132]	@ 0x854
   24ba2:	2e00      	cmp	r6, #0
   24ba4:	f47f ab4a 	bne.w	2423c <am_hal_mspi_control+0x8c>
   24ba8:	687b      	ldr	r3, [r7, #4]
   24baa:	49ad      	ldr	r1, [pc, #692]	@ (24e60 <am_hal_mspi_control+0xcb0>)
   24bac:	683a      	ldr	r2, [r7, #0]
   24bae:	f8c0 2854 	str.w	r2, [r0, #2132]	@ 0x854
   24bb2:	fba1 1303 	umull	r1, r3, r1, r3
   24bb6:	091b      	lsrs	r3, r3, #4
   24bb8:	2101      	movs	r1, #1
   24bba:	f8c0 6850 	str.w	r6, [r0, #2128]	@ 0x850
   24bbe:	f8c0 6840 	str.w	r6, [r0, #2112]	@ 0x840
   24bc2:	f8c0 184c 	str.w	r1, [r0, #2124]	@ 0x84c
   24bc6:	f8c0 3848 	str.w	r3, [r0, #2120]	@ 0x848
   24bca:	f7ff bb2a 	b.w	24222 <am_hal_mspi_control+0x72>
   24bce:	f101 4364 	add.w	r3, r1, #3825205248	@ 0xe4000000
   24bd2:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
   24bd6:	f4ff accf 	bcc.w	24578 <am_hal_mspi_control+0x3c8>
   24bda:	2605      	movs	r6, #5
   24bdc:	f7ff bb21 	b.w	24222 <am_hal_mspi_control+0x72>
   24be0:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24be4:	3560      	adds	r5, #96	@ 0x60
   24be6:	032d      	lsls	r5, r5, #12
   24be8:	2600      	movs	r6, #0
   24bea:	686b      	ldr	r3, [r5, #4]
   24bec:	f36f 0303 	bfc	r3, #0, #4
   24bf0:	606b      	str	r3, [r5, #4]
   24bf2:	f7ff bb16 	b.w	24222 <am_hal_mspi_control+0x72>
   24bf6:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   24bfa:	f36f 6218 	bfc	r2, #24, #1
   24bfe:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   24c02:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   24c06:	f36f 52d7 	bfc	r2, #23, #1
   24c0a:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   24c0e:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   24c12:	f36f 5296 	bfc	r2, #22, #1
   24c16:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   24c1a:	69a2      	ldr	r2, [r4, #24]
   24c1c:	2a00      	cmp	r2, #0
   24c1e:	d059      	beq.n	24cd4 <am_hal_mspi_control+0xb24>
   24c20:	2120      	movs	r1, #32
   24c22:	1e82      	subs	r2, r0, #2
   24c24:	f8c3 1114 	str.w	r1, [r3, #276]	@ 0x114
   24c28:	2a1e      	cmp	r2, #30
   24c2a:	d8d6      	bhi.n	24bda <am_hal_mspi_control+0xa2a>
   24c2c:	a101      	add	r1, pc, #4	@ (adr r1, 24c34 <am_hal_mspi_control+0xa84>)
   24c2e:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
   24c32:	bf00      	nop
   24c34:	00024d9d 	.word	0x00024d9d
   24c38:	00024cb1 	.word	0x00024cb1
   24c3c:	00024cb1 	.word	0x00024cb1
   24c40:	00024bdb 	.word	0x00024bdb
   24c44:	00024cb1 	.word	0x00024cb1
   24c48:	00024bdb 	.word	0x00024bdb
   24c4c:	00024cb1 	.word	0x00024cb1
   24c50:	00024bdb 	.word	0x00024bdb
   24c54:	00024bdb 	.word	0x00024bdb
   24c58:	00024bdb 	.word	0x00024bdb
   24c5c:	00024cb1 	.word	0x00024cb1
   24c60:	00024bdb 	.word	0x00024bdb
   24c64:	00024bdb 	.word	0x00024bdb
   24c68:	00024bdb 	.word	0x00024bdb
   24c6c:	00024cb1 	.word	0x00024cb1
   24c70:	00024bdb 	.word	0x00024bdb
   24c74:	00024bdb 	.word	0x00024bdb
   24c78:	00024bdb 	.word	0x00024bdb
   24c7c:	00024bdb 	.word	0x00024bdb
   24c80:	00024bdb 	.word	0x00024bdb
   24c84:	00024bdb 	.word	0x00024bdb
   24c88:	00024bdb 	.word	0x00024bdb
   24c8c:	00024cb1 	.word	0x00024cb1
   24c90:	00024bdb 	.word	0x00024bdb
   24c94:	00024bdb 	.word	0x00024bdb
   24c98:	00024bdb 	.word	0x00024bdb
   24c9c:	00024bdb 	.word	0x00024bdb
   24ca0:	00024bdb 	.word	0x00024bdb
   24ca4:	00024bdb 	.word	0x00024bdb
   24ca8:	00024bdb 	.word	0x00024bdb
   24cac:	00024cb1 	.word	0x00024cb1
   24cb0:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   24cb4:	2108      	movs	r1, #8
   24cb6:	f361 0204 	bfi	r2, r1, #0, #5
   24cba:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
   24cbe:	6a1a      	ldr	r2, [r3, #32]
   24cc0:	251e      	movs	r5, #30
   24cc2:	f365 220d 	bfi	r2, r5, #8, #6
   24cc6:	621a      	str	r2, [r3, #32]
   24cc8:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   24ccc:	f361 220c 	bfi	r2, r1, #8, #5
   24cd0:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
   24cd4:	7320      	strb	r0, [r4, #12]
   24cd6:	2600      	movs	r6, #0
   24cd8:	f7ff baa3 	b.w	24222 <am_hal_mspi_control+0x72>
   24cdc:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24ce0:	3560      	adds	r5, #96	@ 0x60
   24ce2:	032d      	lsls	r5, r5, #12
   24ce4:	2209      	movs	r2, #9
   24ce6:	686b      	ldr	r3, [r5, #4]
   24ce8:	f362 0303 	bfi	r3, r2, #0, #4
   24cec:	2600      	movs	r6, #0
   24cee:	606b      	str	r3, [r5, #4]
   24cf0:	f7ff ba97 	b.w	24222 <am_hal_mspi_control+0x72>
   24cf4:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24cf8:	3560      	adds	r5, #96	@ 0x60
   24cfa:	032d      	lsls	r5, r5, #12
   24cfc:	2207      	movs	r2, #7
   24cfe:	686b      	ldr	r3, [r5, #4]
   24d00:	f362 0303 	bfi	r3, r2, #0, #4
   24d04:	2600      	movs	r6, #0
   24d06:	606b      	str	r3, [r5, #4]
   24d08:	f7ff ba8b 	b.w	24222 <am_hal_mspi_control+0x72>
   24d0c:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24d10:	3560      	adds	r5, #96	@ 0x60
   24d12:	032d      	lsls	r5, r5, #12
   24d14:	2205      	movs	r2, #5
   24d16:	686b      	ldr	r3, [r5, #4]
   24d18:	f362 0303 	bfi	r3, r2, #0, #4
   24d1c:	2600      	movs	r6, #0
   24d1e:	606b      	str	r3, [r5, #4]
   24d20:	f7ff ba7f 	b.w	24222 <am_hal_mspi_control+0x72>
   24d24:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24d28:	3560      	adds	r5, #96	@ 0x60
   24d2a:	032d      	lsls	r5, r5, #12
   24d2c:	2203      	movs	r2, #3
   24d2e:	686b      	ldr	r3, [r5, #4]
   24d30:	f362 0303 	bfi	r3, r2, #0, #4
   24d34:	2600      	movs	r6, #0
   24d36:	606b      	str	r3, [r5, #4]
   24d38:	f7ff ba73 	b.w	24222 <am_hal_mspi_control+0x72>
   24d3c:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24d40:	3560      	adds	r5, #96	@ 0x60
   24d42:	032d      	lsls	r5, r5, #12
   24d44:	220b      	movs	r2, #11
   24d46:	686b      	ldr	r3, [r5, #4]
   24d48:	f362 0303 	bfi	r3, r2, #0, #4
   24d4c:	2600      	movs	r6, #0
   24d4e:	606b      	str	r3, [r5, #4]
   24d50:	f7ff ba67 	b.w	24222 <am_hal_mspi_control+0x72>
   24d54:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   24d58:	3560      	adds	r5, #96	@ 0x60
   24d5a:	032d      	lsls	r5, r5, #12
   24d5c:	2201      	movs	r2, #1
   24d5e:	686b      	ldr	r3, [r5, #4]
   24d60:	f362 0303 	bfi	r3, r2, #0, #4
   24d64:	2600      	movs	r6, #0
   24d66:	606b      	str	r3, [r5, #4]
   24d68:	f7ff ba5b 	b.w	24222 <am_hal_mspi_control+0x72>
   24d6c:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   24d70:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
   24d74:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   24d78:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   24d7c:	f36f 52d7 	bfc	r2, #23, #1
   24d80:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   24d84:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   24d88:	f36f 5296 	bfc	r2, #22, #1
   24d8c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   24d90:	69a2      	ldr	r2, [r4, #24]
   24d92:	2a00      	cmp	r2, #0
   24d94:	d09e      	beq.n	24cd4 <am_hal_mspi_control+0xb24>
   24d96:	2220      	movs	r2, #32
   24d98:	f8c3 2114 	str.w	r2, [r3, #276]	@ 0x114
   24d9c:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   24da0:	210c      	movs	r1, #12
   24da2:	f361 0204 	bfi	r2, r1, #0, #5
   24da6:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
   24daa:	6a1a      	ldr	r2, [r3, #32]
   24dac:	211e      	movs	r1, #30
   24dae:	f361 220d 	bfi	r2, r1, #8, #6
   24db2:	621a      	str	r2, [r3, #32]
   24db4:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   24db8:	2108      	movs	r1, #8
   24dba:	f361 220c 	bfi	r2, r1, #8, #5
   24dbe:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
   24dc2:	e787      	b.n	24cd4 <am_hal_mspi_control+0xb24>
   24dc4:	2001      	movs	r0, #1
   24dc6:	f7fd ff29 	bl	22c1c <am_hal_daxi_control>
   24dca:	e6d3      	b.n	24b74 <am_hal_mspi_control+0x9c4>
   24dcc:	4620      	mov	r0, r4
   24dce:	f7fe fecd 	bl	23b6c <sched_hiprio>
   24dd2:	4606      	mov	r6, r0
   24dd4:	2800      	cmp	r0, #0
   24dd6:	f47f aa24 	bne.w	24222 <am_hal_mspi_control+0x72>
   24dda:	f8c4 0844 	str.w	r0, [r4, #2116]	@ 0x844
   24dde:	f7ff ba20 	b.w	24222 <am_hal_mspi_control+0x72>
   24de2:	2001      	movs	r0, #1
   24de4:	f7fd ff1a 	bl	22c1c <am_hal_daxi_control>
   24de8:	e4d5      	b.n	24796 <am_hal_mspi_control+0x5e6>
   24dea:	f101 4368 	add.w	r3, r1, #3892314112	@ 0xe8000000
   24dee:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
   24df2:	f4ff abc1 	bcc.w	24578 <am_hal_mspi_control+0x3c8>
   24df6:	e6f0      	b.n	24bda <am_hal_mspi_control+0xa2a>
   24df8:	f101 436c 	add.w	r3, r1, #3959422976	@ 0xec000000
   24dfc:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
   24e00:	f4ff abba 	bcc.w	24578 <am_hal_mspi_control+0x3c8>
   24e04:	e6e9      	b.n	24bda <am_hal_mspi_control+0xa2a>
   24e06:	2604      	movs	r6, #4
   24e08:	f7ff ba0b 	b.w	24222 <am_hal_mspi_control+0x72>
   24e0c:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
   24e10:	e5da      	b.n	249c8 <am_hal_mspi_control+0x818>
   24e12:	4628      	mov	r0, r5
   24e14:	f7fd ffaa 	bl	22d6c <am_hal_interrupt_master_set>
   24e18:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   24e1c:	f002 fa94 	bl	27348 <am_hal_cmdq_release_block>
   24e20:	f7ff b9ff 	b.w	24222 <am_hal_mspi_control+0x72>
   24e24:	f8d4 3838 	ldr.w	r3, [r4, #2104]	@ 0x838
   24e28:	2b00      	cmp	r3, #0
   24e2a:	f47f ae05 	bne.w	24a38 <am_hal_mspi_control+0x888>
   24e2e:	f894 382c 	ldrb.w	r3, [r4, #2092]	@ 0x82c
   24e32:	2b00      	cmp	r3, #0
   24e34:	f47f ae00 	bne.w	24a38 <am_hal_mspi_control+0x888>
   24e38:	f8d4 385c 	ldr.w	r3, [r4, #2140]	@ 0x85c
   24e3c:	f8d4 2858 	ldr.w	r2, [r4, #2136]	@ 0x858
   24e40:	ebb3 0f52 	cmp.w	r3, r2, lsr #1
   24e44:	4b07      	ldr	r3, [pc, #28]	@ (24e64 <am_hal_mspi_control+0xcb4>)
   24e46:	bf28      	it	cs
   24e48:	4698      	movcs	r8, r3
   24e4a:	e5f5      	b.n	24a38 <am_hal_mspi_control+0x888>
   24e4c:	f442 4281 	orr.w	r2, r2, #16512	@ 0x4080
   24e50:	2102      	movs	r1, #2
   24e52:	f042 0220 	orr.w	r2, r2, #32
   24e56:	f8c4 1838 	str.w	r1, [r4, #2104]	@ 0x838
   24e5a:	e5b5      	b.n	249c8 <am_hal_mspi_control+0x818>
   24e5c:	40020000 	.word	0x40020000
   24e60:	aaaaaaab 	.word	0xaaaaaaab
   24e64:	00023821 	.word	0x00023821
   24e68:	f1b8 0f00 	cmp.w	r8, #0
   24e6c:	d059      	beq.n	24f22 <am_hal_mspi_control+0xd72>
   24e6e:	f8c4 085c 	str.w	r0, [r4, #2140]	@ 0x85c
   24e72:	e609      	b.n	24a88 <am_hal_mspi_control+0x8d8>
   24e74:	f103 050c 	add.w	r5, r3, #12
   24e78:	f102 0904 	add.w	r9, r2, #4
   24e7c:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
   24e80:	f859 1030 	ldr.w	r1, [r9, r0, lsl #3]
   24e84:	f846 3030 	str.w	r3, [r6, r0, lsl #3]
   24e88:	f845 1030 	str.w	r1, [r5, r0, lsl #3]
   24e8c:	3001      	adds	r0, #1
   24e8e:	4570      	cmp	r0, lr
   24e90:	d1f4      	bne.n	24e7c <am_hal_mspi_control+0xccc>
   24e92:	e5b9      	b.n	24a08 <am_hal_mspi_control+0x858>
   24e94:	f002 fa70 	bl	27378 <am_hal_cmdq_post_block>
   24e98:	4606      	mov	r6, r0
   24e9a:	e54c      	b.n	24936 <am_hal_mspi_control+0x786>
   24e9c:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
   24ea0:	e534      	b.n	2490c <am_hal_mspi_control+0x75c>
   24ea2:	f10d 0b0c 	add.w	fp, sp, #12
   24ea6:	f10d 0a08 	add.w	sl, sp, #8
   24eaa:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   24eae:	465b      	mov	r3, fp
   24eb0:	4652      	mov	r2, sl
   24eb2:	2101      	movs	r1, #1
   24eb4:	f002 f9e0 	bl	27278 <am_hal_cmdq_alloc_block>
   24eb8:	4606      	mov	r6, r0
   24eba:	2800      	cmp	r0, #0
   24ebc:	f47f a9b1 	bne.w	24222 <am_hal_mspi_control+0x72>
   24ec0:	f89d 300c 	ldrb.w	r3, [sp, #12]
   24ec4:	4a20      	ldr	r2, [pc, #128]	@ (24f48 <am_hal_mspi_control+0xd98>)
   24ec6:	9902      	ldr	r1, [sp, #8]
   24ec8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
   24ecc:	0328      	lsls	r0, r5, #12
   24ece:	4402      	add	r2, r0
   24ed0:	481e      	ldr	r0, [pc, #120]	@ (24f4c <am_hal_mspi_control+0xd9c>)
   24ed2:	f8c3 4428 	str.w	r4, [r3, #1064]	@ 0x428
   24ed6:	6298      	str	r0, [r3, #40]	@ 0x28
   24ed8:	e9c1 2600 	strd	r2, r6, [r1]
   24edc:	f7fd ff42 	bl	22d64 <am_hal_interrupt_master_disable>
   24ee0:	2101      	movs	r1, #1
   24ee2:	4680      	mov	r8, r0
   24ee4:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   24ee8:	f002 fa46 	bl	27378 <am_hal_cmdq_post_block>
   24eec:	4606      	mov	r6, r0
   24eee:	4640      	mov	r0, r8
   24ef0:	2e00      	cmp	r6, #0
   24ef2:	d18f      	bne.n	24e14 <am_hal_mspi_control+0xc64>
   24ef4:	6a26      	ldr	r6, [r4, #32]
   24ef6:	1c73      	adds	r3, r6, #1
   24ef8:	6223      	str	r3, [r4, #32]
   24efa:	f7fd ff37 	bl	22d6c <am_hal_interrupt_master_set>
   24efe:	b1b6      	cbz	r6, 24f2e <am_hal_mspi_control+0xd7e>
   24f00:	f44f 0980 	mov.w	r9, #4194304	@ 0x400000
   24f04:	f04f 0840 	mov.w	r8, #64	@ 0x40
   24f08:	e4dc      	b.n	248c4 <am_hal_mspi_control+0x714>
   24f0a:	4641      	mov	r1, r8
   24f0c:	f7fd fe86 	bl	22c1c <am_hal_daxi_control>
   24f10:	e4c4      	b.n	2489c <am_hal_mspi_control+0x6ec>
   24f12:	f443 4381 	orr.w	r3, r3, #16512	@ 0x4080
   24f16:	2102      	movs	r1, #2
   24f18:	f043 0320 	orr.w	r3, r3, #32
   24f1c:	f8c4 1838 	str.w	r1, [r4, #2104]	@ 0x838
   24f20:	e4f4      	b.n	2490c <am_hal_mspi_control+0x75c>
   24f22:	f8d4 385c 	ldr.w	r3, [r4, #2140]	@ 0x85c
   24f26:	3301      	adds	r3, #1
   24f28:	f8c4 385c 	str.w	r3, [r4, #2140]	@ 0x85c
   24f2c:	e5ac      	b.n	24a88 <am_hal_mspi_control+0x8d8>
   24f2e:	6860      	ldr	r0, [r4, #4]
   24f30:	301b      	adds	r0, #27
   24f32:	f001 f957 	bl	261e4 <am_gpu_power_enable>
   24f36:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   24f3a:	f002 f955 	bl	271e8 <am_hal_cmdq_enable>
   24f3e:	4606      	mov	r6, r0
   24f40:	2800      	cmp	r0, #0
   24f42:	d0dd      	beq.n	24f00 <am_hal_mspi_control+0xd50>
   24f44:	f7ff b96d 	b.w	24222 <am_hal_mspi_control+0x72>
   24f48:	400602b4 	.word	0x400602b4
   24f4c:	00023825 	.word	0x00023825

00024f50 <am_hal_mspi_blocking_transfer>:
   24f50:	2800      	cmp	r0, #0
   24f52:	f000 8085 	beq.w	25060 <am_hal_mspi_blocking_transfer+0x110>
   24f56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24f5a:	6803      	ldr	r3, [r0, #0]
   24f5c:	4615      	mov	r5, r2
   24f5e:	4a71      	ldr	r2, [pc, #452]	@ (25124 <am_hal_mspi_blocking_transfer+0x1d4>)
   24f60:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   24f64:	4293      	cmp	r3, r2
   24f66:	b089      	sub	sp, #36	@ 0x24
   24f68:	d16d      	bne.n	25046 <am_hal_mspi_blocking_transfer+0xf6>
   24f6a:	7a83      	ldrb	r3, [r0, #10]
   24f6c:	3b0a      	subs	r3, #10
   24f6e:	2b01      	cmp	r3, #1
   24f70:	d962      	bls.n	25038 <am_hal_mspi_blocking_transfer+0xe8>
   24f72:	7c8b      	ldrb	r3, [r1, #18]
   24f74:	2b00      	cmp	r3, #0
   24f76:	d162      	bne.n	2503e <am_hal_mspi_blocking_transfer+0xee>
   24f78:	6a03      	ldr	r3, [r0, #32]
   24f7a:	2b00      	cmp	r3, #0
   24f7c:	d15f      	bne.n	2503e <am_hal_mspi_blocking_transfer+0xee>
   24f7e:	f8d0 6840 	ldr.w	r6, [r0, #2112]	@ 0x840
   24f82:	2e00      	cmp	r6, #0
   24f84:	d15b      	bne.n	2503e <am_hal_mspi_blocking_transfer+0xee>
   24f86:	f890 382c 	ldrb.w	r3, [r0, #2092]	@ 0x82c
   24f8a:	2b02      	cmp	r3, #2
   24f8c:	d057      	beq.n	2503e <am_hal_mspi_blocking_transfer+0xee>
   24f8e:	f8d1 9000 	ldr.w	r9, [r1]
   24f92:	798f      	ldrb	r7, [r1, #6]
   24f94:	790a      	ldrb	r2, [r1, #4]
   24f96:	f8d0 c004 	ldr.w	ip, [r0, #4]
   24f9a:	ea4f 4309 	mov.w	r3, r9, lsl #16
   24f9e:	ea43 2242 	orr.w	r2, r3, r2, lsl #9
   24fa2:	01fb      	lsls	r3, r7, #7
   24fa4:	b2db      	uxtb	r3, r3
   24fa6:	4313      	orrs	r3, r2
   24fa8:	7b0a      	ldrb	r2, [r1, #12]
   24faa:	2a00      	cmp	r2, #0
   24fac:	d14f      	bne.n	2504e <am_hal_mspi_blocking_transfer+0xfe>
   24fae:	f50c 2480 	add.w	r4, ip, #262144	@ 0x40000
   24fb2:	3460      	adds	r4, #96	@ 0x60
   24fb4:	0324      	lsls	r4, r4, #12
   24fb6:	79ca      	ldrb	r2, [r1, #7]
   24fb8:	b11a      	cbz	r2, 24fc2 <am_hal_mspi_blocking_transfer+0x72>
   24fba:	688a      	ldr	r2, [r1, #8]
   24fbc:	60a2      	str	r2, [r4, #8]
   24fbe:	f043 0320 	orr.w	r3, r3, #32
   24fc2:	7c0a      	ldrb	r2, [r1, #16]
   24fc4:	b10a      	cbz	r2, 24fca <am_hal_mspi_blocking_transfer+0x7a>
   24fc6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
   24fca:	4a57      	ldr	r2, [pc, #348]	@ (25128 <am_hal_mspi_blocking_transfer+0x1d8>)
   24fcc:	f890 e00d 	ldrb.w	lr, [r0, #13]
   24fd0:	6812      	ldr	r2, [r2, #0]
   24fd2:	0e12      	lsrs	r2, r2, #24
   24fd4:	2a09      	cmp	r2, #9
   24fd6:	bf08      	it	eq
   24fd8:	7b82      	ldrbeq	r2, [r0, #14]
   24fda:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
   24fde:	bf08      	it	eq
   24fe0:	ea43 3342 	orreq.w	r3, r3, r2, lsl #13
   24fe4:	7c4a      	ldrb	r2, [r1, #17]
   24fe6:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
   24fea:	794a      	ldrb	r2, [r1, #5]
   24fec:	b10a      	cbz	r2, 24ff2 <am_hal_mspi_blocking_transfer+0xa2>
   24fee:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
   24ff2:	f8d4 2200 	ldr.w	r2, [r4, #512]	@ 0x200
   24ff6:	9203      	str	r2, [sp, #12]
   24ff8:	f043 0301 	orr.w	r3, r3, #1
   24ffc:	f04f 0800 	mov.w	r8, #0
   25000:	f04f 3eff 	mov.w	lr, #4294967295
   25004:	f8c4 8200 	str.w	r8, [r4, #512]	@ 0x200
   25008:	f8c4 e208 	str.w	lr, [r4, #520]	@ 0x208
   2500c:	6023      	str	r3, [r4, #0]
   2500e:	b34f      	cbz	r7, 25064 <am_hal_mspi_blocking_transfer+0x114>
   25010:	2f01      	cmp	r7, #1
   25012:	d05e      	beq.n	250d2 <am_hal_mspi_blocking_transfer+0x182>
   25014:	2201      	movs	r2, #1
   25016:	2302      	movs	r3, #2
   25018:	9200      	str	r2, [sp, #0]
   2501a:	4628      	mov	r0, r5
   2501c:	461a      	mov	r2, r3
   2501e:	4621      	mov	r1, r4
   25020:	f001 f8a2 	bl	26168 <am_hal_delay_us_status_check>
   25024:	f04f 33ff 	mov.w	r3, #4294967295
   25028:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
   2502c:	9b03      	ldr	r3, [sp, #12]
   2502e:	f8c4 3200 	str.w	r3, [r4, #512]	@ 0x200
   25032:	b009      	add	sp, #36	@ 0x24
   25034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25038:	688b      	ldr	r3, [r1, #8]
   2503a:	079b      	lsls	r3, r3, #30
   2503c:	d099      	beq.n	24f72 <am_hal_mspi_blocking_transfer+0x22>
   2503e:	2007      	movs	r0, #7
   25040:	b009      	add	sp, #36	@ 0x24
   25042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25046:	2002      	movs	r0, #2
   25048:	b009      	add	sp, #36	@ 0x24
   2504a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2504e:	f50c 2480 	add.w	r4, ip, #262144	@ 0x40000
   25052:	3460      	adds	r4, #96	@ 0x60
   25054:	0324      	lsls	r4, r4, #12
   25056:	89ca      	ldrh	r2, [r1, #14]
   25058:	60e2      	str	r2, [r4, #12]
   2505a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   2505e:	e7aa      	b.n	24fb6 <am_hal_mspi_blocking_transfer+0x66>
   25060:	2002      	movs	r0, #2
   25062:	4770      	bx	lr
   25064:	f1bc 0f02 	cmp.w	ip, #2
   25068:	d859      	bhi.n	2511e <am_hal_mspi_blocking_transfer+0x1ce>
   2506a:	694b      	ldr	r3, [r1, #20]
   2506c:	f8d0 a010 	ldr.w	sl, [r0, #16]
   25070:	9305      	str	r3, [sp, #20]
   25072:	ea5f 0b99 	movs.w	fp, r9, lsr #2
   25076:	d015      	beq.n	250a4 <am_hal_mspi_blocking_transfer+0x154>
   25078:	f104 011c 	add.w	r1, r4, #28
   2507c:	9504      	str	r5, [sp, #16]
   2507e:	f1a3 0804 	sub.w	r8, r3, #4
   25082:	460d      	mov	r5, r1
   25084:	9700      	str	r7, [sp, #0]
   25086:	2300      	movs	r3, #0
   25088:	223f      	movs	r2, #63	@ 0x3f
   2508a:	4629      	mov	r1, r5
   2508c:	4650      	mov	r0, sl
   2508e:	3601      	adds	r6, #1
   25090:	f001 f86a 	bl	26168 <am_hal_delay_us_status_check>
   25094:	2800      	cmp	r0, #0
   25096:	d1c5      	bne.n	25024 <am_hal_mspi_blocking_transfer+0xd4>
   25098:	6963      	ldr	r3, [r4, #20]
   2509a:	f848 3f04 	str.w	r3, [r8, #4]!
   2509e:	45b3      	cmp	fp, r6
   250a0:	d1f0      	bne.n	25084 <am_hal_mspi_blocking_transfer+0x134>
   250a2:	9d04      	ldr	r5, [sp, #16]
   250a4:	f019 0903 	ands.w	r9, r9, #3
   250a8:	d0b4      	beq.n	25014 <am_hal_mspi_blocking_transfer+0xc4>
   250aa:	2300      	movs	r3, #0
   250ac:	4650      	mov	r0, sl
   250ae:	9300      	str	r3, [sp, #0]
   250b0:	223f      	movs	r2, #63	@ 0x3f
   250b2:	f104 011c 	add.w	r1, r4, #28
   250b6:	f001 f857 	bl	26168 <am_hal_delay_us_status_check>
   250ba:	2800      	cmp	r0, #0
   250bc:	d1b2      	bne.n	25024 <am_hal_mspi_blocking_transfer+0xd4>
   250be:	9b05      	ldr	r3, [sp, #20]
   250c0:	464a      	mov	r2, r9
   250c2:	eb03 008b 	add.w	r0, r3, fp, lsl #2
   250c6:	a907      	add	r1, sp, #28
   250c8:	6963      	ldr	r3, [r4, #20]
   250ca:	9307      	str	r3, [sp, #28]
   250cc:	f7f3 f964 	bl	18398 <memcpy>
   250d0:	e7a0      	b.n	25014 <am_hal_mspi_blocking_transfer+0xc4>
   250d2:	f1bc 0f02 	cmp.w	ip, #2
   250d6:	d822      	bhi.n	2511e <am_hal_mspi_blocking_transfer+0x1ce>
   250d8:	f1b9 0f00 	cmp.w	r9, #0
   250dc:	d09a      	beq.n	25014 <am_hal_mspi_blocking_transfer+0xc4>
   250de:	f8d1 a014 	ldr.w	sl, [r1, #20]
   250e2:	f8d0 b010 	ldr.w	fp, [r0, #16]
   250e6:	9504      	str	r5, [sp, #16]
   250e8:	f104 0118 	add.w	r1, r4, #24
   250ec:	f1aa 0704 	sub.w	r7, sl, #4
   250f0:	460d      	mov	r5, r1
   250f2:	463e      	mov	r6, r7
   250f4:	3608      	adds	r6, #8
   250f6:	f857 3f04 	ldr.w	r3, [r7, #4]!
   250fa:	6123      	str	r3, [r4, #16]
   250fc:	223f      	movs	r2, #63	@ 0x3f
   250fe:	f8cd 8000 	str.w	r8, [sp]
   25102:	2310      	movs	r3, #16
   25104:	4629      	mov	r1, r5
   25106:	4658      	mov	r0, fp
   25108:	eba6 060a 	sub.w	r6, r6, sl
   2510c:	f001 f82c 	bl	26168 <am_hal_delay_us_status_check>
   25110:	45b1      	cmp	r9, r6
   25112:	d8ee      	bhi.n	250f2 <am_hal_mspi_blocking_transfer+0x1a2>
   25114:	9d04      	ldr	r5, [sp, #16]
   25116:	2800      	cmp	r0, #0
   25118:	f43f af7c 	beq.w	25014 <am_hal_mspi_blocking_transfer+0xc4>
   2511c:	e782      	b.n	25024 <am_hal_mspi_blocking_transfer+0xd4>
   2511e:	2005      	movs	r0, #5
   25120:	e780      	b.n	25024 <am_hal_mspi_blocking_transfer+0xd4>
   25122:	bf00      	nop
   25124:	01bebebe 	.word	0x01bebebe
   25128:	40020000 	.word	0x40020000

0002512c <am_hal_mspi_nonblocking_transfer>:
   2512c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   25130:	b082      	sub	sp, #8
   25132:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
   25136:	2800      	cmp	r0, #0
   25138:	d030      	beq.n	2519c <am_hal_mspi_nonblocking_transfer+0x70>
   2513a:	4616      	mov	r6, r2
   2513c:	6802      	ldr	r2, [r0, #0]
   2513e:	461f      	mov	r7, r3
   25140:	4b4f      	ldr	r3, [pc, #316]	@ (25280 <am_hal_mspi_nonblocking_transfer+0x154>)
   25142:	f022 427e 	bic.w	r2, r2, #4261412864	@ 0xfe000000
   25146:	429a      	cmp	r2, r3
   25148:	4604      	mov	r4, r0
   2514a:	d127      	bne.n	2519c <am_hal_mspi_nonblocking_transfer+0x70>
   2514c:	6983      	ldr	r3, [r0, #24]
   2514e:	b36b      	cbz	r3, 251ac <am_hal_mspi_nonblocking_transfer+0x80>
   25150:	f890 282c 	ldrb.w	r2, [r0, #2092]	@ 0x82c
   25154:	2a02      	cmp	r2, #2
   25156:	d029      	beq.n	251ac <am_hal_mspi_nonblocking_transfer+0x80>
   25158:	7a83      	ldrb	r3, [r0, #10]
   2515a:	3b0a      	subs	r3, #10
   2515c:	2b01      	cmp	r3, #1
   2515e:	4688      	mov	r8, r1
   25160:	d921      	bls.n	251a6 <am_hal_mspi_nonblocking_transfer+0x7a>
   25162:	2f00      	cmp	r7, #0
   25164:	d062      	beq.n	2522c <am_hal_mspi_nonblocking_transfer+0x100>
   25166:	46ba      	mov	sl, r7
   25168:	6860      	ldr	r0, [r4, #4]
   2516a:	300b      	adds	r0, #11
   2516c:	f001 f83a 	bl	261e4 <am_gpu_power_enable>
   25170:	2e00      	cmp	r6, #0
   25172:	d06d      	beq.n	25250 <am_hal_mspi_nonblocking_transfer+0x124>
   25174:	2e01      	cmp	r6, #1
   25176:	bf0c      	ite	eq
   25178:	2108      	moveq	r1, #8
   2517a:	2100      	movne	r1, #0
   2517c:	6a23      	ldr	r3, [r4, #32]
   2517e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
   25182:	d06f      	beq.n	25264 <am_hal_mspi_nonblocking_transfer+0x138>
   25184:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   25188:	ab01      	add	r3, sp, #4
   2518a:	466a      	mov	r2, sp
   2518c:	f002 f874 	bl	27278 <am_hal_cmdq_alloc_block>
   25190:	4605      	mov	r5, r0
   25192:	b180      	cbz	r0, 251b6 <am_hal_mspi_nonblocking_transfer+0x8a>
   25194:	4628      	mov	r0, r5
   25196:	b002      	add	sp, #8
   25198:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2519c:	2502      	movs	r5, #2
   2519e:	4628      	mov	r0, r5
   251a0:	b002      	add	sp, #8
   251a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   251a6:	688b      	ldr	r3, [r1, #8]
   251a8:	079b      	lsls	r3, r3, #30
   251aa:	d0da      	beq.n	25162 <am_hal_mspi_nonblocking_transfer+0x36>
   251ac:	2507      	movs	r5, #7
   251ae:	4628      	mov	r0, r5
   251b0:	b002      	add	sp, #8
   251b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   251b6:	9a00      	ldr	r2, [sp, #0]
   251b8:	4643      	mov	r3, r8
   251ba:	4631      	mov	r1, r6
   251bc:	4620      	mov	r0, r4
   251be:	f7fe fd4f 	bl	23c60 <build_dma_cmdlist>
   251c2:	4605      	mov	r5, r0
   251c4:	2800      	cmp	r0, #0
   251c6:	d148      	bne.n	2525a <am_hal_mspi_nonblocking_transfer+0x12e>
   251c8:	f89d 3004 	ldrb.w	r3, [sp, #4]
   251cc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
   251d0:	f8c3 a028 	str.w	sl, [r3, #40]	@ 0x28
   251d4:	f8c3 9428 	str.w	r9, [r3, #1064]	@ 0x428
   251d8:	f7fd fdc4 	bl	22d64 <am_hal_interrupt_master_disable>
   251dc:	f1ba 0100 	subs.w	r1, sl, #0
   251e0:	bf18      	it	ne
   251e2:	2101      	movne	r1, #1
   251e4:	4680      	mov	r8, r0
   251e6:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   251ea:	f002 f8c5 	bl	27378 <am_hal_cmdq_post_block>
   251ee:	4605      	mov	r5, r0
   251f0:	bb80      	cbnz	r0, 25254 <am_hal_mspi_nonblocking_transfer+0x128>
   251f2:	f8d4 3830 	ldr.w	r3, [r4, #2096]	@ 0x830
   251f6:	6a26      	ldr	r6, [r4, #32]
   251f8:	3301      	adds	r3, #1
   251fa:	f8c4 3830 	str.w	r3, [r4, #2096]	@ 0x830
   251fe:	1c73      	adds	r3, r6, #1
   25200:	6223      	str	r3, [r4, #32]
   25202:	b38f      	cbz	r7, 25268 <am_hal_mspi_nonblocking_transfer+0x13c>
   25204:	f884 082d 	strb.w	r0, [r4, #2093]	@ 0x82d
   25208:	f8c4 085c 	str.w	r0, [r4, #2140]	@ 0x85c
   2520c:	4640      	mov	r0, r8
   2520e:	f7fd fdad 	bl	22d6c <am_hal_interrupt_master_set>
   25212:	2e00      	cmp	r6, #0
   25214:	d1be      	bne.n	25194 <am_hal_mspi_nonblocking_transfer+0x68>
   25216:	6860      	ldr	r0, [r4, #4]
   25218:	301b      	adds	r0, #27
   2521a:	f000 ffe3 	bl	261e4 <am_gpu_power_enable>
   2521e:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   25222:	b002      	add	sp, #8
   25224:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   25228:	f001 bfde 	b.w	271e8 <am_hal_cmdq_enable>
   2522c:	f8d4 3838 	ldr.w	r3, [r4, #2104]	@ 0x838
   25230:	2b00      	cmp	r3, #0
   25232:	d198      	bne.n	25166 <am_hal_mspi_nonblocking_transfer+0x3a>
   25234:	2a00      	cmp	r2, #0
   25236:	d196      	bne.n	25166 <am_hal_mspi_nonblocking_transfer+0x3a>
   25238:	f8d4 385c 	ldr.w	r3, [r4, #2140]	@ 0x85c
   2523c:	f8d4 2858 	ldr.w	r2, [r4, #2136]	@ 0x858
   25240:	ebb3 0f52 	cmp.w	r3, r2, lsr #1
   25244:	4b0f      	ldr	r3, [pc, #60]	@ (25284 <am_hal_mspi_nonblocking_transfer+0x158>)
   25246:	bf34      	ite	cc
   25248:	f04f 0a00 	movcc.w	sl, #0
   2524c:	469a      	movcs	sl, r3
   2524e:	e78b      	b.n	25168 <am_hal_mspi_nonblocking_transfer+0x3c>
   25250:	2103      	movs	r1, #3
   25252:	e793      	b.n	2517c <am_hal_mspi_nonblocking_transfer+0x50>
   25254:	4640      	mov	r0, r8
   25256:	f7fd fd89 	bl	22d6c <am_hal_interrupt_master_set>
   2525a:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   2525e:	f002 f873 	bl	27348 <am_hal_cmdq_release_block>
   25262:	e797      	b.n	25194 <am_hal_mspi_nonblocking_transfer+0x68>
   25264:	2505      	movs	r5, #5
   25266:	e795      	b.n	25194 <am_hal_mspi_nonblocking_transfer+0x68>
   25268:	f1ba 0f00 	cmp.w	sl, #0
   2526c:	d002      	beq.n	25274 <am_hal_mspi_nonblocking_transfer+0x148>
   2526e:	f8c4 085c 	str.w	r0, [r4, #2140]	@ 0x85c
   25272:	e7cb      	b.n	2520c <am_hal_mspi_nonblocking_transfer+0xe0>
   25274:	f8d4 385c 	ldr.w	r3, [r4, #2140]	@ 0x85c
   25278:	3301      	adds	r3, #1
   2527a:	f8c4 385c 	str.w	r3, [r4, #2140]	@ 0x85c
   2527e:	e7c5      	b.n	2520c <am_hal_mspi_nonblocking_transfer+0xe0>
   25280:	01bebebe 	.word	0x01bebebe
   25284:	00023821 	.word	0x00023821

00025288 <am_hal_mspi_interrupt_enable>:
   25288:	b188      	cbz	r0, 252ae <am_hal_mspi_interrupt_enable+0x26>
   2528a:	6803      	ldr	r3, [r0, #0]
   2528c:	4a09      	ldr	r2, [pc, #36]	@ (252b4 <am_hal_mspi_interrupt_enable+0x2c>)
   2528e:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   25292:	4293      	cmp	r3, r2
   25294:	d10b      	bne.n	252ae <am_hal_mspi_interrupt_enable+0x26>
   25296:	6843      	ldr	r3, [r0, #4]
   25298:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   2529c:	3360      	adds	r3, #96	@ 0x60
   2529e:	031b      	lsls	r3, r3, #12
   252a0:	2000      	movs	r0, #0
   252a2:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   252a6:	4311      	orrs	r1, r2
   252a8:	f8c3 1200 	str.w	r1, [r3, #512]	@ 0x200
   252ac:	4770      	bx	lr
   252ae:	2002      	movs	r0, #2
   252b0:	4770      	bx	lr
   252b2:	bf00      	nop
   252b4:	01bebebe 	.word	0x01bebebe

000252b8 <am_hal_mspi_interrupt_status_get>:
   252b8:	b308      	cbz	r0, 252fe <am_hal_mspi_interrupt_status_get+0x46>
   252ba:	6803      	ldr	r3, [r0, #0]
   252bc:	b410      	push	{r4}
   252be:	4c11      	ldr	r4, [pc, #68]	@ (25304 <am_hal_mspi_interrupt_status_get+0x4c>)
   252c0:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   252c4:	42a3      	cmp	r3, r4
   252c6:	d116      	bne.n	252f6 <am_hal_mspi_interrupt_status_get+0x3e>
   252c8:	6843      	ldr	r3, [r0, #4]
   252ca:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   252ce:	3360      	adds	r3, #96	@ 0x60
   252d0:	031b      	lsls	r3, r3, #12
   252d2:	b932      	cbnz	r2, 252e2 <am_hal_mspi_interrupt_status_get+0x2a>
   252d4:	f8d3 3204 	ldr.w	r3, [r3, #516]	@ 0x204
   252d8:	f85d 4b04 	ldr.w	r4, [sp], #4
   252dc:	600b      	str	r3, [r1, #0]
   252de:	4610      	mov	r0, r2
   252e0:	4770      	bx	lr
   252e2:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
   252e6:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
   252ea:	f85d 4b04 	ldr.w	r4, [sp], #4
   252ee:	4013      	ands	r3, r2
   252f0:	2000      	movs	r0, #0
   252f2:	600b      	str	r3, [r1, #0]
   252f4:	4770      	bx	lr
   252f6:	2002      	movs	r0, #2
   252f8:	f85d 4b04 	ldr.w	r4, [sp], #4
   252fc:	4770      	bx	lr
   252fe:	2002      	movs	r0, #2
   25300:	4770      	bx	lr
   25302:	bf00      	nop
   25304:	01bebebe 	.word	0x01bebebe

00025308 <am_hal_mspi_interrupt_clear>:
   25308:	b170      	cbz	r0, 25328 <am_hal_mspi_interrupt_clear+0x20>
   2530a:	6803      	ldr	r3, [r0, #0]
   2530c:	4a07      	ldr	r2, [pc, #28]	@ (2532c <am_hal_mspi_interrupt_clear+0x24>)
   2530e:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   25312:	4293      	cmp	r3, r2
   25314:	d108      	bne.n	25328 <am_hal_mspi_interrupt_clear+0x20>
   25316:	6843      	ldr	r3, [r0, #4]
   25318:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   2531c:	3360      	adds	r3, #96	@ 0x60
   2531e:	031b      	lsls	r3, r3, #12
   25320:	2000      	movs	r0, #0
   25322:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
   25326:	4770      	bx	lr
   25328:	2002      	movs	r0, #2
   2532a:	4770      	bx	lr
   2532c:	01bebebe 	.word	0x01bebebe

00025330 <am_hal_mspi_interrupt_service>:
   25330:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   25334:	b084      	sub	sp, #16
   25336:	2800      	cmp	r0, #0
   25338:	f000 80b4 	beq.w	254a4 <am_hal_mspi_interrupt_service+0x174>
   2533c:	6803      	ldr	r3, [r0, #0]
   2533e:	4ab9      	ldr	r2, [pc, #740]	@ (25624 <am_hal_mspi_interrupt_service+0x2f4>)
   25340:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   25344:	4293      	cmp	r3, r2
   25346:	4604      	mov	r4, r0
   25348:	f040 80ac 	bne.w	254a4 <am_hal_mspi_interrupt_service+0x174>
   2534c:	f011 0fc0 	tst.w	r1, #192	@ 0xc0
   25350:	6847      	ldr	r7, [r0, #4]
   25352:	460d      	mov	r5, r1
   25354:	f040 8102 	bne.w	2555c <am_hal_mspi_interrupt_service+0x22c>
   25358:	f894 383c 	ldrb.w	r3, [r4, #2108]	@ 0x83c
   2535c:	2b00      	cmp	r3, #0
   2535e:	f040 80a6 	bne.w	254ae <am_hal_mspi_interrupt_service+0x17e>
   25362:	6a23      	ldr	r3, [r4, #32]
   25364:	2b00      	cmp	r3, #0
   25366:	f000 8098 	beq.w	2549a <am_hal_mspi_interrupt_service+0x16a>
   2536a:	f8df 82bc 	ldr.w	r8, [pc, #700]	@ 25628 <am_hal_mspi_interrupt_service+0x2f8>
   2536e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   25370:	f640 02c4 	movw	r2, #2244	@ 0x8c4
   25374:	fb02 8207 	mla	r2, r2, r7, r8
   25378:	432b      	orrs	r3, r5
   2537a:	f8d2 0828 	ldr.w	r0, [r2, #2088]	@ 0x828
   2537e:	6263      	str	r3, [r4, #36]	@ 0x24
   25380:	2800      	cmp	r0, #0
   25382:	f000 808a 	beq.w	2549a <am_hal_mspi_interrupt_service+0x16a>
   25386:	4669      	mov	r1, sp
   25388:	f002 f82c 	bl	273e4 <am_hal_cmdq_get_status>
   2538c:	2800      	cmp	r0, #0
   2538e:	d178      	bne.n	25482 <am_hal_mspi_interrupt_service+0x152>
   25390:	f884 0834 	strb.w	r0, [r4, #2100]	@ 0x834
   25394:	9900      	ldr	r1, [sp, #0]
   25396:	6a22      	ldr	r2, [r4, #32]
   25398:	e00f      	b.n	253ba <am_hal_mspi_interrupt_service+0x8a>
   2539a:	69e0      	ldr	r0, [r4, #28]
   2539c:	4288      	cmp	r0, r1
   2539e:	f100 0601 	add.w	r6, r0, #1
   253a2:	d010      	beq.n	253c6 <am_hal_mspi_interrupt_service+0x96>
   253a4:	61e6      	str	r6, [r4, #28]
   253a6:	b2f6      	uxtb	r6, r6
   253a8:	f106 0a0a 	add.w	sl, r6, #10
   253ac:	3a01      	subs	r2, #1
   253ae:	f854 302a 	ldr.w	r3, [r4, sl, lsl #2]
   253b2:	6222      	str	r2, [r4, #32]
   253b4:	2b00      	cmp	r3, #0
   253b6:	f040 8122 	bne.w	255fe <am_hal_mspi_interrupt_service+0x2ce>
   253ba:	f894 3834 	ldrb.w	r3, [r4, #2100]	@ 0x834
   253be:	f003 09ff 	and.w	r9, r3, #255	@ 0xff
   253c2:	2b00      	cmp	r3, #0
   253c4:	d0e9      	beq.n	2539a <am_hal_mspi_interrupt_service+0x6a>
   253c6:	f894 3834 	ldrb.w	r3, [r4, #2100]	@ 0x834
   253ca:	2b00      	cmp	r3, #0
   253cc:	d15a      	bne.n	25484 <am_hal_mspi_interrupt_service+0x154>
   253ce:	f415 5fc4 	tst.w	r5, #6272	@ 0x1880
   253d2:	d104      	bne.n	253de <am_hal_mspi_interrupt_service+0xae>
   253d4:	f89d 300e 	ldrb.w	r3, [sp, #14]
   253d8:	2b00      	cmp	r3, #0
   253da:	f000 80e6 	beq.w	255aa <am_hal_mspi_interrupt_service+0x27a>
   253de:	69e5      	ldr	r5, [r4, #28]
   253e0:	3501      	adds	r5, #1
   253e2:	61e5      	str	r5, [r4, #28]
   253e4:	b2ed      	uxtb	r5, r5
   253e6:	3a01      	subs	r2, #1
   253e8:	eb04 0585 	add.w	r5, r4, r5, lsl #2
   253ec:	6222      	str	r2, [r4, #32]
   253ee:	6aab      	ldr	r3, [r5, #40]	@ 0x28
   253f0:	b173      	cbz	r3, 25410 <am_hal_mspi_interrupt_service+0xe0>
   253f2:	2100      	movs	r1, #0
   253f4:	4608      	mov	r0, r1
   253f6:	f7fd fc11 	bl	22c1c <am_hal_daxi_control>
   253fa:	6aab      	ldr	r3, [r5, #40]	@ 0x28
   253fc:	f8d5 0428 	ldr.w	r0, [r5, #1064]	@ 0x428
   25400:	2101      	movs	r1, #1
   25402:	4798      	blx	r3
   25404:	f894 382c 	ldrb.w	r3, [r4, #2092]	@ 0x82c
   25408:	2b02      	cmp	r3, #2
   2540a:	bf1c      	itt	ne
   2540c:	2300      	movne	r3, #0
   2540e:	62ab      	strne	r3, [r5, #40]	@ 0x28
   25410:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   25414:	f001 ff14 	bl	27240 <am_hal_cmdq_disable>
   25418:	6863      	ldr	r3, [r4, #4]
   2541a:	4606      	mov	r6, r0
   2541c:	f103 001b 	add.w	r0, r3, #27
   25420:	f000 fee2 	bl	261e8 <am_gpu_power_disable>
   25424:	2e00      	cmp	r6, #0
   25426:	d139      	bne.n	2549c <am_hal_mspi_interrupt_service+0x16c>
   25428:	f507 2380 	add.w	r3, r7, #262144	@ 0x40000
   2542c:	3360      	adds	r3, #96	@ 0x60
   2542e:	031b      	lsls	r3, r3, #12
   25430:	f640 02c4 	movw	r2, #2244	@ 0x8c4
   25434:	fb02 8807 	mla	r8, r2, r7, r8
   25438:	f8d3 2100 	ldr.w	r2, [r3, #256]	@ 0x100
   2543c:	f366 0201 	bfi	r2, r6, #0, #2
   25440:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
   25444:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25446:	f366 729e 	bfi	r2, r6, #30, #1
   2544a:	631a      	str	r2, [r3, #48]	@ 0x30
   2544c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   2544e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
   25452:	631a      	str	r2, [r3, #48]	@ 0x30
   25454:	f8d3 22ac 	ldr.w	r2, [r3, #684]	@ 0x2ac
   25458:	f8d8 0828 	ldr.w	r0, [r8, #2088]	@ 0x828
   2545c:	f8c3 22ac 	str.w	r2, [r3, #684]	@ 0x2ac
   25460:	f002 f812 	bl	27488 <am_hal_cmdq_error_resume>
   25464:	6a23      	ldr	r3, [r4, #32]
   25466:	2b00      	cmp	r3, #0
   25468:	f040 8092 	bne.w	25590 <am_hal_mspi_interrupt_service+0x260>
   2546c:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   25470:	f001 fee6 	bl	27240 <am_hal_cmdq_disable>
   25474:	6863      	ldr	r3, [r4, #4]
   25476:	4606      	mov	r6, r0
   25478:	f103 001b 	add.w	r0, r3, #27
   2547c:	f000 feb4 	bl	261e8 <am_gpu_power_disable>
   25480:	b966      	cbnz	r6, 2549c <am_hal_mspi_interrupt_service+0x16c>
   25482:	6a22      	ldr	r2, [r4, #32]
   25484:	b94a      	cbnz	r2, 2549a <am_hal_mspi_interrupt_service+0x16a>
   25486:	f507 2780 	add.w	r7, r7, #262144	@ 0x40000
   2548a:	3760      	adds	r7, #96	@ 0x60
   2548c:	033f      	lsls	r7, r7, #12
   2548e:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
   25492:	f362 0301 	bfi	r3, r2, #0, #2
   25496:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
   2549a:	2600      	movs	r6, #0
   2549c:	4630      	mov	r0, r6
   2549e:	b004      	add	sp, #16
   254a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   254a4:	2602      	movs	r6, #2
   254a6:	4630      	mov	r0, r6
   254a8:	b004      	add	sp, #16
   254aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   254ae:	6a61      	ldr	r1, [r4, #36]	@ 0x24
   254b0:	430d      	orrs	r5, r1
   254b2:	f415 5fc6 	tst.w	r5, #6336	@ 0x18c0
   254b6:	6265      	str	r5, [r4, #36]	@ 0x24
   254b8:	d0ef      	beq.n	2549a <am_hal_mspi_interrupt_service+0x16a>
   254ba:	6862      	ldr	r2, [r4, #4]
   254bc:	f502 2280 	add.w	r2, r2, #262144	@ 0x40000
   254c0:	3260      	adds	r2, #96	@ 0x60
   254c2:	0312      	lsls	r2, r2, #12
   254c4:	f8d2 3104 	ldr.w	r3, [r2, #260]	@ 0x104
   254c8:	f013 0301 	ands.w	r3, r3, #1
   254cc:	d1fa      	bne.n	254c4 <am_hal_mspi_interrupt_service+0x194>
   254ce:	f507 2780 	add.w	r7, r7, #262144	@ 0x40000
   254d2:	3760      	adds	r7, #96	@ 0x60
   254d4:	033f      	lsls	r7, r7, #12
   254d6:	f8d7 2204 	ldr.w	r2, [r7, #516]	@ 0x204
   254da:	4315      	orrs	r5, r2
   254dc:	6265      	str	r5, [r4, #36]	@ 0x24
   254de:	f04f 32ff 	mov.w	r2, #4294967295
   254e2:	f415 55c4 	ands.w	r5, r5, #6272	@ 0x1880
   254e6:	f8c7 2208 	str.w	r2, [r7, #520]	@ 0x208
   254ea:	d141      	bne.n	25570 <am_hal_mspi_interrupt_service+0x240>
   254ec:	f8d4 3850 	ldr.w	r3, [r4, #2128]	@ 0x850
   254f0:	f8d4 1848 	ldr.w	r1, [r4, #2120]	@ 0x848
   254f4:	f8d4 2854 	ldr.w	r2, [r4, #2132]	@ 0x854
   254f8:	f8d4 6840 	ldr.w	r6, [r4, #2112]	@ 0x840
   254fc:	3301      	adds	r3, #1
   254fe:	f8c4 3850 	str.w	r3, [r4, #2128]	@ 0x850
   25502:	fbb3 f0f1 	udiv	r0, r3, r1
   25506:	fb01 3310 	mls	r3, r1, r0, r3
   2550a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   2550e:	eb02 08c3 	add.w	r8, r2, r3, lsl #3
   25512:	3e01      	subs	r6, #1
   25514:	f8d8 3010 	ldr.w	r3, [r8, #16]
   25518:	f8c4 6840 	str.w	r6, [r4, #2112]	@ 0x840
   2551c:	b173      	cbz	r3, 2553c <am_hal_mspi_interrupt_service+0x20c>
   2551e:	2100      	movs	r1, #0
   25520:	4608      	mov	r0, r1
   25522:	f7fd fb7b 	bl	22c1c <am_hal_daxi_control>
   25526:	f8d8 3010 	ldr.w	r3, [r8, #16]
   2552a:	f8d8 0014 	ldr.w	r0, [r8, #20]
   2552e:	4629      	mov	r1, r5
   25530:	4798      	blx	r3
   25532:	2300      	movs	r3, #0
   25534:	f8d4 6840 	ldr.w	r6, [r4, #2112]	@ 0x840
   25538:	f8c8 3010 	str.w	r3, [r8, #16]
   2553c:	2e00      	cmp	r6, #0
   2553e:	d138      	bne.n	255b2 <am_hal_mspi_interrupt_service+0x282>
   25540:	f884 683c 	strb.w	r6, [r4, #2108]	@ 0x83c
   25544:	f8c7 6100 	str.w	r6, [r7, #256]	@ 0x100
   25548:	f8d7 3200 	ldr.w	r3, [r7, #512]	@ 0x200
   2554c:	2280      	movs	r2, #128	@ 0x80
   2554e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
   25552:	f8c7 3200 	str.w	r3, [r7, #512]	@ 0x200
   25556:	f8c7 22b4 	str.w	r2, [r7, #692]	@ 0x2b4
   2555a:	e79f      	b.n	2549c <am_hal_mspi_interrupt_service+0x16c>
   2555c:	f107 000b 	add.w	r0, r7, #11
   25560:	f000 fe42 	bl	261e8 <am_gpu_power_disable>
   25564:	f894 383c 	ldrb.w	r3, [r4, #2108]	@ 0x83c
   25568:	2b00      	cmp	r3, #0
   2556a:	f43f aefa 	beq.w	25362 <am_hal_mspi_interrupt_service+0x32>
   2556e:	e79e      	b.n	254ae <am_hal_mspi_interrupt_service+0x17e>
   25570:	f8d7 2100 	ldr.w	r2, [r7, #256]	@ 0x100
   25574:	f363 0201 	bfi	r2, r3, #0, #2
   25578:	f8c7 2100 	str.w	r2, [r7, #256]	@ 0x100
   2557c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   2557e:	f363 729e 	bfi	r2, r3, #30, #1
   25582:	633a      	str	r2, [r7, #48]	@ 0x30
   25584:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   25586:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
   2558a:	2501      	movs	r5, #1
   2558c:	633b      	str	r3, [r7, #48]	@ 0x30
   2558e:	e7ad      	b.n	254ec <am_hal_mspi_interrupt_service+0x1bc>
   25590:	6860      	ldr	r0, [r4, #4]
   25592:	301b      	adds	r0, #27
   25594:	f000 fe26 	bl	261e4 <am_gpu_power_enable>
   25598:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   2559c:	f001 fe24 	bl	271e8 <am_hal_cmdq_enable>
   255a0:	4606      	mov	r6, r0
   255a2:	2800      	cmp	r0, #0
   255a4:	f47f af7a 	bne.w	2549c <am_hal_mspi_interrupt_service+0x16c>
   255a8:	6a22      	ldr	r2, [r4, #32]
   255aa:	2a00      	cmp	r2, #0
   255ac:	f47f af75 	bne.w	2549a <am_hal_mspi_interrupt_service+0x16a>
   255b0:	e75c      	b.n	2546c <am_hal_mspi_interrupt_service+0x13c>
   255b2:	f8d4 2850 	ldr.w	r2, [r4, #2128]	@ 0x850
   255b6:	f8d4 3848 	ldr.w	r3, [r4, #2120]	@ 0x848
   255ba:	f8d4 0854 	ldr.w	r0, [r4, #2132]	@ 0x854
   255be:	3201      	adds	r2, #1
   255c0:	fbb2 f1f3 	udiv	r1, r2, r3
   255c4:	fb03 2211 	mls	r2, r3, r1, r2
   255c8:	6863      	ldr	r3, [r4, #4]
   255ca:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   255ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   255d2:	3360      	adds	r3, #96	@ 0x60
   255d4:	031b      	lsls	r3, r3, #12
   255d6:	eb00 01c2 	add.w	r1, r0, r2, lsl #3
   255da:	2600      	movs	r6, #0
   255dc:	f850 2032 	ldr.w	r2, [r0, r2, lsl #3]
   255e0:	684d      	ldr	r5, [r1, #4]
   255e2:	6266      	str	r6, [r4, #36]	@ 0x24
   255e4:	f8c3 6100 	str.w	r6, [r3, #256]	@ 0x100
   255e8:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
   255ec:	e9d1 0202 	ldrd	r0, r2, [r1, #8]
   255f0:	f8c3 510c 	str.w	r5, [r3, #268]	@ 0x10c
   255f4:	f8c3 0110 	str.w	r0, [r3, #272]	@ 0x110
   255f8:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
   255fc:	e74e      	b.n	2549c <am_hal_mspi_interrupt_service+0x16c>
   255fe:	4649      	mov	r1, r9
   25600:	4648      	mov	r0, r9
   25602:	f7fd fb0b 	bl	22c1c <am_hal_daxi_control>
   25606:	eb04 0386 	add.w	r3, r4, r6, lsl #2
   2560a:	4649      	mov	r1, r9
   2560c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
   2560e:	f8d3 0428 	ldr.w	r0, [r3, #1064]	@ 0x428
   25612:	4790      	blx	r2
   25614:	f894 382c 	ldrb.w	r3, [r4, #2092]	@ 0x82c
   25618:	2b02      	cmp	r3, #2
   2561a:	bf18      	it	ne
   2561c:	f844 902a 	strne.w	r9, [r4, sl, lsl #2]
   25620:	e6b8      	b.n	25394 <am_hal_mspi_interrupt_service+0x64>
   25622:	bf00      	nop
   25624:	01bebebe 	.word	0x01bebebe
   25628:	100347b8 	.word	0x100347b8

0002562c <am_hal_mspi_power_control>:
   2562c:	b570      	push	{r4, r5, r6, lr}
   2562e:	2800      	cmp	r0, #0
   25630:	f000 8091 	beq.w	25756 <am_hal_mspi_power_control+0x12a>
   25634:	6805      	ldr	r5, [r0, #0]
   25636:	4b9b      	ldr	r3, [pc, #620]	@ (258a4 <am_hal_mspi_power_control+0x278>)
   25638:	f025 457e 	bic.w	r5, r5, #4261412864	@ 0xfe000000
   2563c:	429d      	cmp	r5, r3
   2563e:	4604      	mov	r4, r0
   25640:	f040 8089 	bne.w	25756 <am_hal_mspi_power_control+0x12a>
   25644:	2900      	cmp	r1, #0
   25646:	f000 808c 	beq.w	25762 <am_hal_mspi_power_control+0x136>
   2564a:	3901      	subs	r1, #1
   2564c:	2901      	cmp	r1, #1
   2564e:	f200 8085 	bhi.w	2575c <am_hal_mspi_power_control+0x130>
   25652:	f8d0 3840 	ldr.w	r3, [r0, #2112]	@ 0x840
   25656:	2b00      	cmp	r3, #0
   25658:	f040 80f3 	bne.w	25842 <am_hal_mspi_power_control+0x216>
   2565c:	6a06      	ldr	r6, [r0, #32]
   2565e:	2e00      	cmp	r6, #0
   25660:	f040 80ef 	bne.w	25842 <am_hal_mspi_power_control+0x216>
   25664:	6840      	ldr	r0, [r0, #4]
   25666:	f500 2380 	add.w	r3, r0, #262144	@ 0x40000
   2566a:	3360      	adds	r3, #96	@ 0x60
   2566c:	031b      	lsls	r3, r3, #12
   2566e:	2a00      	cmp	r2, #0
   25670:	d05e      	beq.n	25730 <am_hal_mspi_power_control+0x104>
   25672:	f8d3 2080 	ldr.w	r2, [r3, #128]	@ 0x80
   25676:	f8c4 2864 	str.w	r2, [r4, #2148]	@ 0x864
   2567a:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
   2567e:	f8c4 2868 	str.w	r2, [r4, #2152]	@ 0x868
   25682:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   25686:	f8c4 286c 	str.w	r2, [r4, #2156]	@ 0x86c
   2568a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
   2568e:	f8c4 2870 	str.w	r2, [r4, #2160]	@ 0x870
   25692:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
   25696:	f8c4 2874 	str.w	r2, [r4, #2164]	@ 0x874
   2569a:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
   2569e:	f8c4 2878 	str.w	r2, [r4, #2168]	@ 0x878
   256a2:	f8d3 2098 	ldr.w	r2, [r3, #152]	@ 0x98
   256a6:	f8c4 287c 	str.w	r2, [r4, #2172]	@ 0x87c
   256aa:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
   256ae:	f8c4 2880 	str.w	r2, [r4, #2176]	@ 0x880
   256b2:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
   256b6:	f8c4 2884 	str.w	r2, [r4, #2180]	@ 0x884
   256ba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   256bc:	f8c4 2888 	str.w	r2, [r4, #2184]	@ 0x888
   256c0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
   256c2:	f8c4 288c 	str.w	r2, [r4, #2188]	@ 0x88c
   256c6:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
   256c8:	f8c4 2890 	str.w	r2, [r4, #2192]	@ 0x890
   256cc:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
   256ce:	f8c4 2894 	str.w	r2, [r4, #2196]	@ 0x894
   256d2:	f8d3 22a8 	ldr.w	r2, [r3, #680]	@ 0x2a8
   256d6:	f8c4 289c 	str.w	r2, [r4, #2204]	@ 0x89c
   256da:	f8d3 22b8 	ldr.w	r2, [r3, #696]	@ 0x2b8
   256de:	f8c4 28a0 	str.w	r2, [r4, #2208]	@ 0x8a0
   256e2:	f8d3 22c0 	ldr.w	r2, [r3, #704]	@ 0x2c0
   256e6:	f8c4 28a4 	str.w	r2, [r4, #2212]	@ 0x8a4
   256ea:	f8d3 22c4 	ldr.w	r2, [r3, #708]	@ 0x2c4
   256ee:	f8c4 28a8 	str.w	r2, [r4, #2216]	@ 0x8a8
   256f2:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   256f6:	f8c4 28ac 	str.w	r2, [r4, #2220]	@ 0x8ac
   256fa:	f8d3 22b0 	ldr.w	r2, [r3, #688]	@ 0x2b0
   256fe:	f8c4 28b0 	str.w	r2, [r4, #2224]	@ 0x8b0
   25702:	f8d3 2114 	ldr.w	r2, [r3, #276]	@ 0x114
   25706:	f8c4 28b4 	str.w	r2, [r4, #2228]	@ 0x8b4
   2570a:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   2570e:	f8c4 28b8 	str.w	r2, [r4, #2232]	@ 0x8b8
   25712:	6a1a      	ldr	r2, [r3, #32]
   25714:	f8c4 28bc 	str.w	r2, [r4, #2236]	@ 0x8bc
   25718:	f8d3 22a0 	ldr.w	r2, [r3, #672]	@ 0x2a0
   2571c:	f8c4 2898 	str.w	r2, [r4, #2200]	@ 0x898
   25720:	f8d3 22a0 	ldr.w	r2, [r3, #672]	@ 0x2a0
   25724:	07d1      	lsls	r1, r2, #31
   25726:	f100 8095 	bmi.w	25854 <am_hal_mspi_power_control+0x228>
   2572a:	2201      	movs	r2, #1
   2572c:	f884 2860 	strb.w	r2, [r4, #2144]	@ 0x860
   25730:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   25734:	f422 52ff 	bic.w	r2, r2, #8160	@ 0x1fe0
   25738:	f022 021f 	bic.w	r2, r2, #31
   2573c:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
   25740:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
   25744:	07da      	lsls	r2, r3, #31
   25746:	f100 809d 	bmi.w	25884 <am_hal_mspi_power_control+0x258>
   2574a:	300e      	adds	r0, #14
   2574c:	b2c0      	uxtb	r0, r0
   2574e:	f001 f965 	bl	26a1c <am_hal_pwrctrl_periph_disable>
   25752:	4630      	mov	r0, r6
   25754:	bd70      	pop	{r4, r5, r6, pc}
   25756:	2602      	movs	r6, #2
   25758:	4630      	mov	r0, r6
   2575a:	bd70      	pop	{r4, r5, r6, pc}
   2575c:	2606      	movs	r6, #6
   2575e:	4630      	mov	r0, r6
   25760:	bd70      	pop	{r4, r5, r6, pc}
   25762:	2a00      	cmp	r2, #0
   25764:	d06f      	beq.n	25846 <am_hal_mspi_power_control+0x21a>
   25766:	f890 3860 	ldrb.w	r3, [r0, #2144]	@ 0x860
   2576a:	2b00      	cmp	r3, #0
   2576c:	f000 8090 	beq.w	25890 <am_hal_mspi_power_control+0x264>
   25770:	6840      	ldr	r0, [r0, #4]
   25772:	300e      	adds	r0, #14
   25774:	b2c0      	uxtb	r0, r0
   25776:	f001 f887 	bl	26888 <am_hal_pwrctrl_periph_enable>
   2577a:	6860      	ldr	r0, [r4, #4]
   2577c:	f8d4 1864 	ldr.w	r1, [r4, #2148]	@ 0x864
   25780:	f8d4 2868 	ldr.w	r2, [r4, #2152]	@ 0x868
   25784:	f500 2380 	add.w	r3, r0, #262144	@ 0x40000
   25788:	3360      	adds	r3, #96	@ 0x60
   2578a:	031b      	lsls	r3, r3, #12
   2578c:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
   25790:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
   25794:	f8d4 186c 	ldr.w	r1, [r4, #2156]	@ 0x86c
   25798:	f8d4 2870 	ldr.w	r2, [r4, #2160]	@ 0x870
   2579c:	f8c3 1088 	str.w	r1, [r3, #136]	@ 0x88
   257a0:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
   257a4:	f8d4 1874 	ldr.w	r1, [r4, #2164]	@ 0x874
   257a8:	f8d4 2878 	ldr.w	r2, [r4, #2168]	@ 0x878
   257ac:	f8c3 1090 	str.w	r1, [r3, #144]	@ 0x90
   257b0:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
   257b4:	f8d4 187c 	ldr.w	r1, [r4, #2172]	@ 0x87c
   257b8:	f8d4 2880 	ldr.w	r2, [r4, #2176]	@ 0x880
   257bc:	f8c3 1098 	str.w	r1, [r3, #152]	@ 0x98
   257c0:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
   257c4:	f8d4 1884 	ldr.w	r1, [r4, #2180]	@ 0x884
   257c8:	f8d4 2888 	ldr.w	r2, [r4, #2184]	@ 0x888
   257cc:	f8c3 10a0 	str.w	r1, [r3, #160]	@ 0xa0
   257d0:	631a      	str	r2, [r3, #48]	@ 0x30
   257d2:	f8d4 188c 	ldr.w	r1, [r4, #2188]	@ 0x88c
   257d6:	f8d4 2890 	ldr.w	r2, [r4, #2192]	@ 0x890
   257da:	6459      	str	r1, [r3, #68]	@ 0x44
   257dc:	649a      	str	r2, [r3, #72]	@ 0x48
   257de:	f8d4 1894 	ldr.w	r1, [r4, #2196]	@ 0x894
   257e2:	f8d4 289c 	ldr.w	r2, [r4, #2204]	@ 0x89c
   257e6:	64d9      	str	r1, [r3, #76]	@ 0x4c
   257e8:	f8c3 22a8 	str.w	r2, [r3, #680]	@ 0x2a8
   257ec:	f8d4 18a0 	ldr.w	r1, [r4, #2208]	@ 0x8a0
   257f0:	f8d4 28a4 	ldr.w	r2, [r4, #2212]	@ 0x8a4
   257f4:	f8c3 12b8 	str.w	r1, [r3, #696]	@ 0x2b8
   257f8:	f8c3 22c0 	str.w	r2, [r3, #704]	@ 0x2c0
   257fc:	f8d4 18a8 	ldr.w	r1, [r4, #2216]	@ 0x8a8
   25800:	f8d4 2898 	ldr.w	r2, [r4, #2200]	@ 0x898
   25804:	f8c3 12c4 	str.w	r1, [r3, #708]	@ 0x2c4
   25808:	f8d4 18ac 	ldr.w	r1, [r4, #2220]	@ 0x8ac
   2580c:	f8c3 1200 	str.w	r1, [r3, #512]	@ 0x200
   25810:	f894 18b0 	ldrb.w	r1, [r4, #2224]	@ 0x8b0
   25814:	f8c3 12b4 	str.w	r1, [r3, #692]	@ 0x2b4
   25818:	f8d4 18b4 	ldr.w	r1, [r4, #2228]	@ 0x8b4
   2581c:	f8c3 1114 	str.w	r1, [r3, #276]	@ 0x114
   25820:	f8d4 18b8 	ldr.w	r1, [r4, #2232]	@ 0x8b8
   25824:	f8c3 1118 	str.w	r1, [r3, #280]	@ 0x118
   25828:	f8d4 18bc 	ldr.w	r1, [r4, #2236]	@ 0x8bc
   2582c:	6219      	str	r1, [r3, #32]
   2582e:	f022 0101 	bic.w	r1, r2, #1
   25832:	f8c3 12a0 	str.w	r1, [r3, #672]	@ 0x2a0
   25836:	07d3      	lsls	r3, r2, #31
   25838:	d42c      	bmi.n	25894 <am_hal_mspi_power_control+0x268>
   2583a:	2600      	movs	r6, #0
   2583c:	f884 6860 	strb.w	r6, [r4, #2144]	@ 0x860
   25840:	e78a      	b.n	25758 <am_hal_mspi_power_control+0x12c>
   25842:	2603      	movs	r6, #3
   25844:	e788      	b.n	25758 <am_hal_mspi_power_control+0x12c>
   25846:	6840      	ldr	r0, [r0, #4]
   25848:	300e      	adds	r0, #14
   2584a:	b2c0      	uxtb	r0, r0
   2584c:	4616      	mov	r6, r2
   2584e:	f001 f81b 	bl	26888 <am_hal_pwrctrl_periph_enable>
   25852:	e781      	b.n	25758 <am_hal_mspi_power_control+0x12c>
   25854:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   25858:	f001 fcf2 	bl	27240 <am_hal_cmdq_disable>
   2585c:	6860      	ldr	r0, [r4, #4]
   2585e:	301b      	adds	r0, #27
   25860:	f000 fcc2 	bl	261e8 <am_gpu_power_disable>
   25864:	e9d4 3000 	ldrd	r3, r0, [r4]
   25868:	f023 427e 	bic.w	r2, r3, #4261412864	@ 0xfe000000
   2586c:	f500 2380 	add.w	r3, r0, #262144	@ 0x40000
   25870:	3360      	adds	r3, #96	@ 0x60
   25872:	2101      	movs	r1, #1
   25874:	42aa      	cmp	r2, r5
   25876:	ea4f 3303 	mov.w	r3, r3, lsl #12
   2587a:	f884 1860 	strb.w	r1, [r4, #2144]	@ 0x860
   2587e:	f47f af5f 	bne.w	25740 <am_hal_mspi_power_control+0x114>
   25882:	e755      	b.n	25730 <am_hal_mspi_power_control+0x104>
   25884:	2100      	movs	r1, #0
   25886:	2001      	movs	r0, #1
   25888:	f7fd f9c8 	bl	22c1c <am_hal_daxi_control>
   2588c:	6860      	ldr	r0, [r4, #4]
   2588e:	e75c      	b.n	2574a <am_hal_mspi_power_control+0x11e>
   25890:	2607      	movs	r6, #7
   25892:	e761      	b.n	25758 <am_hal_mspi_power_control+0x12c>
   25894:	301b      	adds	r0, #27
   25896:	f000 fca5 	bl	261e4 <am_gpu_power_enable>
   2589a:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   2589e:	f001 fca3 	bl	271e8 <am_hal_cmdq_enable>
   258a2:	e7ca      	b.n	2583a <am_hal_mspi_power_control+0x20e>
   258a4:	01bebebe 	.word	0x01bebebe

000258a8 <nonblocking_write_sm>:
   258a8:	b570      	push	{r4, r5, r6, lr}
   258aa:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
   258ae:	b084      	sub	sp, #16
   258b0:	4604      	mov	r4, r0
   258b2:	b963      	cbnz	r3, 258ce <nonblocking_write_sm+0x26>
   258b4:	f894 307c 	ldrb.w	r3, [r4, #124]	@ 0x7c
   258b8:	2b00      	cmp	r3, #0
   258ba:	d130      	bne.n	2591e <nonblocking_write_sm+0x76>
   258bc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
   258be:	6fa2      	ldr	r2, [r4, #120]	@ 0x78
   258c0:	601a      	str	r2, [r3, #0]
   258c2:	6fa2      	ldr	r2, [r4, #120]	@ 0x78
   258c4:	6e23      	ldr	r3, [r4, #96]	@ 0x60
   258c6:	429a      	cmp	r2, r3
   258c8:	d04e      	beq.n	25968 <nonblocking_write_sm+0xc0>
   258ca:	b004      	add	sp, #16
   258cc:	bd70      	pop	{r4, r5, r6, pc}
   258ce:	f7fd fa49 	bl	22d64 <am_hal_interrupt_master_disable>
   258d2:	e9d4 1517 	ldrd	r1, r5, [r4, #92]	@ 0x5c
   258d6:	9002      	str	r0, [sp, #8]
   258d8:	6fa2      	ldr	r2, [r4, #120]	@ 0x78
   258da:	f894 307c 	ldrb.w	r3, [r4, #124]	@ 0x7c
   258de:	1aad      	subs	r5, r5, r2
   258e0:	4411      	add	r1, r2
   258e2:	2b00      	cmp	r3, #0
   258e4:	d14f      	bne.n	25986 <nonblocking_write_sm+0xde>
   258e6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
   258e8:	b17d      	cbz	r5, 2590a <nonblocking_write_sm+0x62>
   258ea:	f500 2080 	add.w	r0, r0, #262144	@ 0x40000
   258ee:	301c      	adds	r0, #28
   258f0:	0300      	lsls	r0, r0, #12
   258f2:	3901      	subs	r1, #1
   258f4:	e005      	b.n	25902 <nonblocking_write_sm+0x5a>
   258f6:	3301      	adds	r3, #1
   258f8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   258fc:	6002      	str	r2, [r0, #0]
   258fe:	429d      	cmp	r5, r3
   25900:	d003      	beq.n	2590a <nonblocking_write_sm+0x62>
   25902:	6982      	ldr	r2, [r0, #24]
   25904:	0696      	lsls	r6, r2, #26
   25906:	d5f6      	bpl.n	258f6 <nonblocking_write_sm+0x4e>
   25908:	461d      	mov	r5, r3
   2590a:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
   2590c:	442b      	add	r3, r5
   2590e:	67a3      	str	r3, [r4, #120]	@ 0x78
   25910:	9802      	ldr	r0, [sp, #8]
   25912:	f7fd fa2b 	bl	22d6c <am_hal_interrupt_master_set>
   25916:	f894 307c 	ldrb.w	r3, [r4, #124]	@ 0x7c
   2591a:	2b00      	cmp	r3, #0
   2591c:	d0ce      	beq.n	258bc <nonblocking_write_sm+0x14>
   2591e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
   25920:	f7fd fa20 	bl	22d64 <am_hal_interrupt_master_disable>
   25924:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   25928:	351c      	adds	r5, #28
   2592a:	9003      	str	r0, [sp, #12]
   2592c:	032d      	lsls	r5, r5, #12
   2592e:	f104 0680 	add.w	r6, r4, #128	@ 0x80
   25932:	e00d      	b.n	25950 <nonblocking_write_sm+0xa8>
   25934:	f001 fbc2 	bl	270bc <am_hal_queue_item_get>
   25938:	b190      	cbz	r0, 25960 <nonblocking_write_sm+0xb8>
   2593a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
   2593c:	f502 2280 	add.w	r2, r2, #262144	@ 0x40000
   25940:	321c      	adds	r2, #28
   25942:	0312      	lsls	r2, r2, #12
   25944:	6993      	ldr	r3, [r2, #24]
   25946:	0699      	lsls	r1, r3, #26
   25948:	bf5c      	itt	pl
   2594a:	f89d 3007 	ldrbpl.w	r3, [sp, #7]
   2594e:	6013      	strpl	r3, [r2, #0]
   25950:	69ab      	ldr	r3, [r5, #24]
   25952:	069b      	lsls	r3, r3, #26
   25954:	f04f 0201 	mov.w	r2, #1
   25958:	f10d 0107 	add.w	r1, sp, #7
   2595c:	4630      	mov	r0, r6
   2595e:	d5e9      	bpl.n	25934 <nonblocking_write_sm+0x8c>
   25960:	9803      	ldr	r0, [sp, #12]
   25962:	f7fd fa03 	bl	22d6c <am_hal_interrupt_master_set>
   25966:	e7a9      	b.n	258bc <nonblocking_write_sm+0x14>
   25968:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
   2596c:	2b00      	cmp	r3, #0
   2596e:	d0ac      	beq.n	258ca <nonblocking_write_sm+0x22>
   25970:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
   25972:	2000      	movs	r0, #0
   25974:	f884 0054 	strb.w	r0, [r4, #84]	@ 0x54
   25978:	2b00      	cmp	r3, #0
   2597a:	d0a6      	beq.n	258ca <nonblocking_write_sm+0x22>
   2597c:	6f21      	ldr	r1, [r4, #112]	@ 0x70
   2597e:	b004      	add	sp, #16
   25980:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   25984:	4718      	bx	r3
   25986:	f8d4 2088 	ldr.w	r2, [r4, #136]	@ 0x88
   2598a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
   2598e:	1a9b      	subs	r3, r3, r2
   25990:	429d      	cmp	r5, r3
   25992:	bf28      	it	cs
   25994:	461d      	movcs	r5, r3
   25996:	462a      	mov	r2, r5
   25998:	f104 0080 	add.w	r0, r4, #128	@ 0x80
   2599c:	f001 fb4e 	bl	2703c <am_hal_queue_item_add>
   259a0:	2800      	cmp	r0, #0
   259a2:	d1b2      	bne.n	2590a <nonblocking_write_sm+0x62>
   259a4:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
   259a6:	f884 0054 	strb.w	r0, [r4, #84]	@ 0x54
   259aa:	2b00      	cmp	r3, #0
   259ac:	d0ad      	beq.n	2590a <nonblocking_write_sm+0x62>
   259ae:	6f21      	ldr	r1, [r4, #112]	@ 0x70
   259b0:	2001      	movs	r0, #1
   259b2:	e7e4      	b.n	2597e <nonblocking_write_sm+0xd6>

000259b4 <nonblocking_read_sm>:
   259b4:	b530      	push	{r4, r5, lr}
   259b6:	f890 3098 	ldrb.w	r3, [r0, #152]	@ 0x98
   259ba:	b08b      	sub	sp, #44	@ 0x2c
   259bc:	4604      	mov	r4, r0
   259be:	b923      	cbnz	r3, 259ca <nonblocking_read_sm+0x16>
   259c0:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
   259c4:	bb23      	cbnz	r3, 25a10 <nonblocking_read_sm+0x5c>
   259c6:	b00b      	add	sp, #44	@ 0x2c
   259c8:	bd30      	pop	{r4, r5, pc}
   259ca:	f7fd f9cb 	bl	22d64 <am_hal_interrupt_master_disable>
   259ce:	6a61      	ldr	r1, [r4, #36]	@ 0x24
   259d0:	9001      	str	r0, [sp, #4]
   259d2:	f501 2180 	add.w	r1, r1, #262144	@ 0x40000
   259d6:	311c      	adds	r1, #28
   259d8:	0309      	lsls	r1, r1, #12
   259da:	a802      	add	r0, sp, #8
   259dc:	2200      	movs	r2, #0
   259de:	698b      	ldr	r3, [r1, #24]
   259e0:	06dd      	lsls	r5, r3, #27
   259e2:	d409      	bmi.n	259f8 <nonblocking_read_sm+0x44>
   259e4:	680b      	ldr	r3, [r1, #0]
   259e6:	f413 6f70 	tst.w	r3, #3840	@ 0xf00
   259ea:	f102 0201 	add.w	r2, r2, #1
   259ee:	d108      	bne.n	25a02 <nonblocking_read_sm+0x4e>
   259f0:	2a20      	cmp	r2, #32
   259f2:	f800 3b01 	strb.w	r3, [r0], #1
   259f6:	d1f2      	bne.n	259de <nonblocking_read_sm+0x2a>
   259f8:	a902      	add	r1, sp, #8
   259fa:	f104 009c 	add.w	r0, r4, #156	@ 0x9c
   259fe:	f001 fb1d 	bl	2703c <am_hal_queue_item_add>
   25a02:	9801      	ldr	r0, [sp, #4]
   25a04:	f7fd f9b2 	bl	22d6c <am_hal_interrupt_master_set>
   25a08:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
   25a0c:	2b00      	cmp	r3, #0
   25a0e:	d0da      	beq.n	259c6 <nonblocking_read_sm+0x12>
   25a10:	f7fd f9a8 	bl	22d64 <am_hal_interrupt_master_disable>
   25a14:	9002      	str	r0, [sp, #8]
   25a16:	e9d4 100d 	ldrd	r1, r0, [r4, #52]	@ 0x34
   25a1a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   25a1c:	f894 5098 	ldrb.w	r5, [r4, #152]	@ 0x98
   25a20:	1ac0      	subs	r0, r0, r3
   25a22:	4419      	add	r1, r3
   25a24:	2d00      	cmp	r5, #0
   25a26:	d12c      	bne.n	25a82 <nonblocking_read_sm+0xce>
   25a28:	6a62      	ldr	r2, [r4, #36]	@ 0x24
   25a2a:	2800      	cmp	r0, #0
   25a2c:	d03d      	beq.n	25aaa <nonblocking_read_sm+0xf6>
   25a2e:	f502 2280 	add.w	r2, r2, #262144	@ 0x40000
   25a32:	321c      	adds	r2, #28
   25a34:	0312      	lsls	r2, r2, #12
   25a36:	3901      	subs	r1, #1
   25a38:	e008      	b.n	25a4c <nonblocking_read_sm+0x98>
   25a3a:	6813      	ldr	r3, [r2, #0]
   25a3c:	f413 6f70 	tst.w	r3, #3840	@ 0xf00
   25a40:	d107      	bne.n	25a52 <nonblocking_read_sm+0x9e>
   25a42:	3501      	adds	r5, #1
   25a44:	42a8      	cmp	r0, r5
   25a46:	f801 3f01 	strb.w	r3, [r1, #1]!
   25a4a:	d002      	beq.n	25a52 <nonblocking_read_sm+0x9e>
   25a4c:	6993      	ldr	r3, [r2, #24]
   25a4e:	06db      	lsls	r3, r3, #27
   25a50:	d5f3      	bpl.n	25a3a <nonblocking_read_sm+0x86>
   25a52:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   25a54:	442b      	add	r3, r5
   25a56:	6523      	str	r3, [r4, #80]	@ 0x50
   25a58:	9802      	ldr	r0, [sp, #8]
   25a5a:	f7fd f987 	bl	22d6c <am_hal_interrupt_master_set>
   25a5e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
   25a60:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   25a62:	601a      	str	r2, [r3, #0]
   25a64:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   25a66:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
   25a68:	429a      	cmp	r2, r3
   25a6a:	d1ac      	bne.n	259c6 <nonblocking_read_sm+0x12>
   25a6c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
   25a6e:	2000      	movs	r0, #0
   25a70:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c
   25a74:	2b00      	cmp	r3, #0
   25a76:	d0a6      	beq.n	259c6 <nonblocking_read_sm+0x12>
   25a78:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
   25a7a:	b00b      	add	sp, #44	@ 0x2c
   25a7c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   25a80:	4718      	bx	r3
   25a82:	f8d4 50a4 	ldr.w	r5, [r4, #164]	@ 0xa4
   25a86:	4285      	cmp	r5, r0
   25a88:	bf28      	it	cs
   25a8a:	4605      	movcs	r5, r0
   25a8c:	462a      	mov	r2, r5
   25a8e:	f104 009c 	add.w	r0, r4, #156	@ 0x9c
   25a92:	f001 fb13 	bl	270bc <am_hal_queue_item_get>
   25a96:	2800      	cmp	r0, #0
   25a98:	d1db      	bne.n	25a52 <nonblocking_read_sm+0x9e>
   25a9a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
   25a9c:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c
   25aa0:	2b00      	cmp	r3, #0
   25aa2:	d0d6      	beq.n	25a52 <nonblocking_read_sm+0x9e>
   25aa4:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
   25aa6:	2001      	movs	r0, #1
   25aa8:	e7e7      	b.n	25a7a <nonblocking_read_sm+0xc6>
   25aaa:	4605      	mov	r5, r0
   25aac:	e7d1      	b.n	25a52 <nonblocking_read_sm+0x9e>
   25aae:	bf00      	nop

00025ab0 <am_hal_uart_initialize>:
   25ab0:	2803      	cmp	r0, #3
   25ab2:	d82a      	bhi.n	25b0a <am_hal_uart_initialize+0x5a>
   25ab4:	b369      	cbz	r1, 25b12 <am_hal_uart_initialize+0x62>
   25ab6:	680b      	ldr	r3, [r1, #0]
   25ab8:	b12b      	cbz	r3, 25ac6 <am_hal_uart_initialize+0x16>
   25aba:	681b      	ldr	r3, [r3, #0]
   25abc:	4a16      	ldr	r2, [pc, #88]	@ (25b18 <am_hal_uart_initialize+0x68>)
   25abe:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   25ac2:	4293      	cmp	r3, r2
   25ac4:	d023      	beq.n	25b0e <am_hal_uart_initialize+0x5e>
   25ac6:	b410      	push	{r4}
   25ac8:	22b8      	movs	r2, #184	@ 0xb8
   25aca:	4c14      	ldr	r4, [pc, #80]	@ (25b1c <am_hal_uart_initialize+0x6c>)
   25acc:	fb00 f202 	mul.w	r2, r0, r2
   25ad0:	18a3      	adds	r3, r4, r2
   25ad2:	6258      	str	r0, [r3, #36]	@ 0x24
   25ad4:	58a0      	ldr	r0, [r4, r2]
   25ad6:	f000 4c7e 	and.w	ip, r0, #4261412864	@ 0xfe000000
   25ada:	480f      	ldr	r0, [pc, #60]	@ (25b18 <am_hal_uart_initialize+0x68>)
   25adc:	ea4c 0000 	orr.w	r0, ip, r0
   25ae0:	50a0      	str	r0, [r4, r2]
   25ae2:	2000      	movs	r0, #0
   25ae4:	2201      	movs	r2, #1
   25ae6:	6798      	str	r0, [r3, #120]	@ 0x78
   25ae8:	7118      	strb	r0, [r3, #4]
   25aea:	6518      	str	r0, [r3, #80]	@ 0x50
   25aec:	6298      	str	r0, [r3, #40]	@ 0x28
   25aee:	f883 002c 	strb.w	r0, [r3, #44]	@ 0x2c
   25af2:	f883 0054 	strb.w	r0, [r3, #84]	@ 0x54
   25af6:	f883 007c 	strb.w	r0, [r3, #124]	@ 0x7c
   25afa:	f883 0098 	strb.w	r0, [r3, #152]	@ 0x98
   25afe:	f883 20b4 	strb.w	r2, [r3, #180]	@ 0xb4
   25b02:	f85d 4b04 	ldr.w	r4, [sp], #4
   25b06:	600b      	str	r3, [r1, #0]
   25b08:	4770      	bx	lr
   25b0a:	2005      	movs	r0, #5
   25b0c:	4770      	bx	lr
   25b0e:	2007      	movs	r0, #7
   25b10:	4770      	bx	lr
   25b12:	2006      	movs	r0, #6
   25b14:	4770      	bx	lr
   25b16:	bf00      	nop
   25b18:	01ea9e06 	.word	0x01ea9e06
   25b1c:	10036204 	.word	0x10036204

00025b20 <am_hal_uart_power_control>:
   25b20:	b530      	push	{r4, r5, lr}
   25b22:	4604      	mov	r4, r0
   25b24:	482b      	ldr	r0, [pc, #172]	@ (25bd4 <am_hal_uart_power_control+0xb4>)
   25b26:	6823      	ldr	r3, [r4, #0]
   25b28:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   25b2c:	4283      	cmp	r3, r0
   25b2e:	b083      	sub	sp, #12
   25b30:	d145      	bne.n	25bbe <am_hal_uart_power_control+0x9e>
   25b32:	6a65      	ldr	r5, [r4, #36]	@ 0x24
   25b34:	f105 0009 	add.w	r0, r5, #9
   25b38:	b2c0      	uxtb	r0, r0
   25b3a:	b309      	cbz	r1, 25b80 <am_hal_uart_power_control+0x60>
   25b3c:	3901      	subs	r1, #1
   25b3e:	2901      	cmp	r1, #1
   25b40:	d83a      	bhi.n	25bb8 <am_hal_uart_power_control+0x98>
   25b42:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   25b46:	351c      	adds	r5, #28
   25b48:	032d      	lsls	r5, r5, #12
   25b4a:	b17a      	cbz	r2, 25b6c <am_hal_uart_power_control+0x4c>
   25b4c:	6a2a      	ldr	r2, [r5, #32]
   25b4e:	60a2      	str	r2, [r4, #8]
   25b50:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
   25b52:	60e2      	str	r2, [r4, #12]
   25b54:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
   25b56:	6122      	str	r2, [r4, #16]
   25b58:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
   25b5a:	6162      	str	r2, [r4, #20]
   25b5c:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
   25b5e:	61a2      	str	r2, [r4, #24]
   25b60:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
   25b62:	61e2      	str	r2, [r4, #28]
   25b64:	2301      	movs	r3, #1
   25b66:	6baa      	ldr	r2, [r5, #56]	@ 0x38
   25b68:	6222      	str	r2, [r4, #32]
   25b6a:	7123      	strb	r3, [r4, #4]
   25b6c:	2400      	movs	r4, #0
   25b6e:	f04f 33ff 	mov.w	r3, #4294967295
   25b72:	646b      	str	r3, [r5, #68]	@ 0x44
   25b74:	632c      	str	r4, [r5, #48]	@ 0x30
   25b76:	f000 ff51 	bl	26a1c <am_hal_pwrctrl_periph_disable>
   25b7a:	4620      	mov	r0, r4
   25b7c:	b003      	add	sp, #12
   25b7e:	bd30      	pop	{r4, r5, pc}
   25b80:	b302      	cbz	r2, 25bc4 <am_hal_uart_power_control+0xa4>
   25b82:	7923      	ldrb	r3, [r4, #4]
   25b84:	b323      	cbz	r3, 25bd0 <am_hal_uart_power_control+0xb0>
   25b86:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   25b8a:	9101      	str	r1, [sp, #4]
   25b8c:	351c      	adds	r5, #28
   25b8e:	f000 fe7b 	bl	26888 <am_hal_pwrctrl_periph_enable>
   25b92:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
   25b96:	032d      	lsls	r5, r5, #12
   25b98:	9901      	ldr	r1, [sp, #4]
   25b9a:	622a      	str	r2, [r5, #32]
   25b9c:	626b      	str	r3, [r5, #36]	@ 0x24
   25b9e:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
   25ba2:	62aa      	str	r2, [r5, #40]	@ 0x28
   25ba4:	62eb      	str	r3, [r5, #44]	@ 0x2c
   25ba6:	e9d4 2306 	ldrd	r2, r3, [r4, #24]
   25baa:	632a      	str	r2, [r5, #48]	@ 0x30
   25bac:	636b      	str	r3, [r5, #52]	@ 0x34
   25bae:	6a23      	ldr	r3, [r4, #32]
   25bb0:	63ab      	str	r3, [r5, #56]	@ 0x38
   25bb2:	4608      	mov	r0, r1
   25bb4:	7121      	strb	r1, [r4, #4]
   25bb6:	e000      	b.n	25bba <am_hal_uart_power_control+0x9a>
   25bb8:	2006      	movs	r0, #6
   25bba:	b003      	add	sp, #12
   25bbc:	bd30      	pop	{r4, r5, pc}
   25bbe:	2002      	movs	r0, #2
   25bc0:	b003      	add	sp, #12
   25bc2:	bd30      	pop	{r4, r5, pc}
   25bc4:	9201      	str	r2, [sp, #4]
   25bc6:	f000 fe5f 	bl	26888 <am_hal_pwrctrl_periph_enable>
   25bca:	9a01      	ldr	r2, [sp, #4]
   25bcc:	4610      	mov	r0, r2
   25bce:	e7f4      	b.n	25bba <am_hal_uart_power_control+0x9a>
   25bd0:	2007      	movs	r0, #7
   25bd2:	e7f2      	b.n	25bba <am_hal_uart_power_control+0x9a>
   25bd4:	01ea9e06 	.word	0x01ea9e06

00025bd8 <am_hal_uart_configure>:
   25bd8:	6803      	ldr	r3, [r0, #0]
   25bda:	4a57      	ldr	r2, [pc, #348]	@ (25d38 <am_hal_uart_configure+0x160>)
   25bdc:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   25be0:	4293      	cmp	r3, r2
   25be2:	b470      	push	{r4, r5, r6}
   25be4:	f040 8093 	bne.w	25d0e <am_hal_uart_configure+0x136>
   25be8:	6a44      	ldr	r4, [r0, #36]	@ 0x24
   25bea:	f504 2380 	add.w	r3, r4, #262144	@ 0x40000
   25bee:	331c      	adds	r3, #28
   25bf0:	031b      	lsls	r3, r3, #12
   25bf2:	2200      	movs	r2, #0
   25bf4:	631a      	str	r2, [r3, #48]	@ 0x30
   25bf6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25bf8:	f042 0208 	orr.w	r2, r2, #8
   25bfc:	631a      	str	r2, [r3, #48]	@ 0x30
   25bfe:	2c00      	cmp	r4, #0
   25c00:	d17b      	bne.n	25cfa <am_hal_uart_configure+0x122>
   25c02:	680c      	ldr	r4, [r1, #0]
   25c04:	4a4d      	ldr	r2, [pc, #308]	@ (25d3c <am_hal_uart_configure+0x164>)
   25c06:	4294      	cmp	r4, r2
   25c08:	d97b      	bls.n	25d02 <am_hal_uart_configure+0x12a>
   25c0a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25c0c:	2505      	movs	r5, #5
   25c0e:	f365 1206 	bfi	r2, r5, #4, #3
   25c12:	631a      	str	r2, [r3, #48]	@ 0x30
   25c14:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25c16:	f36f 0200 	bfc	r2, #0, #1
   25c1a:	631a      	str	r2, [r3, #48]	@ 0x30
   25c1c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25c1e:	f36f 2249 	bfc	r2, #9, #1
   25c22:	631a      	str	r2, [r3, #48]	@ 0x30
   25c24:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25c26:	f36f 2208 	bfc	r2, #8, #1
   25c2a:	631a      	str	r2, [r3, #48]	@ 0x30
   25c2c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25c2e:	f3c2 1202 	ubfx	r2, r2, #4, #3
   25c32:	3a01      	subs	r2, #1
   25c34:	b2d2      	uxtb	r2, r2
   25c36:	2a04      	cmp	r2, #4
   25c38:	d86d      	bhi.n	25d16 <am_hal_uart_configure+0x13e>
   25c3a:	4d41      	ldr	r5, [pc, #260]	@ (25d40 <am_hal_uart_configure+0x168>)
   25c3c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
   25c40:	0124      	lsls	r4, r4, #4
   25c42:	42a5      	cmp	r5, r4
   25c44:	ea4f 1285 	mov.w	r2, r5, lsl #6
   25c48:	fbb5 f6f4 	udiv	r6, r5, r4
   25c4c:	fbb2 f2f4 	udiv	r2, r2, r4
   25c50:	eba2 1286 	sub.w	r2, r2, r6, lsl #6
   25c54:	d369      	bcc.n	25d2a <am_hal_uart_configure+0x152>
   25c56:	625e      	str	r6, [r3, #36]	@ 0x24
   25c58:	629a      	str	r2, [r3, #40]	@ 0x28
   25c5a:	0892      	lsrs	r2, r2, #2
   25c5c:	eb02 1206 	add.w	r2, r2, r6, lsl #4
   25c60:	fbb5 f2f2 	udiv	r2, r5, r2
   25c64:	6282      	str	r2, [r0, #40]	@ 0x28
   25c66:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25c68:	f36f 328e 	bfc	r2, #14, #1
   25c6c:	631a      	str	r2, [r3, #48]	@ 0x30
   25c6e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25c70:	f36f 32cf 	bfc	r2, #15, #1
   25c74:	631a      	str	r2, [r3, #48]	@ 0x30
   25c76:	6b18      	ldr	r0, [r3, #48]	@ 0x30
   25c78:	890a      	ldrh	r2, [r1, #8]
   25c7a:	4302      	orrs	r2, r0
   25c7c:	631a      	str	r2, [r3, #48]	@ 0x30
   25c7e:	794a      	ldrb	r2, [r1, #5]
   25c80:	2a00      	cmp	r2, #0
   25c82:	d050      	beq.n	25d26 <am_hal_uart_configure+0x14e>
   25c84:	2a01      	cmp	r2, #1
   25c86:	d14c      	bne.n	25d22 <am_hal_uart_configure+0x14a>
   25c88:	4614      	mov	r4, r2
   25c8a:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
   25c8c:	f36f 0000 	bfc	r0, #0, #1
   25c90:	62d8      	str	r0, [r3, #44]	@ 0x2c
   25c92:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
   25c94:	f364 0041 	bfi	r0, r4, #1, #1
   25c98:	62d8      	str	r0, [r3, #44]	@ 0x2c
   25c9a:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
   25c9c:	f362 0082 	bfi	r0, r2, #2, #1
   25ca0:	62d8      	str	r0, [r3, #44]	@ 0x2c
   25ca2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   25ca4:	7988      	ldrb	r0, [r1, #6]
   25ca6:	f360 02c3 	bfi	r2, r0, #3, #1
   25caa:	62da      	str	r2, [r3, #44]	@ 0x2c
   25cac:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   25cae:	f042 0210 	orr.w	r2, r2, #16
   25cb2:	62da      	str	r2, [r3, #44]	@ 0x2c
   25cb4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   25cb6:	7908      	ldrb	r0, [r1, #4]
   25cb8:	f360 1246 	bfi	r2, r0, #5, #2
   25cbc:	62da      	str	r2, [r3, #44]	@ 0x2c
   25cbe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   25cc0:	f36f 12c7 	bfc	r2, #7, #1
   25cc4:	62da      	str	r2, [r3, #44]	@ 0x2c
   25cc6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
   25cc8:	7a88      	ldrb	r0, [r1, #10]
   25cca:	f360 0202 	bfi	r2, r0, #0, #3
   25cce:	635a      	str	r2, [r3, #52]	@ 0x34
   25cd0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
   25cd2:	7ac9      	ldrb	r1, [r1, #11]
   25cd4:	f361 02c5 	bfi	r2, r1, #3, #3
   25cd8:	635a      	str	r2, [r3, #52]	@ 0x34
   25cda:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25cdc:	f042 0201 	orr.w	r2, r2, #1
   25ce0:	631a      	str	r2, [r3, #48]	@ 0x30
   25ce2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25ce4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
   25ce8:	631a      	str	r2, [r3, #48]	@ 0x30
   25cea:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25cec:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
   25cf0:	2400      	movs	r4, #0
   25cf2:	631a      	str	r2, [r3, #48]	@ 0x30
   25cf4:	4620      	mov	r0, r4
   25cf6:	bc70      	pop	{r4, r5, r6}
   25cf8:	4770      	bx	lr
   25cfa:	680c      	ldr	r4, [r1, #0]
   25cfc:	4a0f      	ldr	r2, [pc, #60]	@ (25d3c <am_hal_uart_configure+0x164>)
   25cfe:	4294      	cmp	r4, r2
   25d00:	d817      	bhi.n	25d32 <am_hal_uart_configure+0x15a>
   25d02:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
   25d04:	2501      	movs	r5, #1
   25d06:	f365 1206 	bfi	r2, r5, #4, #3
   25d0a:	631a      	str	r2, [r3, #48]	@ 0x30
   25d0c:	e782      	b.n	25c14 <am_hal_uart_configure+0x3c>
   25d0e:	2402      	movs	r4, #2
   25d10:	4620      	mov	r0, r4
   25d12:	bc70      	pop	{r4, r5, r6}
   25d14:	4770      	bx	lr
   25d16:	4c0b      	ldr	r4, [pc, #44]	@ (25d44 <am_hal_uart_configure+0x16c>)
   25d18:	2300      	movs	r3, #0
   25d1a:	6283      	str	r3, [r0, #40]	@ 0x28
   25d1c:	4620      	mov	r0, r4
   25d1e:	bc70      	pop	{r4, r5, r6}
   25d20:	4770      	bx	lr
   25d22:	2200      	movs	r2, #0
   25d24:	e7b0      	b.n	25c88 <am_hal_uart_configure+0xb0>
   25d26:	2401      	movs	r4, #1
   25d28:	e7af      	b.n	25c8a <am_hal_uart_configure+0xb2>
   25d2a:	2300      	movs	r3, #0
   25d2c:	4c06      	ldr	r4, [pc, #24]	@ (25d48 <am_hal_uart_configure+0x170>)
   25d2e:	6283      	str	r3, [r0, #40]	@ 0x28
   25d30:	e7e0      	b.n	25cf4 <am_hal_uart_configure+0x11c>
   25d32:	2405      	movs	r4, #5
   25d34:	e7de      	b.n	25cf4 <am_hal_uart_configure+0x11c>
   25d36:	bf00      	nop
   25d38:	01ea9e06 	.word	0x01ea9e06
   25d3c:	0016e360 	.word	0x0016e360
   25d40:	00028570 	.word	0x00028570
   25d44:	08000002 	.word	0x08000002
   25d48:	08000003 	.word	0x08000003

00025d4c <am_hal_uart_transfer>:
   25d4c:	b570      	push	{r4, r5, r6, lr}
   25d4e:	780b      	ldrb	r3, [r1, #0]
   25d50:	b084      	sub	sp, #16
   25d52:	460d      	mov	r5, r1
   25d54:	4604      	mov	r4, r0
   25d56:	2b03      	cmp	r3, #3
   25d58:	f200 8115 	bhi.w	25f86 <am_hal_uart_transfer+0x23a>
   25d5c:	e8df f003 	tbb	[pc, r3]
   25d60:	0235b26a 	.word	0x0235b26a
   25d64:	2800      	cmp	r0, #0
   25d66:	f000 80f2 	beq.w	25f4e <am_hal_uart_transfer+0x202>
   25d6a:	6803      	ldr	r3, [r0, #0]
   25d6c:	4a87      	ldr	r2, [pc, #540]	@ (25f8c <am_hal_uart_transfer+0x240>)
   25d6e:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   25d72:	4293      	cmp	r3, r2
   25d74:	f040 80eb 	bne.w	25f4e <am_hal_uart_transfer+0x202>
   25d78:	68cb      	ldr	r3, [r1, #12]
   25d7a:	b10b      	cbz	r3, 25d80 <am_hal_uart_transfer+0x34>
   25d7c:	2200      	movs	r2, #0
   25d7e:	601a      	str	r2, [r3, #0]
   25d80:	f7fc fff0 	bl	22d64 <am_hal_interrupt_master_disable>
   25d84:	f894 602c 	ldrb.w	r6, [r4, #44]	@ 0x2c
   25d88:	9003      	str	r0, [sp, #12]
   25d8a:	2e00      	cmp	r6, #0
   25d8c:	f040 80f1 	bne.w	25f72 <am_hal_uart_transfer+0x226>
   25d90:	2301      	movs	r3, #1
   25d92:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
   25d96:	782b      	ldrb	r3, [r5, #0]
   25d98:	f884 3030 	strb.w	r3, [r4, #48]	@ 0x30
   25d9c:	e9d5 2301 	ldrd	r2, r3, [r5, #4]
   25da0:	e9c4 230d 	strd	r2, r3, [r4, #52]	@ 0x34
   25da4:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
   25da8:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
   25dac:	e9d5 1205 	ldrd	r1, r2, [r5, #20]
   25db0:	69eb      	ldr	r3, [r5, #28]
   25db2:	6526      	str	r6, [r4, #80]	@ 0x50
   25db4:	e9c4 1211 	strd	r1, r2, [r4, #68]	@ 0x44
   25db8:	9803      	ldr	r0, [sp, #12]
   25dba:	64e3      	str	r3, [r4, #76]	@ 0x4c
   25dbc:	f7fc ffd6 	bl	22d6c <am_hal_interrupt_master_set>
   25dc0:	4620      	mov	r0, r4
   25dc2:	f7ff fdf7 	bl	259b4 <nonblocking_read_sm>
   25dc6:	4630      	mov	r0, r6
   25dc8:	e0c2      	b.n	25f50 <am_hal_uart_transfer+0x204>
   25dca:	2800      	cmp	r0, #0
   25dcc:	f000 80bf 	beq.w	25f4e <am_hal_uart_transfer+0x202>
   25dd0:	6803      	ldr	r3, [r0, #0]
   25dd2:	4a6e      	ldr	r2, [pc, #440]	@ (25f8c <am_hal_uart_transfer+0x240>)
   25dd4:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   25dd8:	4293      	cmp	r3, r2
   25dda:	f040 80b8 	bne.w	25f4e <am_hal_uart_transfer+0x202>
   25dde:	68cb      	ldr	r3, [r1, #12]
   25de0:	b10b      	cbz	r3, 25de6 <am_hal_uart_transfer+0x9a>
   25de2:	2200      	movs	r2, #0
   25de4:	601a      	str	r2, [r3, #0]
   25de6:	f7fc ffbd 	bl	22d64 <am_hal_interrupt_master_disable>
   25dea:	f894 6054 	ldrb.w	r6, [r4, #84]	@ 0x54
   25dee:	9002      	str	r0, [sp, #8]
   25df0:	2e00      	cmp	r6, #0
   25df2:	f040 80c3 	bne.w	25f7c <am_hal_uart_transfer+0x230>
   25df6:	2301      	movs	r3, #1
   25df8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
   25dfc:	782b      	ldrb	r3, [r5, #0]
   25dfe:	f884 3058 	strb.w	r3, [r4, #88]	@ 0x58
   25e02:	e9d5 2301 	ldrd	r2, r3, [r5, #4]
   25e06:	e9c4 2317 	strd	r2, r3, [r4, #92]	@ 0x5c
   25e0a:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
   25e0e:	e9c4 2319 	strd	r2, r3, [r4, #100]	@ 0x64
   25e12:	e9d5 1205 	ldrd	r1, r2, [r5, #20]
   25e16:	69eb      	ldr	r3, [r5, #28]
   25e18:	67a6      	str	r6, [r4, #120]	@ 0x78
   25e1a:	f884 60b4 	strb.w	r6, [r4, #180]	@ 0xb4
   25e1e:	e9c4 121b 	strd	r1, r2, [r4, #108]	@ 0x6c
   25e22:	9802      	ldr	r0, [sp, #8]
   25e24:	6763      	str	r3, [r4, #116]	@ 0x74
   25e26:	f7fc ffa1 	bl	22d6c <am_hal_interrupt_master_set>
   25e2a:	4620      	mov	r0, r4
   25e2c:	f7ff fd3c 	bl	258a8 <nonblocking_write_sm>
   25e30:	4630      	mov	r0, r6
   25e32:	e08d      	b.n	25f50 <am_hal_uart_transfer+0x204>
   25e34:	2800      	cmp	r0, #0
   25e36:	f000 808a 	beq.w	25f4e <am_hal_uart_transfer+0x202>
   25e3a:	6803      	ldr	r3, [r0, #0]
   25e3c:	4a53      	ldr	r2, [pc, #332]	@ (25f8c <am_hal_uart_transfer+0x240>)
   25e3e:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   25e42:	4293      	cmp	r3, r2
   25e44:	f040 8083 	bne.w	25f4e <am_hal_uart_transfer+0x202>
   25e48:	68cb      	ldr	r3, [r1, #12]
   25e4a:	b10b      	cbz	r3, 25e50 <am_hal_uart_transfer+0x104>
   25e4c:	2200      	movs	r2, #0
   25e4e:	601a      	str	r2, [r3, #0]
   25e50:	f7fc ff88 	bl	22d64 <am_hal_interrupt_master_disable>
   25e54:	f894 6054 	ldrb.w	r6, [r4, #84]	@ 0x54
   25e58:	9000      	str	r0, [sp, #0]
   25e5a:	2e00      	cmp	r6, #0
   25e5c:	d17a      	bne.n	25f54 <am_hal_uart_transfer+0x208>
   25e5e:	2301      	movs	r3, #1
   25e60:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
   25e64:	782b      	ldrb	r3, [r5, #0]
   25e66:	f884 3058 	strb.w	r3, [r4, #88]	@ 0x58
   25e6a:	e9d5 2301 	ldrd	r2, r3, [r5, #4]
   25e6e:	e9c4 2317 	strd	r2, r3, [r4, #92]	@ 0x5c
   25e72:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
   25e76:	e9c4 2319 	strd	r2, r3, [r4, #100]	@ 0x64
   25e7a:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
   25e7e:	e9c4 231b 	strd	r2, r3, [r4, #108]	@ 0x6c
   25e82:	69eb      	ldr	r3, [r5, #28]
   25e84:	67a6      	str	r6, [r4, #120]	@ 0x78
   25e86:	f884 60b4 	strb.w	r6, [r4, #180]	@ 0xb4
   25e8a:	9800      	ldr	r0, [sp, #0]
   25e8c:	6763      	str	r3, [r4, #116]	@ 0x74
   25e8e:	f7fc ff6d 	bl	22d6c <am_hal_interrupt_master_set>
   25e92:	4620      	mov	r0, r4
   25e94:	f7ff fd08 	bl	258a8 <nonblocking_write_sm>
   25e98:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
   25e9c:	2b00      	cmp	r3, #0
   25e9e:	d053      	beq.n	25f48 <am_hal_uart_transfer+0x1fc>
   25ea0:	4620      	mov	r0, r4
   25ea2:	f7ff fd01 	bl	258a8 <nonblocking_write_sm>
   25ea6:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
   25eaa:	f000 f919 	bl	260e0 <am_hal_delay_us>
   25eae:	692b      	ldr	r3, [r5, #16]
   25eb0:	1c59      	adds	r1, r3, #1
   25eb2:	d0f1      	beq.n	25e98 <am_hal_uart_transfer+0x14c>
   25eb4:	3601      	adds	r6, #1
   25eb6:	42b3      	cmp	r3, r6
   25eb8:	d1ee      	bne.n	25e98 <am_hal_uart_transfer+0x14c>
   25eba:	2300      	movs	r3, #0
   25ebc:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
   25ec0:	2004      	movs	r0, #4
   25ec2:	e045      	b.n	25f50 <am_hal_uart_transfer+0x204>
   25ec4:	2800      	cmp	r0, #0
   25ec6:	d042      	beq.n	25f4e <am_hal_uart_transfer+0x202>
   25ec8:	6803      	ldr	r3, [r0, #0]
   25eca:	4a30      	ldr	r2, [pc, #192]	@ (25f8c <am_hal_uart_transfer+0x240>)
   25ecc:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   25ed0:	4293      	cmp	r3, r2
   25ed2:	d13c      	bne.n	25f4e <am_hal_uart_transfer+0x202>
   25ed4:	68cb      	ldr	r3, [r1, #12]
   25ed6:	b10b      	cbz	r3, 25edc <am_hal_uart_transfer+0x190>
   25ed8:	2200      	movs	r2, #0
   25eda:	601a      	str	r2, [r3, #0]
   25edc:	f7fc ff42 	bl	22d64 <am_hal_interrupt_master_disable>
   25ee0:	f894 602c 	ldrb.w	r6, [r4, #44]	@ 0x2c
   25ee4:	9001      	str	r0, [sp, #4]
   25ee6:	2e00      	cmp	r6, #0
   25ee8:	d13e      	bne.n	25f68 <am_hal_uart_transfer+0x21c>
   25eea:	2301      	movs	r3, #1
   25eec:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
   25ef0:	782b      	ldrb	r3, [r5, #0]
   25ef2:	f884 3030 	strb.w	r3, [r4, #48]	@ 0x30
   25ef6:	e9d5 2301 	ldrd	r2, r3, [r5, #4]
   25efa:	e9c4 230d 	strd	r2, r3, [r4, #52]	@ 0x34
   25efe:	e9d5 2303 	ldrd	r2, r3, [r5, #12]
   25f02:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
   25f06:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
   25f0a:	e9c4 2311 	strd	r2, r3, [r4, #68]	@ 0x44
   25f0e:	69eb      	ldr	r3, [r5, #28]
   25f10:	6526      	str	r6, [r4, #80]	@ 0x50
   25f12:	64e3      	str	r3, [r4, #76]	@ 0x4c
   25f14:	9801      	ldr	r0, [sp, #4]
   25f16:	f7fc ff29 	bl	22d6c <am_hal_interrupt_master_set>
   25f1a:	4620      	mov	r0, r4
   25f1c:	f7ff fd4a 	bl	259b4 <nonblocking_read_sm>
   25f20:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
   25f24:	b183      	cbz	r3, 25f48 <am_hal_uart_transfer+0x1fc>
   25f26:	4620      	mov	r0, r4
   25f28:	f7ff fd44 	bl	259b4 <nonblocking_read_sm>
   25f2c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
   25f30:	f000 f8d6 	bl	260e0 <am_hal_delay_us>
   25f34:	692b      	ldr	r3, [r5, #16]
   25f36:	1c5a      	adds	r2, r3, #1
   25f38:	d002      	beq.n	25f40 <am_hal_uart_transfer+0x1f4>
   25f3a:	3601      	adds	r6, #1
   25f3c:	42b3      	cmp	r3, r6
   25f3e:	d00e      	beq.n	25f5e <am_hal_uart_transfer+0x212>
   25f40:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
   25f44:	2b00      	cmp	r3, #0
   25f46:	d1ee      	bne.n	25f26 <am_hal_uart_transfer+0x1da>
   25f48:	2000      	movs	r0, #0
   25f4a:	b004      	add	sp, #16
   25f4c:	bd70      	pop	{r4, r5, r6, pc}
   25f4e:	2002      	movs	r0, #2
   25f50:	b004      	add	sp, #16
   25f52:	bd70      	pop	{r4, r5, r6, pc}
   25f54:	9800      	ldr	r0, [sp, #0]
   25f56:	f7fc ff09 	bl	22d6c <am_hal_interrupt_master_set>
   25f5a:	480d      	ldr	r0, [pc, #52]	@ (25f90 <am_hal_uart_transfer+0x244>)
   25f5c:	e7f8      	b.n	25f50 <am_hal_uart_transfer+0x204>
   25f5e:	2300      	movs	r3, #0
   25f60:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
   25f64:	2004      	movs	r0, #4
   25f66:	e7f3      	b.n	25f50 <am_hal_uart_transfer+0x204>
   25f68:	9801      	ldr	r0, [sp, #4]
   25f6a:	f7fc feff 	bl	22d6c <am_hal_interrupt_master_set>
   25f6e:	4809      	ldr	r0, [pc, #36]	@ (25f94 <am_hal_uart_transfer+0x248>)
   25f70:	e7ee      	b.n	25f50 <am_hal_uart_transfer+0x204>
   25f72:	9803      	ldr	r0, [sp, #12]
   25f74:	f7fc fefa 	bl	22d6c <am_hal_interrupt_master_set>
   25f78:	4806      	ldr	r0, [pc, #24]	@ (25f94 <am_hal_uart_transfer+0x248>)
   25f7a:	e7e9      	b.n	25f50 <am_hal_uart_transfer+0x204>
   25f7c:	9802      	ldr	r0, [sp, #8]
   25f7e:	f7fc fef5 	bl	22d6c <am_hal_interrupt_master_set>
   25f82:	4803      	ldr	r0, [pc, #12]	@ (25f90 <am_hal_uart_transfer+0x244>)
   25f84:	e7e4      	b.n	25f50 <am_hal_uart_transfer+0x204>
   25f86:	2001      	movs	r0, #1
   25f88:	e7e2      	b.n	25f50 <am_hal_uart_transfer+0x204>
   25f8a:	bf00      	nop
   25f8c:	01ea9e06 	.word	0x01ea9e06
   25f90:	08000004 	.word	0x08000004
   25f94:	08000005 	.word	0x08000005

00025f98 <am_hal_uart_tx_flush>:
   25f98:	f890 30b4 	ldrb.w	r3, [r0, #180]	@ 0xb4
   25f9c:	2b00      	cmp	r3, #0
   25f9e:	d142      	bne.n	26026 <am_hal_uart_tx_flush+0x8e>
   25fa0:	b570      	push	{r4, r5, r6, lr}
   25fa2:	6a45      	ldr	r5, [r0, #36]	@ 0x24
   25fa4:	f505 2580 	add.w	r5, r5, #262144	@ 0x40000
   25fa8:	351c      	adds	r5, #28
   25faa:	032d      	lsls	r5, r5, #12
   25fac:	4604      	mov	r4, r0
   25fae:	6bab      	ldr	r3, [r5, #56]	@ 0x38
   25fb0:	07d9      	lsls	r1, r3, #31
   25fb2:	d512      	bpl.n	25fda <am_hal_uart_tx_flush+0x42>
   25fb4:	f890 30b4 	ldrb.w	r3, [r0, #180]	@ 0xb4
   25fb8:	b96b      	cbnz	r3, 25fd6 <am_hal_uart_tx_flush+0x3e>
   25fba:	4d1c      	ldr	r5, [pc, #112]	@ (2602c <am_hal_uart_tx_flush+0x94>)
   25fbc:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
   25fbe:	fbb5 f3f3 	udiv	r3, r5, r3
   25fc2:	3301      	adds	r3, #1
   25fc4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
   25fc8:	0058      	lsls	r0, r3, #1
   25fca:	f000 f889 	bl	260e0 <am_hal_delay_us>
   25fce:	f894 30b4 	ldrb.w	r3, [r4, #180]	@ 0xb4
   25fd2:	2b00      	cmp	r3, #0
   25fd4:	d0f2      	beq.n	25fbc <am_hal_uart_tx_flush+0x24>
   25fd6:	2000      	movs	r0, #0
   25fd8:	bd70      	pop	{r4, r5, r6, pc}
   25fda:	f890 307c 	ldrb.w	r3, [r0, #124]	@ 0x7c
   25fde:	b183      	cbz	r3, 26002 <am_hal_uart_tx_flush+0x6a>
   25fe0:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
   25fe4:	b16b      	cbz	r3, 26002 <am_hal_uart_tx_flush+0x6a>
   25fe6:	4e11      	ldr	r6, [pc, #68]	@ (2602c <am_hal_uart_tx_flush+0x94>)
   25fe8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
   25fea:	fbb6 f0f0 	udiv	r0, r6, r0
   25fee:	3001      	adds	r0, #1
   25ff0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   25ff4:	0040      	lsls	r0, r0, #1
   25ff6:	f000 f873 	bl	260e0 <am_hal_delay_us>
   25ffa:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
   25ffe:	2b00      	cmp	r3, #0
   26000:	d1f2      	bne.n	25fe8 <am_hal_uart_tx_flush+0x50>
   26002:	69ab      	ldr	r3, [r5, #24]
   26004:	071a      	lsls	r2, r3, #28
   26006:	d5e6      	bpl.n	25fd6 <am_hal_uart_tx_flush+0x3e>
   26008:	4e08      	ldr	r6, [pc, #32]	@ (2602c <am_hal_uart_tx_flush+0x94>)
   2600a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
   2600c:	fbb6 f3f3 	udiv	r3, r6, r3
   26010:	3301      	adds	r3, #1
   26012:	eb03 0383 	add.w	r3, r3, r3, lsl #2
   26016:	0058      	lsls	r0, r3, #1
   26018:	f000 f862 	bl	260e0 <am_hal_delay_us>
   2601c:	69ab      	ldr	r3, [r5, #24]
   2601e:	071b      	lsls	r3, r3, #28
   26020:	d4f3      	bmi.n	2600a <am_hal_uart_tx_flush+0x72>
   26022:	2000      	movs	r0, #0
   26024:	bd70      	pop	{r4, r5, r6, pc}
   26026:	2000      	movs	r0, #0
   26028:	4770      	bx	lr
   2602a:	bf00      	nop
   2602c:	000f4240 	.word	0x000f4240

00026030 <am_hal_uart_interrupt_clear>:
   26030:	6803      	ldr	r3, [r0, #0]
   26032:	4a07      	ldr	r2, [pc, #28]	@ (26050 <am_hal_uart_interrupt_clear+0x20>)
   26034:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   26038:	4293      	cmp	r3, r2
   2603a:	d107      	bne.n	2604c <am_hal_uart_interrupt_clear+0x1c>
   2603c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
   2603e:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   26042:	331c      	adds	r3, #28
   26044:	031b      	lsls	r3, r3, #12
   26046:	2000      	movs	r0, #0
   26048:	6459      	str	r1, [r3, #68]	@ 0x44
   2604a:	4770      	bx	lr
   2604c:	2002      	movs	r0, #2
   2604e:	4770      	bx	lr
   26050:	01ea9e06 	.word	0x01ea9e06

00026054 <am_hal_uart_interrupt_status_get>:
   26054:	6803      	ldr	r3, [r0, #0]
   26056:	b410      	push	{r4}
   26058:	4c0b      	ldr	r4, [pc, #44]	@ (26088 <am_hal_uart_interrupt_status_get+0x34>)
   2605a:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   2605e:	42a3      	cmp	r3, r4
   26060:	d10d      	bne.n	2607e <am_hal_uart_interrupt_status_get+0x2a>
   26062:	6a43      	ldr	r3, [r0, #36]	@ 0x24
   26064:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   26068:	331c      	adds	r3, #28
   2606a:	031b      	lsls	r3, r3, #12
   2606c:	b92a      	cbnz	r2, 2607a <am_hal_uart_interrupt_status_get+0x26>
   2606e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
   26070:	f85d 4b04 	ldr.w	r4, [sp], #4
   26074:	600b      	str	r3, [r1, #0]
   26076:	2000      	movs	r0, #0
   26078:	4770      	bx	lr
   2607a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
   2607c:	e7f8      	b.n	26070 <am_hal_uart_interrupt_status_get+0x1c>
   2607e:	2002      	movs	r0, #2
   26080:	f85d 4b04 	ldr.w	r4, [sp], #4
   26084:	4770      	bx	lr
   26086:	bf00      	nop
   26088:	01ea9e06 	.word	0x01ea9e06

0002608c <am_hal_uart_interrupt_service>:
   2608c:	b320      	cbz	r0, 260d8 <am_hal_uart_interrupt_service+0x4c>
   2608e:	b538      	push	{r3, r4, r5, lr}
   26090:	6803      	ldr	r3, [r0, #0]
   26092:	4a12      	ldr	r2, [pc, #72]	@ (260dc <am_hal_uart_interrupt_service+0x50>)
   26094:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   26098:	4293      	cmp	r3, r2
   2609a:	4605      	mov	r5, r0
   2609c:	d10e      	bne.n	260bc <am_hal_uart_interrupt_service+0x30>
   2609e:	f011 0f50 	tst.w	r1, #80	@ 0x50
   260a2:	460c      	mov	r4, r1
   260a4:	d113      	bne.n	260ce <am_hal_uart_interrupt_service+0x42>
   260a6:	06a3      	lsls	r3, r4, #26
   260a8:	d40a      	bmi.n	260c0 <am_hal_uart_interrupt_service+0x34>
   260aa:	f014 0001 	ands.w	r0, r4, #1
   260ae:	d003      	beq.n	260b8 <am_hal_uart_interrupt_service+0x2c>
   260b0:	2301      	movs	r3, #1
   260b2:	f885 30b4 	strb.w	r3, [r5, #180]	@ 0xb4
   260b6:	bd38      	pop	{r3, r4, r5, pc}
   260b8:	2001      	movs	r0, #1
   260ba:	bd38      	pop	{r3, r4, r5, pc}
   260bc:	2002      	movs	r0, #2
   260be:	bd38      	pop	{r3, r4, r5, pc}
   260c0:	4628      	mov	r0, r5
   260c2:	f7ff fbf1 	bl	258a8 <nonblocking_write_sm>
   260c6:	f014 0001 	ands.w	r0, r4, #1
   260ca:	d0f5      	beq.n	260b8 <am_hal_uart_interrupt_service+0x2c>
   260cc:	e7f0      	b.n	260b0 <am_hal_uart_interrupt_service+0x24>
   260ce:	f7ff fc71 	bl	259b4 <nonblocking_read_sm>
   260d2:	06a3      	lsls	r3, r4, #26
   260d4:	d5e9      	bpl.n	260aa <am_hal_uart_interrupt_service+0x1e>
   260d6:	e7f3      	b.n	260c0 <am_hal_uart_interrupt_service+0x34>
   260d8:	2002      	movs	r0, #2
   260da:	4770      	bx	lr
   260dc:	01ea9e06 	.word	0x01ea9e06

000260e0 <am_hal_delay_us>:
   260e0:	4b09      	ldr	r3, [pc, #36]	@ (26108 <am_hal_delay_us+0x28>)
   260e2:	681b      	ldr	r3, [r3, #0]
   260e4:	f3c3 03c1 	ubfx	r3, r3, #3, #2
   260e8:	2b02      	cmp	r3, #2
   260ea:	bf0b      	itete	eq
   260ec:	0182      	lsleq	r2, r0, #6
   260ee:	0142      	lslne	r2, r0, #5
   260f0:	2015      	moveq	r0, #21
   260f2:	200f      	movne	r0, #15
   260f4:	4282      	cmp	r2, r0
   260f6:	d906      	bls.n	26106 <am_hal_delay_us+0x26>
   260f8:	4b04      	ldr	r3, [pc, #16]	@ (2610c <am_hal_delay_us+0x2c>)
   260fa:	b082      	sub	sp, #8
   260fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
   260fe:	9301      	str	r3, [sp, #4]
   26100:	1a10      	subs	r0, r2, r0
   26102:	b002      	add	sp, #8
   26104:	4718      	bx	r3
   26106:	4770      	bx	lr
   26108:	40021000 	.word	0x40021000
   2610c:	00028744 	.word	0x00028744

00026110 <am_hal_delay_us_status_change>:
   26110:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   26114:	460c      	mov	r4, r1
   26116:	6809      	ldr	r1, [r1, #0]
   26118:	4011      	ands	r1, r2
   2611a:	428b      	cmp	r3, r1
   2611c:	d01a      	beq.n	26154 <am_hal_delay_us_status_change+0x44>
   2611e:	f100 39ff 	add.w	r9, r0, #4294967295
   26122:	b1d0      	cbz	r0, 2615a <am_hal_delay_us_status_change+0x4a>
   26124:	461e      	mov	r6, r3
   26126:	4b0e      	ldr	r3, [pc, #56]	@ (26160 <am_hal_delay_us_status_change+0x50>)
   26128:	4f0e      	ldr	r7, [pc, #56]	@ (26164 <am_hal_delay_us_status_change+0x54>)
   2612a:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
   2612e:	4615      	mov	r5, r2
   26130:	e002      	b.n	26138 <am_hal_delay_us_status_change+0x28>
   26132:	f1b9 3fff 	cmp.w	r9, #4294967295
   26136:	d010      	beq.n	2615a <am_hal_delay_us_status_change+0x4a>
   26138:	6838      	ldr	r0, [r7, #0]
   2613a:	f3c0 00c1 	ubfx	r0, r0, #3, #2
   2613e:	2802      	cmp	r0, #2
   26140:	bf14      	ite	ne
   26142:	2011      	movne	r0, #17
   26144:	202b      	moveq	r0, #43	@ 0x2b
   26146:	47c0      	blx	r8
   26148:	6820      	ldr	r0, [r4, #0]
   2614a:	4028      	ands	r0, r5
   2614c:	42b0      	cmp	r0, r6
   2614e:	f109 39ff 	add.w	r9, r9, #4294967295
   26152:	d1ee      	bne.n	26132 <am_hal_delay_us_status_change+0x22>
   26154:	2000      	movs	r0, #0
   26156:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   2615a:	2004      	movs	r0, #4
   2615c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   26160:	00028744 	.word	0x00028744
   26164:	40021000 	.word	0x40021000

00026168 <am_hal_delay_us_status_check>:
   26168:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2616c:	f89d c020 	ldrb.w	ip, [sp, #32]
   26170:	f8df 8068 	ldr.w	r8, [pc, #104]	@ 261dc <am_hal_delay_us_status_check+0x74>
   26174:	f8df 9068 	ldr.w	r9, [pc, #104]	@ 261e0 <am_hal_delay_us_status_check+0x78>
   26178:	4604      	mov	r4, r0
   2617a:	460d      	mov	r5, r1
   2617c:	4616      	mov	r6, r2
   2617e:	461f      	mov	r7, r3
   26180:	f1bc 0f00 	cmp.w	ip, #0
   26184:	d00d      	beq.n	261a2 <am_hal_delay_us_status_check+0x3a>
   26186:	e020      	b.n	261ca <am_hal_delay_us_status_check+0x62>
   26188:	b324      	cbz	r4, 261d4 <am_hal_delay_us_status_check+0x6c>
   2618a:	f8d8 3000 	ldr.w	r3, [r8]
   2618e:	f8d9 2024 	ldr.w	r2, [r9, #36]	@ 0x24
   26192:	f3c3 03c1 	ubfx	r3, r3, #3, #2
   26196:	2b02      	cmp	r3, #2
   26198:	bf14      	ite	ne
   2619a:	2011      	movne	r0, #17
   2619c:	202b      	moveq	r0, #43	@ 0x2b
   2619e:	4790      	blx	r2
   261a0:	3c01      	subs	r4, #1
   261a2:	6828      	ldr	r0, [r5, #0]
   261a4:	4030      	ands	r0, r6
   261a6:	42b8      	cmp	r0, r7
   261a8:	d0ee      	beq.n	26188 <am_hal_delay_us_status_check+0x20>
   261aa:	2000      	movs	r0, #0
   261ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   261b0:	b184      	cbz	r4, 261d4 <am_hal_delay_us_status_check+0x6c>
   261b2:	f8d8 3000 	ldr.w	r3, [r8]
   261b6:	f8d9 2024 	ldr.w	r2, [r9, #36]	@ 0x24
   261ba:	f3c3 03c1 	ubfx	r3, r3, #3, #2
   261be:	2b02      	cmp	r3, #2
   261c0:	bf14      	ite	ne
   261c2:	2011      	movne	r0, #17
   261c4:	202b      	moveq	r0, #43	@ 0x2b
   261c6:	4790      	blx	r2
   261c8:	3c01      	subs	r4, #1
   261ca:	6828      	ldr	r0, [r5, #0]
   261cc:	4030      	ands	r0, r6
   261ce:	42b8      	cmp	r0, r7
   261d0:	d1ee      	bne.n	261b0 <am_hal_delay_us_status_check+0x48>
   261d2:	e7ea      	b.n	261aa <am_hal_delay_us_status_check+0x42>
   261d4:	2004      	movs	r0, #4
   261d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   261da:	bf00      	nop
   261dc:	40021000 	.word	0x40021000
   261e0:	00028744 	.word	0x00028744

000261e4 <am_gpu_power_enable>:
   261e4:	4770      	bx	lr
   261e6:	bf00      	nop

000261e8 <am_gpu_power_disable>:
   261e8:	4770      	bx	lr
   261ea:	bf00      	nop

000261ec <am_hal_gpio_pinconfig>:
   261ec:	b5f0      	push	{r4, r5, r6, r7, lr}
   261ee:	287f      	cmp	r0, #127	@ 0x7f
   261f0:	b083      	sub	sp, #12
   261f2:	d830      	bhi.n	26256 <am_hal_gpio_pinconfig+0x6a>
   261f4:	460e      	mov	r6, r1
   261f6:	2301      	movs	r3, #1
   261f8:	f000 011f 	and.w	r1, r0, #31
   261fc:	408b      	lsls	r3, r1
   261fe:	0942      	lsrs	r2, r0, #5
   26200:	4918      	ldr	r1, [pc, #96]	@ (26264 <am_hal_gpio_pinconfig+0x78>)
   26202:	f851 5022 	ldr.w	r5, [r1, r2, lsl #2]
   26206:	401d      	ands	r5, r3
   26208:	4604      	mov	r4, r0
   2620a:	d124      	bne.n	26256 <am_hal_gpio_pinconfig+0x6a>
   2620c:	f3c6 2181 	ubfx	r1, r6, #10, #2
   26210:	2901      	cmp	r1, #1
   26212:	d904      	bls.n	2621e <am_hal_gpio_pinconfig+0x32>
   26214:	4914      	ldr	r1, [pc, #80]	@ (26268 <am_hal_gpio_pinconfig+0x7c>)
   26216:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
   2621a:	4213      	tst	r3, r2
   2621c:	d01f      	beq.n	2625e <am_hal_gpio_pinconfig+0x72>
   2621e:	f7fc fda1 	bl	22d64 <am_hal_interrupt_master_disable>
   26222:	4f12      	ldr	r7, [pc, #72]	@ (2626c <am_hal_gpio_pinconfig+0x80>)
   26224:	9000      	str	r0, [sp, #0]
   26226:	00a4      	lsls	r4, r4, #2
   26228:	2373      	movs	r3, #115	@ 0x73
   2622a:	f104 4480 	add.w	r4, r4, #1073741824	@ 0x40000000
   2622e:	f8c7 3200 	str.w	r3, [r7, #512]	@ 0x200
   26232:	f504 3480 	add.w	r4, r4, #65536	@ 0x10000
   26236:	9800      	ldr	r0, [sp, #0]
   26238:	f7fc fd98 	bl	22d6c <am_hal_interrupt_master_set>
   2623c:	6026      	str	r6, [r4, #0]
   2623e:	f7fc fd91 	bl	22d64 <am_hal_interrupt_master_disable>
   26242:	2300      	movs	r3, #0
   26244:	9001      	str	r0, [sp, #4]
   26246:	f8c7 3200 	str.w	r3, [r7, #512]	@ 0x200
   2624a:	9801      	ldr	r0, [sp, #4]
   2624c:	f7fc fd8e 	bl	22d6c <am_hal_interrupt_master_set>
   26250:	4628      	mov	r0, r5
   26252:	b003      	add	sp, #12
   26254:	bdf0      	pop	{r4, r5, r6, r7, pc}
   26256:	2505      	movs	r5, #5
   26258:	4628      	mov	r0, r5
   2625a:	b003      	add	sp, #12
   2625c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   2625e:	2507      	movs	r5, #7
   26260:	e7f6      	b.n	26250 <am_hal_gpio_pinconfig+0x64>
   26262:	bf00      	nop
   26264:	0002859c 	.word	0x0002859c
   26268:	0002858c 	.word	0x0002858c
   2626c:	40010000 	.word	0x40010000

00026270 <am_hal_gpio_state_read>:
   26270:	2901      	cmp	r1, #1
   26272:	d004      	beq.n	2627e <am_hal_gpio_state_read+0xe>
   26274:	2902      	cmp	r1, #2
   26276:	d017      	beq.n	262a8 <am_hal_gpio_state_read+0x38>
   26278:	b181      	cbz	r1, 2629c <am_hal_gpio_state_read+0x2c>
   2627a:	2006      	movs	r0, #6
   2627c:	4770      	bx	lr
   2627e:	4b0d      	ldr	r3, [pc, #52]	@ (262b4 <am_hal_gpio_state_read+0x44>)
   26280:	f3c0 1141 	ubfx	r1, r0, #5, #2
   26284:	eb03 0381 	add.w	r3, r3, r1, lsl #2
   26288:	681b      	ldr	r3, [r3, #0]
   2628a:	f000 001f 	and.w	r0, r0, #31
   2628e:	fa23 f000 	lsr.w	r0, r3, r0
   26292:	f000 0001 	and.w	r0, r0, #1
   26296:	6010      	str	r0, [r2, #0]
   26298:	2000      	movs	r0, #0
   2629a:	4770      	bx	lr
   2629c:	4b06      	ldr	r3, [pc, #24]	@ (262b8 <am_hal_gpio_state_read+0x48>)
   2629e:	f3c0 1141 	ubfx	r1, r0, #5, #2
   262a2:	eb03 0381 	add.w	r3, r3, r1, lsl #2
   262a6:	e7ef      	b.n	26288 <am_hal_gpio_state_read+0x18>
   262a8:	4b04      	ldr	r3, [pc, #16]	@ (262bc <am_hal_gpio_state_read+0x4c>)
   262aa:	f3c0 1141 	ubfx	r1, r0, #5, #2
   262ae:	eb03 0381 	add.w	r3, r3, r1, lsl #2
   262b2:	e7e9      	b.n	26288 <am_hal_gpio_state_read+0x18>
   262b4:	40010214 	.word	0x40010214
   262b8:	40010204 	.word	0x40010204
   262bc:	40010244 	.word	0x40010244

000262c0 <am_hal_gpio_state_write>:
   262c0:	b510      	push	{r4, lr}
   262c2:	4604      	mov	r4, r0
   262c4:	b086      	sub	sp, #24
   262c6:	2905      	cmp	r1, #5
   262c8:	d817      	bhi.n	262fa <am_hal_gpio_state_write+0x3a>
   262ca:	e8df f001 	tbb	[pc, r1]
   262ce:	2c19      	.short	0x2c19
   262d0:	0367543f 	.word	0x0367543f
   262d4:	f7fc fd46 	bl	22d64 <am_hal_interrupt_master_disable>
   262d8:	f3c4 1141 	ubfx	r1, r4, #5, #2
   262dc:	4a39      	ldr	r2, [pc, #228]	@ (263c4 <am_hal_gpio_state_write+0x104>)
   262de:	9005      	str	r0, [sp, #20]
   262e0:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   262e4:	f004 041f 	and.w	r4, r4, #31
   262e8:	2301      	movs	r3, #1
   262ea:	fa03 f404 	lsl.w	r4, r3, r4
   262ee:	4044      	eors	r4, r0
   262f0:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   262f4:	9805      	ldr	r0, [sp, #20]
   262f6:	f7fc fd39 	bl	22d6c <am_hal_interrupt_master_set>
   262fa:	2000      	movs	r0, #0
   262fc:	b006      	add	sp, #24
   262fe:	bd10      	pop	{r4, pc}
   26300:	f7fc fd30 	bl	22d64 <am_hal_interrupt_master_disable>
   26304:	f3c4 1141 	ubfx	r1, r4, #5, #2
   26308:	4a2f      	ldr	r2, [pc, #188]	@ (263c8 <am_hal_gpio_state_write+0x108>)
   2630a:	9000      	str	r0, [sp, #0]
   2630c:	2301      	movs	r3, #1
   2630e:	f004 041f 	and.w	r4, r4, #31
   26312:	fa03 f404 	lsl.w	r4, r3, r4
   26316:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   2631a:	9800      	ldr	r0, [sp, #0]
   2631c:	f7fc fd26 	bl	22d6c <am_hal_interrupt_master_set>
   26320:	2000      	movs	r0, #0
   26322:	b006      	add	sp, #24
   26324:	bd10      	pop	{r4, pc}
   26326:	f7fc fd1d 	bl	22d64 <am_hal_interrupt_master_disable>
   2632a:	f3c4 1141 	ubfx	r1, r4, #5, #2
   2632e:	4a27      	ldr	r2, [pc, #156]	@ (263cc <am_hal_gpio_state_write+0x10c>)
   26330:	9001      	str	r0, [sp, #4]
   26332:	2301      	movs	r3, #1
   26334:	f004 041f 	and.w	r4, r4, #31
   26338:	fa03 f404 	lsl.w	r4, r3, r4
   2633c:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   26340:	9801      	ldr	r0, [sp, #4]
   26342:	f7fc fd13 	bl	22d6c <am_hal_interrupt_master_set>
   26346:	2000      	movs	r0, #0
   26348:	b006      	add	sp, #24
   2634a:	bd10      	pop	{r4, pc}
   2634c:	f7fc fd0a 	bl	22d64 <am_hal_interrupt_master_disable>
   26350:	f3c4 1241 	ubfx	r2, r4, #5, #2
   26354:	4b1e      	ldr	r3, [pc, #120]	@ (263d0 <am_hal_gpio_state_write+0x110>)
   26356:	9002      	str	r0, [sp, #8]
   26358:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   2635c:	f004 001f 	and.w	r0, r4, #31
   26360:	2401      	movs	r4, #1
   26362:	4084      	lsls	r4, r0
   26364:	404c      	eors	r4, r1
   26366:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
   2636a:	9802      	ldr	r0, [sp, #8]
   2636c:	f7fc fcfe 	bl	22d6c <am_hal_interrupt_master_set>
   26370:	2000      	movs	r0, #0
   26372:	b006      	add	sp, #24
   26374:	bd10      	pop	{r4, pc}
   26376:	f7fc fcf5 	bl	22d64 <am_hal_interrupt_master_disable>
   2637a:	f3c4 1141 	ubfx	r1, r4, #5, #2
   2637e:	4a15      	ldr	r2, [pc, #84]	@ (263d4 <am_hal_gpio_state_write+0x114>)
   26380:	9003      	str	r0, [sp, #12]
   26382:	2301      	movs	r3, #1
   26384:	f004 041f 	and.w	r4, r4, #31
   26388:	fa03 f404 	lsl.w	r4, r3, r4
   2638c:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   26390:	9803      	ldr	r0, [sp, #12]
   26392:	f7fc fceb 	bl	22d6c <am_hal_interrupt_master_set>
   26396:	2000      	movs	r0, #0
   26398:	b006      	add	sp, #24
   2639a:	bd10      	pop	{r4, pc}
   2639c:	f7fc fce2 	bl	22d64 <am_hal_interrupt_master_disable>
   263a0:	f3c4 1141 	ubfx	r1, r4, #5, #2
   263a4:	4a0c      	ldr	r2, [pc, #48]	@ (263d8 <am_hal_gpio_state_write+0x118>)
   263a6:	9004      	str	r0, [sp, #16]
   263a8:	2301      	movs	r3, #1
   263aa:	f004 041f 	and.w	r4, r4, #31
   263ae:	fa03 f404 	lsl.w	r4, r3, r4
   263b2:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   263b6:	9804      	ldr	r0, [sp, #16]
   263b8:	f7fc fcd8 	bl	22d6c <am_hal_interrupt_master_set>
   263bc:	2000      	movs	r0, #0
   263be:	b006      	add	sp, #24
   263c0:	bd10      	pop	{r4, pc}
   263c2:	bf00      	nop
   263c4:	40010244 	.word	0x40010244
   263c8:	40010234 	.word	0x40010234
   263cc:	40010224 	.word	0x40010224
   263d0:	40010214 	.word	0x40010214
   263d4:	40010264 	.word	0x40010264
   263d8:	40010254 	.word	0x40010254

000263dc <am_hal_gpio_interrupt_control>:
   263dc:	2a00      	cmp	r2, #0
   263de:	f000 80c7 	beq.w	26570 <am_hal_gpio_interrupt_control+0x194>
   263e2:	b5f0      	push	{r4, r5, r6, r7, lr}
   263e4:	2903      	cmp	r1, #3
   263e6:	b083      	sub	sp, #12
   263e8:	460d      	mov	r5, r1
   263ea:	d872      	bhi.n	264d2 <am_hal_gpio_interrupt_control+0xf6>
   263ec:	2901      	cmp	r1, #1
   263ee:	4606      	mov	r6, r0
   263f0:	4614      	mov	r4, r2
   263f2:	d824      	bhi.n	2643e <am_hal_gpio_interrupt_control+0x62>
   263f4:	6813      	ldr	r3, [r2, #0]
   263f6:	2b7f      	cmp	r3, #127	@ 0x7f
   263f8:	d86e      	bhi.n	264d8 <am_hal_gpio_interrupt_control+0xfc>
   263fa:	0959      	lsrs	r1, r3, #5
   263fc:	4a5d      	ldr	r2, [pc, #372]	@ (26574 <am_hal_gpio_interrupt_control+0x198>)
   263fe:	f003 031f 	and.w	r3, r3, #31
   26402:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
   26406:	2701      	movs	r7, #1
   26408:	409f      	lsls	r7, r3
   2640a:	4217      	tst	r7, r2
   2640c:	d164      	bne.n	264d8 <am_hal_gpio_interrupt_control+0xfc>
   2640e:	4c5a      	ldr	r4, [pc, #360]	@ (26578 <am_hal_gpio_interrupt_control+0x19c>)
   26410:	2801      	cmp	r0, #1
   26412:	440c      	add	r4, r1
   26414:	ea4f 1404 	mov.w	r4, r4, lsl #4
   26418:	d04c      	beq.n	264b4 <am_hal_gpio_interrupt_control+0xd8>
   2641a:	f7fc fca3 	bl	22d64 <am_hal_interrupt_master_disable>
   2641e:	2d01      	cmp	r5, #1
   26420:	9001      	str	r0, [sp, #4]
   26422:	f000 809b 	beq.w	2655c <am_hal_gpio_interrupt_control+0x180>
   26426:	6823      	ldr	r3, [r4, #0]
   26428:	2e02      	cmp	r6, #2
   2642a:	ea23 0307 	bic.w	r3, r3, r7
   2642e:	ea6f 0207 	mvn.w	r2, r7
   26432:	6023      	str	r3, [r4, #0]
   26434:	d147      	bne.n	264c6 <am_hal_gpio_interrupt_control+0xea>
   26436:	6c23      	ldr	r3, [r4, #64]	@ 0x40
   26438:	4013      	ands	r3, r2
   2643a:	6423      	str	r3, [r4, #64]	@ 0x40
   2643c:	e043      	b.n	264c6 <am_hal_gpio_interrupt_control+0xea>
   2643e:	f7fc fc91 	bl	22d64 <am_hal_interrupt_master_disable>
   26442:	2d02      	cmp	r5, #2
   26444:	9001      	str	r0, [sp, #4]
   26446:	d04a      	beq.n	264de <am_hal_gpio_interrupt_control+0x102>
   26448:	2e01      	cmp	r6, #1
   2644a:	d019      	beq.n	26480 <am_hal_gpio_interrupt_control+0xa4>
   2644c:	4b4b      	ldr	r3, [pc, #300]	@ (2657c <am_hal_gpio_interrupt_control+0x1a0>)
   2644e:	6821      	ldr	r1, [r4, #0]
   26450:	f8d3 22c0 	ldr.w	r2, [r3, #704]	@ 0x2c0
   26454:	430a      	orrs	r2, r1
   26456:	f8c3 22c0 	str.w	r2, [r3, #704]	@ 0x2c0
   2645a:	6861      	ldr	r1, [r4, #4]
   2645c:	f8d3 22d0 	ldr.w	r2, [r3, #720]	@ 0x2d0
   26460:	430a      	orrs	r2, r1
   26462:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
   26466:	68a1      	ldr	r1, [r4, #8]
   26468:	f8d3 22e0 	ldr.w	r2, [r3, #736]	@ 0x2e0
   2646c:	430a      	orrs	r2, r1
   2646e:	f8c3 22e0 	str.w	r2, [r3, #736]	@ 0x2e0
   26472:	68e1      	ldr	r1, [r4, #12]
   26474:	f8d3 22f0 	ldr.w	r2, [r3, #752]	@ 0x2f0
   26478:	430a      	orrs	r2, r1
   2647a:	f8c3 22f0 	str.w	r2, [r3, #752]	@ 0x2f0
   2647e:	b316      	cbz	r6, 264c6 <am_hal_gpio_interrupt_control+0xea>
   26480:	4b3e      	ldr	r3, [pc, #248]	@ (2657c <am_hal_gpio_interrupt_control+0x1a0>)
   26482:	6820      	ldr	r0, [r4, #0]
   26484:	f8d3 1300 	ldr.w	r1, [r3, #768]	@ 0x300
   26488:	f8d3 2310 	ldr.w	r2, [r3, #784]	@ 0x310
   2648c:	4301      	orrs	r1, r0
   2648e:	f8c3 1300 	str.w	r1, [r3, #768]	@ 0x300
   26492:	6861      	ldr	r1, [r4, #4]
   26494:	430a      	orrs	r2, r1
   26496:	f8c3 2310 	str.w	r2, [r3, #784]	@ 0x310
   2649a:	68a0      	ldr	r0, [r4, #8]
   2649c:	f8d3 1320 	ldr.w	r1, [r3, #800]	@ 0x320
   264a0:	f8d3 2330 	ldr.w	r2, [r3, #816]	@ 0x330
   264a4:	4301      	orrs	r1, r0
   264a6:	f8c3 1320 	str.w	r1, [r3, #800]	@ 0x320
   264aa:	68e1      	ldr	r1, [r4, #12]
   264ac:	430a      	orrs	r2, r1
   264ae:	f8c3 2330 	str.w	r2, [r3, #816]	@ 0x330
   264b2:	e008      	b.n	264c6 <am_hal_gpio_interrupt_control+0xea>
   264b4:	f7fc fc56 	bl	22d64 <am_hal_interrupt_master_disable>
   264b8:	2d01      	cmp	r5, #1
   264ba:	9001      	str	r0, [sp, #4]
   264bc:	d054      	beq.n	26568 <am_hal_gpio_interrupt_control+0x18c>
   264be:	6c23      	ldr	r3, [r4, #64]	@ 0x40
   264c0:	ea23 0307 	bic.w	r3, r3, r7
   264c4:	6423      	str	r3, [r4, #64]	@ 0x40
   264c6:	9801      	ldr	r0, [sp, #4]
   264c8:	f7fc fc50 	bl	22d6c <am_hal_interrupt_master_set>
   264cc:	2000      	movs	r0, #0
   264ce:	b003      	add	sp, #12
   264d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   264d2:	2006      	movs	r0, #6
   264d4:	b003      	add	sp, #12
   264d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   264d8:	2005      	movs	r0, #5
   264da:	b003      	add	sp, #12
   264dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   264de:	2e01      	cmp	r6, #1
   264e0:	d01e      	beq.n	26520 <am_hal_gpio_interrupt_control+0x144>
   264e2:	4b26      	ldr	r3, [pc, #152]	@ (2657c <am_hal_gpio_interrupt_control+0x1a0>)
   264e4:	6821      	ldr	r1, [r4, #0]
   264e6:	f8d3 22c0 	ldr.w	r2, [r3, #704]	@ 0x2c0
   264ea:	ea22 0201 	bic.w	r2, r2, r1
   264ee:	f8c3 22c0 	str.w	r2, [r3, #704]	@ 0x2c0
   264f2:	6861      	ldr	r1, [r4, #4]
   264f4:	f8d3 22d0 	ldr.w	r2, [r3, #720]	@ 0x2d0
   264f8:	ea22 0201 	bic.w	r2, r2, r1
   264fc:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
   26500:	68a1      	ldr	r1, [r4, #8]
   26502:	f8d3 22e0 	ldr.w	r2, [r3, #736]	@ 0x2e0
   26506:	ea22 0201 	bic.w	r2, r2, r1
   2650a:	f8c3 22e0 	str.w	r2, [r3, #736]	@ 0x2e0
   2650e:	68e1      	ldr	r1, [r4, #12]
   26510:	f8d3 22f0 	ldr.w	r2, [r3, #752]	@ 0x2f0
   26514:	ea22 0201 	bic.w	r2, r2, r1
   26518:	f8c3 22f0 	str.w	r2, [r3, #752]	@ 0x2f0
   2651c:	2e00      	cmp	r6, #0
   2651e:	d0d2      	beq.n	264c6 <am_hal_gpio_interrupt_control+0xea>
   26520:	4b16      	ldr	r3, [pc, #88]	@ (2657c <am_hal_gpio_interrupt_control+0x1a0>)
   26522:	6820      	ldr	r0, [r4, #0]
   26524:	f8d3 1300 	ldr.w	r1, [r3, #768]	@ 0x300
   26528:	f8d3 2310 	ldr.w	r2, [r3, #784]	@ 0x310
   2652c:	ea21 0100 	bic.w	r1, r1, r0
   26530:	f8c3 1300 	str.w	r1, [r3, #768]	@ 0x300
   26534:	6861      	ldr	r1, [r4, #4]
   26536:	ea22 0201 	bic.w	r2, r2, r1
   2653a:	f8c3 2310 	str.w	r2, [r3, #784]	@ 0x310
   2653e:	68a0      	ldr	r0, [r4, #8]
   26540:	f8d3 1320 	ldr.w	r1, [r3, #800]	@ 0x320
   26544:	f8d3 2330 	ldr.w	r2, [r3, #816]	@ 0x330
   26548:	ea21 0100 	bic.w	r1, r1, r0
   2654c:	f8c3 1320 	str.w	r1, [r3, #800]	@ 0x320
   26550:	68e1      	ldr	r1, [r4, #12]
   26552:	ea22 0201 	bic.w	r2, r2, r1
   26556:	f8c3 2330 	str.w	r2, [r3, #816]	@ 0x330
   2655a:	e7b4      	b.n	264c6 <am_hal_gpio_interrupt_control+0xea>
   2655c:	6823      	ldr	r3, [r4, #0]
   2655e:	2e02      	cmp	r6, #2
   26560:	ea43 0307 	orr.w	r3, r3, r7
   26564:	6023      	str	r3, [r4, #0]
   26566:	d1ae      	bne.n	264c6 <am_hal_gpio_interrupt_control+0xea>
   26568:	6c23      	ldr	r3, [r4, #64]	@ 0x40
   2656a:	433b      	orrs	r3, r7
   2656c:	6423      	str	r3, [r4, #64]	@ 0x40
   2656e:	e7aa      	b.n	264c6 <am_hal_gpio_interrupt_control+0xea>
   26570:	2006      	movs	r0, #6
   26572:	4770      	bx	lr
   26574:	0002859c 	.word	0x0002859c
   26578:	0400102c 	.word	0x0400102c
   2657c:	40010000 	.word	0x40010000

00026580 <am_hal_gpio_interrupt_clear>:
   26580:	2900      	cmp	r1, #0
   26582:	d049      	beq.n	26618 <am_hal_gpio_interrupt_clear+0x98>
   26584:	b530      	push	{r4, r5, lr}
   26586:	68cb      	ldr	r3, [r1, #12]
   26588:	2b00      	cmp	r3, #0
   2658a:	b085      	sub	sp, #20
   2658c:	460c      	mov	r4, r1
   2658e:	db40      	blt.n	26612 <am_hal_gpio_interrupt_clear+0x92>
   26590:	2802      	cmp	r0, #2
   26592:	4605      	mov	r5, r0
   26594:	d01b      	beq.n	265ce <am_hal_gpio_interrupt_clear+0x4e>
   26596:	b120      	cbz	r0, 265a2 <am_hal_gpio_interrupt_clear+0x22>
   26598:	2801      	cmp	r0, #1
   2659a:	d03f      	beq.n	2661c <am_hal_gpio_interrupt_clear+0x9c>
   2659c:	2000      	movs	r0, #0
   2659e:	b005      	add	sp, #20
   265a0:	bd30      	pop	{r4, r5, pc}
   265a2:	f7fc fbdf 	bl	22d64 <am_hal_interrupt_master_disable>
   265a6:	4b28      	ldr	r3, [pc, #160]	@ (26648 <am_hal_gpio_interrupt_clear+0xc8>)
   265a8:	9002      	str	r0, [sp, #8]
   265aa:	6822      	ldr	r2, [r4, #0]
   265ac:	f8c3 22c8 	str.w	r2, [r3, #712]	@ 0x2c8
   265b0:	6862      	ldr	r2, [r4, #4]
   265b2:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
   265b6:	68a2      	ldr	r2, [r4, #8]
   265b8:	f8c3 22e8 	str.w	r2, [r3, #744]	@ 0x2e8
   265bc:	68e2      	ldr	r2, [r4, #12]
   265be:	f8c3 22f8 	str.w	r2, [r3, #760]	@ 0x2f8
   265c2:	9802      	ldr	r0, [sp, #8]
   265c4:	f7fc fbd2 	bl	22d6c <am_hal_interrupt_master_set>
   265c8:	4628      	mov	r0, r5
   265ca:	b005      	add	sp, #20
   265cc:	bd30      	pop	{r4, r5, pc}
   265ce:	f7fc fbc9 	bl	22d64 <am_hal_interrupt_master_disable>
   265d2:	4b1d      	ldr	r3, [pc, #116]	@ (26648 <am_hal_gpio_interrupt_clear+0xc8>)
   265d4:	9001      	str	r0, [sp, #4]
   265d6:	6822      	ldr	r2, [r4, #0]
   265d8:	f8c3 22c8 	str.w	r2, [r3, #712]	@ 0x2c8
   265dc:	6862      	ldr	r2, [r4, #4]
   265de:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
   265e2:	68a2      	ldr	r2, [r4, #8]
   265e4:	f8c3 22e8 	str.w	r2, [r3, #744]	@ 0x2e8
   265e8:	68e2      	ldr	r2, [r4, #12]
   265ea:	f8c3 22f8 	str.w	r2, [r3, #760]	@ 0x2f8
   265ee:	6822      	ldr	r2, [r4, #0]
   265f0:	f8c3 2308 	str.w	r2, [r3, #776]	@ 0x308
   265f4:	6862      	ldr	r2, [r4, #4]
   265f6:	f8c3 2318 	str.w	r2, [r3, #792]	@ 0x318
   265fa:	68a2      	ldr	r2, [r4, #8]
   265fc:	f8c3 2328 	str.w	r2, [r3, #808]	@ 0x328
   26600:	68e2      	ldr	r2, [r4, #12]
   26602:	f8c3 2338 	str.w	r2, [r3, #824]	@ 0x338
   26606:	9801      	ldr	r0, [sp, #4]
   26608:	f7fc fbb0 	bl	22d6c <am_hal_interrupt_master_set>
   2660c:	2000      	movs	r0, #0
   2660e:	b005      	add	sp, #20
   26610:	bd30      	pop	{r4, r5, pc}
   26612:	2005      	movs	r0, #5
   26614:	b005      	add	sp, #20
   26616:	bd30      	pop	{r4, r5, pc}
   26618:	2006      	movs	r0, #6
   2661a:	4770      	bx	lr
   2661c:	f7fc fba2 	bl	22d64 <am_hal_interrupt_master_disable>
   26620:	4b09      	ldr	r3, [pc, #36]	@ (26648 <am_hal_gpio_interrupt_clear+0xc8>)
   26622:	9003      	str	r0, [sp, #12]
   26624:	6822      	ldr	r2, [r4, #0]
   26626:	f8c3 2308 	str.w	r2, [r3, #776]	@ 0x308
   2662a:	6862      	ldr	r2, [r4, #4]
   2662c:	f8c3 2318 	str.w	r2, [r3, #792]	@ 0x318
   26630:	68a2      	ldr	r2, [r4, #8]
   26632:	f8c3 2328 	str.w	r2, [r3, #808]	@ 0x328
   26636:	68e2      	ldr	r2, [r4, #12]
   26638:	f8c3 2338 	str.w	r2, [r3, #824]	@ 0x338
   2663c:	9803      	ldr	r0, [sp, #12]
   2663e:	f7fc fb95 	bl	22d6c <am_hal_interrupt_master_set>
   26642:	2000      	movs	r0, #0
   26644:	e7ab      	b.n	2659e <am_hal_gpio_interrupt_clear+0x1e>
   26646:	bf00      	nop
   26648:	40010000 	.word	0x40010000

0002664c <am_hal_gpio_interrupt_irq_status_get>:
   2664c:	2a00      	cmp	r2, #0
   2664e:	d033      	beq.n	266b8 <am_hal_gpio_interrupt_irq_status_get+0x6c>
   26650:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   26654:	f1a0 0638 	sub.w	r6, r0, #56	@ 0x38
   26658:	2e07      	cmp	r6, #7
   2665a:	b082      	sub	sp, #8
   2665c:	4605      	mov	r5, r0
   2665e:	d827      	bhi.n	266b0 <am_hal_gpio_interrupt_irq_status_get+0x64>
   26660:	4614      	mov	r4, r2
   26662:	460f      	mov	r7, r1
   26664:	f7fc fb7e 	bl	22d64 <am_hal_interrupt_master_disable>
   26668:	ea4f 1806 	mov.w	r8, r6, lsl #4
   2666c:	4a13      	ldr	r2, [pc, #76]	@ (266bc <am_hal_gpio_interrupt_irq_status_get+0x70>)
   2666e:	9001      	str	r0, [sp, #4]
   26670:	b96f      	cbnz	r7, 2668e <am_hal_gpio_interrupt_irq_status_get+0x42>
   26672:	f04f 33ff 	mov.w	r3, #4294967295
   26676:	6023      	str	r3, [r4, #0]
   26678:	f858 2002 	ldr.w	r2, [r8, r2]
   2667c:	9801      	ldr	r0, [sp, #4]
   2667e:	4013      	ands	r3, r2
   26680:	6023      	str	r3, [r4, #0]
   26682:	f7fc fb73 	bl	22d6c <am_hal_interrupt_master_set>
   26686:	2000      	movs	r0, #0
   26688:	b002      	add	sp, #8
   2668a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2668e:	2d3b      	cmp	r5, #59	@ 0x3b
   26690:	bf8c      	ite	hi
   26692:	2301      	movhi	r3, #1
   26694:	2300      	movls	r3, #0
   26696:	f103 7380 	add.w	r3, r3, #16777216	@ 0x1000000
   2669a:	bf8c      	ite	hi
   2669c:	2104      	movhi	r1, #4
   2669e:	2100      	movls	r1, #0
   266a0:	f203 430b 	addw	r3, r3, #1035	@ 0x40b
   266a4:	1a76      	subs	r6, r6, r1
   266a6:	eb06 0683 	add.w	r6, r6, r3, lsl #2
   266aa:	0136      	lsls	r6, r6, #4
   266ac:	6833      	ldr	r3, [r6, #0]
   266ae:	e7e2      	b.n	26676 <am_hal_gpio_interrupt_irq_status_get+0x2a>
   266b0:	2006      	movs	r0, #6
   266b2:	b002      	add	sp, #8
   266b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   266b8:	2006      	movs	r0, #6
   266ba:	4770      	bx	lr
   266bc:	400102c4 	.word	0x400102c4

000266c0 <am_hal_gpio_interrupt_irq_clear>:
   266c0:	3838      	subs	r0, #56	@ 0x38
   266c2:	2807      	cmp	r0, #7
   266c4:	d804      	bhi.n	266d0 <am_hal_gpio_interrupt_irq_clear+0x10>
   266c6:	0103      	lsls	r3, r0, #4
   266c8:	4a02      	ldr	r2, [pc, #8]	@ (266d4 <am_hal_gpio_interrupt_irq_clear+0x14>)
   266ca:	2000      	movs	r0, #0
   266cc:	5099      	str	r1, [r3, r2]
   266ce:	4770      	bx	lr
   266d0:	2006      	movs	r0, #6
   266d2:	4770      	bx	lr
   266d4:	400102c8 	.word	0x400102c8

000266d8 <am_hal_gpio_interrupt_register>:
   266d8:	b410      	push	{r4}
   266da:	ea4f 1c51 	mov.w	ip, r1, lsr #5
   266de:	b960      	cbnz	r0, 266fa <am_hal_gpio_interrupt_register+0x22>
   266e0:	f001 011f 	and.w	r1, r1, #31
   266e4:	4c1b      	ldr	r4, [pc, #108]	@ (26754 <am_hal_gpio_interrupt_register+0x7c>)
   266e6:	eb01 114c 	add.w	r1, r1, ip, lsl #5
   266ea:	f844 3021 	str.w	r3, [r4, r1, lsl #2]
   266ee:	4b1a      	ldr	r3, [pc, #104]	@ (26758 <am_hal_gpio_interrupt_register+0x80>)
   266f0:	f85d 4b04 	ldr.w	r4, [sp], #4
   266f4:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
   266f8:	4770      	bx	lr
   266fa:	2801      	cmp	r0, #1
   266fc:	f10c 0404 	add.w	r4, ip, #4
   26700:	d015      	beq.n	2672e <am_hal_gpio_interrupt_register+0x56>
   26702:	2802      	cmp	r0, #2
   26704:	d121      	bne.n	2674a <am_hal_gpio_interrupt_register+0x72>
   26706:	f001 011f 	and.w	r1, r1, #31
   2670a:	eb01 1c4c 	add.w	ip, r1, ip, lsl #5
   2670e:	eb01 1144 	add.w	r1, r1, r4, lsl #5
   26712:	4c11      	ldr	r4, [pc, #68]	@ (26758 <am_hal_gpio_interrupt_register+0x80>)
   26714:	f844 202c 	str.w	r2, [r4, ip, lsl #2]
   26718:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
   2671c:	4a0d      	ldr	r2, [pc, #52]	@ (26754 <am_hal_gpio_interrupt_register+0x7c>)
   2671e:	f85d 4b04 	ldr.w	r4, [sp], #4
   26722:	f842 302c 	str.w	r3, [r2, ip, lsl #2]
   26726:	2000      	movs	r0, #0
   26728:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   2672c:	4770      	bx	lr
   2672e:	f001 011f 	and.w	r1, r1, #31
   26732:	eb01 1144 	add.w	r1, r1, r4, lsl #5
   26736:	4807      	ldr	r0, [pc, #28]	@ (26754 <am_hal_gpio_interrupt_register+0x7c>)
   26738:	4c07      	ldr	r4, [pc, #28]	@ (26758 <am_hal_gpio_interrupt_register+0x80>)
   2673a:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
   2673e:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
   26742:	2000      	movs	r0, #0
   26744:	f85d 4b04 	ldr.w	r4, [sp], #4
   26748:	4770      	bx	lr
   2674a:	2006      	movs	r0, #6
   2674c:	f85d 4b04 	ldr.w	r4, [sp], #4
   26750:	4770      	bx	lr
   26752:	bf00      	nop
   26754:	100368e4 	.word	0x100368e4
   26758:	100364e4 	.word	0x100364e4

0002675c <am_hal_gpio_interrupt_service>:
   2675c:	3838      	subs	r0, #56	@ 0x38
   2675e:	2807      	cmp	r0, #7
   26760:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   26764:	d826      	bhi.n	267b4 <am_hal_gpio_interrupt_service+0x58>
   26766:	4689      	mov	r9, r1
   26768:	b349      	cbz	r1, 267be <am_hal_gpio_interrupt_service+0x62>
   2676a:	4e16      	ldr	r6, [pc, #88]	@ (267c4 <am_hal_gpio_interrupt_service+0x68>)
   2676c:	4f16      	ldr	r7, [pc, #88]	@ (267c8 <am_hal_gpio_interrupt_service+0x6c>)
   2676e:	f04f 0800 	mov.w	r8, #0
   26772:	0144      	lsls	r4, r0, #5
   26774:	2501      	movs	r5, #1
   26776:	f1c9 0300 	rsb	r3, r9, #0
   2677a:	ea03 0309 	and.w	r3, r3, r9
   2677e:	fab3 f383 	clz	r3, r3
   26782:	f1c3 031f 	rsb	r3, r3, #31
   26786:	18e1      	adds	r1, r4, r3
   26788:	fa05 f303 	lsl.w	r3, r5, r3
   2678c:	f856 2021 	ldr.w	r2, [r6, r1, lsl #2]
   26790:	ea29 0903 	bic.w	r9, r9, r3
   26794:	b142      	cbz	r2, 267a8 <am_hal_gpio_interrupt_service+0x4c>
   26796:	f857 0021 	ldr.w	r0, [r7, r1, lsl #2]
   2679a:	4790      	blx	r2
   2679c:	f1b9 0f00 	cmp.w	r9, #0
   267a0:	d1e9      	bne.n	26776 <am_hal_gpio_interrupt_service+0x1a>
   267a2:	4640      	mov	r0, r8
   267a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   267a8:	f04f 0807 	mov.w	r8, #7
   267ac:	f1b9 0f00 	cmp.w	r9, #0
   267b0:	d1e1      	bne.n	26776 <am_hal_gpio_interrupt_service+0x1a>
   267b2:	e7f6      	b.n	267a2 <am_hal_gpio_interrupt_service+0x46>
   267b4:	f04f 0805 	mov.w	r8, #5
   267b8:	4640      	mov	r0, r8
   267ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   267be:	4688      	mov	r8, r1
   267c0:	e7ef      	b.n	267a2 <am_hal_gpio_interrupt_service+0x46>
   267c2:	bf00      	nop
   267c4:	100364e4 	.word	0x100364e4
   267c8:	100368e4 	.word	0x100368e4

000267cc <am_hal_pwrctrl_sram_config>:
   267cc:	b570      	push	{r4, r5, r6, lr}
   267ce:	4c2c      	ldr	r4, [pc, #176]	@ (26880 <am_hal_pwrctrl_sram_config+0xb4>)
   267d0:	7802      	ldrb	r2, [r0, #0]
   267d2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   267d4:	492b      	ldr	r1, [pc, #172]	@ (26884 <am_hal_pwrctrl_sram_config+0xb8>)
   267d6:	f362 0301 	bfi	r3, r2, #0, #2
   267da:	b082      	sub	sp, #8
   267dc:	6263      	str	r3, [r4, #36]	@ 0x24
   267de:	2601      	movs	r6, #1
   267e0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   267e2:	9600      	str	r6, [sp, #0]
   267e4:	4605      	mov	r5, r0
   267e6:	2203      	movs	r2, #3
   267e8:	2005      	movs	r0, #5
   267ea:	f7ff fcbd 	bl	26168 <am_hal_delay_us_status_check>
   267ee:	b940      	cbnz	r0, 26802 <am_hal_pwrctrl_sram_config+0x36>
   267f0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
   267f2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   267f4:	f002 0203 	and.w	r2, r2, #3
   267f8:	f003 0303 	and.w	r3, r3, #3
   267fc:	429a      	cmp	r2, r3
   267fe:	d002      	beq.n	26806 <am_hal_pwrctrl_sram_config+0x3a>
   26800:	4630      	mov	r0, r6
   26802:	b002      	add	sp, #8
   26804:	bd70      	pop	{r4, r5, r6, pc}
   26806:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
   26808:	786b      	ldrb	r3, [r5, #1]
   2680a:	f895 c002 	ldrb.w	ip, [r5, #2]
   2680e:	78ee      	ldrb	r6, [r5, #3]
   26810:	7929      	ldrb	r1, [r5, #4]
   26812:	f363 0283 	bfi	r2, r3, #2, #2
   26816:	796b      	ldrb	r3, [r5, #5]
   26818:	62e2      	str	r2, [r4, #44]	@ 0x2c
   2681a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
   2681c:	f36c 1287 	bfi	r2, ip, #6, #2
   26820:	62e2      	str	r2, [r4, #44]	@ 0x2c
   26822:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
   26824:	f366 2209 	bfi	r2, r6, #8, #2
   26828:	62e2      	str	r2, [r4, #44]	@ 0x2c
   2682a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
   2682c:	f361 1205 	bfi	r2, r1, #4, #2
   26830:	62e2      	str	r2, [r4, #44]	@ 0x2c
   26832:	2b03      	cmp	r3, #3
   26834:	d808      	bhi.n	26848 <am_hal_pwrctrl_sram_config+0x7c>
   26836:	e8df f003 	tbb	[pc, r3]
   2683a:	151c      	.short	0x151c
   2683c:	020e      	.short	0x020e
   2683e:	4b10      	ldr	r3, [pc, #64]	@ (26880 <am_hal_pwrctrl_sram_config+0xb4>)
   26840:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   26842:	f36f 0201 	bfc	r2, #0, #2
   26846:	62da      	str	r2, [r3, #44]	@ 0x2c
   26848:	4b0d      	ldr	r3, [pc, #52]	@ (26880 <am_hal_pwrctrl_sram_config+0xb4>)
   2684a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
   2684c:	f36f 228b 	bfc	r2, #10, #2
   26850:	641a      	str	r2, [r3, #64]	@ 0x40
   26852:	b002      	add	sp, #8
   26854:	bd70      	pop	{r4, r5, r6, pc}
   26856:	4b0a      	ldr	r3, [pc, #40]	@ (26880 <am_hal_pwrctrl_sram_config+0xb4>)
   26858:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   2685a:	2101      	movs	r1, #1
   2685c:	f361 0201 	bfi	r2, r1, #0, #2
   26860:	62da      	str	r2, [r3, #44]	@ 0x2c
   26862:	e7f1      	b.n	26848 <am_hal_pwrctrl_sram_config+0x7c>
   26864:	4b06      	ldr	r3, [pc, #24]	@ (26880 <am_hal_pwrctrl_sram_config+0xb4>)
   26866:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   26868:	2102      	movs	r1, #2
   2686a:	f361 0201 	bfi	r2, r1, #0, #2
   2686e:	62da      	str	r2, [r3, #44]	@ 0x2c
   26870:	e7ea      	b.n	26848 <am_hal_pwrctrl_sram_config+0x7c>
   26872:	4a03      	ldr	r2, [pc, #12]	@ (26880 <am_hal_pwrctrl_sram_config+0xb4>)
   26874:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
   26876:	f043 0303 	orr.w	r3, r3, #3
   2687a:	62d3      	str	r3, [r2, #44]	@ 0x2c
   2687c:	e7e4      	b.n	26848 <am_hal_pwrctrl_sram_config+0x7c>
   2687e:	bf00      	nop
   26880:	40021000 	.word	0x40021000
   26884:	40021028 	.word	0x40021028

00026888 <am_hal_pwrctrl_periph_enable>:
   26888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2688c:	2818      	cmp	r0, #24
   2688e:	b087      	sub	sp, #28
   26890:	d82d      	bhi.n	268ee <am_hal_pwrctrl_periph_enable+0x66>
   26892:	4b5b      	ldr	r3, [pc, #364]	@ (26a00 <am_hal_pwrctrl_periph_enable+0x178>)
   26894:	0101      	lsls	r1, r0, #4
   26896:	eb03 1200 	add.w	r2, r3, r0, lsl #4
   2689a:	585c      	ldr	r4, [r3, r1]
   2689c:	6857      	ldr	r7, [r2, #4]
   2689e:	6821      	ldr	r1, [r4, #0]
   268a0:	4239      	tst	r1, r7
   268a2:	d11f      	bne.n	268e4 <am_hal_pwrctrl_periph_enable+0x5c>
   268a4:	2812      	cmp	r0, #18
   268a6:	e9d2 6502 	ldrd	r6, r5, [r2, #8]
   268aa:	d025      	beq.n	268f8 <am_hal_pwrctrl_periph_enable+0x70>
   268ac:	f7fc fa5a 	bl	22d64 <am_hal_interrupt_master_disable>
   268b0:	9003      	str	r0, [sp, #12]
   268b2:	6823      	ldr	r3, [r4, #0]
   268b4:	433b      	orrs	r3, r7
   268b6:	6023      	str	r3, [r4, #0]
   268b8:	9803      	ldr	r0, [sp, #12]
   268ba:	f7fc fa57 	bl	22d6c <am_hal_interrupt_master_set>
   268be:	2301      	movs	r3, #1
   268c0:	9300      	str	r3, [sp, #0]
   268c2:	462a      	mov	r2, r5
   268c4:	462b      	mov	r3, r5
   268c6:	4631      	mov	r1, r6
   268c8:	2005      	movs	r0, #5
   268ca:	f7ff fc4d 	bl	26168 <am_hal_delay_us_status_check>
   268ce:	4604      	mov	r4, r0
   268d0:	b920      	cbnz	r0, 268dc <am_hal_pwrctrl_periph_enable+0x54>
   268d2:	6833      	ldr	r3, [r6, #0]
   268d4:	422b      	tst	r3, r5
   268d6:	bf0c      	ite	eq
   268d8:	2401      	moveq	r4, #1
   268da:	2400      	movne	r4, #0
   268dc:	4620      	mov	r0, r4
   268de:	b007      	add	sp, #28
   268e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   268e4:	2400      	movs	r4, #0
   268e6:	4620      	mov	r0, r4
   268e8:	b007      	add	sp, #28
   268ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   268ee:	2406      	movs	r4, #6
   268f0:	4620      	mov	r0, r4
   268f2:	b007      	add	sp, #28
   268f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   268f8:	f8df 911c 	ldr.w	r9, [pc, #284]	@ 26a18 <am_hal_pwrctrl_periph_enable+0x190>
   268fc:	f8d9 8000 	ldr.w	r8, [r9]
   26900:	f1b8 0f00 	cmp.w	r8, #0
   26904:	d02e      	beq.n	26964 <am_hal_pwrctrl_periph_enable+0xdc>
   26906:	f8df a104 	ldr.w	sl, [pc, #260]	@ 26a0c <am_hal_pwrctrl_periph_enable+0x184>
   2690a:	f89a 3000 	ldrb.w	r3, [sl]
   2690e:	bb4b      	cbnz	r3, 26964 <am_hal_pwrctrl_periph_enable+0xdc>
   26910:	f7fc fa28 	bl	22d64 <am_hal_interrupt_master_disable>
   26914:	4a3b      	ldr	r2, [pc, #236]	@ (26a04 <am_hal_pwrctrl_periph_enable+0x17c>)
   26916:	493c      	ldr	r1, [pc, #240]	@ (26a08 <am_hal_pwrctrl_periph_enable+0x180>)
   26918:	6813      	ldr	r3, [r2, #0]
   2691a:	f8df b0f4 	ldr.w	fp, [pc, #244]	@ 26a10 <am_hal_pwrctrl_periph_enable+0x188>
   2691e:	9004      	str	r0, [sp, #16]
   26920:	4443      	add	r3, r8
   26922:	6013      	str	r3, [r2, #0]
   26924:	680a      	ldr	r2, [r1, #0]
   26926:	4490      	add	r8, r2
   26928:	2201      	movs	r2, #1
   2692a:	f8c1 8000 	str.w	r8, [r1]
   2692e:	f88a 2000 	strb.w	r2, [sl]
   26932:	f8db 136c 	ldr.w	r1, [fp, #876]	@ 0x36c
   26936:	f383 0306 	usat	r3, #6, r3
   2693a:	f363 5119 	bfi	r1, r3, #20, #6
   2693e:	f8cb 136c 	str.w	r1, [fp, #876]	@ 0x36c
   26942:	2014      	movs	r0, #20
   26944:	f7ff fbcc 	bl	260e0 <am_hal_delay_us>
   26948:	f8db 3088 	ldr.w	r3, [fp, #136]	@ 0x88
   2694c:	f388 0806 	usat	r8, #6, r8
   26950:	f368 0305 	bfi	r3, r8, #0, #6
   26954:	f8cb 3088 	str.w	r3, [fp, #136]	@ 0x88
   26958:	9804      	ldr	r0, [sp, #16]
   2695a:	f7fc fa07 	bl	22d6c <am_hal_interrupt_master_set>
   2695e:	2014      	movs	r0, #20
   26960:	f7ff fbbe 	bl	260e0 <am_hal_delay_us>
   26964:	f7fc f9fe 	bl	22d64 <am_hal_interrupt_master_disable>
   26968:	9003      	str	r0, [sp, #12]
   2696a:	6823      	ldr	r3, [r4, #0]
   2696c:	433b      	orrs	r3, r7
   2696e:	6023      	str	r3, [r4, #0]
   26970:	9803      	ldr	r0, [sp, #12]
   26972:	f7fc f9fb 	bl	22d6c <am_hal_interrupt_master_set>
   26976:	2301      	movs	r3, #1
   26978:	9300      	str	r3, [sp, #0]
   2697a:	462a      	mov	r2, r5
   2697c:	462b      	mov	r3, r5
   2697e:	4631      	mov	r1, r6
   26980:	2005      	movs	r0, #5
   26982:	f7ff fbf1 	bl	26168 <am_hal_delay_us_status_check>
   26986:	4604      	mov	r4, r0
   26988:	b378      	cbz	r0, 269ea <am_hal_pwrctrl_periph_enable+0x162>
   2698a:	f8d9 5000 	ldr.w	r5, [r9]
   2698e:	2d00      	cmp	r5, #0
   26990:	d0a4      	beq.n	268dc <am_hal_pwrctrl_periph_enable+0x54>
   26992:	4e1e      	ldr	r6, [pc, #120]	@ (26a0c <am_hal_pwrctrl_periph_enable+0x184>)
   26994:	7833      	ldrb	r3, [r6, #0]
   26996:	2b00      	cmp	r3, #0
   26998:	d0a0      	beq.n	268dc <am_hal_pwrctrl_periph_enable+0x54>
   2699a:	f7fc f9e3 	bl	22d64 <am_hal_interrupt_master_disable>
   2699e:	4b19      	ldr	r3, [pc, #100]	@ (26a04 <am_hal_pwrctrl_periph_enable+0x17c>)
   269a0:	4f1b      	ldr	r7, [pc, #108]	@ (26a10 <am_hal_pwrctrl_periph_enable+0x188>)
   269a2:	9005      	str	r0, [sp, #20]
   269a4:	2200      	movs	r2, #0
   269a6:	7032      	strb	r2, [r6, #0]
   269a8:	681e      	ldr	r6, [r3, #0]
   269aa:	4a17      	ldr	r2, [pc, #92]	@ (26a08 <am_hal_pwrctrl_periph_enable+0x180>)
   269ac:	1b76      	subs	r6, r6, r5
   269ae:	601e      	str	r6, [r3, #0]
   269b0:	6813      	ldr	r3, [r2, #0]
   269b2:	1b5d      	subs	r5, r3, r5
   269b4:	6015      	str	r5, [r2, #0]
   269b6:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
   269ba:	f385 0506 	usat	r5, #6, r5
   269be:	f365 0305 	bfi	r3, r5, #0, #6
   269c2:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
   269c6:	2014      	movs	r0, #20
   269c8:	f7ff fb8a 	bl	260e0 <am_hal_delay_us>
   269cc:	f8d7 336c 	ldr.w	r3, [r7, #876]	@ 0x36c
   269d0:	f386 0606 	usat	r6, #6, r6
   269d4:	f366 5319 	bfi	r3, r6, #20, #6
   269d8:	f8c7 336c 	str.w	r3, [r7, #876]	@ 0x36c
   269dc:	9805      	ldr	r0, [sp, #20]
   269de:	f7fc f9c5 	bl	22d6c <am_hal_interrupt_master_set>
   269e2:	2014      	movs	r0, #20
   269e4:	f7ff fb7c 	bl	260e0 <am_hal_delay_us>
   269e8:	e778      	b.n	268dc <am_hal_pwrctrl_periph_enable+0x54>
   269ea:	2301      	movs	r3, #1
   269ec:	4909      	ldr	r1, [pc, #36]	@ (26a14 <am_hal_pwrctrl_periph_enable+0x18c>)
   269ee:	461a      	mov	r2, r3
   269f0:	2064      	movs	r0, #100	@ 0x64
   269f2:	f7ff fb8d 	bl	26110 <am_hal_delay_us_status_change>
   269f6:	4604      	mov	r4, r0
   269f8:	2800      	cmp	r0, #0
   269fa:	f43f af6a 	beq.w	268d2 <am_hal_pwrctrl_periph_enable+0x4a>
   269fe:	e76d      	b.n	268dc <am_hal_pwrctrl_periph_enable+0x54>
   26a00:	000285ac 	.word	0x000285ac
   26a04:	10036cec 	.word	0x10036cec
   26a08:	10036ce8 	.word	0x10036ce8
   26a0c:	10036ce4 	.word	0x10036ce4
   26a10:	40020000 	.word	0x40020000
   26a14:	400c1f10 	.word	0x400c1f10
   26a18:	10036d04 	.word	0x10036d04

00026a1c <am_hal_pwrctrl_periph_disable>:
   26a1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   26a20:	2818      	cmp	r0, #24
   26a22:	b084      	sub	sp, #16
   26a24:	d82a      	bhi.n	26a7c <am_hal_pwrctrl_periph_disable+0x60>
   26a26:	4b54      	ldr	r3, [pc, #336]	@ (26b78 <am_hal_pwrctrl_periph_disable+0x15c>)
   26a28:	0101      	lsls	r1, r0, #4
   26a2a:	eb03 1200 	add.w	r2, r3, r0, lsl #4
   26a2e:	585c      	ldr	r4, [r3, r1]
   26a30:	6856      	ldr	r6, [r2, #4]
   26a32:	6823      	ldr	r3, [r4, #0]
   26a34:	4233      	tst	r3, r6
   26a36:	d01c      	beq.n	26a72 <am_hal_pwrctrl_periph_disable+0x56>
   26a38:	2812      	cmp	r0, #18
   26a3a:	e9d2 8702 	ldrd	r8, r7, [r2, #8]
   26a3e:	d105      	bne.n	26a4c <am_hal_pwrctrl_periph_disable+0x30>
   26a40:	f8df 914c 	ldr.w	r9, [pc, #332]	@ 26b90 <am_hal_pwrctrl_periph_disable+0x174>
   26a44:	f8d9 3fe0 	ldr.w	r3, [r9, #4064]	@ 0xfe0
   26a48:	2bc0      	cmp	r3, #192	@ 0xc0
   26a4a:	d035      	beq.n	26ab8 <am_hal_pwrctrl_periph_disable+0x9c>
   26a4c:	f7fc f98a 	bl	22d64 <am_hal_interrupt_master_disable>
   26a50:	9002      	str	r0, [sp, #8]
   26a52:	6823      	ldr	r3, [r4, #0]
   26a54:	ea23 0606 	bic.w	r6, r3, r6
   26a58:	6026      	str	r6, [r4, #0]
   26a5a:	9802      	ldr	r0, [sp, #8]
   26a5c:	f7fc f986 	bl	22d6c <am_hal_interrupt_master_set>
   26a60:	2300      	movs	r3, #0
   26a62:	9300      	str	r3, [sp, #0]
   26a64:	463a      	mov	r2, r7
   26a66:	463b      	mov	r3, r7
   26a68:	4641      	mov	r1, r8
   26a6a:	2005      	movs	r0, #5
   26a6c:	f7ff fb7c 	bl	26168 <am_hal_delay_us_status_check>
   26a70:	b948      	cbnz	r0, 26a86 <am_hal_pwrctrl_periph_disable+0x6a>
   26a72:	2500      	movs	r5, #0
   26a74:	4628      	mov	r0, r5
   26a76:	b004      	add	sp, #16
   26a78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   26a7c:	2506      	movs	r5, #6
   26a7e:	4628      	mov	r0, r5
   26a80:	b004      	add	sp, #16
   26a82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   26a86:	f5b7 7ff0 	cmp.w	r7, #480	@ 0x1e0
   26a8a:	d06e      	beq.n	26b6a <am_hal_pwrctrl_periph_disable+0x14e>
   26a8c:	d90b      	bls.n	26aa6 <am_hal_pwrctrl_periph_disable+0x8a>
   26a8e:	f5b7 5ff0 	cmp.w	r7, #7680	@ 0x1e00
   26a92:	d065      	beq.n	26b60 <am_hal_pwrctrl_periph_disable+0x144>
   26a94:	f5b7 3fe0 	cmp.w	r7, #114688	@ 0x1c000
   26a98:	d1eb      	bne.n	26a72 <am_hal_pwrctrl_periph_disable+0x56>
   26a9a:	6823      	ldr	r3, [r4, #0]
   26a9c:	f413 3fe0 	tst.w	r3, #114688	@ 0x1c000
   26aa0:	d0e7      	beq.n	26a72 <am_hal_pwrctrl_periph_disable+0x56>
   26aa2:	6823      	ldr	r3, [r4, #0]
   26aa4:	e7e5      	b.n	26a72 <am_hal_pwrctrl_periph_disable+0x56>
   26aa6:	2f1e      	cmp	r7, #30
   26aa8:	d055      	beq.n	26b56 <am_hal_pwrctrl_periph_disable+0x13a>
   26aaa:	2f47      	cmp	r7, #71	@ 0x47
   26aac:	d1e1      	bne.n	26a72 <am_hal_pwrctrl_periph_disable+0x56>
   26aae:	6823      	ldr	r3, [r4, #0]
   26ab0:	f013 0f47 	tst.w	r3, #71	@ 0x47
   26ab4:	d0dd      	beq.n	26a72 <am_hal_pwrctrl_periph_disable+0x56>
   26ab6:	e7f4      	b.n	26aa2 <am_hal_pwrctrl_periph_disable+0x86>
   26ab8:	2301      	movs	r3, #1
   26aba:	4930      	ldr	r1, [pc, #192]	@ (26b7c <am_hal_pwrctrl_periph_disable+0x160>)
   26abc:	461a      	mov	r2, r3
   26abe:	2064      	movs	r0, #100	@ 0x64
   26ac0:	f7ff fb26 	bl	26110 <am_hal_delay_us_status_change>
   26ac4:	4605      	mov	r5, r0
   26ac6:	2800      	cmp	r0, #0
   26ac8:	d1d4      	bne.n	26a74 <am_hal_pwrctrl_periph_disable+0x58>
   26aca:	2301      	movs	r3, #1
   26acc:	492c      	ldr	r1, [pc, #176]	@ (26b80 <am_hal_pwrctrl_periph_disable+0x164>)
   26ace:	461a      	mov	r2, r3
   26ad0:	2064      	movs	r0, #100	@ 0x64
   26ad2:	f7ff fb1d 	bl	26110 <am_hal_delay_us_status_change>
   26ad6:	4605      	mov	r5, r0
   26ad8:	2800      	cmp	r0, #0
   26ada:	d1cb      	bne.n	26a74 <am_hal_pwrctrl_periph_disable+0x58>
   26adc:	f8d9 3a80 	ldr.w	r3, [r9, #2688]	@ 0xa80
   26ae0:	f043 0301 	orr.w	r3, r3, #1
   26ae4:	f8c9 3a80 	str.w	r3, [r9, #2688]	@ 0xa80
   26ae8:	4b26      	ldr	r3, [pc, #152]	@ (26b84 <am_hal_pwrctrl_periph_disable+0x168>)
   26aea:	f8d3 9000 	ldr.w	r9, [r3]
   26aee:	f1b9 0f00 	cmp.w	r9, #0
   26af2:	d0ab      	beq.n	26a4c <am_hal_pwrctrl_periph_disable+0x30>
   26af4:	f8df a09c 	ldr.w	sl, [pc, #156]	@ 26b94 <am_hal_pwrctrl_periph_disable+0x178>
   26af8:	f89a 3000 	ldrb.w	r3, [sl]
   26afc:	2b00      	cmp	r3, #0
   26afe:	d0a5      	beq.n	26a4c <am_hal_pwrctrl_periph_disable+0x30>
   26b00:	f7fc f930 	bl	22d64 <am_hal_interrupt_master_disable>
   26b04:	4b20      	ldr	r3, [pc, #128]	@ (26b88 <am_hal_pwrctrl_periph_disable+0x16c>)
   26b06:	f88a 5000 	strb.w	r5, [sl]
   26b0a:	681d      	ldr	r5, [r3, #0]
   26b0c:	4a1f      	ldr	r2, [pc, #124]	@ (26b8c <am_hal_pwrctrl_periph_disable+0x170>)
   26b0e:	9003      	str	r0, [sp, #12]
   26b10:	eba5 0509 	sub.w	r5, r5, r9
   26b14:	601d      	str	r5, [r3, #0]
   26b16:	6813      	ldr	r3, [r2, #0]
   26b18:	eba3 0309 	sub.w	r3, r3, r9
   26b1c:	f8df 9078 	ldr.w	r9, [pc, #120]	@ 26b98 <am_hal_pwrctrl_periph_disable+0x17c>
   26b20:	6013      	str	r3, [r2, #0]
   26b22:	f8d9 2088 	ldr.w	r2, [r9, #136]	@ 0x88
   26b26:	f383 0306 	usat	r3, #6, r3
   26b2a:	f363 0205 	bfi	r2, r3, #0, #6
   26b2e:	f8c9 2088 	str.w	r2, [r9, #136]	@ 0x88
   26b32:	2014      	movs	r0, #20
   26b34:	f7ff fad4 	bl	260e0 <am_hal_delay_us>
   26b38:	f8d9 336c 	ldr.w	r3, [r9, #876]	@ 0x36c
   26b3c:	f385 0506 	usat	r5, #6, r5
   26b40:	f365 5319 	bfi	r3, r5, #20, #6
   26b44:	f8c9 336c 	str.w	r3, [r9, #876]	@ 0x36c
   26b48:	9803      	ldr	r0, [sp, #12]
   26b4a:	f7fc f90f 	bl	22d6c <am_hal_interrupt_master_set>
   26b4e:	2014      	movs	r0, #20
   26b50:	f7ff fac6 	bl	260e0 <am_hal_delay_us>
   26b54:	e77a      	b.n	26a4c <am_hal_pwrctrl_periph_disable+0x30>
   26b56:	6823      	ldr	r3, [r4, #0]
   26b58:	f013 0f1e 	tst.w	r3, #30
   26b5c:	d089      	beq.n	26a72 <am_hal_pwrctrl_periph_disable+0x56>
   26b5e:	e7a0      	b.n	26aa2 <am_hal_pwrctrl_periph_disable+0x86>
   26b60:	6823      	ldr	r3, [r4, #0]
   26b62:	f413 5ff0 	tst.w	r3, #7680	@ 0x1e00
   26b66:	d084      	beq.n	26a72 <am_hal_pwrctrl_periph_disable+0x56>
   26b68:	e79b      	b.n	26aa2 <am_hal_pwrctrl_periph_disable+0x86>
   26b6a:	6823      	ldr	r3, [r4, #0]
   26b6c:	f413 7ff0 	tst.w	r3, #480	@ 0x1e0
   26b70:	f43f af7f 	beq.w	26a72 <am_hal_pwrctrl_periph_disable+0x56>
   26b74:	e795      	b.n	26aa2 <am_hal_pwrctrl_periph_disable+0x86>
   26b76:	bf00      	nop
   26b78:	000285ac 	.word	0x000285ac
   26b7c:	400c0a7c 	.word	0x400c0a7c
   26b80:	400c1f10 	.word	0x400c1f10
   26b84:	10036d04 	.word	0x10036d04
   26b88:	10036cec 	.word	0x10036cec
   26b8c:	10036ce8 	.word	0x10036ce8
   26b90:	400c0000 	.word	0x400c0000
   26b94:	10036ce4 	.word	0x10036ce4
   26b98:	40020000 	.word	0x40020000

00026b9c <am_hal_pwrctrl_low_power_init>:
   26b9c:	b530      	push	{r4, r5, lr}
   26b9e:	4c5f      	ldr	r4, [pc, #380]	@ (26d1c <am_hal_pwrctrl_low_power_init+0x180>)
   26ba0:	4a5f      	ldr	r2, [pc, #380]	@ (26d20 <am_hal_pwrctrl_low_power_init+0x184>)
   26ba2:	68a3      	ldr	r3, [r4, #8]
   26ba4:	495f      	ldr	r1, [pc, #380]	@ (26d24 <am_hal_pwrctrl_low_power_init+0x188>)
   26ba6:	f3c3 5300 	ubfx	r3, r3, #20, #1
   26baa:	7013      	strb	r3, [r2, #0]
   26bac:	6963      	ldr	r3, [r4, #20]
   26bae:	f043 0310 	orr.w	r3, r3, #16
   26bb2:	6163      	str	r3, [r4, #20]
   26bb4:	6963      	ldr	r3, [r4, #20]
   26bb6:	f043 0320 	orr.w	r3, r3, #32
   26bba:	6163      	str	r3, [r4, #20]
   26bbc:	6963      	ldr	r3, [r4, #20]
   26bbe:	f043 0307 	orr.w	r3, r3, #7
   26bc2:	6163      	str	r3, [r4, #20]
   26bc4:	6963      	ldr	r3, [r4, #20]
   26bc6:	b085      	sub	sp, #20
   26bc8:	f043 0308 	orr.w	r3, r3, #8
   26bcc:	2001      	movs	r0, #1
   26bce:	6163      	str	r3, [r4, #20]
   26bd0:	6963      	ldr	r3, [r4, #20]
   26bd2:	9000      	str	r0, [sp, #0]
   26bd4:	223f      	movs	r2, #63	@ 0x3f
   26bd6:	2005      	movs	r0, #5
   26bd8:	f7ff fac6 	bl	26168 <am_hal_delay_us_status_check>
   26bdc:	b938      	cbnz	r0, 26bee <am_hal_pwrctrl_low_power_init+0x52>
   26bde:	69a2      	ldr	r2, [r4, #24]
   26be0:	6963      	ldr	r3, [r4, #20]
   26be2:	f3c2 1200 	ubfx	r2, r2, #4, #1
   26be6:	f3c3 1300 	ubfx	r3, r3, #4, #1
   26bea:	429a      	cmp	r2, r3
   26bec:	d060      	beq.n	26cb0 <am_hal_pwrctrl_low_power_init+0x114>
   26bee:	f04f 2440 	mov.w	r4, #1073758208	@ 0x40004000
   26bf2:	484d      	ldr	r0, [pc, #308]	@ (26d28 <am_hal_pwrctrl_low_power_init+0x18c>)
   26bf4:	4d4d      	ldr	r5, [pc, #308]	@ (26d2c <am_hal_pwrctrl_low_power_init+0x190>)
   26bf6:	f7ff fde9 	bl	267cc <am_hal_pwrctrl_sram_config>
   26bfa:	6c63      	ldr	r3, [r4, #68]	@ 0x44
   26bfc:	484c      	ldr	r0, [pc, #304]	@ (26d30 <am_hal_pwrctrl_low_power_init+0x194>)
   26bfe:	f443 037c 	orr.w	r3, r3, #16515072	@ 0xfc0000
   26c02:	6463      	str	r3, [r4, #68]	@ 0x44
   26c04:	f7fb ffc0 	bl	22b88 <am_hal_daxi_config>
   26c08:	2064      	movs	r0, #100	@ 0x64
   26c0a:	f7ff fa69 	bl	260e0 <am_hal_delay_us>
   26c0e:	6c62      	ldr	r2, [r4, #68]	@ 0x44
   26c10:	4b48      	ldr	r3, [pc, #288]	@ (26d34 <am_hal_pwrctrl_low_power_init+0x198>)
   26c12:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
   26c16:	6462      	str	r2, [r4, #68]	@ 0x44
   26c18:	f8d3 237c 	ldr.w	r2, [r3, #892]	@ 0x37c
   26c1c:	f042 62bf 	orr.w	r2, r2, #100139008	@ 0x5f80000
   26c20:	f442 22d0 	orr.w	r2, r2, #425984	@ 0x68000
   26c24:	f8c3 237c 	str.w	r2, [r3, #892]	@ 0x37c
   26c28:	f8d3 2444 	ldr.w	r2, [r3, #1092]	@ 0x444
   26c2c:	2104      	movs	r1, #4
   26c2e:	f361 220f 	bfi	r2, r1, #8, #8
   26c32:	f8c3 2444 	str.w	r2, [r3, #1092]	@ 0x444
   26c36:	782a      	ldrb	r2, [r5, #0]
   26c38:	b1da      	cbz	r2, 26c72 <am_hal_pwrctrl_low_power_init+0xd6>
   26c3a:	4a3f      	ldr	r2, [pc, #252]	@ (26d38 <am_hal_pwrctrl_low_power_init+0x19c>)
   26c3c:	4b3f      	ldr	r3, [pc, #252]	@ (26d3c <am_hal_pwrctrl_low_power_init+0x1a0>)
   26c3e:	6814      	ldr	r4, [r2, #0]
   26c40:	6818      	ldr	r0, [r3, #0]
   26c42:	4b3f      	ldr	r3, [pc, #252]	@ (26d40 <am_hal_pwrctrl_low_power_init+0x1a4>)
   26c44:	493f      	ldr	r1, [pc, #252]	@ (26d44 <am_hal_pwrctrl_low_power_init+0x1a8>)
   26c46:	601c      	str	r4, [r3, #0]
   26c48:	4c3f      	ldr	r4, [pc, #252]	@ (26d48 <am_hal_pwrctrl_low_power_init+0x1ac>)
   26c4a:	6008      	str	r0, [r1, #0]
   26c4c:	2300      	movs	r3, #0
   26c4e:	2201      	movs	r2, #1
   26c50:	6023      	str	r3, [r4, #0]
   26c52:	f44f 6192 	mov.w	r1, #1168	@ 0x490
   26c56:	ab03      	add	r3, sp, #12
   26c58:	4610      	mov	r0, r2
   26c5a:	f000 fcc3 	bl	275e4 <am_hal_mram_info_read>
   26c5e:	b928      	cbnz	r0, 26c6c <am_hal_pwrctrl_low_power_init+0xd0>
   26c60:	9b03      	ldr	r3, [sp, #12]
   26c62:	f013 0f06 	tst.w	r3, #6
   26c66:	d148      	bne.n	26cfa <am_hal_pwrctrl_low_power_init+0x15e>
   26c68:	2303      	movs	r3, #3
   26c6a:	6023      	str	r3, [r4, #0]
   26c6c:	2000      	movs	r0, #0
   26c6e:	b005      	add	sp, #20
   26c70:	bd30      	pop	{r4, r5, pc}
   26c72:	f8d3 436c 	ldr.w	r4, [r3, #876]	@ 0x36c
   26c76:	4a30      	ldr	r2, [pc, #192]	@ (26d38 <am_hal_pwrctrl_low_power_init+0x19c>)
   26c78:	4934      	ldr	r1, [pc, #208]	@ (26d4c <am_hal_pwrctrl_low_power_init+0x1b0>)
   26c7a:	f3c4 5405 	ubfx	r4, r4, #20, #6
   26c7e:	6014      	str	r4, [r2, #0]
   26c80:	f8d3 0088 	ldr.w	r0, [r3, #136]	@ 0x88
   26c84:	4a2d      	ldr	r2, [pc, #180]	@ (26d3c <am_hal_pwrctrl_low_power_init+0x1a0>)
   26c86:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
   26c8a:	6010      	str	r0, [r2, #0]
   26c8c:	f8d3 236c 	ldr.w	r2, [r3, #876]	@ 0x36c
   26c90:	0e92      	lsrs	r2, r2, #26
   26c92:	600a      	str	r2, [r1, #0]
   26c94:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   26c98:	492d      	ldr	r1, [pc, #180]	@ (26d50 <am_hal_pwrctrl_low_power_init+0x1b4>)
   26c9a:	f3c2 4285 	ubfx	r2, r2, #18, #6
   26c9e:	600a      	str	r2, [r1, #0]
   26ca0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
   26ca2:	4a2c      	ldr	r2, [pc, #176]	@ (26d54 <am_hal_pwrctrl_low_power_init+0x1b8>)
   26ca4:	f3c3 13c6 	ubfx	r3, r3, #7, #7
   26ca8:	6013      	str	r3, [r2, #0]
   26caa:	2301      	movs	r3, #1
   26cac:	702b      	strb	r3, [r5, #0]
   26cae:	e7c8      	b.n	26c42 <am_hal_pwrctrl_low_power_init+0xa6>
   26cb0:	69a2      	ldr	r2, [r4, #24]
   26cb2:	6963      	ldr	r3, [r4, #20]
   26cb4:	f3c2 1240 	ubfx	r2, r2, #5, #1
   26cb8:	f3c3 1340 	ubfx	r3, r3, #5, #1
   26cbc:	429a      	cmp	r2, r3
   26cbe:	d196      	bne.n	26bee <am_hal_pwrctrl_low_power_init+0x52>
   26cc0:	69a2      	ldr	r2, [r4, #24]
   26cc2:	6963      	ldr	r3, [r4, #20]
   26cc4:	f002 0207 	and.w	r2, r2, #7
   26cc8:	f003 0307 	and.w	r3, r3, #7
   26ccc:	429a      	cmp	r2, r3
   26cce:	d18e      	bne.n	26bee <am_hal_pwrctrl_low_power_init+0x52>
   26cd0:	69a2      	ldr	r2, [r4, #24]
   26cd2:	6963      	ldr	r3, [r4, #20]
   26cd4:	f3c2 02c0 	ubfx	r2, r2, #3, #1
   26cd8:	f3c3 03c0 	ubfx	r3, r3, #3, #1
   26cdc:	429a      	cmp	r2, r3
   26cde:	d186      	bne.n	26bee <am_hal_pwrctrl_low_power_init+0x52>
   26ce0:	69e3      	ldr	r3, [r4, #28]
   26ce2:	f360 1304 	bfi	r3, r0, #4, #1
   26ce6:	61e3      	str	r3, [r4, #28]
   26ce8:	69e3      	ldr	r3, [r4, #28]
   26cea:	f043 0308 	orr.w	r3, r3, #8
   26cee:	61e3      	str	r3, [r4, #28]
   26cf0:	69e3      	ldr	r3, [r4, #28]
   26cf2:	f360 0302 	bfi	r3, r0, #0, #3
   26cf6:	61e3      	str	r3, [r4, #28]
   26cf8:	e779      	b.n	26bee <am_hal_pwrctrl_low_power_init+0x52>
   26cfa:	079a      	lsls	r2, r3, #30
   26cfc:	d404      	bmi.n	26d08 <am_hal_pwrctrl_low_power_init+0x16c>
   26cfe:	2306      	movs	r3, #6
   26d00:	2000      	movs	r0, #0
   26d02:	6023      	str	r3, [r4, #0]
   26d04:	b005      	add	sp, #20
   26d06:	bd30      	pop	{r4, r5, pc}
   26d08:	075b      	lsls	r3, r3, #29
   26d0a:	bf54      	ite	pl
   26d0c:	2309      	movpl	r3, #9
   26d0e:	6020      	strmi	r0, [r4, #0]
   26d10:	f04f 0000 	mov.w	r0, #0
   26d14:	bf58      	it	pl
   26d16:	6023      	strpl	r3, [r4, #0]
   26d18:	b005      	add	sp, #20
   26d1a:	bd30      	pop	{r4, r5, pc}
   26d1c:	40021000 	.word	0x40021000
   26d20:	10036ce4 	.word	0x10036ce4
   26d24:	40021018 	.word	0x40021018
   26d28:	0002873c 	.word	0x0002873c
   26d2c:	10036ce5 	.word	0x10036ce5
   26d30:	00028568 	.word	0x00028568
   26d34:	40020000 	.word	0x40020000
   26d38:	10036cf0 	.word	0x10036cf0
   26d3c:	10036cf8 	.word	0x10036cf8
   26d40:	10036cec 	.word	0x10036cec
   26d44:	10036ce8 	.word	0x10036ce8
   26d48:	10036d04 	.word	0x10036d04
   26d4c:	10036cf4 	.word	0x10036cf4
   26d50:	10036cfc 	.word	0x10036cfc
   26d54:	10036d00 	.word	0x10036d00

00026d58 <buck_ldo_override_init>:
   26d58:	b510      	push	{r4, lr}
   26d5a:	4a28      	ldr	r2, [pc, #160]	@ (26dfc <buck_ldo_override_init+0xa4>)
   26d5c:	4c28      	ldr	r4, [pc, #160]	@ (26e00 <buck_ldo_override_init+0xa8>)
   26d5e:	6e11      	ldr	r1, [r2, #96]	@ 0x60
   26d60:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
   26d64:	6611      	str	r1, [r2, #96]	@ 0x60
   26d66:	6e11      	ldr	r1, [r2, #96]	@ 0x60
   26d68:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
   26d6c:	6611      	str	r1, [r2, #96]	@ 0x60
   26d6e:	6e11      	ldr	r1, [r2, #96]	@ 0x60
   26d70:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
   26d74:	6611      	str	r1, [r2, #96]	@ 0x60
   26d76:	6e11      	ldr	r1, [r2, #96]	@ 0x60
   26d78:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
   26d7c:	6611      	str	r1, [r2, #96]	@ 0x60
   26d7e:	6822      	ldr	r2, [r4, #0]
   26d80:	1c51      	adds	r1, r2, #1
   26d82:	d01b      	beq.n	26dbc <buck_ldo_override_init+0x64>
   26d84:	2a01      	cmp	r2, #1
   26d86:	d923      	bls.n	26dd0 <buck_ldo_override_init+0x78>
   26d88:	4b1c      	ldr	r3, [pc, #112]	@ (26dfc <buck_ldo_override_init+0xa4>)
   26d8a:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   26d8c:	f36f 1204 	bfc	r2, #4, #1
   26d90:	661a      	str	r2, [r3, #96]	@ 0x60
   26d92:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   26d94:	f042 020e 	orr.w	r2, r2, #14
   26d98:	661a      	str	r2, [r3, #96]	@ 0x60
   26d9a:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   26d9c:	f042 0201 	orr.w	r2, r2, #1
   26da0:	661a      	str	r2, [r3, #96]	@ 0x60
   26da2:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   26da4:	f36f 2249 	bfc	r2, #9, #1
   26da8:	661a      	str	r2, [r3, #96]	@ 0x60
   26daa:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   26dac:	f442 72e0 	orr.w	r2, r2, #448	@ 0x1c0
   26db0:	661a      	str	r2, [r3, #96]	@ 0x60
   26db2:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   26db4:	f042 0220 	orr.w	r2, r2, #32
   26db8:	661a      	str	r2, [r3, #96]	@ 0x60
   26dba:	bd10      	pop	{r4, pc}
   26dbc:	2201      	movs	r2, #1
   26dbe:	4623      	mov	r3, r4
   26dc0:	f240 41c4 	movw	r1, #1220	@ 0x4c4
   26dc4:	4610      	mov	r0, r2
   26dc6:	f000 fc0d 	bl	275e4 <am_hal_mram_info_read>
   26dca:	b198      	cbz	r0, 26df4 <buck_ldo_override_init+0x9c>
   26dcc:	2300      	movs	r3, #0
   26dce:	6023      	str	r3, [r4, #0]
   26dd0:	4a0a      	ldr	r2, [pc, #40]	@ (26dfc <buck_ldo_override_init+0xa4>)
   26dd2:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
   26dd6:	f3c3 0309 	ubfx	r3, r3, #0, #10
   26dda:	2b06      	cmp	r3, #6
   26ddc:	d9d4      	bls.n	26d88 <buck_ldo_override_init+0x30>
   26dde:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
   26de2:	f8d2 1080 	ldr.w	r1, [r2, #128]	@ 0x80
   26de6:	f203 33fa 	addw	r3, r3, #1018	@ 0x3fa
   26dea:	f363 0109 	bfi	r1, r3, #0, #10
   26dee:	f8c2 1080 	str.w	r1, [r2, #128]	@ 0x80
   26df2:	e7c9      	b.n	26d88 <buck_ldo_override_init+0x30>
   26df4:	6822      	ldr	r2, [r4, #0]
   26df6:	1c53      	adds	r3, r2, #1
   26df8:	d1c4      	bne.n	26d84 <buck_ldo_override_init+0x2c>
   26dfa:	e7e7      	b.n	26dcc <buck_ldo_override_init+0x74>
   26dfc:	40020000 	.word	0x40020000
   26e00:	100017a0 	.word	0x100017a0

00026e04 <am_hal_pwrctrl_control>:
   26e04:	2803      	cmp	r0, #3
   26e06:	f200 810c 	bhi.w	27022 <am_hal_pwrctrl_control+0x21e>
   26e0a:	e8df f000 	tbb	[pc, r0]
   26e0e:	1319      	.short	0x1319
   26e10:	0206      	.short	0x0206
   26e12:	4b85      	ldr	r3, [pc, #532]	@ (27028 <am_hal_pwrctrl_control+0x224>)
   26e14:	2000      	movs	r0, #0
   26e16:	6058      	str	r0, [r3, #4]
   26e18:	4770      	bx	lr
   26e1a:	4b84      	ldr	r3, [pc, #528]	@ (2702c <am_hal_pwrctrl_control+0x228>)
   26e1c:	f8d3 2124 	ldr.w	r2, [r3, #292]	@ 0x124
   26e20:	2020      	movs	r0, #32
   26e22:	f360 0287 	bfi	r2, r0, #2, #6
   26e26:	2101      	movs	r1, #1
   26e28:	f8c3 2124 	str.w	r2, [r3, #292]	@ 0x124
   26e2c:	2000      	movs	r0, #0
   26e2e:	f8c3 1120 	str.w	r1, [r3, #288]	@ 0x120
   26e32:	4770      	bx	lr
   26e34:	4b7c      	ldr	r3, [pc, #496]	@ (27028 <am_hal_pwrctrl_control+0x224>)
   26e36:	689b      	ldr	r3, [r3, #8]
   26e38:	02db      	lsls	r3, r3, #11
   26e3a:	d458      	bmi.n	26eee <am_hal_pwrctrl_control+0xea>
   26e3c:	2000      	movs	r0, #0
   26e3e:	4770      	bx	lr
   26e40:	b510      	push	{r4, lr}
   26e42:	4c7b      	ldr	r4, [pc, #492]	@ (27030 <am_hal_pwrctrl_control+0x22c>)
   26e44:	6822      	ldr	r2, [r4, #0]
   26e46:	1c50      	adds	r0, r2, #1
   26e48:	d054      	beq.n	26ef4 <am_hal_pwrctrl_control+0xf0>
   26e4a:	2a01      	cmp	r2, #1
   26e4c:	d95f      	bls.n	26f0e <am_hal_pwrctrl_control+0x10a>
   26e4e:	4b77      	ldr	r3, [pc, #476]	@ (2702c <am_hal_pwrctrl_control+0x228>)
   26e50:	4c78      	ldr	r4, [pc, #480]	@ (27034 <am_hal_pwrctrl_control+0x230>)
   26e52:	f8d3 2348 	ldr.w	r2, [r3, #840]	@ 0x348
   26e56:	210a      	movs	r1, #10
   26e58:	f361 629d 	bfi	r2, r1, #26, #4
   26e5c:	f8c3 2348 	str.w	r2, [r3, #840]	@ 0x348
   26e60:	f8d3 2348 	ldr.w	r2, [r3, #840]	@ 0x348
   26e64:	f361 3250 	bfi	r2, r1, #13, #4
   26e68:	f8c3 2348 	str.w	r2, [r3, #840]	@ 0x348
   26e6c:	f8d3 235c 	ldr.w	r2, [r3, #860]	@ 0x35c
   26e70:	f042 7270 	orr.w	r2, r2, #62914560	@ 0x3c00000
   26e74:	f8c3 235c 	str.w	r2, [r3, #860]	@ 0x35c
   26e78:	f8d3 235c 	ldr.w	r2, [r3, #860]	@ 0x35c
   26e7c:	f442 52f0 	orr.w	r2, r2, #7680	@ 0x1e00
   26e80:	f8c3 235c 	str.w	r2, [r3, #860]	@ 0x35c
   26e84:	f8d3 2380 	ldr.w	r2, [r3, #896]	@ 0x380
   26e88:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
   26e8c:	f8c3 2380 	str.w	r2, [r3, #896]	@ 0x380
   26e90:	f8d3 2380 	ldr.w	r2, [r3, #896]	@ 0x380
   26e94:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
   26e98:	f8c3 2380 	str.w	r2, [r3, #896]	@ 0x380
   26e9c:	f8d3 2370 	ldr.w	r2, [r3, #880]	@ 0x370
   26ea0:	f3c2 5205 	ubfx	r2, r2, #20, #6
   26ea4:	6022      	str	r2, [r4, #0]
   26ea6:	f8d3 2370 	ldr.w	r2, [r3, #880]	@ 0x370
   26eaa:	2007      	movs	r0, #7
   26eac:	f36f 5219 	bfc	r2, #20, #6
   26eb0:	f8c3 2370 	str.w	r2, [r3, #880]	@ 0x370
   26eb4:	f8c3 033c 	str.w	r0, [r3, #828]	@ 0x33c
   26eb8:	4b5c      	ldr	r3, [pc, #368]	@ (2702c <am_hal_pwrctrl_control+0x228>)
   26eba:	681b      	ldr	r3, [r3, #0]
   26ebc:	f413 4f7f 	tst.w	r3, #65280	@ 0xff00
   26ec0:	f000 8099 	beq.w	26ff6 <am_hal_pwrctrl_control+0x1f2>
   26ec4:	4a58      	ldr	r2, [pc, #352]	@ (27028 <am_hal_pwrctrl_control+0x224>)
   26ec6:	f8d2 3100 	ldr.w	r3, [r2, #256]	@ 0x100
   26eca:	f043 0301 	orr.w	r3, r3, #1
   26ece:	f8c2 3100 	str.w	r3, [r2, #256]	@ 0x100
   26ed2:	4b56      	ldr	r3, [pc, #344]	@ (2702c <am_hal_pwrctrl_control+0x228>)
   26ed4:	f8d3 2378 	ldr.w	r2, [r3, #888]	@ 0x378
   26ed8:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
   26edc:	f8c3 2378 	str.w	r2, [r3, #888]	@ 0x378
   26ee0:	681b      	ldr	r3, [r3, #0]
   26ee2:	f413 4f7f 	tst.w	r3, #65280	@ 0xff00
   26ee6:	f040 8099 	bne.w	2701c <am_hal_pwrctrl_control+0x218>
   26eea:	2000      	movs	r0, #0
   26eec:	bd10      	pop	{r4, pc}
   26eee:	2012      	movs	r0, #18
   26ef0:	f7ff bd94 	b.w	26a1c <am_hal_pwrctrl_periph_disable>
   26ef4:	2201      	movs	r2, #1
   26ef6:	4623      	mov	r3, r4
   26ef8:	f240 41c4 	movw	r1, #1220	@ 0x4c4
   26efc:	4610      	mov	r0, r2
   26efe:	f000 fb71 	bl	275e4 <am_hal_mram_info_read>
   26f02:	b910      	cbnz	r0, 26f0a <am_hal_pwrctrl_control+0x106>
   26f04:	6822      	ldr	r2, [r4, #0]
   26f06:	1c51      	adds	r1, r2, #1
   26f08:	d19f      	bne.n	26e4a <am_hal_pwrctrl_control+0x46>
   26f0a:	2300      	movs	r3, #0
   26f0c:	6023      	str	r3, [r4, #0]
   26f0e:	4b47      	ldr	r3, [pc, #284]	@ (2702c <am_hal_pwrctrl_control+0x228>)
   26f10:	4848      	ldr	r0, [pc, #288]	@ (27034 <am_hal_pwrctrl_control+0x230>)
   26f12:	f8d3 1378 	ldr.w	r1, [r3, #888]	@ 0x378
   26f16:	f36f 611c 	bfc	r1, #24, #5
   26f1a:	f8c3 1378 	str.w	r1, [r3, #888]	@ 0x378
   26f1e:	f8d3 1358 	ldr.w	r1, [r3, #856]	@ 0x358
   26f22:	f36f 4196 	bfc	r1, #18, #5
   26f26:	f8c3 1358 	str.w	r1, [r3, #856]	@ 0x358
   26f2a:	f8d3 1344 	ldr.w	r1, [r3, #836]	@ 0x344
   26f2e:	220a      	movs	r2, #10
   26f30:	f362 611c 	bfi	r1, r2, #24, #5
   26f34:	f8c3 1344 	str.w	r1, [r3, #836]	@ 0x344
   26f38:	f8d3 1344 	ldr.w	r1, [r3, #836]	@ 0x344
   26f3c:	f362 21ce 	bfi	r1, r2, #11, #4
   26f40:	f8c3 1344 	str.w	r1, [r3, #836]	@ 0x344
   26f44:	f8d3 1358 	ldr.w	r1, [r3, #856]	@ 0x358
   26f48:	240f      	movs	r4, #15
   26f4a:	f364 210c 	bfi	r1, r4, #8, #5
   26f4e:	f8c3 1358 	str.w	r1, [r3, #856]	@ 0x358
   26f52:	f8d3 1354 	ldr.w	r1, [r3, #852]	@ 0x354
   26f56:	f441 11f0 	orr.w	r1, r1, #1966080	@ 0x1e0000
   26f5a:	f8c3 1354 	str.w	r1, [r3, #852]	@ 0x354
   26f5e:	f8d3 1360 	ldr.w	r1, [r3, #864]	@ 0x360
   26f62:	f364 519a 	bfi	r1, r4, #22, #5
   26f66:	f8c3 1360 	str.w	r1, [r3, #864]	@ 0x360
   26f6a:	f8d3 1360 	ldr.w	r1, [r3, #864]	@ 0x360
   26f6e:	f441 11f0 	orr.w	r1, r1, #1966080	@ 0x1e0000
   26f72:	f8c3 1360 	str.w	r1, [r3, #864]	@ 0x360
   26f76:	f8d3 1348 	ldr.w	r1, [r3, #840]	@ 0x348
   26f7a:	f362 619d 	bfi	r1, r2, #26, #4
   26f7e:	f8c3 1348 	str.w	r1, [r3, #840]	@ 0x348
   26f82:	f8d3 1348 	ldr.w	r1, [r3, #840]	@ 0x348
   26f86:	f362 3150 	bfi	r1, r2, #13, #4
   26f8a:	f8c3 1348 	str.w	r1, [r3, #840]	@ 0x348
   26f8e:	f8d3 235c 	ldr.w	r2, [r3, #860]	@ 0x35c
   26f92:	f042 7270 	orr.w	r2, r2, #62914560	@ 0x3c00000
   26f96:	f8c3 235c 	str.w	r2, [r3, #860]	@ 0x35c
   26f9a:	f8d3 235c 	ldr.w	r2, [r3, #860]	@ 0x35c
   26f9e:	f442 52f0 	orr.w	r2, r2, #7680	@ 0x1e00
   26fa2:	f8c3 235c 	str.w	r2, [r3, #860]	@ 0x35c
   26fa6:	f8d3 2380 	ldr.w	r2, [r3, #896]	@ 0x380
   26faa:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
   26fae:	f8c3 2380 	str.w	r2, [r3, #896]	@ 0x380
   26fb2:	f8d3 2380 	ldr.w	r2, [r3, #896]	@ 0x380
   26fb6:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
   26fba:	f8c3 2380 	str.w	r2, [r3, #896]	@ 0x380
   26fbe:	f8d3 2370 	ldr.w	r2, [r3, #880]	@ 0x370
   26fc2:	f3c2 5205 	ubfx	r2, r2, #20, #6
   26fc6:	6002      	str	r2, [r0, #0]
   26fc8:	f8d3 2370 	ldr.w	r2, [r3, #880]	@ 0x370
   26fcc:	2407      	movs	r4, #7
   26fce:	f36f 5219 	bfc	r2, #20, #6
   26fd2:	f8c3 2370 	str.w	r2, [r3, #880]	@ 0x370
   26fd6:	f8c3 433c 	str.w	r4, [r3, #828]	@ 0x33c
   26fda:	f8d3 2340 	ldr.w	r2, [r3, #832]	@ 0x340
   26fde:	f36f 5299 	bfc	r2, #22, #4
   26fe2:	f8c3 2340 	str.w	r2, [r3, #832]	@ 0x340
   26fe6:	f8d3 2340 	ldr.w	r2, [r3, #832]	@ 0x340
   26fea:	2101      	movs	r1, #1
   26fec:	f361 128a 	bfi	r2, r1, #6, #5
   26ff0:	f8c3 2340 	str.w	r2, [r3, #832]	@ 0x340
   26ff4:	e760      	b.n	26eb8 <am_hal_pwrctrl_control+0xb4>
   26ff6:	f7ff feaf 	bl	26d58 <buck_ldo_override_init>
   26ffa:	480b      	ldr	r0, [pc, #44]	@ (27028 <am_hal_pwrctrl_control+0x224>)
   26ffc:	490e      	ldr	r1, [pc, #56]	@ (27038 <am_hal_pwrctrl_control+0x234>)
   26ffe:	f8d0 2100 	ldr.w	r2, [r0, #256]	@ 0x100
   27002:	2330      	movs	r3, #48	@ 0x30
   27004:	f042 0201 	orr.w	r2, r2, #1
   27008:	f8c0 2100 	str.w	r2, [r0, #256]	@ 0x100
   2700c:	461a      	mov	r2, r3
   2700e:	2005      	movs	r0, #5
   27010:	f7ff f87e 	bl	26110 <am_hal_delay_us_status_change>
   27014:	2800      	cmp	r0, #0
   27016:	f43f af5c 	beq.w	26ed2 <am_hal_pwrctrl_control+0xce>
   2701a:	bd10      	pop	{r4, pc}
   2701c:	f7ff fe9c 	bl	26d58 <buck_ldo_override_init>
   27020:	e763      	b.n	26eea <am_hal_pwrctrl_control+0xe6>
   27022:	2006      	movs	r0, #6
   27024:	4770      	bx	lr
   27026:	bf00      	nop
   27028:	40021000 	.word	0x40021000
   2702c:	40020000 	.word	0x40020000
   27030:	100017a0 	.word	0x100017a0
   27034:	100017a4 	.word	0x100017a4
   27038:	40021108 	.word	0x40021108

0002703c <am_hal_queue_item_add>:
   2703c:	b570      	push	{r4, r5, r6, lr}
   2703e:	6905      	ldr	r5, [r0, #16]
   27040:	b082      	sub	sp, #8
   27042:	4604      	mov	r4, r0
   27044:	fb02 f505 	mul.w	r5, r2, r5
   27048:	460e      	mov	r6, r1
   2704a:	f7fb fe8b 	bl	22d64 <am_hal_interrupt_master_disable>
   2704e:	9001      	str	r0, [sp, #4]
   27050:	68a3      	ldr	r3, [r4, #8]
   27052:	68e2      	ldr	r2, [r4, #12]
   27054:	1ad3      	subs	r3, r2, r3
   27056:	42ab      	cmp	r3, r5
   27058:	d31c      	bcc.n	27094 <am_hal_queue_item_add+0x58>
   2705a:	b18d      	cbz	r5, 27080 <am_hal_queue_item_add+0x44>
   2705c:	b30e      	cbz	r6, 270a2 <am_hal_queue_item_add+0x66>
   2705e:	1e71      	subs	r1, r6, #1
   27060:	194e      	adds	r6, r1, r5
   27062:	6823      	ldr	r3, [r4, #0]
   27064:	6962      	ldr	r2, [r4, #20]
   27066:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   2706a:	54d0      	strb	r0, [r2, r3]
   2706c:	6823      	ldr	r3, [r4, #0]
   2706e:	68e0      	ldr	r0, [r4, #12]
   27070:	3301      	adds	r3, #1
   27072:	42b1      	cmp	r1, r6
   27074:	fbb3 f2f0 	udiv	r2, r3, r0
   27078:	fb00 3312 	mls	r3, r0, r2, r3
   2707c:	6023      	str	r3, [r4, #0]
   2707e:	d1f0      	bne.n	27062 <am_hal_queue_item_add+0x26>
   27080:	68a2      	ldr	r2, [r4, #8]
   27082:	4415      	add	r5, r2
   27084:	60a5      	str	r5, [r4, #8]
   27086:	9801      	ldr	r0, [sp, #4]
   27088:	f7fb fe70 	bl	22d6c <am_hal_interrupt_master_set>
   2708c:	2601      	movs	r6, #1
   2708e:	4630      	mov	r0, r6
   27090:	b002      	add	sp, #8
   27092:	bd70      	pop	{r4, r5, r6, pc}
   27094:	9801      	ldr	r0, [sp, #4]
   27096:	f7fb fe69 	bl	22d6c <am_hal_interrupt_master_set>
   2709a:	2600      	movs	r6, #0
   2709c:	4630      	mov	r0, r6
   2709e:	b002      	add	sp, #8
   270a0:	bd70      	pop	{r4, r5, r6, pc}
   270a2:	4631      	mov	r1, r6
   270a4:	6823      	ldr	r3, [r4, #0]
   270a6:	3101      	adds	r1, #1
   270a8:	3301      	adds	r3, #1
   270aa:	428d      	cmp	r5, r1
   270ac:	fbb3 f0f2 	udiv	r0, r3, r2
   270b0:	fb02 3310 	mls	r3, r2, r0, r3
   270b4:	6023      	str	r3, [r4, #0]
   270b6:	d1f5      	bne.n	270a4 <am_hal_queue_item_add+0x68>
   270b8:	e7e2      	b.n	27080 <am_hal_queue_item_add+0x44>
   270ba:	bf00      	nop

000270bc <am_hal_queue_item_get>:
   270bc:	b570      	push	{r4, r5, r6, lr}
   270be:	6905      	ldr	r5, [r0, #16]
   270c0:	b082      	sub	sp, #8
   270c2:	4604      	mov	r4, r0
   270c4:	fb02 f505 	mul.w	r5, r2, r5
   270c8:	460e      	mov	r6, r1
   270ca:	f7fb fe4b 	bl	22d64 <am_hal_interrupt_master_disable>
   270ce:	9001      	str	r0, [sp, #4]
   270d0:	68a3      	ldr	r3, [r4, #8]
   270d2:	42ab      	cmp	r3, r5
   270d4:	d31c      	bcc.n	27110 <am_hal_queue_item_get+0x54>
   270d6:	b18d      	cbz	r5, 270fc <am_hal_queue_item_get+0x40>
   270d8:	b30e      	cbz	r6, 2711e <am_hal_queue_item_get+0x62>
   270da:	1e71      	subs	r1, r6, #1
   270dc:	194e      	adds	r6, r1, r5
   270de:	6863      	ldr	r3, [r4, #4]
   270e0:	6962      	ldr	r2, [r4, #20]
   270e2:	5cd3      	ldrb	r3, [r2, r3]
   270e4:	f801 3f01 	strb.w	r3, [r1, #1]!
   270e8:	6863      	ldr	r3, [r4, #4]
   270ea:	68e0      	ldr	r0, [r4, #12]
   270ec:	3301      	adds	r3, #1
   270ee:	42b1      	cmp	r1, r6
   270f0:	fbb3 f2f0 	udiv	r2, r3, r0
   270f4:	fb00 3312 	mls	r3, r0, r2, r3
   270f8:	6063      	str	r3, [r4, #4]
   270fa:	d1f0      	bne.n	270de <am_hal_queue_item_get+0x22>
   270fc:	68a2      	ldr	r2, [r4, #8]
   270fe:	1b55      	subs	r5, r2, r5
   27100:	60a5      	str	r5, [r4, #8]
   27102:	9801      	ldr	r0, [sp, #4]
   27104:	f7fb fe32 	bl	22d6c <am_hal_interrupt_master_set>
   27108:	2601      	movs	r6, #1
   2710a:	4630      	mov	r0, r6
   2710c:	b002      	add	sp, #8
   2710e:	bd70      	pop	{r4, r5, r6, pc}
   27110:	9801      	ldr	r0, [sp, #4]
   27112:	f7fb fe2b 	bl	22d6c <am_hal_interrupt_master_set>
   27116:	2600      	movs	r6, #0
   27118:	4630      	mov	r0, r6
   2711a:	b002      	add	sp, #8
   2711c:	bd70      	pop	{r4, r5, r6, pc}
   2711e:	68e2      	ldr	r2, [r4, #12]
   27120:	4631      	mov	r1, r6
   27122:	6863      	ldr	r3, [r4, #4]
   27124:	3101      	adds	r1, #1
   27126:	3301      	adds	r3, #1
   27128:	428d      	cmp	r5, r1
   2712a:	fbb3 f0f2 	udiv	r0, r3, r2
   2712e:	fb02 3310 	mls	r3, r2, r0, r3
   27132:	6063      	str	r3, [r4, #4]
   27134:	d1f5      	bne.n	27122 <am_hal_queue_item_get+0x66>
   27136:	e7e1      	b.n	270fc <am_hal_queue_item_get+0x40>

00027138 <am_hal_cmdq_init>:
   27138:	280a      	cmp	r0, #10
   2713a:	d849      	bhi.n	271d0 <am_hal_cmdq_init+0x98>
   2713c:	2900      	cmp	r1, #0
   2713e:	d04b      	beq.n	271d8 <am_hal_cmdq_init+0xa0>
   27140:	b5f0      	push	{r4, r5, r6, r7, lr}
   27142:	684e      	ldr	r6, [r1, #4]
   27144:	2e00      	cmp	r6, #0
   27146:	d041      	beq.n	271cc <am_hal_cmdq_init+0x94>
   27148:	2a00      	cmp	r2, #0
   2714a:	d03f      	beq.n	271cc <am_hal_cmdq_init+0x94>
   2714c:	680c      	ldr	r4, [r1, #0]
   2714e:	2c01      	cmp	r4, #1
   27150:	d93c      	bls.n	271cc <am_hal_cmdq_init+0x94>
   27152:	4f22      	ldr	r7, [pc, #136]	@ (271dc <am_hal_cmdq_init+0xa4>)
   27154:	f04f 0e2c 	mov.w	lr, #44	@ 0x2c
   27158:	fb0e fe00 	mul.w	lr, lr, r0
   2715c:	eb07 030e 	add.w	r3, r7, lr
   27160:	78dd      	ldrb	r5, [r3, #3]
   27162:	f015 0501 	ands.w	r5, r5, #1
   27166:	d135      	bne.n	271d4 <am_hal_cmdq_init+0x9c>
   27168:	00e4      	lsls	r4, r4, #3
   2716a:	619c      	str	r4, [r3, #24]
   2716c:	4434      	add	r4, r6
   2716e:	e9c3 6401 	strd	r6, r4, [r3, #4]
   27172:	e9c3 6604 	strd	r6, r6, [r3, #16]
   27176:	60de      	str	r6, [r3, #12]
   27178:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
   2717c:	4818      	ldr	r0, [pc, #96]	@ (271e0 <am_hal_cmdq_init+0xa8>)
   2717e:	f857 400e 	ldr.w	r4, [r7, lr]
   27182:	eb00 00cc 	add.w	r0, r0, ip, lsl #3
   27186:	f8df c05c 	ldr.w	ip, [pc, #92]	@ 271e4 <am_hal_cmdq_init+0xac>
   2718a:	f004 447c 	and.w	r4, r4, #4227858432	@ 0xfc000000
   2718e:	ea44 040c 	orr.w	r4, r4, ip
   27192:	f847 400e 	str.w	r4, [r7, lr]
   27196:	6258      	str	r0, [r3, #36]	@ 0x24
   27198:	6880      	ldr	r0, [r0, #8]
   2719a:	e9c3 5507 	strd	r5, r5, [r3, #28]
   2719e:	6005      	str	r5, [r0, #0]
   271a0:	6a58      	ldr	r0, [r3, #36]	@ 0x24
   271a2:	68c0      	ldr	r0, [r0, #12]
   271a4:	6005      	str	r5, [r0, #0]
   271a6:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
   271a8:	4628      	mov	r0, r5
   271aa:	e9d4 5704 	ldrd	r5, r7, [r4, #16]
   271ae:	682c      	ldr	r4, [r5, #0]
   271b0:	433c      	orrs	r4, r7
   271b2:	602c      	str	r4, [r5, #0]
   271b4:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
   271b6:	6864      	ldr	r4, [r4, #4]
   271b8:	6026      	str	r6, [r4, #0]
   271ba:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
   271bc:	7a09      	ldrb	r1, [r1, #8]
   271be:	6824      	ldr	r4, [r4, #0]
   271c0:	0049      	lsls	r1, r1, #1
   271c2:	f001 0102 	and.w	r1, r1, #2
   271c6:	6021      	str	r1, [r4, #0]
   271c8:	6013      	str	r3, [r2, #0]
   271ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
   271cc:	2006      	movs	r0, #6
   271ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
   271d0:	2005      	movs	r0, #5
   271d2:	4770      	bx	lr
   271d4:	2007      	movs	r0, #7
   271d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   271d8:	2006      	movs	r0, #6
   271da:	4770      	bx	lr
   271dc:	10036d08 	.word	0x10036d08
   271e0:	0002876c 	.word	0x0002876c
   271e4:	01cdcdcd 	.word	0x01cdcdcd

000271e8 <am_hal_cmdq_enable>:
   271e8:	b318      	cbz	r0, 27232 <am_hal_cmdq_enable+0x4a>
   271ea:	6803      	ldr	r3, [r0, #0]
   271ec:	4a12      	ldr	r2, [pc, #72]	@ (27238 <am_hal_cmdq_enable+0x50>)
   271ee:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   271f2:	4293      	cmp	r3, r2
   271f4:	b510      	push	{r4, lr}
   271f6:	4604      	mov	r4, r0
   271f8:	d113      	bne.n	27222 <am_hal_cmdq_enable+0x3a>
   271fa:	78c1      	ldrb	r1, [r0, #3]
   271fc:	f011 0102 	ands.w	r1, r1, #2
   27200:	d111      	bne.n	27226 <am_hal_cmdq_enable+0x3e>
   27202:	4b0e      	ldr	r3, [pc, #56]	@ (2723c <am_hal_cmdq_enable+0x54>)
   27204:	6882      	ldr	r2, [r0, #8]
   27206:	429a      	cmp	r2, r3
   27208:	d80f      	bhi.n	2722a <am_hal_cmdq_enable+0x42>
   2720a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   2720c:	681a      	ldr	r2, [r3, #0]
   2720e:	6813      	ldr	r3, [r2, #0]
   27210:	f043 0301 	orr.w	r3, r3, #1
   27214:	6013      	str	r3, [r2, #0]
   27216:	78e3      	ldrb	r3, [r4, #3]
   27218:	f043 0302 	orr.w	r3, r3, #2
   2721c:	2000      	movs	r0, #0
   2721e:	70e3      	strb	r3, [r4, #3]
   27220:	bd10      	pop	{r4, pc}
   27222:	2002      	movs	r0, #2
   27224:	bd10      	pop	{r4, pc}
   27226:	2000      	movs	r0, #0
   27228:	bd10      	pop	{r4, pc}
   2722a:	2001      	movs	r0, #1
   2722c:	f7fb fcf6 	bl	22c1c <am_hal_daxi_control>
   27230:	e7eb      	b.n	2720a <am_hal_cmdq_enable+0x22>
   27232:	2002      	movs	r0, #2
   27234:	4770      	bx	lr
   27236:	bf00      	nop
   27238:	01cdcdcd 	.word	0x01cdcdcd
   2723c:	1005ffff 	.word	0x1005ffff

00027240 <am_hal_cmdq_disable>:
   27240:	4603      	mov	r3, r0
   27242:	b1a8      	cbz	r0, 27270 <am_hal_cmdq_disable+0x30>
   27244:	6802      	ldr	r2, [r0, #0]
   27246:	490b      	ldr	r1, [pc, #44]	@ (27274 <am_hal_cmdq_disable+0x34>)
   27248:	f022 427e 	bic.w	r2, r2, #4261412864	@ 0xfe000000
   2724c:	428a      	cmp	r2, r1
   2724e:	d10f      	bne.n	27270 <am_hal_cmdq_disable+0x30>
   27250:	78c0      	ldrb	r0, [r0, #3]
   27252:	f010 0002 	ands.w	r0, r0, #2
   27256:	d00c      	beq.n	27272 <am_hal_cmdq_disable+0x32>
   27258:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
   2725a:	6811      	ldr	r1, [r2, #0]
   2725c:	680a      	ldr	r2, [r1, #0]
   2725e:	f022 0201 	bic.w	r2, r2, #1
   27262:	600a      	str	r2, [r1, #0]
   27264:	78da      	ldrb	r2, [r3, #3]
   27266:	f36f 0241 	bfc	r2, #1, #1
   2726a:	2000      	movs	r0, #0
   2726c:	70da      	strb	r2, [r3, #3]
   2726e:	4770      	bx	lr
   27270:	2002      	movs	r0, #2
   27272:	4770      	bx	lr
   27274:	01cdcdcd 	.word	0x01cdcdcd

00027278 <am_hal_cmdq_alloc_block>:
   27278:	2800      	cmp	r0, #0
   2727a:	d060      	beq.n	2733e <am_hal_cmdq_alloc_block+0xc6>
   2727c:	b5f0      	push	{r4, r5, r6, r7, lr}
   2727e:	4604      	mov	r4, r0
   27280:	6800      	ldr	r0, [r0, #0]
   27282:	461d      	mov	r5, r3
   27284:	4b2f      	ldr	r3, [pc, #188]	@ (27344 <am_hal_cmdq_alloc_block+0xcc>)
   27286:	f020 407e 	bic.w	r0, r0, #4261412864	@ 0xfe000000
   2728a:	4298      	cmp	r0, r3
   2728c:	b083      	sub	sp, #12
   2728e:	d146      	bne.n	2731e <am_hal_cmdq_alloc_block+0xa6>
   27290:	4616      	mov	r6, r2
   27292:	2a00      	cmp	r2, #0
   27294:	d049      	beq.n	2732a <am_hal_cmdq_alloc_block+0xb2>
   27296:	2d00      	cmp	r5, #0
   27298:	d047      	beq.n	2732a <am_hal_cmdq_alloc_block+0xb2>
   2729a:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
   2729e:	429a      	cmp	r2, r3
   272a0:	d140      	bne.n	27324 <am_hal_cmdq_alloc_block+0xac>
   272a2:	460f      	mov	r7, r1
   272a4:	f7fb fd5e 	bl	22d64 <am_hal_interrupt_master_disable>
   272a8:	9001      	str	r0, [sp, #4]
   272aa:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
   272ae:	6883      	ldr	r3, [r0, #8]
   272b0:	6819      	ldr	r1, [r3, #0]
   272b2:	f022 03ff 	bic.w	r3, r2, #255	@ 0xff
   272b6:	b2c9      	uxtb	r1, r1
   272b8:	430b      	orrs	r3, r1
   272ba:	1ad2      	subs	r2, r2, r3
   272bc:	2a00      	cmp	r2, #0
   272be:	bfb8      	it	lt
   272c0:	f5a3 7380 	sublt.w	r3, r3, #256	@ 0x100
   272c4:	61e3      	str	r3, [r4, #28]
   272c6:	6843      	ldr	r3, [r0, #4]
   272c8:	681b      	ldr	r3, [r3, #0]
   272ca:	60e3      	str	r3, [r4, #12]
   272cc:	9801      	ldr	r0, [sp, #4]
   272ce:	f7fb fd4d 	bl	22d6c <am_hal_interrupt_master_set>
   272d2:	e9d4 2307 	ldrd	r2, r3, [r4, #28]
   272d6:	1ad2      	subs	r2, r2, r3
   272d8:	f112 0ffe 	cmn.w	r2, #254	@ 0xfe
   272dc:	d42d      	bmi.n	2733a <am_hal_cmdq_alloc_block+0xc2>
   272de:	e9d4 c103 	ldrd	ip, r1, [r4, #12]
   272e2:	4561      	cmp	r1, ip
   272e4:	d324      	bcc.n	27330 <am_hal_cmdq_alloc_block+0xb8>
   272e6:	1cba      	adds	r2, r7, #2
   272e8:	68a0      	ldr	r0, [r4, #8]
   272ea:	eb01 0ec2 	add.w	lr, r1, r2, lsl #3
   272ee:	4586      	cmp	lr, r0
   272f0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   272f4:	d909      	bls.n	2730a <am_hal_cmdq_alloc_block+0x92>
   272f6:	6860      	ldr	r0, [r4, #4]
   272f8:	3a08      	subs	r2, #8
   272fa:	4402      	add	r2, r0
   272fc:	4594      	cmp	ip, r2
   272fe:	d91c      	bls.n	2733a <am_hal_cmdq_alloc_block+0xc2>
   27300:	6a62      	ldr	r2, [r4, #36]	@ 0x24
   27302:	6852      	ldr	r2, [r2, #4]
   27304:	e9c1 2000 	strd	r2, r0, [r1]
   27308:	4601      	mov	r1, r0
   2730a:	6031      	str	r1, [r6, #0]
   2730c:	3301      	adds	r3, #1
   2730e:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
   27312:	2000      	movs	r0, #0
   27314:	6223      	str	r3, [r4, #32]
   27316:	602b      	str	r3, [r5, #0]
   27318:	6161      	str	r1, [r4, #20]
   2731a:	b003      	add	sp, #12
   2731c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   2731e:	2002      	movs	r0, #2
   27320:	b003      	add	sp, #12
   27322:	bdf0      	pop	{r4, r5, r6, r7, pc}
   27324:	2007      	movs	r0, #7
   27326:	b003      	add	sp, #12
   27328:	bdf0      	pop	{r4, r5, r6, r7, pc}
   2732a:	2006      	movs	r0, #6
   2732c:	b003      	add	sp, #12
   2732e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   27330:	1c7a      	adds	r2, r7, #1
   27332:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   27336:	4594      	cmp	ip, r2
   27338:	d8e7      	bhi.n	2730a <am_hal_cmdq_alloc_block+0x92>
   2733a:	2005      	movs	r0, #5
   2733c:	e7f0      	b.n	27320 <am_hal_cmdq_alloc_block+0xa8>
   2733e:	2002      	movs	r0, #2
   27340:	4770      	bx	lr
   27342:	bf00      	nop
   27344:	01cdcdcd 	.word	0x01cdcdcd

00027348 <am_hal_cmdq_release_block>:
   27348:	b178      	cbz	r0, 2736a <am_hal_cmdq_release_block+0x22>
   2734a:	6803      	ldr	r3, [r0, #0]
   2734c:	4a09      	ldr	r2, [pc, #36]	@ (27374 <am_hal_cmdq_release_block+0x2c>)
   2734e:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   27352:	4293      	cmp	r3, r2
   27354:	d109      	bne.n	2736a <am_hal_cmdq_release_block+0x22>
   27356:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
   2735a:	429a      	cmp	r2, r3
   2735c:	d007      	beq.n	2736e <am_hal_cmdq_release_block+0x26>
   2735e:	6a03      	ldr	r3, [r0, #32]
   27360:	6142      	str	r2, [r0, #20]
   27362:	3b01      	subs	r3, #1
   27364:	6203      	str	r3, [r0, #32]
   27366:	2000      	movs	r0, #0
   27368:	4770      	bx	lr
   2736a:	2002      	movs	r0, #2
   2736c:	4770      	bx	lr
   2736e:	2007      	movs	r0, #7
   27370:	4770      	bx	lr
   27372:	bf00      	nop
   27374:	01cdcdcd 	.word	0x01cdcdcd

00027378 <am_hal_cmdq_post_block>:
   27378:	b358      	cbz	r0, 273d2 <am_hal_cmdq_post_block+0x5a>
   2737a:	b538      	push	{r3, r4, r5, lr}
   2737c:	6803      	ldr	r3, [r0, #0]
   2737e:	4a17      	ldr	r2, [pc, #92]	@ (273dc <am_hal_cmdq_post_block+0x64>)
   27380:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   27384:	4293      	cmp	r3, r2
   27386:	4604      	mov	r4, r0
   27388:	d116      	bne.n	273b8 <am_hal_cmdq_post_block+0x40>
   2738a:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
   2738e:	4293      	cmp	r3, r2
   27390:	d021      	beq.n	273d6 <am_hal_cmdq_post_block+0x5e>
   27392:	6a40      	ldr	r0, [r0, #36]	@ 0x24
   27394:	6883      	ldr	r3, [r0, #8]
   27396:	4319      	orrs	r1, r3
   27398:	6a23      	ldr	r3, [r4, #32]
   2739a:	f102 0508 	add.w	r5, r2, #8
   2739e:	e9c2 1300 	strd	r1, r3, [r2]
   273a2:	4a0f      	ldr	r2, [pc, #60]	@ (273e0 <am_hal_cmdq_post_block+0x68>)
   273a4:	68a1      	ldr	r1, [r4, #8]
   273a6:	4291      	cmp	r1, r2
   273a8:	e9c4 5504 	strd	r5, r5, [r4, #16]
   273ac:	d806      	bhi.n	273bc <am_hal_cmdq_post_block+0x44>
   273ae:	68c2      	ldr	r2, [r0, #12]
   273b0:	b2db      	uxtb	r3, r3
   273b2:	6013      	str	r3, [r2, #0]
   273b4:	2000      	movs	r0, #0
   273b6:	bd38      	pop	{r3, r4, r5, pc}
   273b8:	2002      	movs	r0, #2
   273ba:	bd38      	pop	{r3, r4, r5, pc}
   273bc:	2100      	movs	r1, #0
   273be:	2001      	movs	r0, #1
   273c0:	f7fb fc2c 	bl	22c1c <am_hal_daxi_control>
   273c4:	e9d4 3008 	ldrd	r3, r0, [r4, #32]
   273c8:	68c2      	ldr	r2, [r0, #12]
   273ca:	b2db      	uxtb	r3, r3
   273cc:	6013      	str	r3, [r2, #0]
   273ce:	2000      	movs	r0, #0
   273d0:	e7f1      	b.n	273b6 <am_hal_cmdq_post_block+0x3e>
   273d2:	2002      	movs	r0, #2
   273d4:	4770      	bx	lr
   273d6:	2007      	movs	r0, #7
   273d8:	bd38      	pop	{r3, r4, r5, pc}
   273da:	bf00      	nop
   273dc:	01cdcdcd 	.word	0x01cdcdcd
   273e0:	1005ffff 	.word	0x1005ffff

000273e4 <am_hal_cmdq_get_status>:
   273e4:	2800      	cmp	r0, #0
   273e6:	d04b      	beq.n	27480 <am_hal_cmdq_get_status+0x9c>
   273e8:	b570      	push	{r4, r5, r6, lr}
   273ea:	6803      	ldr	r3, [r0, #0]
   273ec:	4a25      	ldr	r2, [pc, #148]	@ (27484 <am_hal_cmdq_get_status+0xa0>)
   273ee:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   273f2:	4293      	cmp	r3, r2
   273f4:	b082      	sub	sp, #8
   273f6:	4604      	mov	r4, r0
   273f8:	d13c      	bne.n	27474 <am_hal_cmdq_get_status+0x90>
   273fa:	460d      	mov	r5, r1
   273fc:	2900      	cmp	r1, #0
   273fe:	d03c      	beq.n	2747a <am_hal_cmdq_get_status+0x96>
   27400:	f7fb fcb0 	bl	22d64 <am_hal_interrupt_master_disable>
   27404:	6a66      	ldr	r6, [r4, #36]	@ 0x24
   27406:	9001      	str	r0, [sp, #4]
   27408:	68b3      	ldr	r3, [r6, #8]
   2740a:	6a22      	ldr	r2, [r4, #32]
   2740c:	6819      	ldr	r1, [r3, #0]
   2740e:	f022 03ff 	bic.w	r3, r2, #255	@ 0xff
   27412:	b2c9      	uxtb	r1, r1
   27414:	430b      	orrs	r3, r1
   27416:	1ad2      	subs	r2, r2, r3
   27418:	2a00      	cmp	r2, #0
   2741a:	bfb8      	it	lt
   2741c:	f5a3 7380 	sublt.w	r3, r3, #256	@ 0x100
   27420:	61e3      	str	r3, [r4, #28]
   27422:	6873      	ldr	r3, [r6, #4]
   27424:	681b      	ldr	r3, [r3, #0]
   27426:	60e3      	str	r3, [r4, #12]
   27428:	9801      	ldr	r0, [sp, #4]
   2742a:	f7fb fc9f 	bl	22d6c <am_hal_interrupt_master_set>
   2742e:	e9d4 0604 	ldrd	r0, r6, [r4, #16]
   27432:	6a22      	ldr	r2, [r4, #32]
   27434:	69e3      	ldr	r3, [r4, #28]
   27436:	602b      	str	r3, [r5, #0]
   27438:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   2743a:	4286      	cmp	r6, r0
   2743c:	bf0c      	ite	eq
   2743e:	4611      	moveq	r1, r2
   27440:	1e51      	subne	r1, r2, #1
   27442:	e9c5 1201 	strd	r1, r2, [r5, #4]
   27446:	e9d3 2006 	ldrd	r2, r0, [r3, #24]
   2744a:	e9d3 3108 	ldrd	r3, r1, [r3, #32]
   2744e:	6812      	ldr	r2, [r2, #0]
   27450:	4202      	tst	r2, r0
   27452:	bf14      	ite	ne
   27454:	2001      	movne	r0, #1
   27456:	2000      	moveq	r0, #0
   27458:	420a      	tst	r2, r1
   2745a:	bf14      	ite	ne
   2745c:	2101      	movne	r1, #1
   2745e:	2100      	moveq	r1, #0
   27460:	421a      	tst	r2, r3
   27462:	bf14      	ite	ne
   27464:	2301      	movne	r3, #1
   27466:	2300      	moveq	r3, #0
   27468:	7328      	strb	r0, [r5, #12]
   2746a:	2000      	movs	r0, #0
   2746c:	7369      	strb	r1, [r5, #13]
   2746e:	73ab      	strb	r3, [r5, #14]
   27470:	b002      	add	sp, #8
   27472:	bd70      	pop	{r4, r5, r6, pc}
   27474:	2002      	movs	r0, #2
   27476:	b002      	add	sp, #8
   27478:	bd70      	pop	{r4, r5, r6, pc}
   2747a:	2006      	movs	r0, #6
   2747c:	b002      	add	sp, #8
   2747e:	bd70      	pop	{r4, r5, r6, pc}
   27480:	2002      	movs	r0, #2
   27482:	4770      	bx	lr
   27484:	01cdcdcd 	.word	0x01cdcdcd

00027488 <am_hal_cmdq_error_resume>:
   27488:	2800      	cmp	r0, #0
   2748a:	d03c      	beq.n	27506 <am_hal_cmdq_error_resume+0x7e>
   2748c:	6803      	ldr	r3, [r0, #0]
   2748e:	4a20      	ldr	r2, [pc, #128]	@ (27510 <am_hal_cmdq_error_resume+0x88>)
   27490:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   27494:	4293      	cmp	r3, r2
   27496:	4684      	mov	ip, r0
   27498:	d135      	bne.n	27506 <am_hal_cmdq_error_resume+0x7e>
   2749a:	78c0      	ldrb	r0, [r0, #3]
   2749c:	f010 0002 	ands.w	r0, r0, #2
   274a0:	d030      	beq.n	27504 <am_hal_cmdq_error_resume+0x7c>
   274a2:	f8dc 2024 	ldr.w	r2, [ip, #36]	@ 0x24
   274a6:	e9d2 1000 	ldrd	r1, r0, [r2]
   274aa:	680b      	ldr	r3, [r1, #0]
   274ac:	f023 0301 	bic.w	r3, r3, #1
   274b0:	b430      	push	{r4, r5}
   274b2:	6894      	ldr	r4, [r2, #8]
   274b4:	600b      	str	r3, [r1, #0]
   274b6:	6805      	ldr	r5, [r0, #0]
   274b8:	682b      	ldr	r3, [r5, #0]
   274ba:	f023 0101 	bic.w	r1, r3, #1
   274be:	42a1      	cmp	r1, r4
   274c0:	462a      	mov	r2, r5
   274c2:	d022      	beq.n	2750a <am_hal_cmdq_error_resume+0x82>
   274c4:	4298      	cmp	r0, r3
   274c6:	f102 0108 	add.w	r1, r2, #8
   274ca:	d009      	beq.n	274e0 <am_hal_cmdq_error_resume+0x58>
   274cc:	6893      	ldr	r3, [r2, #8]
   274ce:	f023 0201 	bic.w	r2, r3, #1
   274d2:	42a2      	cmp	r2, r4
   274d4:	d00a      	beq.n	274ec <am_hal_cmdq_error_resume+0x64>
   274d6:	460a      	mov	r2, r1
   274d8:	4298      	cmp	r0, r3
   274da:	f102 0108 	add.w	r1, r2, #8
   274de:	d1f5      	bne.n	274cc <am_hal_cmdq_error_resume+0x44>
   274e0:	6851      	ldr	r1, [r2, #4]
   274e2:	680b      	ldr	r3, [r1, #0]
   274e4:	f023 0201 	bic.w	r2, r3, #1
   274e8:	42a2      	cmp	r2, r4
   274ea:	d1f4      	bne.n	274d6 <am_hal_cmdq_error_resume+0x4e>
   274ec:	460d      	mov	r5, r1
   274ee:	600c      	str	r4, [r1, #0]
   274f0:	6005      	str	r5, [r0, #0]
   274f2:	f89c 3003 	ldrb.w	r3, [ip, #3]
   274f6:	f36f 0341 	bfc	r3, #1, #1
   274fa:	2000      	movs	r0, #0
   274fc:	bc30      	pop	{r4, r5}
   274fe:	f88c 3003 	strb.w	r3, [ip, #3]
   27502:	4770      	bx	lr
   27504:	4770      	bx	lr
   27506:	2002      	movs	r0, #2
   27508:	4770      	bx	lr
   2750a:	4629      	mov	r1, r5
   2750c:	e7ef      	b.n	274ee <am_hal_cmdq_error_resume+0x66>
   2750e:	bf00      	nop
   27510:	01cdcdcd 	.word	0x01cdcdcd

00027514 <am_hal_cmdq_reset>:
   27514:	b328      	cbz	r0, 27562 <am_hal_cmdq_reset+0x4e>
   27516:	6802      	ldr	r2, [r0, #0]
   27518:	4914      	ldr	r1, [pc, #80]	@ (2756c <am_hal_cmdq_reset+0x58>)
   2751a:	f022 427e 	bic.w	r2, r2, #4261412864	@ 0xfe000000
   2751e:	428a      	cmp	r2, r1
   27520:	4603      	mov	r3, r0
   27522:	d11e      	bne.n	27562 <am_hal_cmdq_reset+0x4e>
   27524:	78c2      	ldrb	r2, [r0, #3]
   27526:	f012 0202 	ands.w	r2, r2, #2
   2752a:	d11c      	bne.n	27566 <am_hal_cmdq_reset+0x52>
   2752c:	6a41      	ldr	r1, [r0, #36]	@ 0x24
   2752e:	b430      	push	{r4, r5}
   27530:	680c      	ldr	r4, [r1, #0]
   27532:	6820      	ldr	r0, [r4, #0]
   27534:	f020 0001 	bic.w	r0, r0, #1
   27538:	6020      	str	r0, [r4, #0]
   2753a:	e9d1 5402 	ldrd	r5, r4, [r1, #8]
   2753e:	6858      	ldr	r0, [r3, #4]
   27540:	6849      	ldr	r1, [r1, #4]
   27542:	60d8      	str	r0, [r3, #12]
   27544:	e9c3 0004 	strd	r0, r0, [r3, #16]
   27548:	e9c3 2207 	strd	r2, r2, [r3, #28]
   2754c:	602a      	str	r2, [r5, #0]
   2754e:	6022      	str	r2, [r4, #0]
   27550:	6858      	ldr	r0, [r3, #4]
   27552:	6008      	str	r0, [r1, #0]
   27554:	78d9      	ldrb	r1, [r3, #3]
   27556:	f362 0141 	bfi	r1, r2, #1, #1
   2755a:	4610      	mov	r0, r2
   2755c:	bc30      	pop	{r4, r5}
   2755e:	70d9      	strb	r1, [r3, #3]
   27560:	4770      	bx	lr
   27562:	2002      	movs	r0, #2
   27564:	4770      	bx	lr
   27566:	2007      	movs	r0, #7
   27568:	4770      	bx	lr
   2756a:	bf00      	nop
   2756c:	01cdcdcd 	.word	0x01cdcdcd

00027570 <am_hal_cmdq_post_loop_block>:
   27570:	2800      	cmp	r0, #0
   27572:	d02f      	beq.n	275d4 <am_hal_cmdq_post_loop_block+0x64>
   27574:	b538      	push	{r3, r4, r5, lr}
   27576:	6803      	ldr	r3, [r0, #0]
   27578:	4a18      	ldr	r2, [pc, #96]	@ (275dc <am_hal_cmdq_post_loop_block+0x6c>)
   2757a:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   2757e:	4293      	cmp	r3, r2
   27580:	4604      	mov	r4, r0
   27582:	d11a      	bne.n	275ba <am_hal_cmdq_post_loop_block+0x4a>
   27584:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
   27588:	429a      	cmp	r2, r3
   2758a:	d025      	beq.n	275d8 <am_hal_cmdq_post_loop_block+0x68>
   2758c:	6a42      	ldr	r2, [r0, #36]	@ 0x24
   2758e:	6890      	ldr	r0, [r2, #8]
   27590:	6018      	str	r0, [r3, #0]
   27592:	6850      	ldr	r0, [r2, #4]
   27594:	2500      	movs	r5, #0
   27596:	4308      	orrs	r0, r1
   27598:	6861      	ldr	r1, [r4, #4]
   2759a:	60d9      	str	r1, [r3, #12]
   2759c:	605d      	str	r5, [r3, #4]
   2759e:	6098      	str	r0, [r3, #8]
   275a0:	3310      	adds	r3, #16
   275a2:	e9c4 3304 	strd	r3, r3, [r4, #16]
   275a6:	68a1      	ldr	r1, [r4, #8]
   275a8:	4b0d      	ldr	r3, [pc, #52]	@ (275e0 <am_hal_cmdq_post_loop_block+0x70>)
   275aa:	4299      	cmp	r1, r3
   275ac:	d807      	bhi.n	275be <am_hal_cmdq_post_loop_block+0x4e>
   275ae:	68d3      	ldr	r3, [r2, #12]
   275b0:	f894 2020 	ldrb.w	r2, [r4, #32]
   275b4:	601a      	str	r2, [r3, #0]
   275b6:	2000      	movs	r0, #0
   275b8:	bd38      	pop	{r3, r4, r5, pc}
   275ba:	2002      	movs	r0, #2
   275bc:	bd38      	pop	{r3, r4, r5, pc}
   275be:	4629      	mov	r1, r5
   275c0:	2001      	movs	r0, #1
   275c2:	f7fb fb2b 	bl	22c1c <am_hal_daxi_control>
   275c6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
   275c8:	68d3      	ldr	r3, [r2, #12]
   275ca:	f894 2020 	ldrb.w	r2, [r4, #32]
   275ce:	601a      	str	r2, [r3, #0]
   275d0:	2000      	movs	r0, #0
   275d2:	e7f1      	b.n	275b8 <am_hal_cmdq_post_loop_block+0x48>
   275d4:	2002      	movs	r0, #2
   275d6:	4770      	bx	lr
   275d8:	2007      	movs	r0, #7
   275da:	bd38      	pop	{r3, r4, r5, pc}
   275dc:	01cdcdcd 	.word	0x01cdcdcd
   275e0:	1005ffff 	.word	0x1005ffff

000275e4 <am_hal_mram_info_read>:
   275e4:	b9c0      	cbnz	r0, 27618 <am_hal_mram_info_read+0x34>
   275e6:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
   275ea:	d228      	bcs.n	2763e <am_hal_mram_info_read+0x5a>
   275ec:	1888      	adds	r0, r1, r2
   275ee:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
   275f2:	d824      	bhi.n	2763e <am_hal_mram_info_read+0x5a>
   275f4:	f101 5184 	add.w	r1, r1, #276824064	@ 0x10800000
   275f8:	0089      	lsls	r1, r1, #2
   275fa:	b312      	cbz	r2, 27642 <am_hal_mram_info_read+0x5e>
   275fc:	b410      	push	{r4}
   275fe:	2000      	movs	r0, #0
   27600:	3001      	adds	r0, #1
   27602:	680c      	ldr	r4, [r1, #0]
   27604:	f843 4b04 	str.w	r4, [r3], #4
   27608:	4282      	cmp	r2, r0
   2760a:	f101 0104 	add.w	r1, r1, #4
   2760e:	d1f7      	bne.n	27600 <am_hal_mram_info_read+0x1c>
   27610:	2000      	movs	r0, #0
   27612:	f85d 4b04 	ldr.w	r4, [sp], #4
   27616:	4770      	bx	lr
   27618:	2801      	cmp	r0, #1
   2761a:	d10e      	bne.n	2763a <am_hal_mram_info_read+0x56>
   2761c:	f5a1 6090 	sub.w	r0, r1, #1152	@ 0x480
   27620:	f5b0 7fc0 	cmp.w	r0, #384	@ 0x180
   27624:	d20b      	bcs.n	2763e <am_hal_mram_info_read+0x5a>
   27626:	1888      	adds	r0, r1, r2
   27628:	f5b0 6fc0 	cmp.w	r0, #1536	@ 0x600
   2762c:	d807      	bhi.n	2763e <am_hal_mram_info_read+0x5a>
   2762e:	f101 5184 	add.w	r1, r1, #276824064	@ 0x10800000
   27632:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
   27636:	0089      	lsls	r1, r1, #2
   27638:	e7df      	b.n	275fa <am_hal_mram_info_read+0x16>
   2763a:	2001      	movs	r0, #1
   2763c:	4770      	bx	lr
   2763e:	2002      	movs	r0, #2
   27640:	4770      	bx	lr
   27642:	2000      	movs	r0, #0
   27644:	4770      	bx	lr
   27646:	bf00      	nop

00027648 <am_bsp_external_pwr_on>:
   27648:	4770      	bx	lr
   2764a:	bf00      	nop

0002764c <am_bsp_low_power_init>:
   2764c:	b508      	push	{r3, lr}
   2764e:	f7ff faa5 	bl	26b9c <am_hal_pwrctrl_low_power_init>
   27652:	2100      	movs	r1, #0
   27654:	4608      	mov	r0, r1
   27656:	f7ff fbd5 	bl	26e04 <am_hal_pwrctrl_control>
   2765a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   2765e:	f000 b801 	b.w	27664 <am_hal_rtc_osc_disable>
   27662:	bf00      	nop

00027664 <am_hal_rtc_osc_disable>:
   27664:	4a03      	ldr	r2, [pc, #12]	@ (27674 <am_hal_rtc_osc_disable+0x10>)
   27666:	6813      	ldr	r3, [r2, #0]
   27668:	f043 0310 	orr.w	r3, r3, #16
   2766c:	2000      	movs	r0, #0
   2766e:	6013      	str	r3, [r2, #0]
   27670:	4770      	bx	lr
   27672:	bf00      	nop
   27674:	40004800 	.word	0x40004800
   27678:	6f727245 	.word	0x6f727245
   2767c:	202d2072 	.word	0x202d2072
   27680:	6c696146 	.word	0x6c696146
   27684:	74206465 	.word	0x74206465
   27688:	6573206f 	.word	0x6573206f
   2768c:	6320646e 	.word	0x6320646e
   27690:	616d6d6f 	.word	0x616d6d6f
   27694:	0a2e646e 	.word	0x0a2e646e
   27698:	00000000 	.word	0x00000000
   2769c:	6f727245 	.word	0x6f727245
   276a0:	202d2072 	.word	0x202d2072
   276a4:	525f4d41 	.word	0x525f4d41
   276a8:	4d5f4745 	.word	0x4d5f4745
   276ac:	5f495053 	.word	0x5f495053
   276b0:	5f4d554e 	.word	0x5f4d554e
   276b4:	55444f4d 	.word	0x55444f4d
   276b8:	2053454c 	.word	0x2053454c
   276bc:	6c6c756e 	.word	0x6c6c756e
   276c0:	00000a20 	.word	0x00000a20
   276c4:	6f727245 	.word	0x6f727245
   276c8:	202d2072 	.word	0x202d2072
   276cc:	445f4d41 	.word	0x445f4d41
   276d0:	43495645 	.word	0x43495645
   276d4:	4d5f5345 	.word	0x4d5f5345
   276d8:	5f495053 	.word	0x5f495053
   276dc:	39364d52 	.word	0x39364d52
   276e0:	5f303333 	.word	0x5f303333
   276e4:	5f58414d 	.word	0x5f58414d
   276e8:	49564544 	.word	0x49564544
   276ec:	4e5f4543 	.word	0x4e5f4543
   276f0:	000a4d55 	.word	0x000a4d55
   276f4:	6f727245 	.word	0x6f727245
   276f8:	202d2072 	.word	0x202d2072
   276fc:	74697753 	.word	0x74697753
   27700:	000a6863 	.word	0x000a6863
   27704:	6f727245 	.word	0x6f727245
   27708:	202d2072 	.word	0x202d2072
   2770c:	6c696146 	.word	0x6c696146
   27710:	74206465 	.word	0x74206465
   27714:	6e69206f 	.word	0x6e69206f
   27718:	61697469 	.word	0x61697469
   2771c:	657a696c 	.word	0x657a696c
   27720:	50534d20 	.word	0x50534d20
   27724:	000a2e49 	.word	0x000a2e49
   27728:	6f727245 	.word	0x6f727245
   2772c:	202d2072 	.word	0x202d2072
   27730:	6c696146 	.word	0x6c696146
   27734:	74206465 	.word	0x74206465
   27738:	6f70206f 	.word	0x6f70206f
   2773c:	20726577 	.word	0x20726577
   27740:	4d206e6f 	.word	0x4d206e6f
   27744:	2e495053 	.word	0x2e495053
   27748:	0000000a 	.word	0x0000000a
   2774c:	6f727245 	.word	0x6f727245
   27750:	202d2072 	.word	0x202d2072
   27754:	6c696146 	.word	0x6c696146
   27758:	74206465 	.word	0x74206465
   2775c:	6f63206f 	.word	0x6f63206f
   27760:	6769666e 	.word	0x6769666e
   27764:	20657275 	.word	0x20657275
   27768:	4950534d 	.word	0x4950534d
   2776c:	76656420 	.word	0x76656420
   27770:	2e656369 	.word	0x2e656369
   27774:	0000000a 	.word	0x0000000a
   27778:	6f727245 	.word	0x6f727245
   2777c:	202d2072 	.word	0x202d2072
   27780:	6c696146 	.word	0x6c696146
   27784:	74206465 	.word	0x74206465
   27788:	6f63206f 	.word	0x6f63206f
   2778c:	6769666e 	.word	0x6769666e
   27790:	20657275 	.word	0x20657275
   27794:	4950534d 	.word	0x4950534d
   27798:	00000a2e 	.word	0x00000a2e
   2779c:	6f727245 	.word	0x6f727245
   277a0:	202d2072 	.word	0x202d2072
   277a4:	6c696146 	.word	0x6c696146
   277a8:	74206465 	.word	0x74206465
   277ac:	6e65206f 	.word	0x6e65206f
   277b0:	656c6261 	.word	0x656c6261
   277b4:	50534d20 	.word	0x50534d20
   277b8:	000a2e49 	.word	0x000a2e49
   277bc:	39364d52 	.word	0x39364d52
   277c0:	20303333 	.word	0x20303333
   277c4:	69766544 	.word	0x69766544
   277c8:	49206563 	.word	0x49206563
   277cc:	203d2044 	.word	0x203d2044
   277d0:	0a583625 	.word	0x0a583625
   277d4:	00000000 	.word	0x00000000
   277d8:	6f727245 	.word	0x6f727245
   277dc:	202d2072 	.word	0x202d2072
   277e0:	685f6d61 	.word	0x685f6d61
   277e4:	6d5f6c61 	.word	0x6d5f6c61
   277e8:	5f697073 	.word	0x5f697073
   277ec:	65746e69 	.word	0x65746e69
   277f0:	70757272 	.word	0x70757272
   277f4:	6c635f74 	.word	0x6c635f74
   277f8:	0a726165 	.word	0x0a726165
   277fc:	00000000 	.word	0x00000000
   27800:	6f727245 	.word	0x6f727245
   27804:	202d2072 	.word	0x202d2072
   27808:	685f6d61 	.word	0x685f6d61
   2780c:	6d5f6c61 	.word	0x6d5f6c61
   27810:	5f697073 	.word	0x5f697073
   27814:	65746e69 	.word	0x65746e69
   27818:	70757272 	.word	0x70757272
   2781c:	6e655f74 	.word	0x6e655f74
   27820:	656c6261 	.word	0x656c6261
   27824:	0000000a 	.word	0x0000000a
   27828:	646e6553 	.word	0x646e6553
   2782c:	20676e69 	.word	0x20676e69
   27830:	65646f6d 	.word	0x65646f6d
   27834:	64203720 	.word	0x64203720
   27838:	6c707369 	.word	0x6c707369
   2783c:	63207961 	.word	0x63207961
   27840:	69666e6f 	.word	0x69666e6f
   27844:	6f6e2067 	.word	0x6f6e2067
   27848:	000a0d77 	.word	0x000a0d77
   2784c:	646e6553 	.word	0x646e6553
   27850:	20676e69 	.word	0x20676e69
   27854:	65646f6d 	.word	0x65646f6d
   27858:	64203420 	.word	0x64203420
   2785c:	6c707369 	.word	0x6c707369
   27860:	63207961 	.word	0x63207961
   27864:	69666e6f 	.word	0x69666e6f
   27868:	6f6e2067 	.word	0x6f6e2067
   2786c:	000a0d77 	.word	0x000a0d77
   27870:	646e6553 	.word	0x646e6553
   27874:	20676e69 	.word	0x20676e69
   27878:	65646f6d 	.word	0x65646f6d
   2787c:	64203520 	.word	0x64203520
   27880:	6c707369 	.word	0x6c707369
   27884:	63207961 	.word	0x63207961
   27888:	69666e6f 	.word	0x69666e6f
   2788c:	6f6e2067 	.word	0x6f6e2067
   27890:	000a0d77 	.word	0x000a0d77
   27894:	646e6553 	.word	0x646e6553
   27898:	20676e69 	.word	0x20676e69
   2789c:	65646f6d 	.word	0x65646f6d
   278a0:	64203620 	.word	0x64203620
   278a4:	6c707369 	.word	0x6c707369
   278a8:	63207961 	.word	0x63207961
   278ac:	69666e6f 	.word	0x69666e6f
   278b0:	6f6e2067 	.word	0x6f6e2067
   278b4:	000a0d77 	.word	0x000a0d77
   278b8:	31435441 	.word	0x31435441
   278bc:	00313434 	.word	0x00313434
   278c0:	69252058 	.word	0x69252058
   278c4:	00002020 	.word	0x00002020
   278c8:	69252059 	.word	0x69252059
   278cc:	00002020 	.word	0x00002020
   278d0:	6867694c 	.word	0x6867694c
   278d4:	00000074 	.word	0x00000074
   278d8:	736e6553 	.word	0x736e6553
   278dc:	0000726f 	.word	0x0000726f
   278e0:	20206925 	.word	0x20206925
   278e4:	00000020 	.word	0x00000020
   278e8:	74696e49 	.word	0x74696e49
   278ec:	73696420 	.word	0x73696420
   278f0:	79616c70 	.word	0x79616c70
   278f4:	61747320 	.word	0x61747320
   278f8:	0a0d7472 	.word	0x0a0d7472
   278fc:	00000000 	.word	0x00000000
   27900:	74696e49 	.word	0x74696e49
   27904:	73696420 	.word	0x73696420
   27908:	79616c70 	.word	0x79616c70
   2790c:	64696d20 	.word	0x64696d20
   27910:	20692520 	.word	0x20692520
   27914:	00000a0d 	.word	0x00000a0d
   27918:	74696e49 	.word	0x74696e49
   2791c:	73696420 	.word	0x73696420
   27920:	79616c70 	.word	0x79616c70
   27924:	6e6f6420 	.word	0x6e6f6420
   27928:	69252065 	.word	0x69252065
   2792c:	25202d20 	.word	0x25202d20
   27930:	0d583630 	.word	0x0d583630
   27934:	0000000a 	.word	0x0000000a
   27938:	74696e49 	.word	0x74696e49
   2793c:	73696420 	.word	0x73696420
   27940:	79616c70 	.word	0x79616c70
   27944:	69616620 	.word	0x69616620
   27948:	2164656c 	.word	0x2164656c
   2794c:	0a0d2121 	.word	0x0a0d2121
   27950:	00000000 	.word	0x00000000
   27954:	20444e45 	.word	0x20444e45
   27958:	70736944 	.word	0x70736944
   2795c:	7379616c 	.word	0x7379616c
   27960:	00000a0d 	.word	0x00000a0d
   27964:	63756f54 	.word	0x63756f54
   27968:	32492068 	.word	0x32492068
   2796c:	54535f43 	.word	0x54535f43
   27970:	53555441 	.word	0x53555441
   27974:	5252455f 	.word	0x5252455f
   27978:	3120524f 	.word	0x3120524f
   2797c:	6925203a 	.word	0x6925203a
   27980:	00000a0d 	.word	0x00000a0d
   27984:	63756f54 	.word	0x63756f54
   27988:	32492068 	.word	0x32492068
   2798c:	54535f43 	.word	0x54535f43
   27990:	53555441 	.word	0x53555441
   27994:	5252455f 	.word	0x5252455f
   27998:	3120524f 	.word	0x3120524f
   2799c:	00000a0d 	.word	0x00000a0d
   279a0:	63756f54 	.word	0x63756f54
   279a4:	32492068 	.word	0x32492068
   279a8:	54535f43 	.word	0x54535f43
   279ac:	53555441 	.word	0x53555441
   279b0:	5252455f 	.word	0x5252455f
   279b4:	3220524f 	.word	0x3220524f
   279b8:	00000a0d 	.word	0x00000a0d
   279bc:	63756f54 	.word	0x63756f54
   279c0:	6e692068 	.word	0x6e692068
   279c4:	73207469 	.word	0x73207469
   279c8:	74726174 	.word	0x74726174
   279cc:	0a0d6465 	.word	0x0a0d6465
   279d0:	00000000 	.word	0x00000000
   279d4:	63756f54 	.word	0x63756f54
   279d8:	4d412068 	.word	0x4d412068
   279dc:	5645445f 	.word	0x5645445f
   279e0:	53454349 	.word	0x53454349
   279e4:	4332495f 	.word	0x4332495f
   279e8:	4154535f 	.word	0x4154535f
   279ec:	5f535554 	.word	0x5f535554
   279f0:	4f525245 	.word	0x4f525245
   279f4:	000a0d52 	.word	0x000a0d52
   279f8:	63756f54 	.word	0x63756f54
   279fc:	4d412068 	.word	0x4d412068
   27a00:	5645445f 	.word	0x5645445f
   27a04:	53454349 	.word	0x53454349
   27a08:	4332495f 	.word	0x4332495f
   27a0c:	4154535f 	.word	0x4154535f
   27a10:	5f535554 	.word	0x5f535554
   27a14:	43435553 	.word	0x43435553
   27a18:	0d535345 	.word	0x0d535345
   27a1c:	0000000a 	.word	0x0000000a
   27a20:	6867694c 	.word	0x6867694c
   27a24:	65532074 	.word	0x65532074
   27a28:	726f736e 	.word	0x726f736e
   27a2c:	43324920 	.word	0x43324920
   27a30:	4154535f 	.word	0x4154535f
   27a34:	5f535554 	.word	0x5f535554
   27a38:	4f525245 	.word	0x4f525245
   27a3c:	3a312052 	.word	0x3a312052
   27a40:	0d692520 	.word	0x0d692520
   27a44:	0000000a 	.word	0x0000000a
   27a48:	6867694c 	.word	0x6867694c
   27a4c:	65532074 	.word	0x65532074
   27a50:	726f736e 	.word	0x726f736e
   27a54:	43324920 	.word	0x43324920
   27a58:	4154535f 	.word	0x4154535f
   27a5c:	5f535554 	.word	0x5f535554
   27a60:	4f525245 	.word	0x4f525245
   27a64:	0d312052 	.word	0x0d312052
   27a68:	0000000a 	.word	0x0000000a
   27a6c:	6867694c 	.word	0x6867694c
   27a70:	65532074 	.word	0x65532074
   27a74:	726f736e 	.word	0x726f736e
   27a78:	43324920 	.word	0x43324920
   27a7c:	4154535f 	.word	0x4154535f
   27a80:	5f535554 	.word	0x5f535554
   27a84:	4f525245 	.word	0x4f525245
   27a88:	0d322052 	.word	0x0d322052
   27a8c:	0000000a 	.word	0x0000000a
   27a90:	6867694c 	.word	0x6867694c
   27a94:	65532074 	.word	0x65532074
   27a98:	726f736e 	.word	0x726f736e
   27a9c:	696e6920 	.word	0x696e6920
   27aa0:	74732074 	.word	0x74732074
   27aa4:	65747261 	.word	0x65747261
   27aa8:	000a0d64 	.word	0x000a0d64
   27aac:	6867694c 	.word	0x6867694c
   27ab0:	65532074 	.word	0x65532074
   27ab4:	726f736e 	.word	0x726f736e
   27ab8:	5f4d4120 	.word	0x5f4d4120
   27abc:	49564544 	.word	0x49564544
   27ac0:	5f534543 	.word	0x5f534543
   27ac4:	5f433249 	.word	0x5f433249
   27ac8:	54415453 	.word	0x54415453
   27acc:	455f5355 	.word	0x455f5355
   27ad0:	524f5252 	.word	0x524f5252
   27ad4:	00000a0d 	.word	0x00000a0d
   27ad8:	6867694c 	.word	0x6867694c
   27adc:	65532074 	.word	0x65532074
   27ae0:	726f736e 	.word	0x726f736e
   27ae4:	5f4d4120 	.word	0x5f4d4120
   27ae8:	49564544 	.word	0x49564544
   27aec:	5f534543 	.word	0x5f534543
   27af0:	5f433249 	.word	0x5f433249
   27af4:	54415453 	.word	0x54415453
   27af8:	535f5355 	.word	0x535f5355
   27afc:	45434355 	.word	0x45434355
   27b00:	0a0d5353 	.word	0x0a0d5353
   27b04:	00000000 	.word	0x00000000
   27b08:	6867694c 	.word	0x6867694c
   27b0c:	6e612074 	.word	0x6e612074
   27b10:	72657773 	.word	0x72657773
   27b14:	3025203a 	.word	0x3025203a
   27b18:	25205832 	.word	0x25205832
   27b1c:	20583230 	.word	0x20583230
   27b20:	58323025 	.word	0x58323025
   27b24:	00000a0d 	.word	0x00000a0d
   27b28:	6867694c 	.word	0x6867694c
   27b2c:	6e612074 	.word	0x6e612074
   27b30:	72657773 	.word	0x72657773
   27b34:	3025203a 	.word	0x3025203a
   27b38:	0a0d5832 	.word	0x0a0d5832
   27b3c:	00000000 	.word	0x00000000
   27b40:	6c636341 	.word	0x6c636341
   27b44:	696e6920 	.word	0x696e6920
   27b48:	74732074 	.word	0x74732074
   27b4c:	65747261 	.word	0x65747261
   27b50:	000a0d64 	.word	0x000a0d64
   27b54:	6c636341 	.word	0x6c636341
   27b58:	736e6120 	.word	0x736e6120
   27b5c:	3a726577 	.word	0x3a726577
   27b60:	32302520 	.word	0x32302520
   27b64:	30252058 	.word	0x30252058
   27b68:	25205832 	.word	0x25205832
   27b6c:	20583230 	.word	0x20583230
   27b70:	58323025 	.word	0x58323025
   27b74:	32302520 	.word	0x32302520
   27b78:	30252058 	.word	0x30252058
   27b7c:	25205832 	.word	0x25205832
   27b80:	20583230 	.word	0x20583230
   27b84:	58323025 	.word	0x58323025
   27b88:	32302520 	.word	0x32302520
   27b8c:	30252058 	.word	0x30252058
   27b90:	25205832 	.word	0x25205832
   27b94:	20583230 	.word	0x20583230
   27b98:	58323025 	.word	0x58323025
   27b9c:	32302520 	.word	0x32302520
   27ba0:	30252058 	.word	0x30252058
   27ba4:	25205832 	.word	0x25205832
   27ba8:	20583230 	.word	0x20583230
   27bac:	58323025 	.word	0x58323025
   27bb0:	32302520 	.word	0x32302520
   27bb4:	30252058 	.word	0x30252058
   27bb8:	25205832 	.word	0x25205832
   27bbc:	20583230 	.word	0x20583230
   27bc0:	58323025 	.word	0x58323025
   27bc4:	00000a0d 	.word	0x00000a0d
   27bc8:	6c6c6548 	.word	0x6c6c6548
   27bcc:	6f57206f 	.word	0x6f57206f
   27bd0:	21646c72 	.word	0x21646c72
   27bd4:	00000a0d 	.word	0x00000a0d
   27bd8:	63756f54 	.word	0x63756f54
   27bdc:	20203a68 	.word	0x20203a68
   27be0:	69252020 	.word	0x69252020
   27be4:	69252020 	.word	0x69252020
   27be8:	69252020 	.word	0x69252020
   27bec:	00000a0d 	.word	0x00000a0d
   27bf0:	6867694c 	.word	0x6867694c
   27bf4:	20203a74 	.word	0x20203a74
   27bf8:	69252020 	.word	0x69252020
   27bfc:	69252020 	.word	0x69252020
   27c00:	00000a0d 	.word	0x00000a0d

00027c04 <ui32MCUAllowed>:
	...

00027c18 <ui32DSP0Allowed>:
	...

00027c2c <ui32DSP1Allowed>:
	...

00027c40 <ui32SharedAccess>:
	...

00027c54 <sGlobalAccess>:
   27c54:	00027c40 00027c04 00027c18 00027c2c     @|...|...|..,|..
   27c64:	10060004 10060018 1006002c              ........,...

00027c70 <am_hal_gpio_pincfg_output33>:
   27c70:	00000103                                ....

00027c74 <font57>:
   27c74:	00000000 4f5b3e00 6b3e3e5b 1c3e6b4f     .....>[O[>>kOk>.
   27c84:	1c3e7c3e 3c7e3c18 7d571c18 5e1c1c57     >|>..<~<..W}W..^
   27c94:	001c5e7f 00183c18 e7c3e7ff 241800ff     .^...<.........$
   27ca4:	e7ff0018 30ffe7db 0e063a48 29792926     .......0H:..&)y)
   27cb4:	057f4026 7f400705 5a3f2505 5a3ce73c     &@....@..%?Z<.<Z
   27cc4:	1c1c3e7f 1c1c0808 22147f3e 5f14227f     .>......>.."."._
   27cd4:	5f5f005f 017f0906 8966007f 60606a95     _.__......f..j``
   27ce4:	94606060 94a2ffa2 047e0408 7e201008     ```.......~... ~
   27cf4:	08081020 08081c2a 08082a1c 1010101e      ...*....*......
   27d04:	0c1e0c10 38300c1e 0630383e 060e3e0e     ......08>80..>..
   27d14:	00000000 5f000000 07000000 14000700     ......._........
   27d24:	147f147f 2a7f2a24 08132312 49366264     ....$*.*.#..db6I
   27d34:	00502056 00030708 41221c00 22410000     V P......."A..A"
   27d44:	1c2a001c 082a1c7f 08083e08 30708000     ..*...*..>....p0
   27d54:	08080800 00000808 20006060 02040810     ........``. ....
   27d64:	4549513e 7f42003e 49720040 21464949     >QIE>.B.@.rIIIF!
   27d74:	334d4941 7f121418 45452710 4a3c3945     AIM3.....'EEE9<J
   27d84:	41314949 07091121 49494936 49494636     II1A!...6III6FII
   27d94:	00001e29 00000014 00003440 22140800     ).......@4....."
   27da4:	14141441 41001414 02081422 06095901     A......A"....Y..
   27db4:	595d413e 11127c4e 497f7c12 3e364949     >A]YN|...|.III6>
   27dc4:	22414141 4141417f 49497f3e 097f4149     AAA".AAA>.IIIA..
   27dd4:	3e010909 73514141 0808087f 7f41007f     ...>AAQs......A.
   27de4:	40200041 7f013f41 41221408 4040407f     A. @A?...."A.@@@
   27df4:	1c027f40 047f7f02 3e7f1008 3e414141     @..........>AAA>
   27e04:	0909097f 51413e06 097f5e21 26462919     .....>AQ!^...)F&
   27e14:	32494949 017f0103 40403f03 201f3f40     III2.....?@@@?. 
   27e24:	3f1f2040 3f403840 14081463 78040363     @ .?@8@?c...c..x
   27e34:	59610304 00434d49 4141417f 10080402     ..aYIMC..AAA....
   27e44:	41410020 02047f41 40040201 40404040      .AAA......@@@@@
   27e54:	08070300 54542000 287f4078 38384444     ..... TTx@.(DD88
   27e64:	28444444 28444438 5454387f 08001854     DDD(8DD(.8TTT...
   27e74:	1802097e 789ca4a4 0404087f 7d440078     ~......x....x.D}
   27e84:	40200040 7f003d40 00442810 407f4100     @. @@=...(D..A.@
   27e94:	78047c00 087c7804 38780404 38444444     .|.x.x|...x8DDD8
   27ea4:	242418fc 24241818 087cfc18 48080404     ..$$..$$..|....H
   27eb4:	24545454 443f0404 40403c24 201c7c20     TTT$..?D$<@@ |. 
   27ec4:	3c1c2040 3c403040 28102844 90904c44     @ .<@0@<D(.(DL..
   27ed4:	64447c90 00444c54 00413608 00770000     .|DdTLD..6A...w.
   27ee4:	36410000 01020008 3c020402 3c262326     ..A6.......<&#&<
   27ef4:	61a1a11e 40403a12 54387a20 21595554     ...a.:@@ z8TTUY!
   27f04:	41795555 78545421 54552141 54204078     UUyA!TTxA!UTx@ T
   27f14:	0c407955 1272521e 55555539 54543959     Uy@..Rr.9UUUY9TT
   27f24:	55395954 00585454 417c4500 7d450200     TY9UTTX..E|A..E}
   27f34:	45010042 29f0407c f0f02924 f0282528     B..E|@.)$)..(%(.
   27f44:	4555547c 54542000 0a7c547c 32497f09     |TUE. TT|T|...I2
   27f54:	32494949 48484832 484a3232 413a3048     III22HHH22JHH0:A
   27f64:	3a7a2141 78204042 2525257f 4444391a     A!z:B@ x.%%%.9DD
   27f74:	403d3944 3c3d4040 2424ff24 43497e48     D9=@@@=<$.$$H~IC
   27f84:	fc2f2b66 09ff2b2f c020f629 03097e88     f+/./+..). ..~..
   27f94:	79545420 44000041 4830417d 38324a48      TTyA..D}A0HHJ28
   27fa4:	7a224040 0a0a7a00 190d7d72 29267d31     @@"z.z..r}..1}&)
   27fb4:	26282f29 26292929 404d4830 08083820     )/(&)))&0HM@ 8..
   27fc4:	08080808 2f380808 baacc810 3428102f     ......8/..../.(4
   27fd4:	7b0000fa 14080000 2222142a 08142a14     ...{....*."".*..
   27fe4:	005500aa aa55aaaa 0000aa55 1000ff00     ..U...U.U.......
   27ff4:	00ff1010 ff141414 ff101000 1010ff00     ................
   28004:	14f010f0 00fc1414 00f71414 ff0000ff     ................
   28014:	1414ff00 14fc04f4 1f101714 101f1010     ................
   28024:	1414141f 1010001f 0000f010 101f0000     ................
   28034:	1f101010 10101010 000010f0 1010ff00     ................
   28044:	10101010 ff101010 00000010 000014ff     ................
   28054:	00ff00ff 17101f00 04fc0000 171414f4     ................
   28064:	14141710 00f404f4 f700ff00 14141414     ................
   28074:	f7141414 1414f700 10141714 1f101f10     ................
   28084:	f4141414 f0101014 0000f010 001f101f     ................
   28094:	141f0000 fc000000 f0000014 1010f010     ................
   280a4:	14ff10ff 14ff1414 1f101010 00000000     ................
   280b4:	ffff10f0 f0ffffff f0f0f0f0 00ffffff     ................
   280c4:	00000000 0f0fffff 380f0f0f 44384444     ...........8DD8D
   280d4:	3e2a2a7c 02027e14 7e020606 63027e02     |**>.~.....~.~.c
   280e4:	63414955 3c444438 207e4004 0206201e     UIAc8DD<.@~ . ..
   280f4:	9902027e 99a5e7a5 2a492a1c 01724c1c     ~........*I*.Lr.
   28104:	4a304c72 30304d4d 30487848 465a62bc     rL0JMM00HxH0.bZF
   28114:	49493e3d 017e0049 2a7e0101 2a2a2a2a     =>III.~...~*****
   28124:	445f4444 4a514044 44404044 0040514a     DD_DD@QJD@@DJQ@.
   28134:	0301ff00 00ff80e0 6b080800 1236086b     ...........kk.6.
   28144:	06362436 060f090f 18180000 10000000     6$6.............
   28154:	40300010 000101ff 1e01011f 171d1900     ..0@............
   28164:	3c3c0012 00003c3c 00000000              ..<<<<......

00028170 <g_sUartConfig>:
   28170:	0001c200 00000203 02020000 00464e49     ............INF.
   28180:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
   28190:	37363534 62613938 66656463 00000000     456789abcdef....
   281a0:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   281b0:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

000281c0 <zeroes.0>:
   281c0:	30303030 30303030 30303030 30303030     0000000000000000

000281d0 <blanks.1>:
   281d0:	20202020 20202020 20202020 20202020                     
   281e0:	0000002e 435f434c 414c4c4f 00004554     ....LC_COLLATE..
   281f0:	435f434c 45505954 00000000 4d5f434c     LC_CTYPE....LC_M
   28200:	54454e4f 00595241 4e5f434c 52454d55     ONETARY.LC_NUMER
   28210:	00004349 545f434c 00454d49 4d5f434c     IC..LC_TIME.LC_M
   28220:	41535345 00534547 69666e49 7974696e     ESSAGES.Infinity
   28230:	00000000 004e614e 6c6c6142 7320636f     ....NaN.Balloc s
   28240:	65636375 64656465 00000000 7461642f     ucceeded..../dat
   28250:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
   28260:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
   28270:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
   28280:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
   28290:	696c2f62 732f6362 696c6474 74642f62     b/libc/stdlib/dt
   282a0:	632e616f 00000000 7461642f 656a2f61     oa.c..../data/je
   282b0:	6e696b6e 6f772f73 70736b72 2f656361     nkins/workspace/
   282c0:	2d554e47 6c6f6f74 69616863 72612f6e     GNU-toolchain/ar
   282d0:	32312d6d 6372732f 77656e2f 2d62696c     m-12/src/newlib-
   282e0:	77677963 6e2f6e69 696c7765 696c2f62     cygwin/newlib/li
   282f0:	732f6362 696c6474 706d2f62 2e636572     bc/stdlib/mprec.
   28300:	00000063                                c...

00028304 <p05.0>:
   28304:	00000005 00000019 0000007d              ........}...

00028310 <__mprec_bigtens>:
   28310:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   28320:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   28330:	7f73bf3c 75154fdd                       <.s..O.u

00028338 <__mprec_tens>:
   28338:	00000000 3ff00000 00000000 40240000     .......?......$@
   28348:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   28358:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   28368:	00000000 412e8480 00000000 416312d0     .......A......cA
   28378:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   28388:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   28398:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   283a8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   283b8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   283c8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   283d8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   283e8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   283f8:	79d99db4 44ea7843                       ...yCx.D

00028400 <_ctype_>:
   28400:	20202000 20202020 28282020 20282828     .         ((((( 
   28410:	20202020 20202020 20202020 20202020                     
   28420:	10108820 10101010 10101010 10101010      ...............
   28430:	04040410 04040404 10040404 10101010     ................
   28440:	41411010 41414141 01010101 01010101     ..AAAAAA........
   28450:	01010101 01010101 01010101 10101010     ................
   28460:	42421010 42424242 02020202 02020202     ..BBBBBB........
   28470:	02020202 02020202 02020202 10101010     ................
   28480:	00000020 00000000 00000000 00000000      ...............
	...
   28504:	7566202c 6974636e 203a6e6f 00000000     , function: ....
   28514:	65737361 6f697472 2522206e 66202273     assertion "%s" f
   28524:	656c6961 66203a64 20656c69 22732522     ailed: file "%s"
   28534:	696c202c 2520656e 25732564 00000a73     , line %d%s%s...

00028544 <zeroes.0>:
   28544:	30303030 30303030 30303030 30303030     0000000000000000

00028554 <blanks.1>:
   28554:	20202020 20202020 20202020 20202020                     

00028564 <am_hal_cachectrl_defaults>:
   28564:	0000030e                                ....

00028568 <am_hal_daxi_defaults>:
   28568:	00020100 00000001                       ........

00028570 <CSWTCH.15>:
   28570:	016e3600 00b71b00 005b8d80 002dc6c0     .6n.......[...-.
   28580:	02dc6c00                                .l..

00028584 <am_hal_gpio_pincfg_input>:
   28584:	00000093                                ....

00028588 <am_hal_gpio_pincfg_output>:
   28588:	00000183                                ....

0002858c <g_ui32DSpintbl>:
   2858c:	8fc007e0 e3fbffff 01ffffff 00000000     ................

0002859c <g_ui32RMpintbl>:
	...

000285ac <am_hal_pwrctrl_peripheral_control>:
   285ac:	40021004 00000001 40021008 00000001     ...@.......@....
   285bc:	40021004 00000002 40021008 0000001e     ...@.......@....
   285cc:	40021004 00000004 40021008 0000001e     ...@.......@....
   285dc:	40021004 00000008 40021008 0000001e     ...@.......@....
   285ec:	40021004 00000010 40021008 0000001e     ...@.......@....
   285fc:	40021004 00000020 40021008 000001e0     ...@ ......@....
   2860c:	40021004 00000040 40021008 000001e0     ...@@......@....
   2861c:	40021004 00000080 40021008 000001e0     ...@.......@....
   2862c:	40021004 00000100 40021008 000001e0     ...@.......@....
   2863c:	40021004 00000200 40021008 00001e00     ...@.......@....
   2864c:	40021004 00000400 40021008 00001e00     ...@.......@....
   2865c:	40021004 00000800 40021008 00001e00     ...@.......@....
   2866c:	40021004 00001000 40021008 00001e00     ...@.......@....
   2867c:	40021004 00002000 40021008 00002000     ...@. .....@. ..
   2868c:	40021004 00004000 40021008 0001c000     ...@.@.....@....
   2869c:	40021004 00008000 40021008 0001c000     ...@.......@....
   286ac:	40021004 00010000 40021008 0001c000     ...@.......@....
   286bc:	40021004 00020000 40021008 00020000     ...@.......@....
   286cc:	40021004 00100000 40021008 00100000     ...@.......@....
   286dc:	40021004 00200000 40021008 00200000     ...@.. ....@.. .
   286ec:	40021004 01000000 40021008 01000000     ...@.......@....
   286fc:	4002100c 00000001 40021010 00000047     ...@.......@G...
   2870c:	4002100c 00000002 40021010 00000047     ...@.......@G...
   2871c:	4002100c 00000004 40021010 00000047     ...@.......@G...
   2872c:	4002100c 00000040 40021010 00000047     ...@@......@G...

0002873c <g_DefaultSRAMCfg>:
   2873c:	00000003 00000300                       ........

00028744 <g_am_hal_bootrom_helper>:
   28744:	0800004d 08000051 08000055 08000059     M...Q...U...Y...
   28754:	0800006d 08000075 08000079 08000081     m...u...y.......
   28764:	08000099 0800009d                       ........

0002876c <gAmHalCmdQReg>:
   2876c:	40050228 4005022c 40050240 40050244     (..@,..@@..@D..@
   2877c:	4005023c 00008000 40050230 00000001     <..@....0..@....
   2878c:	00000004 00000002 40051228 4005122c     ........(..@,..@
   2879c:	40051240 40051244 4005123c 00008000     @..@D..@<..@....
   287ac:	40051230 00000001 00000004 00000002     0..@............
   287bc:	40052228 4005222c 40052240 40052244     (".@,".@@".@D".@
   287cc:	4005223c 00008000 40052230 00000001     <".@....0".@....
   287dc:	00000004 00000002 40053228 4005322c     ........(2.@,2.@
   287ec:	40053240 40053244 4005323c 00008000     @2.@D2.@<2.@....
   287fc:	40053230 00000001 00000004 00000002     02.@............
   2880c:	40054228 4005422c 40054240 40054244     (B.@,B.@@B.@DB.@
   2881c:	4005423c 00008000 40054230 00000001     <B.@....0B.@....
   2882c:	00000004 00000002 40055228 4005522c     ........(R.@,R.@
   2883c:	40055240 40055244 4005523c 00008000     @R.@DR.@<R.@....
   2884c:	40055230 00000001 00000004 00000002     0R.@............
   2885c:	40056228 4005622c 40056240 40056244     (b.@,b.@@b.@Db.@
   2886c:	4005623c 00008000 40056230 00000001     <b.@....0b.@....
   2887c:	00000004 00000002 40057228 4005722c     ........(r.@,r.@
   2888c:	40057240 40057244 4005723c 00008000     @r.@Dr.@<r.@....
   2889c:	40057230 00000001 00000004 00000002     0r.@............
   288ac:	400602a0 400602a8 400602c0 400602c4     ...@...@...@...@
   288bc:	400602b8 00004000 400602ac 00000001     ...@.@.....@....
   288cc:	00000004 00000008 400612a0 400612a8     ...........@...@
   288dc:	400612c0 400612c4 400612b8 00004000     ...@...@...@.@..
   288ec:	400612ac 00000001 00000004 00000008     ...@............
   288fc:	400622a0 400622a8 400622c0 400622c4     .".@.".@.".@.".@
   2890c:	400622b8 00004000 400622ac 00000001     .".@.@...".@....
   2891c:	00000004 00000008                       ........
